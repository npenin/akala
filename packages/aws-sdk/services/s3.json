{
    "name": "s3",
    "commands": [
        {
            "name": "AbortMultipartUpload",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AbortMultipartUploadOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AbortMultipartUploadRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "UploadId": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {},
                        "IfMatchInitiatedTime": {}
                    }
                }
            }
        },
        {
            "name": "CompleteMultipartUpload",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CompleteMultipartUploadOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CompleteMultipartUploadRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "MultipartUpload": {},
                        "UploadId": {},
                        "ChecksumCRC32": {},
                        "ChecksumCRC32C": {},
                        "ChecksumCRC64NVME": {},
                        "ChecksumSHA1": {},
                        "ChecksumSHA256": {},
                        "ChecksumType": {},
                        "MpuObjectSize": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {},
                        "IfMatch": {},
                        "IfNoneMatch": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {}
                    }
                }
            }
        },
        {
            "name": "CopyObject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CopyObjectOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CopyObjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ACL": {},
                        "Bucket": {},
                        "CacheControl": {},
                        "ChecksumAlgorithm": {},
                        "ContentDisposition": {},
                        "ContentEncoding": {},
                        "ContentLanguage": {},
                        "ContentType": {},
                        "CopySource": {},
                        "CopySourceIfMatch": {},
                        "CopySourceIfModifiedSince": {},
                        "CopySourceIfNoneMatch": {},
                        "CopySourceIfUnmodifiedSince": {},
                        "Expires": {},
                        "GrantFullControl": {},
                        "GrantRead": {},
                        "GrantReadACP": {},
                        "GrantWriteACP": {},
                        "Key": {},
                        "Metadata": {},
                        "MetadataDirective": {},
                        "TaggingDirective": {},
                        "ServerSideEncryption": {},
                        "StorageClass": {},
                        "WebsiteRedirectLocation": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {},
                        "SSEKMSKeyId": {},
                        "SSEKMSEncryptionContext": {},
                        "BucketKeyEnabled": {},
                        "CopySourceSSECustomerAlgorithm": {},
                        "CopySourceSSECustomerKey": {},
                        "CopySourceSSECustomerKeyMD5": {},
                        "RequestPayer": {},
                        "Tagging": {},
                        "ObjectLockMode": {},
                        "ObjectLockRetainUntilDate": {},
                        "ObjectLockLegalHoldStatus": {},
                        "ExpectedBucketOwner": {},
                        "ExpectedSourceBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "CreateBucket",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBucketOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateBucketRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ACL": {},
                        "Bucket": {},
                        "CreateBucketConfiguration": {},
                        "GrantFullControl": {},
                        "GrantRead": {},
                        "GrantReadACP": {},
                        "GrantWrite": {},
                        "GrantWriteACP": {},
                        "ObjectLockEnabledForBucket": {},
                        "ObjectOwnership": {}
                    }
                }
            }
        },
        {
            "name": "CreateBucketMetadataTableConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateBucketMetadataTableConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "MetadataTableConfiguration": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "CreateMultipartUpload",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMultipartUploadOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateMultipartUploadRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ACL": {},
                        "Bucket": {},
                        "CacheControl": {},
                        "ContentDisposition": {},
                        "ContentEncoding": {},
                        "ContentLanguage": {},
                        "ContentType": {},
                        "Expires": {},
                        "GrantFullControl": {},
                        "GrantRead": {},
                        "GrantReadACP": {},
                        "GrantWriteACP": {},
                        "Key": {},
                        "Metadata": {},
                        "ServerSideEncryption": {},
                        "StorageClass": {},
                        "WebsiteRedirectLocation": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {},
                        "SSEKMSKeyId": {},
                        "SSEKMSEncryptionContext": {},
                        "BucketKeyEnabled": {},
                        "RequestPayer": {},
                        "Tagging": {},
                        "ObjectLockMode": {},
                        "ObjectLockRetainUntilDate": {},
                        "ObjectLockLegalHoldStatus": {},
                        "ExpectedBucketOwner": {},
                        "ChecksumAlgorithm": {},
                        "ChecksumType": {}
                    }
                }
            }
        },
        {
            "name": "CreateSession",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSessionOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SessionMode": {},
                        "Bucket": {},
                        "ServerSideEncryption": {},
                        "SSEKMSKeyId": {},
                        "SSEKMSEncryptionContext": {},
                        "BucketKeyEnabled": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucket",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketAnalyticsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketAnalyticsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketCors",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketCorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketEncryption",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketEncryptionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketIntelligentTieringConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketIntelligentTieringConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketInventoryConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketInventoryConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketLifecycle",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketLifecycleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketMetadataTableConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketMetadataTableConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketMetricsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketMetricsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketOwnershipControls",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketOwnershipControlsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketReplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketReplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketTagging",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketTaggingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBucketWebsite",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBucketWebsiteRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeleteObject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteObjectOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteObjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "MFA": {},
                        "VersionId": {},
                        "RequestPayer": {},
                        "BypassGovernanceRetention": {},
                        "ExpectedBucketOwner": {},
                        "IfMatch": {},
                        "IfMatchLastModifiedTime": {},
                        "IfMatchSize": {}
                    }
                }
            }
        },
        {
            "name": "DeleteObjects",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteObjectsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteObjectsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Delete": {},
                        "MFA": {},
                        "RequestPayer": {},
                        "BypassGovernanceRetention": {},
                        "ExpectedBucketOwner": {},
                        "ChecksumAlgorithm": {}
                    }
                }
            }
        },
        {
            "name": "DeleteObjectTagging",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteObjectTaggingOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteObjectTaggingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "VersionId": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "DeletePublicAccessBlock",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeletePublicAccessBlockRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketAccelerateConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketAccelerateConfigurationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketAccelerateConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {},
                        "RequestPayer": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketAcl",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketAclOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketAclRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketAnalyticsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketAnalyticsConfigurationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketAnalyticsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketCors",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketCorsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketCorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketEncryption",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketEncryptionOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketEncryptionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketIntelligentTieringConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketIntelligentTieringConfigurationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketIntelligentTieringConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketInventoryConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketInventoryConfigurationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketInventoryConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketLifecycleConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketLifecycleConfigurationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketLifecycleConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketLocation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketLocationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketLocationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketLogging",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketLoggingOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketLoggingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketMetadataTableConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketMetadataTableConfigurationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketMetadataTableConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketMetricsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketMetricsConfigurationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketMetricsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketNotificationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/NotificationConfiguration"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketNotificationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketOwnershipControls",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketOwnershipControlsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketOwnershipControlsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketPolicyOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketPolicyStatus",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketPolicyStatusOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketPolicyStatusRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketReplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketReplicationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketReplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketRequestPayment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketRequestPaymentOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketRequestPaymentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketTagging",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketTaggingOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketTaggingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketVersioning",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketVersioningOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketVersioningRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetBucketWebsite",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketWebsiteOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBucketWebsiteRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetObject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetObjectOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetObjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "IfMatch": {},
                        "IfModifiedSince": {},
                        "IfNoneMatch": {},
                        "IfUnmodifiedSince": {},
                        "Key": {},
                        "Range": {},
                        "ResponseCacheControl": {},
                        "ResponseContentDisposition": {},
                        "ResponseContentEncoding": {},
                        "ResponseContentLanguage": {},
                        "ResponseContentType": {},
                        "ResponseExpires": {},
                        "VersionId": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {},
                        "RequestPayer": {},
                        "PartNumber": {},
                        "ExpectedBucketOwner": {},
                        "ChecksumMode": {}
                    }
                }
            }
        },
        {
            "name": "GetObjectAcl",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetObjectAclOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetObjectAclRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "VersionId": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetObjectAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetObjectAttributesOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetObjectAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "VersionId": {},
                        "MaxParts": {},
                        "PartNumberMarker": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {},
                        "ObjectAttributes": {}
                    }
                }
            }
        },
        {
            "name": "GetObjectLegalHold",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetObjectLegalHoldOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetObjectLegalHoldRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "VersionId": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetObjectLockConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetObjectLockConfigurationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetObjectLockConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetObjectRetention",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetObjectRetentionOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetObjectRetentionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "VersionId": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetObjectTagging",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetObjectTaggingOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetObjectTaggingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "VersionId": {},
                        "ExpectedBucketOwner": {},
                        "RequestPayer": {}
                    }
                }
            }
        },
        {
            "name": "GetObjectTorrent",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetObjectTorrentOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetObjectTorrentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "GetPublicAccessBlock",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPublicAccessBlockOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetPublicAccessBlockRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "HeadBucket",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "HEAD",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/HeadBucketOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/HeadBucketRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "HeadObject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "HEAD",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/HeadObjectOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/HeadObjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "IfMatch": {},
                        "IfModifiedSince": {},
                        "IfNoneMatch": {},
                        "IfUnmodifiedSince": {},
                        "Key": {},
                        "Range": {},
                        "ResponseCacheControl": {},
                        "ResponseContentDisposition": {},
                        "ResponseContentEncoding": {},
                        "ResponseContentLanguage": {},
                        "ResponseContentType": {},
                        "ResponseExpires": {},
                        "VersionId": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {},
                        "RequestPayer": {},
                        "PartNumber": {},
                        "ExpectedBucketOwner": {},
                        "ChecksumMode": {}
                    }
                }
            }
        },
        {
            "name": "ListBucketAnalyticsConfigurations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBucketAnalyticsConfigurationsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListBucketAnalyticsConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContinuationToken": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "ListBucketIntelligentTieringConfigurations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBucketIntelligentTieringConfigurationsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListBucketIntelligentTieringConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContinuationToken": {}
                    }
                }
            }
        },
        {
            "name": "ListBucketInventoryConfigurations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBucketInventoryConfigurationsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListBucketInventoryConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContinuationToken": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "ListBucketMetricsConfigurations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBucketMetricsConfigurationsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListBucketMetricsConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContinuationToken": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "ListBuckets",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBucketsOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListBucketsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxBuckets": {},
                        "ContinuationToken": {},
                        "Prefix": {},
                        "BucketRegion": {}
                    }
                }
            }
        },
        {
            "name": "ListDirectoryBuckets",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDirectoryBucketsOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListDirectoryBucketsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ContinuationToken": {},
                        "MaxDirectoryBuckets": {}
                    }
                }
            }
        },
        {
            "name": "ListMultipartUploads",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMultipartUploadsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListMultipartUploadsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Delimiter": {},
                        "EncodingType": {},
                        "KeyMarker": {},
                        "MaxUploads": {},
                        "Prefix": {},
                        "UploadIdMarker": {},
                        "ExpectedBucketOwner": {},
                        "RequestPayer": {}
                    }
                }
            }
        },
        {
            "name": "ListObjects",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListObjectsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListObjectsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Delimiter": {},
                        "EncodingType": {},
                        "Marker": {},
                        "MaxKeys": {},
                        "Prefix": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {},
                        "OptionalObjectAttributes": {}
                    }
                }
            }
        },
        {
            "name": "ListObjectsV2",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListObjectsV2Output"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListObjectsV2Request"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Delimiter": {},
                        "EncodingType": {},
                        "MaxKeys": {},
                        "Prefix": {},
                        "ContinuationToken": {},
                        "FetchOwner": {},
                        "StartAfter": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {},
                        "OptionalObjectAttributes": {}
                    }
                }
            }
        },
        {
            "name": "ListObjectVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListObjectVersionsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListObjectVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Delimiter": {},
                        "EncodingType": {},
                        "KeyMarker": {},
                        "MaxKeys": {},
                        "Prefix": {},
                        "VersionIdMarker": {},
                        "ExpectedBucketOwner": {},
                        "RequestPayer": {},
                        "OptionalObjectAttributes": {}
                    }
                }
            }
        },
        {
            "name": "ListParts",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPartsOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPartsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "MaxParts": {},
                        "PartNumberMarker": {},
                        "UploadId": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketAccelerateConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketAccelerateConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "AccelerateConfiguration": {},
                        "ExpectedBucketOwner": {},
                        "ChecksumAlgorithm": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketAcl",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketAclRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ACL": {},
                        "AccessControlPolicy": {},
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "GrantFullControl": {},
                        "GrantRead": {},
                        "GrantReadACP": {},
                        "GrantWrite": {},
                        "GrantWriteACP": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketAnalyticsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketAnalyticsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {},
                        "AnalyticsConfiguration": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketCors",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketCorsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "CORSConfiguration": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketEncryption",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketEncryptionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "ServerSideEncryptionConfiguration": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketIntelligentTieringConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketIntelligentTieringConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {},
                        "IntelligentTieringConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketInventoryConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketInventoryConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {},
                        "InventoryConfiguration": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketLifecycleConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutBucketLifecycleConfigurationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketLifecycleConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ChecksumAlgorithm": {},
                        "LifecycleConfiguration": {},
                        "ExpectedBucketOwner": {},
                        "TransitionDefaultMinimumObjectSize": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketLogging",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketLoggingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "BucketLoggingStatus": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketMetricsConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketMetricsConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Id": {},
                        "MetricsConfiguration": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketNotificationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketNotificationConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "NotificationConfiguration": {},
                        "ExpectedBucketOwner": {},
                        "SkipDestinationValidation": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketOwnershipControls",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketOwnershipControlsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContentMD5": {},
                        "ExpectedBucketOwner": {},
                        "OwnershipControls": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketPolicyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "ConfirmRemoveSelfBucketAccess": {},
                        "Policy": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketReplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketReplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "ReplicationConfiguration": {},
                        "Token": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketRequestPayment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketRequestPaymentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "RequestPaymentConfiguration": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketTagging",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketTaggingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "Tagging": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketVersioning",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketVersioningRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "MFA": {},
                        "VersioningConfiguration": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutBucketWebsite",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutBucketWebsiteRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "WebsiteConfiguration": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutObject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutObjectOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutObjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ACL": {},
                        "Body": {},
                        "Bucket": {},
                        "CacheControl": {},
                        "ContentDisposition": {},
                        "ContentEncoding": {},
                        "ContentLanguage": {},
                        "ContentLength": {},
                        "ContentMD5": {},
                        "ContentType": {},
                        "ChecksumAlgorithm": {},
                        "ChecksumCRC32": {},
                        "ChecksumCRC32C": {},
                        "ChecksumCRC64NVME": {},
                        "ChecksumSHA1": {},
                        "ChecksumSHA256": {},
                        "Expires": {},
                        "IfMatch": {},
                        "IfNoneMatch": {},
                        "GrantFullControl": {},
                        "GrantRead": {},
                        "GrantReadACP": {},
                        "GrantWriteACP": {},
                        "Key": {},
                        "WriteOffsetBytes": {},
                        "Metadata": {},
                        "ServerSideEncryption": {},
                        "StorageClass": {},
                        "WebsiteRedirectLocation": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {},
                        "SSEKMSKeyId": {},
                        "SSEKMSEncryptionContext": {},
                        "BucketKeyEnabled": {},
                        "RequestPayer": {},
                        "Tagging": {},
                        "ObjectLockMode": {},
                        "ObjectLockRetainUntilDate": {},
                        "ObjectLockLegalHoldStatus": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutObjectAcl",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutObjectAclOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutObjectAclRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ACL": {},
                        "AccessControlPolicy": {},
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "GrantFullControl": {},
                        "GrantRead": {},
                        "GrantReadACP": {},
                        "GrantWrite": {},
                        "GrantWriteACP": {},
                        "Key": {},
                        "RequestPayer": {},
                        "VersionId": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutObjectLegalHold",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutObjectLegalHoldOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutObjectLegalHoldRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "LegalHold": {},
                        "RequestPayer": {},
                        "VersionId": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutObjectLockConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutObjectLockConfigurationOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutObjectLockConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ObjectLockConfiguration": {},
                        "RequestPayer": {},
                        "Token": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutObjectRetention",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutObjectRetentionOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutObjectRetentionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "Retention": {},
                        "RequestPayer": {},
                        "VersionId": {},
                        "BypassGovernanceRetention": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "PutObjectTagging",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutObjectTaggingOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutObjectTaggingRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "VersionId": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "Tagging": {},
                        "ExpectedBucketOwner": {},
                        "RequestPayer": {}
                    }
                }
            }
        },
        {
            "name": "PutPublicAccessBlock",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutPublicAccessBlockRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "PublicAccessBlockConfiguration": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "RestoreObject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestoreObjectOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RestoreObjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "VersionId": {},
                        "RestoreRequest": {},
                        "RequestPayer": {},
                        "ChecksumAlgorithm": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "SelectObjectContent",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SelectObjectContentOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SelectObjectContentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "Key": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {},
                        "Expression": {},
                        "ExpressionType": {},
                        "RequestProgress": {},
                        "InputSerialization": {},
                        "OutputSerialization": {},
                        "ScanRange": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "UploadPart",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UploadPartOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UploadPartRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Body": {},
                        "Bucket": {},
                        "ContentLength": {},
                        "ContentMD5": {},
                        "ChecksumAlgorithm": {},
                        "ChecksumCRC32": {},
                        "ChecksumCRC32C": {},
                        "ChecksumCRC64NVME": {},
                        "ChecksumSHA1": {},
                        "ChecksumSHA256": {},
                        "Key": {},
                        "PartNumber": {},
                        "UploadId": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "UploadPartCopy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Bucket": "route.Bucket",
                            "Key": "route.Key",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/{Bucket}{/Key*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UploadPartCopyOutput"
                    },
                    "inject": [
                        "params.0.Bucket",
                        "params.0.Key",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UploadPartCopyRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Bucket": {},
                        "CopySource": {},
                        "CopySourceIfMatch": {},
                        "CopySourceIfModifiedSince": {},
                        "CopySourceIfNoneMatch": {},
                        "CopySourceIfUnmodifiedSince": {},
                        "CopySourceRange": {},
                        "Key": {},
                        "PartNumber": {},
                        "UploadId": {},
                        "SSECustomerAlgorithm": {},
                        "SSECustomerKey": {},
                        "SSECustomerKeyMD5": {},
                        "CopySourceSSECustomerAlgorithm": {},
                        "CopySourceSSECustomerKey": {},
                        "CopySourceSSECustomerKeyMD5": {},
                        "RequestPayer": {},
                        "ExpectedBucketOwner": {},
                        "ExpectedSourceBucketOwner": {}
                    }
                }
            }
        },
        {
            "name": "WriteGetObjectResponse",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/WriteGetObjectResponse"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/WriteGetObjectResponseRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "RequestRoute": {},
                        "RequestToken": {},
                        "Body": {},
                        "StatusCode": {},
                        "ErrorCode": {},
                        "ErrorMessage": {},
                        "AcceptRanges": {},
                        "CacheControl": {},
                        "ContentDisposition": {},
                        "ContentEncoding": {},
                        "ContentLanguage": {},
                        "ContentLength": {},
                        "ContentRange": {},
                        "ContentType": {},
                        "ChecksumCRC32": {},
                        "ChecksumCRC32C": {},
                        "ChecksumCRC64NVME": {},
                        "ChecksumSHA1": {},
                        "ChecksumSHA256": {},
                        "DeleteMarker": {},
                        "ETag": {},
                        "Expires": {},
                        "Expiration": {},
                        "LastModified": {},
                        "MissingMeta": {},
                        "Metadata": {},
                        "ObjectLockMode": {},
                        "ObjectLockLegalHoldStatus": {},
                        "ObjectLockRetainUntilDate": {},
                        "PartsCount": {},
                        "ReplicationStatus": {},
                        "RequestCharged": {},
                        "Restore": {},
                        "ServerSideEncryption": {},
                        "SSECustomerAlgorithm": {},
                        "SSEKMSKeyId": {},
                        "SSECustomerKeyMD5": {},
                        "StorageClass": {},
                        "TagCount": {},
                        "VersionId": {},
                        "BucketKeyEnabled": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AbortMultipartUploadRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "UploadId": {
                    "$ref": "#/$defs/MultipartUploadId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "IfMatchInitiatedTime": {
                    "$ref": "#/$defs/IfMatchInitiatedTime"
                }
            }
        },
        "BucketName": {
            "type": "string"
        },
        "ObjectKey": {
            "type": "string"
        },
        "MultipartUploadId": {
            "type": "string"
        },
        "RequestPayer": {
            "enum": [
                "requester"
            ]
        },
        "AccountId": {
            "type": "string"
        },
        "IfMatchInitiatedTime": {
            "type": "string",
            "format": "date-time"
        },
        "AbortMultipartUploadOutput": {
            "type": "object",
            "properties": {
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "RequestCharged": {
            "enum": [
                "requester"
            ]
        },
        "CompleteMultipartUploadRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "MultipartUpload": {
                    "$ref": "#/$defs/CompletedMultipartUpload"
                },
                "UploadId": {
                    "$ref": "#/$defs/MultipartUploadId"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                },
                "MpuObjectSize": {
                    "$ref": "#/$defs/MpuObjectSize"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "IfMatch": {
                    "$ref": "#/$defs/IfMatch"
                },
                "IfNoneMatch": {
                    "$ref": "#/$defs/IfNoneMatch"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                }
            }
        },
        "CompletedMultipartUpload": {
            "type": "object",
            "properties": {
                "Parts": {
                    "$ref": "#/$defs/CompletedPartList"
                }
            }
        },
        "CompletedPartList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CompletedPart"
            }
        },
        "CompletedPart": {
            "type": "object",
            "properties": {
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "PartNumber": {
                    "$ref": "#/$defs/PartNumber"
                }
            }
        },
        "ETag": {
            "type": "string"
        },
        "ChecksumCRC32": {
            "type": "string"
        },
        "ChecksumCRC32C": {
            "type": "string"
        },
        "ChecksumCRC64NVME": {
            "type": "string"
        },
        "ChecksumSHA1": {
            "type": "string"
        },
        "ChecksumSHA256": {
            "type": "string"
        },
        "PartNumber": {
            "type": "integer",
            "format": "int32"
        },
        "ChecksumType": {
            "enum": [
                "COMPOSITE",
                "FULL_OBJECT"
            ]
        },
        "MpuObjectSize": {
            "type": "integer",
            "format": "int64"
        },
        "IfMatch": {
            "type": "string"
        },
        "IfNoneMatch": {
            "type": "string"
        },
        "SSECustomerAlgorithm": {
            "type": "string"
        },
        "SSECustomerKey": {
            "type": "string"
        },
        "SSECustomerKeyMD5": {
            "type": "string"
        },
        "CompleteMultipartUploadOutput": {
            "type": "object",
            "properties": {
                "Location": {
                    "$ref": "#/$defs/Location"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "Expiration": {
                    "$ref": "#/$defs/Expiration"
                },
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "Location": {
            "type": "string"
        },
        "Expiration": {
            "type": "string"
        },
        "ServerSideEncryption": {
            "enum": [
                "AES256",
                "aws_kms",
                "aws_kms_dsse"
            ]
        },
        "ObjectVersionId": {
            "type": "string"
        },
        "SSEKMSKeyId": {
            "type": "string"
        },
        "BucketKeyEnabled": {
            "type": "boolean"
        },
        "CopyObjectRequest": {
            "type": "object",
            "properties": {
                "ACL": {
                    "$ref": "#/$defs/ObjectCannedACL"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "CacheControl": {
                    "$ref": "#/$defs/CacheControl"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ContentDisposition": {
                    "$ref": "#/$defs/ContentDisposition"
                },
                "ContentEncoding": {
                    "$ref": "#/$defs/ContentEncoding"
                },
                "ContentLanguage": {
                    "$ref": "#/$defs/ContentLanguage"
                },
                "ContentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "CopySource": {
                    "$ref": "#/$defs/CopySource"
                },
                "CopySourceIfMatch": {
                    "$ref": "#/$defs/CopySourceIfMatch"
                },
                "CopySourceIfModifiedSince": {
                    "$ref": "#/$defs/CopySourceIfModifiedSince"
                },
                "CopySourceIfNoneMatch": {
                    "$ref": "#/$defs/CopySourceIfNoneMatch"
                },
                "CopySourceIfUnmodifiedSince": {
                    "$ref": "#/$defs/CopySourceIfUnmodifiedSince"
                },
                "Expires": {
                    "$ref": "#/$defs/Expires"
                },
                "GrantFullControl": {
                    "$ref": "#/$defs/GrantFullControl"
                },
                "GrantRead": {
                    "$ref": "#/$defs/GrantRead"
                },
                "GrantReadACP": {
                    "$ref": "#/$defs/GrantReadACP"
                },
                "GrantWriteACP": {
                    "$ref": "#/$defs/GrantWriteACP"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "Metadata": {
                    "$ref": "#/$defs/Metadata"
                },
                "MetadataDirective": {
                    "$ref": "#/$defs/MetadataDirective"
                },
                "TaggingDirective": {
                    "$ref": "#/$defs/TaggingDirective"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "WebsiteRedirectLocation": {
                    "$ref": "#/$defs/WebsiteRedirectLocation"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "SSEKMSEncryptionContext": {
                    "$ref": "#/$defs/SSEKMSEncryptionContext"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "CopySourceSSECustomerAlgorithm": {
                    "$ref": "#/$defs/CopySourceSSECustomerAlgorithm"
                },
                "CopySourceSSECustomerKey": {
                    "$ref": "#/$defs/CopySourceSSECustomerKey"
                },
                "CopySourceSSECustomerKeyMD5": {
                    "$ref": "#/$defs/CopySourceSSECustomerKeyMD5"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "Tagging": {
                    "$ref": "#/$defs/TaggingHeader"
                },
                "ObjectLockMode": {
                    "$ref": "#/$defs/ObjectLockMode"
                },
                "ObjectLockRetainUntilDate": {
                    "$ref": "#/$defs/ObjectLockRetainUntilDate"
                },
                "ObjectLockLegalHoldStatus": {
                    "$ref": "#/$defs/ObjectLockLegalHoldStatus"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "ExpectedSourceBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "ObjectCannedACL": {
            "enum": [
                "private",
                "public_read",
                "public_read_write",
                "authenticated_read",
                "aws_exec_read",
                "bucket_owner_read",
                "bucket_owner_full_control"
            ]
        },
        "CacheControl": {
            "type": "string"
        },
        "ChecksumAlgorithm": {
            "enum": [
                "CRC32",
                "CRC32C",
                "SHA1",
                "SHA256",
                "CRC64NVME"
            ]
        },
        "ContentDisposition": {
            "type": "string"
        },
        "ContentEncoding": {
            "type": "string"
        },
        "ContentLanguage": {
            "type": "string"
        },
        "ContentType": {
            "type": "string"
        },
        "CopySource": {
            "type": "string"
        },
        "CopySourceIfMatch": {
            "type": "string"
        },
        "CopySourceIfModifiedSince": {
            "type": "string",
            "format": "date-time"
        },
        "CopySourceIfNoneMatch": {
            "type": "string"
        },
        "CopySourceIfUnmodifiedSince": {
            "type": "string",
            "format": "date-time"
        },
        "Expires": {
            "type": "string",
            "format": "date-time"
        },
        "GrantFullControl": {
            "type": "string"
        },
        "GrantRead": {
            "type": "string"
        },
        "GrantReadACP": {
            "type": "string"
        },
        "GrantWriteACP": {
            "type": "string"
        },
        "Metadata": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MetadataValue"
            }
        },
        "MetadataValue": {
            "type": "string"
        },
        "MetadataDirective": {
            "enum": [
                "COPY",
                "REPLACE"
            ]
        },
        "TaggingDirective": {
            "enum": [
                "COPY",
                "REPLACE"
            ]
        },
        "StorageClass": {
            "enum": [
                "STANDARD",
                "REDUCED_REDUNDANCY",
                "STANDARD_IA",
                "ONEZONE_IA",
                "INTELLIGENT_TIERING",
                "GLACIER",
                "DEEP_ARCHIVE",
                "OUTPOSTS",
                "GLACIER_IR",
                "SNOW",
                "EXPRESS_ONEZONE"
            ]
        },
        "WebsiteRedirectLocation": {
            "type": "string"
        },
        "SSEKMSEncryptionContext": {
            "type": "string"
        },
        "CopySourceSSECustomerAlgorithm": {
            "type": "string"
        },
        "CopySourceSSECustomerKey": {
            "type": "string"
        },
        "CopySourceSSECustomerKeyMD5": {
            "type": "string"
        },
        "TaggingHeader": {
            "type": "string"
        },
        "ObjectLockMode": {
            "enum": [
                "GOVERNANCE",
                "COMPLIANCE"
            ]
        },
        "ObjectLockRetainUntilDate": {
            "type": "string",
            "format": "date-time"
        },
        "ObjectLockLegalHoldStatus": {
            "enum": [
                "ON",
                "OFF"
            ]
        },
        "CopyObjectOutput": {
            "type": "object",
            "properties": {
                "CopyObjectResult": {
                    "$ref": "#/$defs/CopyObjectResult"
                },
                "Expiration": {
                    "$ref": "#/$defs/Expiration"
                },
                "CopySourceVersionId": {
                    "$ref": "#/$defs/CopySourceVersionId"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "SSEKMSEncryptionContext": {
                    "$ref": "#/$defs/SSEKMSEncryptionContext"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "CopyObjectResult": {
            "type": "object",
            "properties": {
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModified"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                }
            }
        },
        "LastModified": {
            "type": "string",
            "format": "date-time"
        },
        "CopySourceVersionId": {
            "type": "string"
        },
        "CreateBucketRequest": {
            "type": "object",
            "properties": {
                "ACL": {
                    "$ref": "#/$defs/BucketCannedACL"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "CreateBucketConfiguration": {
                    "$ref": "#/$defs/CreateBucketConfiguration"
                },
                "GrantFullControl": {
                    "$ref": "#/$defs/GrantFullControl"
                },
                "GrantRead": {
                    "$ref": "#/$defs/GrantRead"
                },
                "GrantReadACP": {
                    "$ref": "#/$defs/GrantReadACP"
                },
                "GrantWrite": {
                    "$ref": "#/$defs/GrantWrite"
                },
                "GrantWriteACP": {
                    "$ref": "#/$defs/GrantWriteACP"
                },
                "ObjectLockEnabledForBucket": {
                    "$ref": "#/$defs/ObjectLockEnabledForBucket"
                },
                "ObjectOwnership": {
                    "$ref": "#/$defs/ObjectOwnership"
                }
            }
        },
        "BucketCannedACL": {
            "enum": [
                "private",
                "public_read",
                "public_read_write",
                "authenticated_read"
            ]
        },
        "CreateBucketConfiguration": {
            "type": "object",
            "properties": {
                "LocationConstraint": {
                    "$ref": "#/$defs/BucketLocationConstraint"
                },
                "Location": {
                    "$ref": "#/$defs/LocationInfo"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketInfo"
                }
            }
        },
        "BucketLocationConstraint": {
            "enum": [
                "af_south_1",
                "ap_east_1",
                "ap_northeast_1",
                "ap_northeast_2",
                "ap_northeast_3",
                "ap_south_1",
                "ap_south_2",
                "ap_southeast_1",
                "ap_southeast_2",
                "ap_southeast_3",
                "ap_southeast_4",
                "ap_southeast_5",
                "ca_central_1",
                "cn_north_1",
                "cn_northwest_1",
                "EU",
                "eu_central_1",
                "eu_central_2",
                "eu_north_1",
                "eu_south_1",
                "eu_south_2",
                "eu_west_1",
                "eu_west_2",
                "eu_west_3",
                "il_central_1",
                "me_central_1",
                "me_south_1",
                "sa_east_1",
                "us_east_2",
                "us_gov_east_1",
                "us_gov_west_1",
                "us_west_1",
                "us_west_2"
            ]
        },
        "LocationInfo": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/LocationType"
                },
                "Name": {
                    "$ref": "#/$defs/LocationNameAsString"
                }
            }
        },
        "LocationType": {
            "enum": [
                "AvailabilityZone",
                "LocalZone"
            ]
        },
        "LocationNameAsString": {
            "type": "string"
        },
        "BucketInfo": {
            "type": "object",
            "properties": {
                "DataRedundancy": {
                    "$ref": "#/$defs/DataRedundancy"
                },
                "Type": {
                    "$ref": "#/$defs/BucketType"
                }
            }
        },
        "DataRedundancy": {
            "enum": [
                "SingleAvailabilityZone",
                "SingleLocalZone"
            ]
        },
        "BucketType": {
            "enum": [
                "Directory"
            ]
        },
        "GrantWrite": {
            "type": "string"
        },
        "ObjectLockEnabledForBucket": {
            "type": "boolean"
        },
        "ObjectOwnership": {
            "enum": [
                "BucketOwnerPreferred",
                "ObjectWriter",
                "BucketOwnerEnforced"
            ]
        },
        "CreateBucketOutput": {
            "type": "object",
            "properties": {
                "Location": {
                    "$ref": "#/$defs/Location"
                }
            }
        },
        "CreateBucketMetadataTableConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "MetadataTableConfiguration": {
                    "$ref": "#/$defs/MetadataTableConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "ContentMD5": {
            "type": "string"
        },
        "MetadataTableConfiguration": {
            "type": "object",
            "properties": {
                "S3TablesDestination": {
                    "$ref": "#/$defs/S3TablesDestination"
                }
            }
        },
        "S3TablesDestination": {
            "type": "object",
            "properties": {
                "TableBucketArn": {
                    "$ref": "#/$defs/S3TablesBucketArn"
                },
                "TableName": {
                    "$ref": "#/$defs/S3TablesName"
                }
            }
        },
        "S3TablesBucketArn": {
            "type": "string"
        },
        "S3TablesName": {
            "type": "string"
        },
        "CreateMultipartUploadRequest": {
            "type": "object",
            "properties": {
                "ACL": {
                    "$ref": "#/$defs/ObjectCannedACL"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "CacheControl": {
                    "$ref": "#/$defs/CacheControl"
                },
                "ContentDisposition": {
                    "$ref": "#/$defs/ContentDisposition"
                },
                "ContentEncoding": {
                    "$ref": "#/$defs/ContentEncoding"
                },
                "ContentLanguage": {
                    "$ref": "#/$defs/ContentLanguage"
                },
                "ContentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "Expires": {
                    "$ref": "#/$defs/Expires"
                },
                "GrantFullControl": {
                    "$ref": "#/$defs/GrantFullControl"
                },
                "GrantRead": {
                    "$ref": "#/$defs/GrantRead"
                },
                "GrantReadACP": {
                    "$ref": "#/$defs/GrantReadACP"
                },
                "GrantWriteACP": {
                    "$ref": "#/$defs/GrantWriteACP"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "Metadata": {
                    "$ref": "#/$defs/Metadata"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "WebsiteRedirectLocation": {
                    "$ref": "#/$defs/WebsiteRedirectLocation"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "SSEKMSEncryptionContext": {
                    "$ref": "#/$defs/SSEKMSEncryptionContext"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "Tagging": {
                    "$ref": "#/$defs/TaggingHeader"
                },
                "ObjectLockMode": {
                    "$ref": "#/$defs/ObjectLockMode"
                },
                "ObjectLockRetainUntilDate": {
                    "$ref": "#/$defs/ObjectLockRetainUntilDate"
                },
                "ObjectLockLegalHoldStatus": {
                    "$ref": "#/$defs/ObjectLockLegalHoldStatus"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                }
            }
        },
        "CreateMultipartUploadOutput": {
            "type": "object",
            "properties": {
                "AbortDate": {
                    "$ref": "#/$defs/AbortDate"
                },
                "AbortRuleId": {
                    "$ref": "#/$defs/AbortRuleId"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "UploadId": {
                    "$ref": "#/$defs/MultipartUploadId"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "SSEKMSEncryptionContext": {
                    "$ref": "#/$defs/SSEKMSEncryptionContext"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                }
            }
        },
        "AbortDate": {
            "type": "string",
            "format": "date-time"
        },
        "AbortRuleId": {
            "type": "string"
        },
        "CreateSessionRequest": {
            "type": "object",
            "properties": {
                "SessionMode": {
                    "$ref": "#/$defs/SessionMode"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "SSEKMSEncryptionContext": {
                    "$ref": "#/$defs/SSEKMSEncryptionContext"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                }
            }
        },
        "SessionMode": {
            "enum": [
                "ReadOnly",
                "ReadWrite"
            ]
        },
        "CreateSessionOutput": {
            "type": "object",
            "properties": {
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "SSEKMSEncryptionContext": {
                    "$ref": "#/$defs/SSEKMSEncryptionContext"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "Credentials": {
                    "$ref": "#/$defs/SessionCredentials"
                }
            }
        },
        "SessionCredentials": {
            "type": "object",
            "properties": {
                "AccessKeyId": {
                    "$ref": "#/$defs/AccessKeyIdValue"
                },
                "SecretAccessKey": {
                    "$ref": "#/$defs/SessionCredentialValue"
                },
                "SessionToken": {
                    "$ref": "#/$defs/SessionCredentialValue"
                },
                "Expiration": {
                    "$ref": "#/$defs/SessionExpiration"
                }
            }
        },
        "AccessKeyIdValue": {
            "type": "string"
        },
        "SessionCredentialValue": {
            "type": "string"
        },
        "SessionExpiration": {
            "type": "string",
            "format": "date-time"
        },
        "DeleteBucketRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteBucketAnalyticsConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/AnalyticsId"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "AnalyticsId": {
            "type": "string"
        },
        "DeleteBucketCorsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteBucketEncryptionRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteBucketIntelligentTieringConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/IntelligentTieringId"
                }
            }
        },
        "IntelligentTieringId": {
            "type": "string"
        },
        "DeleteBucketInventoryConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/InventoryId"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "InventoryId": {
            "type": "string"
        },
        "DeleteBucketLifecycleRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteBucketMetadataTableConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteBucketMetricsConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/MetricsId"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "MetricsId": {
            "type": "string"
        },
        "DeleteBucketOwnershipControlsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteBucketPolicyRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteBucketReplicationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteBucketTaggingRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteBucketWebsiteRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteObjectRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "MFA": {
                    "$ref": "#/$defs/MFA"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "BypassGovernanceRetention": {
                    "$ref": "#/$defs/BypassGovernanceRetention"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "IfMatch": {
                    "$ref": "#/$defs/IfMatch"
                },
                "IfMatchLastModifiedTime": {
                    "$ref": "#/$defs/IfMatchLastModifiedTime"
                },
                "IfMatchSize": {
                    "$ref": "#/$defs/IfMatchSize"
                }
            }
        },
        "MFA": {
            "type": "string"
        },
        "BypassGovernanceRetention": {
            "type": "boolean"
        },
        "IfMatchLastModifiedTime": {
            "type": "string",
            "format": "date-time"
        },
        "IfMatchSize": {
            "type": "integer",
            "format": "int64"
        },
        "DeleteObjectOutput": {
            "type": "object",
            "properties": {
                "DeleteMarker": {
                    "$ref": "#/$defs/DeleteMarker"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "DeleteMarker": {
            "type": "boolean"
        },
        "DeleteObjectsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Delete": {
                    "$ref": "#/$defs/Delete"
                },
                "MFA": {
                    "$ref": "#/$defs/MFA"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "BypassGovernanceRetention": {
                    "$ref": "#/$defs/BypassGovernanceRetention"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                }
            }
        },
        "Delete": {
            "type": "object",
            "properties": {
                "Objects": {
                    "$ref": "#/$defs/ObjectIdentifierList"
                },
                "Quiet": {
                    "$ref": "#/$defs/Quiet"
                }
            }
        },
        "ObjectIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ObjectIdentifier"
            }
        },
        "ObjectIdentifier": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "LastModifiedTime": {
                    "$ref": "#/$defs/LastModifiedTime"
                },
                "Size": {
                    "$ref": "#/$defs/Size"
                }
            }
        },
        "LastModifiedTime": {
            "type": "string",
            "format": "date-time"
        },
        "Size": {
            "type": "integer",
            "format": "int64"
        },
        "Quiet": {
            "type": "boolean"
        },
        "DeleteObjectsOutput": {
            "type": "object",
            "properties": {
                "Deleted": {
                    "$ref": "#/$defs/DeletedObjects"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                },
                "Errors": {
                    "$ref": "#/$defs/Errors"
                }
            }
        },
        "DeletedObjects": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeletedObject"
            }
        },
        "DeletedObject": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "DeleteMarker": {
                    "$ref": "#/$defs/DeleteMarker"
                },
                "DeleteMarkerVersionId": {
                    "$ref": "#/$defs/DeleteMarkerVersionId"
                }
            }
        },
        "DeleteMarkerVersionId": {
            "type": "string"
        },
        "Errors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Error"
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "Code": {
                    "$ref": "#/$defs/Code"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                }
            }
        },
        "Code": {
            "type": "string"
        },
        "Message": {
            "type": "string"
        },
        "DeleteObjectTaggingRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DeleteObjectTaggingOutput": {
            "type": "object",
            "properties": {
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                }
            }
        },
        "DeletePublicAccessBlockRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketAccelerateConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                }
            }
        },
        "GetBucketAccelerateConfigurationOutput": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/BucketAccelerateStatus"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "BucketAccelerateStatus": {
            "enum": [
                "Enabled",
                "Suspended"
            ]
        },
        "GetBucketAclRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketAclOutput": {
            "type": "object",
            "properties": {
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "Grants": {
                    "$ref": "#/$defs/Grants"
                }
            }
        },
        "Owner": {
            "type": "object",
            "properties": {
                "DisplayName": {
                    "$ref": "#/$defs/DisplayName"
                },
                "ID": {
                    "$ref": "#/$defs/ID"
                }
            }
        },
        "DisplayName": {
            "type": "string"
        },
        "ID": {
            "type": "string"
        },
        "Grants": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Grant"
            }
        },
        "Grant": {
            "type": "object",
            "properties": {
                "Grantee": {
                    "$ref": "#/$defs/Grantee"
                },
                "Permission": {
                    "$ref": "#/$defs/Permission"
                }
            }
        },
        "Grantee": {
            "type": "object",
            "properties": {
                "DisplayName": {
                    "$ref": "#/$defs/DisplayName"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "ID": {
                    "$ref": "#/$defs/ID"
                },
                "URI": {
                    "$ref": "#/$defs/URI"
                },
                "Type": {
                    "$ref": "#/$defs/Type"
                }
            }
        },
        "EmailAddress": {
            "type": "string"
        },
        "URI": {
            "type": "string"
        },
        "Type": {
            "enum": [
                "CanonicalUser",
                "AmazonCustomerByEmail",
                "Group"
            ]
        },
        "Permission": {
            "enum": [
                "FULL_CONTROL",
                "WRITE",
                "WRITE_ACP",
                "READ",
                "READ_ACP"
            ]
        },
        "GetBucketAnalyticsConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/AnalyticsId"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketAnalyticsConfigurationOutput": {
            "type": "object",
            "properties": {
                "AnalyticsConfiguration": {
                    "$ref": "#/$defs/AnalyticsConfiguration"
                }
            }
        },
        "AnalyticsConfiguration": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/AnalyticsId"
                },
                "Filter": {
                    "$ref": "#/$defs/AnalyticsFilter"
                },
                "StorageClassAnalysis": {
                    "$ref": "#/$defs/StorageClassAnalysis"
                }
            }
        },
        "AnalyticsFilter": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Tag": {
                    "$ref": "#/$defs/Tag"
                },
                "And": {
                    "$ref": "#/$defs/AnalyticsAndOperator"
                }
            }
        },
        "Prefix": {
            "type": "string"
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "Value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "Value": {
            "type": "string"
        },
        "AnalyticsAndOperator": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Tags": {
                    "$ref": "#/$defs/TagSet"
                }
            }
        },
        "TagSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "StorageClassAnalysis": {
            "type": "object",
            "properties": {
                "DataExport": {
                    "$ref": "#/$defs/StorageClassAnalysisDataExport"
                }
            }
        },
        "StorageClassAnalysisDataExport": {
            "type": "object",
            "properties": {
                "OutputSchemaVersion": {
                    "$ref": "#/$defs/StorageClassAnalysisSchemaVersion"
                },
                "Destination": {
                    "$ref": "#/$defs/AnalyticsExportDestination"
                }
            }
        },
        "StorageClassAnalysisSchemaVersion": {
            "enum": [
                "V_1"
            ]
        },
        "AnalyticsExportDestination": {
            "type": "object",
            "properties": {
                "S3BucketDestination": {
                    "$ref": "#/$defs/AnalyticsS3BucketDestination"
                }
            }
        },
        "AnalyticsS3BucketDestination": {
            "type": "object",
            "properties": {
                "Format": {
                    "$ref": "#/$defs/AnalyticsS3ExportFileFormat"
                },
                "BucketAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                }
            }
        },
        "AnalyticsS3ExportFileFormat": {
            "enum": [
                "CSV"
            ]
        },
        "GetBucketCorsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketCorsOutput": {
            "type": "object",
            "properties": {
                "CORSRules": {
                    "$ref": "#/$defs/CORSRules"
                }
            }
        },
        "CORSRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CORSRule"
            }
        },
        "CORSRule": {
            "type": "object",
            "properties": {
                "ID": {
                    "$ref": "#/$defs/ID"
                },
                "AllowedHeaders": {
                    "$ref": "#/$defs/AllowedHeaders"
                },
                "AllowedMethods": {
                    "$ref": "#/$defs/AllowedMethods"
                },
                "AllowedOrigins": {
                    "$ref": "#/$defs/AllowedOrigins"
                },
                "ExposeHeaders": {
                    "$ref": "#/$defs/ExposeHeaders"
                },
                "MaxAgeSeconds": {
                    "$ref": "#/$defs/MaxAgeSeconds"
                }
            }
        },
        "AllowedHeaders": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowedHeader"
            }
        },
        "AllowedHeader": {
            "type": "string"
        },
        "AllowedMethods": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowedMethod"
            }
        },
        "AllowedMethod": {
            "type": "string"
        },
        "AllowedOrigins": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowedOrigin"
            }
        },
        "AllowedOrigin": {
            "type": "string"
        },
        "ExposeHeaders": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExposeHeader"
            }
        },
        "ExposeHeader": {
            "type": "string"
        },
        "MaxAgeSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "GetBucketEncryptionRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketEncryptionOutput": {
            "type": "object",
            "properties": {
                "ServerSideEncryptionConfiguration": {
                    "$ref": "#/$defs/ServerSideEncryptionConfiguration"
                }
            }
        },
        "ServerSideEncryptionConfiguration": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/ServerSideEncryptionRules"
                }
            }
        },
        "ServerSideEncryptionRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerSideEncryptionRule"
            }
        },
        "ServerSideEncryptionRule": {
            "type": "object",
            "properties": {
                "ApplyServerSideEncryptionByDefault": {
                    "$ref": "#/$defs/ServerSideEncryptionByDefault"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                }
            }
        },
        "ServerSideEncryptionByDefault": {
            "type": "object",
            "properties": {
                "SSEAlgorithm": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "KMSMasterKeyID": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                }
            }
        },
        "GetBucketIntelligentTieringConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/IntelligentTieringId"
                }
            }
        },
        "GetBucketIntelligentTieringConfigurationOutput": {
            "type": "object",
            "properties": {
                "IntelligentTieringConfiguration": {
                    "$ref": "#/$defs/IntelligentTieringConfiguration"
                }
            }
        },
        "IntelligentTieringConfiguration": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IntelligentTieringId"
                },
                "Filter": {
                    "$ref": "#/$defs/IntelligentTieringFilter"
                },
                "Status": {
                    "$ref": "#/$defs/IntelligentTieringStatus"
                },
                "Tierings": {
                    "$ref": "#/$defs/TieringList"
                }
            }
        },
        "IntelligentTieringFilter": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Tag": {
                    "$ref": "#/$defs/Tag"
                },
                "And": {
                    "$ref": "#/$defs/IntelligentTieringAndOperator"
                }
            }
        },
        "IntelligentTieringAndOperator": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Tags": {
                    "$ref": "#/$defs/TagSet"
                }
            }
        },
        "IntelligentTieringStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "TieringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tiering"
            }
        },
        "Tiering": {
            "type": "object",
            "properties": {
                "Days": {
                    "$ref": "#/$defs/IntelligentTieringDays"
                },
                "AccessTier": {
                    "$ref": "#/$defs/IntelligentTieringAccessTier"
                }
            }
        },
        "IntelligentTieringDays": {
            "type": "integer",
            "format": "int32"
        },
        "IntelligentTieringAccessTier": {
            "enum": [
                "ARCHIVE_ACCESS",
                "DEEP_ARCHIVE_ACCESS"
            ]
        },
        "GetBucketInventoryConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/InventoryId"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketInventoryConfigurationOutput": {
            "type": "object",
            "properties": {
                "InventoryConfiguration": {
                    "$ref": "#/$defs/InventoryConfiguration"
                }
            }
        },
        "InventoryConfiguration": {
            "type": "object",
            "properties": {
                "Destination": {
                    "$ref": "#/$defs/InventoryDestination"
                },
                "IsEnabled": {
                    "$ref": "#/$defs/IsEnabled"
                },
                "Filter": {
                    "$ref": "#/$defs/InventoryFilter"
                },
                "Id": {
                    "$ref": "#/$defs/InventoryId"
                },
                "IncludedObjectVersions": {
                    "$ref": "#/$defs/InventoryIncludedObjectVersions"
                },
                "OptionalFields": {
                    "$ref": "#/$defs/InventoryOptionalFields"
                },
                "Schedule": {
                    "$ref": "#/$defs/InventorySchedule"
                }
            }
        },
        "InventoryDestination": {
            "type": "object",
            "properties": {
                "S3BucketDestination": {
                    "$ref": "#/$defs/InventoryS3BucketDestination"
                }
            }
        },
        "InventoryS3BucketDestination": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Format": {
                    "$ref": "#/$defs/InventoryFormat"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Encryption": {
                    "$ref": "#/$defs/InventoryEncryption"
                }
            }
        },
        "InventoryFormat": {
            "enum": [
                "CSV",
                "ORC",
                "Parquet"
            ]
        },
        "InventoryEncryption": {
            "type": "object",
            "properties": {
                "SSES3": {
                    "$ref": "#/$defs/SSES3"
                },
                "SSEKMS": {
                    "$ref": "#/$defs/SSEKMS"
                }
            }
        },
        "SSES3": {
            "type": "object",
            "properties": {}
        },
        "SSEKMS": {
            "type": "object",
            "properties": {
                "KeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                }
            }
        },
        "IsEnabled": {
            "type": "boolean"
        },
        "InventoryFilter": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                }
            }
        },
        "InventoryIncludedObjectVersions": {
            "enum": [
                "All",
                "Current"
            ]
        },
        "InventoryOptionalFields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InventoryOptionalField"
            }
        },
        "InventoryOptionalField": {
            "enum": [
                "Size",
                "LastModifiedDate",
                "StorageClass",
                "ETag",
                "IsMultipartUploaded",
                "ReplicationStatus",
                "EncryptionStatus",
                "ObjectLockRetainUntilDate",
                "ObjectLockMode",
                "ObjectLockLegalHoldStatus",
                "IntelligentTieringAccessTier",
                "BucketKeyStatus",
                "ChecksumAlgorithm",
                "ObjectAccessControlList",
                "ObjectOwner"
            ]
        },
        "InventorySchedule": {
            "type": "object",
            "properties": {
                "Frequency": {
                    "$ref": "#/$defs/InventoryFrequency"
                }
            }
        },
        "InventoryFrequency": {
            "enum": [
                "Daily",
                "Weekly"
            ]
        },
        "GetBucketLifecycleConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketLifecycleConfigurationOutput": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/LifecycleRules"
                },
                "TransitionDefaultMinimumObjectSize": {
                    "$ref": "#/$defs/TransitionDefaultMinimumObjectSize"
                }
            }
        },
        "LifecycleRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LifecycleRule"
            }
        },
        "LifecycleRule": {
            "type": "object",
            "properties": {
                "Expiration": {
                    "$ref": "#/$defs/LifecycleExpiration"
                },
                "ID": {
                    "$ref": "#/$defs/ID"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Filter": {
                    "$ref": "#/$defs/LifecycleRuleFilter"
                },
                "Status": {
                    "$ref": "#/$defs/ExpirationStatus"
                },
                "Transitions": {
                    "$ref": "#/$defs/TransitionList"
                },
                "NoncurrentVersionTransitions": {
                    "$ref": "#/$defs/NoncurrentVersionTransitionList"
                },
                "NoncurrentVersionExpiration": {
                    "$ref": "#/$defs/NoncurrentVersionExpiration"
                },
                "AbortIncompleteMultipartUpload": {
                    "$ref": "#/$defs/AbortIncompleteMultipartUpload"
                }
            }
        },
        "LifecycleExpiration": {
            "type": "object",
            "properties": {
                "Date": {
                    "$ref": "#/$defs/Date"
                },
                "Days": {
                    "$ref": "#/$defs/Days"
                },
                "ExpiredObjectDeleteMarker": {
                    "$ref": "#/$defs/ExpiredObjectDeleteMarker"
                }
            }
        },
        "Date": {
            "type": "string",
            "format": "date-time"
        },
        "Days": {
            "type": "integer",
            "format": "int32"
        },
        "ExpiredObjectDeleteMarker": {
            "type": "boolean"
        },
        "LifecycleRuleFilter": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Tag": {
                    "$ref": "#/$defs/Tag"
                },
                "ObjectSizeGreaterThan": {
                    "$ref": "#/$defs/ObjectSizeGreaterThanBytes"
                },
                "ObjectSizeLessThan": {
                    "$ref": "#/$defs/ObjectSizeLessThanBytes"
                },
                "And": {
                    "$ref": "#/$defs/LifecycleRuleAndOperator"
                }
            }
        },
        "ObjectSizeGreaterThanBytes": {
            "type": "integer",
            "format": "int64"
        },
        "ObjectSizeLessThanBytes": {
            "type": "integer",
            "format": "int64"
        },
        "LifecycleRuleAndOperator": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Tags": {
                    "$ref": "#/$defs/TagSet"
                },
                "ObjectSizeGreaterThan": {
                    "$ref": "#/$defs/ObjectSizeGreaterThanBytes"
                },
                "ObjectSizeLessThan": {
                    "$ref": "#/$defs/ObjectSizeLessThanBytes"
                }
            }
        },
        "ExpirationStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "TransitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Transition"
            }
        },
        "Transition": {
            "type": "object",
            "properties": {
                "Date": {
                    "$ref": "#/$defs/Date"
                },
                "Days": {
                    "$ref": "#/$defs/Days"
                },
                "StorageClass": {
                    "$ref": "#/$defs/TransitionStorageClass"
                }
            }
        },
        "TransitionStorageClass": {
            "enum": [
                "GLACIER",
                "STANDARD_IA",
                "ONEZONE_IA",
                "INTELLIGENT_TIERING",
                "DEEP_ARCHIVE",
                "GLACIER_IR"
            ]
        },
        "NoncurrentVersionTransitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NoncurrentVersionTransition"
            }
        },
        "NoncurrentVersionTransition": {
            "type": "object",
            "properties": {
                "NoncurrentDays": {
                    "$ref": "#/$defs/Days"
                },
                "StorageClass": {
                    "$ref": "#/$defs/TransitionStorageClass"
                },
                "NewerNoncurrentVersions": {
                    "$ref": "#/$defs/VersionCount"
                }
            }
        },
        "VersionCount": {
            "type": "integer",
            "format": "int32"
        },
        "NoncurrentVersionExpiration": {
            "type": "object",
            "properties": {
                "NoncurrentDays": {
                    "$ref": "#/$defs/Days"
                },
                "NewerNoncurrentVersions": {
                    "$ref": "#/$defs/VersionCount"
                }
            }
        },
        "AbortIncompleteMultipartUpload": {
            "type": "object",
            "properties": {
                "DaysAfterInitiation": {
                    "$ref": "#/$defs/DaysAfterInitiation"
                }
            }
        },
        "DaysAfterInitiation": {
            "type": "integer",
            "format": "int32"
        },
        "TransitionDefaultMinimumObjectSize": {
            "enum": [
                "varies_by_storage_class",
                "all_storage_classes_128K"
            ]
        },
        "GetBucketLocationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketLocationOutput": {
            "type": "object",
            "properties": {
                "LocationConstraint": {
                    "$ref": "#/$defs/BucketLocationConstraint"
                }
            }
        },
        "GetBucketLoggingRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketLoggingOutput": {
            "type": "object",
            "properties": {
                "LoggingEnabled": {
                    "$ref": "#/$defs/LoggingEnabled"
                }
            }
        },
        "LoggingEnabled": {
            "type": "object",
            "properties": {
                "TargetBucket": {
                    "$ref": "#/$defs/TargetBucket"
                },
                "TargetGrants": {
                    "$ref": "#/$defs/TargetGrants"
                },
                "TargetPrefix": {
                    "$ref": "#/$defs/TargetPrefix"
                },
                "TargetObjectKeyFormat": {
                    "$ref": "#/$defs/TargetObjectKeyFormat"
                }
            }
        },
        "TargetBucket": {
            "type": "string"
        },
        "TargetGrants": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetGrant"
            }
        },
        "TargetGrant": {
            "type": "object",
            "properties": {
                "Grantee": {
                    "$ref": "#/$defs/Grantee"
                },
                "Permission": {
                    "$ref": "#/$defs/BucketLogsPermission"
                }
            }
        },
        "BucketLogsPermission": {
            "enum": [
                "FULL_CONTROL",
                "READ",
                "WRITE"
            ]
        },
        "TargetPrefix": {
            "type": "string"
        },
        "TargetObjectKeyFormat": {
            "type": "object",
            "properties": {
                "SimplePrefix": {
                    "$ref": "#/$defs/SimplePrefix"
                },
                "PartitionedPrefix": {
                    "$ref": "#/$defs/PartitionedPrefix"
                }
            }
        },
        "SimplePrefix": {
            "type": "object",
            "properties": {}
        },
        "PartitionedPrefix": {
            "type": "object",
            "properties": {
                "PartitionDateSource": {
                    "$ref": "#/$defs/PartitionDateSource"
                }
            }
        },
        "PartitionDateSource": {
            "enum": [
                "EventTime",
                "DeliveryTime"
            ]
        },
        "GetBucketMetadataTableConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketMetadataTableConfigurationOutput": {
            "type": "object",
            "properties": {
                "GetBucketMetadataTableConfigurationResult": {
                    "$ref": "#/$defs/GetBucketMetadataTableConfigurationResult"
                }
            }
        },
        "GetBucketMetadataTableConfigurationResult": {
            "type": "object",
            "properties": {
                "MetadataTableConfigurationResult": {
                    "$ref": "#/$defs/MetadataTableConfigurationResult"
                },
                "Status": {
                    "$ref": "#/$defs/MetadataTableStatus"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorDetails"
                }
            }
        },
        "MetadataTableConfigurationResult": {
            "type": "object",
            "properties": {
                "S3TablesDestinationResult": {
                    "$ref": "#/$defs/S3TablesDestinationResult"
                }
            }
        },
        "S3TablesDestinationResult": {
            "type": "object",
            "properties": {
                "TableBucketArn": {
                    "$ref": "#/$defs/S3TablesBucketArn"
                },
                "TableName": {
                    "$ref": "#/$defs/S3TablesName"
                },
                "TableArn": {
                    "$ref": "#/$defs/S3TablesArn"
                },
                "TableNamespace": {
                    "$ref": "#/$defs/S3TablesNamespace"
                }
            }
        },
        "S3TablesArn": {
            "type": "string"
        },
        "S3TablesNamespace": {
            "type": "string"
        },
        "MetadataTableStatus": {
            "type": "string"
        },
        "ErrorDetails": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorCode": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "GetBucketMetricsConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/MetricsId"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketMetricsConfigurationOutput": {
            "type": "object",
            "properties": {
                "MetricsConfiguration": {
                    "$ref": "#/$defs/MetricsConfiguration"
                }
            }
        },
        "MetricsConfiguration": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MetricsId"
                },
                "Filter": {
                    "$ref": "#/$defs/MetricsFilter"
                }
            }
        },
        "MetricsFilter": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Tag": {
                    "$ref": "#/$defs/Tag"
                },
                "AccessPointArn": {
                    "$ref": "#/$defs/AccessPointArn"
                },
                "And": {
                    "$ref": "#/$defs/MetricsAndOperator"
                }
            }
        },
        "AccessPointArn": {
            "type": "string"
        },
        "MetricsAndOperator": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Tags": {
                    "$ref": "#/$defs/TagSet"
                },
                "AccessPointArn": {
                    "$ref": "#/$defs/AccessPointArn"
                }
            }
        },
        "GetBucketNotificationConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "NotificationConfiguration": {
            "type": "object",
            "properties": {
                "TopicConfigurations": {
                    "$ref": "#/$defs/TopicConfigurationList"
                },
                "QueueConfigurations": {
                    "$ref": "#/$defs/QueueConfigurationList"
                },
                "LambdaFunctionConfigurations": {
                    "$ref": "#/$defs/LambdaFunctionConfigurationList"
                },
                "EventBridgeConfiguration": {
                    "$ref": "#/$defs/EventBridgeConfiguration"
                }
            }
        },
        "TopicConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TopicConfiguration"
            }
        },
        "TopicConfiguration": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NotificationId"
                },
                "TopicArn": {
                    "$ref": "#/$defs/TopicArn"
                },
                "Events": {
                    "$ref": "#/$defs/EventList"
                },
                "Filter": {
                    "$ref": "#/$defs/NotificationConfigurationFilter"
                }
            }
        },
        "NotificationId": {
            "type": "string"
        },
        "TopicArn": {
            "type": "string"
        },
        "EventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Event"
            }
        },
        "Event": {
            "enum": [
                "s3_ReducedRedundancyLostObject",
                "s3_ObjectCreated_",
                "s3_ObjectCreated_Put",
                "s3_ObjectCreated_Post",
                "s3_ObjectCreated_Copy",
                "s3_ObjectCreated_CompleteMultipartUpload",
                "s3_ObjectRemoved_",
                "s3_ObjectRemoved_Delete",
                "s3_ObjectRemoved_DeleteMarkerCreated",
                "s3_ObjectRestore_",
                "s3_ObjectRestore_Post",
                "s3_ObjectRestore_Completed",
                "s3_Replication_",
                "s3_Replication_OperationFailedReplication",
                "s3_Replication_OperationNotTracked",
                "s3_Replication_OperationMissedThreshold",
                "s3_Replication_OperationReplicatedAfterThreshold",
                "s3_ObjectRestore_Delete",
                "s3_LifecycleTransition",
                "s3_IntelligentTiering",
                "s3_ObjectAcl_Put",
                "s3_LifecycleExpiration_",
                "s3_LifecycleExpiration_Delete",
                "s3_LifecycleExpiration_DeleteMarkerCreated",
                "s3_ObjectTagging_",
                "s3_ObjectTagging_Put",
                "s3_ObjectTagging_Delete"
            ]
        },
        "NotificationConfigurationFilter": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/S3KeyFilter"
                }
            }
        },
        "S3KeyFilter": {
            "type": "object",
            "properties": {
                "FilterRules": {
                    "$ref": "#/$defs/FilterRuleList"
                }
            }
        },
        "FilterRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterRule"
            }
        },
        "FilterRule": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FilterRuleName"
                },
                "Value": {
                    "$ref": "#/$defs/FilterRuleValue"
                }
            }
        },
        "FilterRuleName": {
            "enum": [
                "prefix",
                "suffix"
            ]
        },
        "FilterRuleValue": {
            "type": "string"
        },
        "QueueConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/QueueConfiguration"
            }
        },
        "QueueConfiguration": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NotificationId"
                },
                "QueueArn": {
                    "$ref": "#/$defs/QueueArn"
                },
                "Events": {
                    "$ref": "#/$defs/EventList"
                },
                "Filter": {
                    "$ref": "#/$defs/NotificationConfigurationFilter"
                }
            }
        },
        "QueueArn": {
            "type": "string"
        },
        "LambdaFunctionConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LambdaFunctionConfiguration"
            }
        },
        "LambdaFunctionConfiguration": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/NotificationId"
                },
                "LambdaFunctionArn": {
                    "$ref": "#/$defs/LambdaFunctionArn"
                },
                "Events": {
                    "$ref": "#/$defs/EventList"
                },
                "Filter": {
                    "$ref": "#/$defs/NotificationConfigurationFilter"
                }
            }
        },
        "LambdaFunctionArn": {
            "type": "string"
        },
        "EventBridgeConfiguration": {
            "type": "object",
            "properties": {}
        },
        "GetBucketOwnershipControlsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketOwnershipControlsOutput": {
            "type": "object",
            "properties": {
                "OwnershipControls": {
                    "$ref": "#/$defs/OwnershipControls"
                }
            }
        },
        "OwnershipControls": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/OwnershipControlsRules"
                }
            }
        },
        "OwnershipControlsRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OwnershipControlsRule"
            }
        },
        "OwnershipControlsRule": {
            "type": "object",
            "properties": {
                "ObjectOwnership": {
                    "$ref": "#/$defs/ObjectOwnership"
                }
            }
        },
        "GetBucketPolicyRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketPolicyOutput": {
            "type": "object",
            "properties": {
                "Policy": {
                    "$ref": "#/$defs/Policy"
                }
            }
        },
        "Policy": {
            "type": "string"
        },
        "GetBucketPolicyStatusRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketPolicyStatusOutput": {
            "type": "object",
            "properties": {
                "PolicyStatus": {
                    "$ref": "#/$defs/PolicyStatus"
                }
            }
        },
        "PolicyStatus": {
            "type": "object",
            "properties": {
                "IsPublic": {
                    "$ref": "#/$defs/IsPublic"
                }
            }
        },
        "IsPublic": {
            "type": "boolean"
        },
        "GetBucketReplicationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketReplicationOutput": {
            "type": "object",
            "properties": {
                "ReplicationConfiguration": {
                    "$ref": "#/$defs/ReplicationConfiguration"
                }
            }
        },
        "ReplicationConfiguration": {
            "type": "object",
            "properties": {
                "Role": {
                    "$ref": "#/$defs/Role"
                },
                "Rules": {
                    "$ref": "#/$defs/ReplicationRules"
                }
            }
        },
        "Role": {
            "type": "string"
        },
        "ReplicationRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicationRule"
            }
        },
        "ReplicationRule": {
            "type": "object",
            "properties": {
                "ID": {
                    "$ref": "#/$defs/ID"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Filter": {
                    "$ref": "#/$defs/ReplicationRuleFilter"
                },
                "Status": {
                    "$ref": "#/$defs/ReplicationRuleStatus"
                },
                "SourceSelectionCriteria": {
                    "$ref": "#/$defs/SourceSelectionCriteria"
                },
                "ExistingObjectReplication": {
                    "$ref": "#/$defs/ExistingObjectReplication"
                },
                "Destination": {
                    "$ref": "#/$defs/Destination"
                },
                "DeleteMarkerReplication": {
                    "$ref": "#/$defs/DeleteMarkerReplication"
                }
            }
        },
        "Priority": {
            "type": "integer",
            "format": "int32"
        },
        "ReplicationRuleFilter": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Tag": {
                    "$ref": "#/$defs/Tag"
                },
                "And": {
                    "$ref": "#/$defs/ReplicationRuleAndOperator"
                }
            }
        },
        "ReplicationRuleAndOperator": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Tags": {
                    "$ref": "#/$defs/TagSet"
                }
            }
        },
        "ReplicationRuleStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "SourceSelectionCriteria": {
            "type": "object",
            "properties": {
                "SseKmsEncryptedObjects": {
                    "$ref": "#/$defs/SseKmsEncryptedObjects"
                },
                "ReplicaModifications": {
                    "$ref": "#/$defs/ReplicaModifications"
                }
            }
        },
        "SseKmsEncryptedObjects": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/SseKmsEncryptedObjectsStatus"
                }
            }
        },
        "SseKmsEncryptedObjectsStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "ReplicaModifications": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ReplicaModificationsStatus"
                }
            }
        },
        "ReplicaModificationsStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "ExistingObjectReplication": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ExistingObjectReplicationStatus"
                }
            }
        },
        "ExistingObjectReplicationStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "Destination": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Account": {
                    "$ref": "#/$defs/AccountId"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "AccessControlTranslation": {
                    "$ref": "#/$defs/AccessControlTranslation"
                },
                "EncryptionConfiguration": {
                    "$ref": "#/$defs/EncryptionConfiguration"
                },
                "ReplicationTime": {
                    "$ref": "#/$defs/ReplicationTime"
                },
                "Metrics": {
                    "$ref": "#/$defs/Metrics"
                }
            }
        },
        "AccessControlTranslation": {
            "type": "object",
            "properties": {
                "Owner": {
                    "$ref": "#/$defs/OwnerOverride"
                }
            }
        },
        "OwnerOverride": {
            "enum": [
                "Destination"
            ]
        },
        "EncryptionConfiguration": {
            "type": "object",
            "properties": {
                "ReplicaKmsKeyID": {
                    "$ref": "#/$defs/ReplicaKmsKeyID"
                }
            }
        },
        "ReplicaKmsKeyID": {
            "type": "string"
        },
        "ReplicationTime": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ReplicationTimeStatus"
                },
                "Time": {
                    "$ref": "#/$defs/ReplicationTimeValue"
                }
            }
        },
        "ReplicationTimeStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "ReplicationTimeValue": {
            "type": "object",
            "properties": {
                "Minutes": {
                    "$ref": "#/$defs/Minutes"
                }
            }
        },
        "Minutes": {
            "type": "integer",
            "format": "int32"
        },
        "Metrics": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/MetricsStatus"
                },
                "EventThreshold": {
                    "$ref": "#/$defs/ReplicationTimeValue"
                }
            }
        },
        "MetricsStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "DeleteMarkerReplication": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/DeleteMarkerReplicationStatus"
                }
            }
        },
        "DeleteMarkerReplicationStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "GetBucketRequestPaymentRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketRequestPaymentOutput": {
            "type": "object",
            "properties": {
                "Payer": {
                    "$ref": "#/$defs/Payer"
                }
            }
        },
        "Payer": {
            "enum": [
                "Requester",
                "BucketOwner"
            ]
        },
        "GetBucketTaggingRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketTaggingOutput": {
            "type": "object",
            "properties": {
                "TagSet": {
                    "$ref": "#/$defs/TagSet"
                }
            }
        },
        "GetBucketVersioningRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketVersioningOutput": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/BucketVersioningStatus"
                },
                "MFADelete": {
                    "$ref": "#/$defs/MFADeleteStatus"
                }
            }
        },
        "BucketVersioningStatus": {
            "enum": [
                "Enabled",
                "Suspended"
            ]
        },
        "MFADeleteStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "GetBucketWebsiteRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetBucketWebsiteOutput": {
            "type": "object",
            "properties": {
                "RedirectAllRequestsTo": {
                    "$ref": "#/$defs/RedirectAllRequestsTo"
                },
                "IndexDocument": {
                    "$ref": "#/$defs/IndexDocument"
                },
                "ErrorDocument": {
                    "$ref": "#/$defs/ErrorDocument"
                },
                "RoutingRules": {
                    "$ref": "#/$defs/RoutingRules"
                }
            }
        },
        "RedirectAllRequestsTo": {
            "type": "object",
            "properties": {
                "HostName": {
                    "$ref": "#/$defs/HostName"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                }
            }
        },
        "HostName": {
            "type": "string"
        },
        "Protocol": {
            "enum": [
                "http",
                "https"
            ]
        },
        "IndexDocument": {
            "type": "object",
            "properties": {
                "Suffix": {
                    "$ref": "#/$defs/Suffix"
                }
            }
        },
        "Suffix": {
            "type": "string"
        },
        "ErrorDocument": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                }
            }
        },
        "RoutingRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RoutingRule"
            }
        },
        "RoutingRule": {
            "type": "object",
            "properties": {
                "Condition": {
                    "$ref": "#/$defs/Condition"
                },
                "Redirect": {
                    "$ref": "#/$defs/Redirect"
                }
            }
        },
        "Condition": {
            "type": "object",
            "properties": {
                "HttpErrorCodeReturnedEquals": {
                    "$ref": "#/$defs/HttpErrorCodeReturnedEquals"
                },
                "KeyPrefixEquals": {
                    "$ref": "#/$defs/KeyPrefixEquals"
                }
            }
        },
        "HttpErrorCodeReturnedEquals": {
            "type": "string"
        },
        "KeyPrefixEquals": {
            "type": "string"
        },
        "Redirect": {
            "type": "object",
            "properties": {
                "HostName": {
                    "$ref": "#/$defs/HostName"
                },
                "HttpRedirectCode": {
                    "$ref": "#/$defs/HttpRedirectCode"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "ReplaceKeyPrefixWith": {
                    "$ref": "#/$defs/ReplaceKeyPrefixWith"
                },
                "ReplaceKeyWith": {
                    "$ref": "#/$defs/ReplaceKeyWith"
                }
            }
        },
        "HttpRedirectCode": {
            "type": "string"
        },
        "ReplaceKeyPrefixWith": {
            "type": "string"
        },
        "ReplaceKeyWith": {
            "type": "string"
        },
        "GetObjectRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "IfMatch": {
                    "$ref": "#/$defs/IfMatch"
                },
                "IfModifiedSince": {
                    "$ref": "#/$defs/IfModifiedSince"
                },
                "IfNoneMatch": {
                    "$ref": "#/$defs/IfNoneMatch"
                },
                "IfUnmodifiedSince": {
                    "$ref": "#/$defs/IfUnmodifiedSince"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "Range": {
                    "$ref": "#/$defs/Range"
                },
                "ResponseCacheControl": {
                    "$ref": "#/$defs/ResponseCacheControl"
                },
                "ResponseContentDisposition": {
                    "$ref": "#/$defs/ResponseContentDisposition"
                },
                "ResponseContentEncoding": {
                    "$ref": "#/$defs/ResponseContentEncoding"
                },
                "ResponseContentLanguage": {
                    "$ref": "#/$defs/ResponseContentLanguage"
                },
                "ResponseContentType": {
                    "$ref": "#/$defs/ResponseContentType"
                },
                "ResponseExpires": {
                    "$ref": "#/$defs/ResponseExpires"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "PartNumber": {
                    "$ref": "#/$defs/PartNumber"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "ChecksumMode": {
                    "$ref": "#/$defs/ChecksumMode"
                }
            }
        },
        "IfModifiedSince": {
            "type": "string",
            "format": "date-time"
        },
        "IfUnmodifiedSince": {
            "type": "string",
            "format": "date-time"
        },
        "Range": {
            "type": "string"
        },
        "ResponseCacheControl": {
            "type": "string"
        },
        "ResponseContentDisposition": {
            "type": "string"
        },
        "ResponseContentEncoding": {
            "type": "string"
        },
        "ResponseContentLanguage": {
            "type": "string"
        },
        "ResponseContentType": {
            "type": "string"
        },
        "ResponseExpires": {
            "type": "string",
            "format": "date-time"
        },
        "ChecksumMode": {
            "enum": [
                "ENABLED"
            ]
        },
        "GetObjectOutput": {
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/$defs/StreamingBlob"
                },
                "DeleteMarker": {
                    "$ref": "#/$defs/DeleteMarker"
                },
                "AcceptRanges": {
                    "$ref": "#/$defs/AcceptRanges"
                },
                "Expiration": {
                    "$ref": "#/$defs/Expiration"
                },
                "Restore": {
                    "$ref": "#/$defs/Restore"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModified"
                },
                "ContentLength": {
                    "$ref": "#/$defs/ContentLength"
                },
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                },
                "MissingMeta": {
                    "$ref": "#/$defs/MissingMeta"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "CacheControl": {
                    "$ref": "#/$defs/CacheControl"
                },
                "ContentDisposition": {
                    "$ref": "#/$defs/ContentDisposition"
                },
                "ContentEncoding": {
                    "$ref": "#/$defs/ContentEncoding"
                },
                "ContentLanguage": {
                    "$ref": "#/$defs/ContentLanguage"
                },
                "ContentRange": {
                    "$ref": "#/$defs/ContentRange"
                },
                "ContentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "Expires": {
                    "$ref": "#/$defs/Expires"
                },
                "WebsiteRedirectLocation": {
                    "$ref": "#/$defs/WebsiteRedirectLocation"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "Metadata": {
                    "$ref": "#/$defs/Metadata"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                },
                "ReplicationStatus": {
                    "$ref": "#/$defs/ReplicationStatus"
                },
                "PartsCount": {
                    "$ref": "#/$defs/PartsCount"
                },
                "TagCount": {
                    "$ref": "#/$defs/TagCount"
                },
                "ObjectLockMode": {
                    "$ref": "#/$defs/ObjectLockMode"
                },
                "ObjectLockRetainUntilDate": {
                    "$ref": "#/$defs/ObjectLockRetainUntilDate"
                },
                "ObjectLockLegalHoldStatus": {
                    "$ref": "#/$defs/ObjectLockLegalHoldStatus"
                }
            }
        },
        "StreamingBlob": {
            "type": "string",
            "format": "binary"
        },
        "AcceptRanges": {
            "type": "string"
        },
        "Restore": {
            "type": "string"
        },
        "ContentLength": {
            "type": "integer",
            "format": "int64"
        },
        "MissingMeta": {
            "type": "integer",
            "format": "int32"
        },
        "ContentRange": {
            "type": "string"
        },
        "ReplicationStatus": {
            "enum": [
                "COMPLETE",
                "PENDING",
                "FAILED",
                "REPLICA",
                "COMPLETED"
            ]
        },
        "PartsCount": {
            "type": "integer",
            "format": "int32"
        },
        "TagCount": {
            "type": "integer",
            "format": "int32"
        },
        "GetObjectAclRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetObjectAclOutput": {
            "type": "object",
            "properties": {
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "Grants": {
                    "$ref": "#/$defs/Grants"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "GetObjectAttributesRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "MaxParts": {
                    "$ref": "#/$defs/MaxParts"
                },
                "PartNumberMarker": {
                    "$ref": "#/$defs/PartNumberMarker"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "ObjectAttributes": {
                    "$ref": "#/$defs/ObjectAttributesList"
                }
            }
        },
        "MaxParts": {
            "type": "integer",
            "format": "int32"
        },
        "PartNumberMarker": {
            "type": "string"
        },
        "ObjectAttributesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ObjectAttributes"
            }
        },
        "ObjectAttributes": {
            "enum": [
                "ETAG",
                "CHECKSUM",
                "OBJECT_PARTS",
                "STORAGE_CLASS",
                "OBJECT_SIZE"
            ]
        },
        "GetObjectAttributesOutput": {
            "type": "object",
            "properties": {
                "DeleteMarker": {
                    "$ref": "#/$defs/DeleteMarker"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModified"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                },
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "Checksum": {
                    "$ref": "#/$defs/Checksum"
                },
                "ObjectParts": {
                    "$ref": "#/$defs/GetObjectAttributesParts"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "ObjectSize": {
                    "$ref": "#/$defs/ObjectSize"
                }
            }
        },
        "Checksum": {
            "type": "object",
            "properties": {
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                }
            }
        },
        "GetObjectAttributesParts": {
            "type": "object",
            "properties": {
                "TotalPartsCount": {
                    "$ref": "#/$defs/PartsCount"
                },
                "PartNumberMarker": {
                    "$ref": "#/$defs/PartNumberMarker"
                },
                "NextPartNumberMarker": {
                    "$ref": "#/$defs/NextPartNumberMarker"
                },
                "MaxParts": {
                    "$ref": "#/$defs/MaxParts"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/IsTruncated"
                },
                "Parts": {
                    "$ref": "#/$defs/PartsList"
                }
            }
        },
        "NextPartNumberMarker": {
            "type": "string"
        },
        "IsTruncated": {
            "type": "boolean"
        },
        "PartsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ObjectPart"
            }
        },
        "ObjectPart": {
            "type": "object",
            "properties": {
                "PartNumber": {
                    "$ref": "#/$defs/PartNumber"
                },
                "Size": {
                    "$ref": "#/$defs/Size"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                }
            }
        },
        "ObjectSize": {
            "type": "integer",
            "format": "int64"
        },
        "GetObjectLegalHoldRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetObjectLegalHoldOutput": {
            "type": "object",
            "properties": {
                "LegalHold": {
                    "$ref": "#/$defs/ObjectLockLegalHold"
                }
            }
        },
        "ObjectLockLegalHold": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ObjectLockLegalHoldStatus"
                }
            }
        },
        "GetObjectLockConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetObjectLockConfigurationOutput": {
            "type": "object",
            "properties": {
                "ObjectLockConfiguration": {
                    "$ref": "#/$defs/ObjectLockConfiguration"
                }
            }
        },
        "ObjectLockConfiguration": {
            "type": "object",
            "properties": {
                "ObjectLockEnabled": {
                    "$ref": "#/$defs/ObjectLockEnabled"
                },
                "Rule": {
                    "$ref": "#/$defs/ObjectLockRule"
                }
            }
        },
        "ObjectLockEnabled": {
            "enum": [
                "Enabled"
            ]
        },
        "ObjectLockRule": {
            "type": "object",
            "properties": {
                "DefaultRetention": {
                    "$ref": "#/$defs/DefaultRetention"
                }
            }
        },
        "DefaultRetention": {
            "type": "object",
            "properties": {
                "Mode": {
                    "$ref": "#/$defs/ObjectLockRetentionMode"
                },
                "Days": {
                    "$ref": "#/$defs/Days"
                },
                "Years": {
                    "$ref": "#/$defs/Years"
                }
            }
        },
        "ObjectLockRetentionMode": {
            "enum": [
                "GOVERNANCE",
                "COMPLIANCE"
            ]
        },
        "Years": {
            "type": "integer",
            "format": "int32"
        },
        "GetObjectRetentionRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetObjectRetentionOutput": {
            "type": "object",
            "properties": {
                "Retention": {
                    "$ref": "#/$defs/ObjectLockRetention"
                }
            }
        },
        "ObjectLockRetention": {
            "type": "object",
            "properties": {
                "Mode": {
                    "$ref": "#/$defs/ObjectLockRetentionMode"
                },
                "RetainUntilDate": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "GetObjectTaggingRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                }
            }
        },
        "GetObjectTaggingOutput": {
            "type": "object",
            "properties": {
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "TagSet": {
                    "$ref": "#/$defs/TagSet"
                }
            }
        },
        "GetObjectTorrentRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetObjectTorrentOutput": {
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/$defs/StreamingBlob"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "GetPublicAccessBlockRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetPublicAccessBlockOutput": {
            "type": "object",
            "properties": {
                "PublicAccessBlockConfiguration": {
                    "$ref": "#/$defs/PublicAccessBlockConfiguration"
                }
            }
        },
        "PublicAccessBlockConfiguration": {
            "type": "object",
            "properties": {
                "BlockPublicAcls": {
                    "$ref": "#/$defs/Setting"
                },
                "IgnorePublicAcls": {
                    "$ref": "#/$defs/Setting"
                },
                "BlockPublicPolicy": {
                    "$ref": "#/$defs/Setting"
                },
                "RestrictPublicBuckets": {
                    "$ref": "#/$defs/Setting"
                }
            }
        },
        "Setting": {
            "type": "boolean"
        },
        "HeadBucketRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "HeadBucketOutput": {
            "type": "object",
            "properties": {
                "BucketLocationType": {
                    "$ref": "#/$defs/LocationType"
                },
                "BucketLocationName": {
                    "$ref": "#/$defs/BucketLocationName"
                },
                "BucketRegion": {
                    "$ref": "#/$defs/Region"
                },
                "AccessPointAlias": {
                    "$ref": "#/$defs/AccessPointAlias"
                }
            }
        },
        "BucketLocationName": {
            "type": "string"
        },
        "Region": {
            "type": "string"
        },
        "AccessPointAlias": {
            "type": "boolean"
        },
        "HeadObjectRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "IfMatch": {
                    "$ref": "#/$defs/IfMatch"
                },
                "IfModifiedSince": {
                    "$ref": "#/$defs/IfModifiedSince"
                },
                "IfNoneMatch": {
                    "$ref": "#/$defs/IfNoneMatch"
                },
                "IfUnmodifiedSince": {
                    "$ref": "#/$defs/IfUnmodifiedSince"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "Range": {
                    "$ref": "#/$defs/Range"
                },
                "ResponseCacheControl": {
                    "$ref": "#/$defs/ResponseCacheControl"
                },
                "ResponseContentDisposition": {
                    "$ref": "#/$defs/ResponseContentDisposition"
                },
                "ResponseContentEncoding": {
                    "$ref": "#/$defs/ResponseContentEncoding"
                },
                "ResponseContentLanguage": {
                    "$ref": "#/$defs/ResponseContentLanguage"
                },
                "ResponseContentType": {
                    "$ref": "#/$defs/ResponseContentType"
                },
                "ResponseExpires": {
                    "$ref": "#/$defs/ResponseExpires"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "PartNumber": {
                    "$ref": "#/$defs/PartNumber"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "ChecksumMode": {
                    "$ref": "#/$defs/ChecksumMode"
                }
            }
        },
        "HeadObjectOutput": {
            "type": "object",
            "properties": {
                "DeleteMarker": {
                    "$ref": "#/$defs/DeleteMarker"
                },
                "AcceptRanges": {
                    "$ref": "#/$defs/AcceptRanges"
                },
                "Expiration": {
                    "$ref": "#/$defs/Expiration"
                },
                "Restore": {
                    "$ref": "#/$defs/Restore"
                },
                "ArchiveStatus": {
                    "$ref": "#/$defs/ArchiveStatus"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModified"
                },
                "ContentLength": {
                    "$ref": "#/$defs/ContentLength"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                },
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "MissingMeta": {
                    "$ref": "#/$defs/MissingMeta"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "CacheControl": {
                    "$ref": "#/$defs/CacheControl"
                },
                "ContentDisposition": {
                    "$ref": "#/$defs/ContentDisposition"
                },
                "ContentEncoding": {
                    "$ref": "#/$defs/ContentEncoding"
                },
                "ContentLanguage": {
                    "$ref": "#/$defs/ContentLanguage"
                },
                "ContentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "ContentRange": {
                    "$ref": "#/$defs/ContentRange"
                },
                "Expires": {
                    "$ref": "#/$defs/Expires"
                },
                "WebsiteRedirectLocation": {
                    "$ref": "#/$defs/WebsiteRedirectLocation"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "Metadata": {
                    "$ref": "#/$defs/Metadata"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                },
                "ReplicationStatus": {
                    "$ref": "#/$defs/ReplicationStatus"
                },
                "PartsCount": {
                    "$ref": "#/$defs/PartsCount"
                },
                "ObjectLockMode": {
                    "$ref": "#/$defs/ObjectLockMode"
                },
                "ObjectLockRetainUntilDate": {
                    "$ref": "#/$defs/ObjectLockRetainUntilDate"
                },
                "ObjectLockLegalHoldStatus": {
                    "$ref": "#/$defs/ObjectLockLegalHoldStatus"
                }
            }
        },
        "ArchiveStatus": {
            "enum": [
                "ARCHIVE_ACCESS",
                "DEEP_ARCHIVE_ACCESS"
            ]
        },
        "ListBucketAnalyticsConfigurationsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "Token": {
            "type": "string"
        },
        "ListBucketAnalyticsConfigurationsOutput": {
            "type": "object",
            "properties": {
                "IsTruncated": {
                    "$ref": "#/$defs/IsTruncated"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                },
                "NextContinuationToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "AnalyticsConfigurationList": {
                    "$ref": "#/$defs/AnalyticsConfigurationList"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "AnalyticsConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnalyticsConfiguration"
            }
        },
        "ListBucketIntelligentTieringConfigurationsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListBucketIntelligentTieringConfigurationsOutput": {
            "type": "object",
            "properties": {
                "IsTruncated": {
                    "$ref": "#/$defs/IsTruncated"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                },
                "NextContinuationToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "IntelligentTieringConfigurationList": {
                    "$ref": "#/$defs/IntelligentTieringConfigurationList"
                }
            }
        },
        "IntelligentTieringConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IntelligentTieringConfiguration"
            }
        },
        "ListBucketInventoryConfigurationsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "ListBucketInventoryConfigurationsOutput": {
            "type": "object",
            "properties": {
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                },
                "InventoryConfigurationList": {
                    "$ref": "#/$defs/InventoryConfigurationList"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/IsTruncated"
                },
                "NextContinuationToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InventoryConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InventoryConfiguration"
            }
        },
        "ListBucketMetricsConfigurationsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "ListBucketMetricsConfigurationsOutput": {
            "type": "object",
            "properties": {
                "IsTruncated": {
                    "$ref": "#/$defs/IsTruncated"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                },
                "NextContinuationToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MetricsConfigurationList": {
                    "$ref": "#/$defs/MetricsConfigurationList"
                }
            }
        },
        "MetricsConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricsConfiguration"
            }
        },
        "ListBucketsRequest": {
            "type": "object",
            "properties": {
                "MaxBuckets": {
                    "$ref": "#/$defs/MaxBuckets"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "BucketRegion": {
                    "$ref": "#/$defs/BucketRegion"
                }
            }
        },
        "MaxBuckets": {
            "type": "integer",
            "format": "int32"
        },
        "BucketRegion": {
            "type": "string"
        },
        "ListBucketsOutput": {
            "type": "object",
            "properties": {
                "Buckets": {
                    "$ref": "#/$defs/Buckets"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                }
            }
        },
        "Buckets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Bucket"
            }
        },
        "Bucket": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/BucketName"
                },
                "CreationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "BucketRegion": {
                    "$ref": "#/$defs/BucketRegion"
                }
            }
        },
        "CreationDate": {
            "type": "string",
            "format": "date-time"
        },
        "ListDirectoryBucketsRequest": {
            "type": "object",
            "properties": {
                "ContinuationToken": {
                    "$ref": "#/$defs/DirectoryBucketToken"
                },
                "MaxDirectoryBuckets": {
                    "$ref": "#/$defs/MaxDirectoryBuckets"
                }
            }
        },
        "DirectoryBucketToken": {
            "type": "string"
        },
        "MaxDirectoryBuckets": {
            "type": "integer",
            "format": "int32"
        },
        "ListDirectoryBucketsOutput": {
            "type": "object",
            "properties": {
                "Buckets": {
                    "$ref": "#/$defs/Buckets"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/DirectoryBucketToken"
                }
            }
        },
        "ListMultipartUploadsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                },
                "EncodingType": {
                    "$ref": "#/$defs/EncodingType"
                },
                "KeyMarker": {
                    "$ref": "#/$defs/KeyMarker"
                },
                "MaxUploads": {
                    "$ref": "#/$defs/MaxUploads"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "UploadIdMarker": {
                    "$ref": "#/$defs/UploadIdMarker"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                }
            }
        },
        "Delimiter": {
            "type": "string"
        },
        "EncodingType": {
            "enum": [
                "url"
            ]
        },
        "KeyMarker": {
            "type": "string"
        },
        "MaxUploads": {
            "type": "integer",
            "format": "int32"
        },
        "UploadIdMarker": {
            "type": "string"
        },
        "ListMultipartUploadsOutput": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "KeyMarker": {
                    "$ref": "#/$defs/KeyMarker"
                },
                "UploadIdMarker": {
                    "$ref": "#/$defs/UploadIdMarker"
                },
                "NextKeyMarker": {
                    "$ref": "#/$defs/NextKeyMarker"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                },
                "NextUploadIdMarker": {
                    "$ref": "#/$defs/NextUploadIdMarker"
                },
                "MaxUploads": {
                    "$ref": "#/$defs/MaxUploads"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/IsTruncated"
                },
                "Uploads": {
                    "$ref": "#/$defs/MultipartUploadList"
                },
                "CommonPrefixes": {
                    "$ref": "#/$defs/CommonPrefixList"
                },
                "EncodingType": {
                    "$ref": "#/$defs/EncodingType"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "NextKeyMarker": {
            "type": "string"
        },
        "NextUploadIdMarker": {
            "type": "string"
        },
        "MultipartUploadList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MultipartUpload"
            }
        },
        "MultipartUpload": {
            "type": "object",
            "properties": {
                "UploadId": {
                    "$ref": "#/$defs/MultipartUploadId"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "Initiated": {
                    "$ref": "#/$defs/Initiated"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "Initiator": {
                    "$ref": "#/$defs/Initiator"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                }
            }
        },
        "Initiated": {
            "type": "string",
            "format": "date-time"
        },
        "Initiator": {
            "type": "object",
            "properties": {
                "ID": {
                    "$ref": "#/$defs/ID"
                },
                "DisplayName": {
                    "$ref": "#/$defs/DisplayName"
                }
            }
        },
        "CommonPrefixList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CommonPrefix"
            }
        },
        "CommonPrefix": {
            "type": "object",
            "properties": {
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                }
            }
        },
        "ListObjectsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                },
                "EncodingType": {
                    "$ref": "#/$defs/EncodingType"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "MaxKeys": {
                    "$ref": "#/$defs/MaxKeys"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "OptionalObjectAttributes": {
                    "$ref": "#/$defs/OptionalObjectAttributesList"
                }
            }
        },
        "Marker": {
            "type": "string"
        },
        "MaxKeys": {
            "type": "integer",
            "format": "int32"
        },
        "OptionalObjectAttributesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OptionalObjectAttributes"
            }
        },
        "OptionalObjectAttributes": {
            "enum": [
                "RESTORE_STATUS"
            ]
        },
        "ListObjectsOutput": {
            "type": "object",
            "properties": {
                "IsTruncated": {
                    "$ref": "#/$defs/IsTruncated"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "NextMarker": {
                    "$ref": "#/$defs/NextMarker"
                },
                "Contents": {
                    "$ref": "#/$defs/ObjectList"
                },
                "Name": {
                    "$ref": "#/$defs/BucketName"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                },
                "MaxKeys": {
                    "$ref": "#/$defs/MaxKeys"
                },
                "CommonPrefixes": {
                    "$ref": "#/$defs/CommonPrefixList"
                },
                "EncodingType": {
                    "$ref": "#/$defs/EncodingType"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "NextMarker": {
            "type": "string"
        },
        "ObjectList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Object"
            }
        },
        "Object": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModified"
                },
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithmList"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                },
                "Size": {
                    "$ref": "#/$defs/Size"
                },
                "StorageClass": {
                    "$ref": "#/$defs/ObjectStorageClass"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "RestoreStatus": {
                    "$ref": "#/$defs/RestoreStatus"
                }
            }
        },
        "ChecksumAlgorithmList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChecksumAlgorithm"
            }
        },
        "ObjectStorageClass": {
            "enum": [
                "STANDARD",
                "REDUCED_REDUNDANCY",
                "GLACIER",
                "STANDARD_IA",
                "ONEZONE_IA",
                "INTELLIGENT_TIERING",
                "DEEP_ARCHIVE",
                "OUTPOSTS",
                "GLACIER_IR",
                "SNOW",
                "EXPRESS_ONEZONE"
            ]
        },
        "RestoreStatus": {
            "type": "object",
            "properties": {
                "IsRestoreInProgress": {
                    "$ref": "#/$defs/IsRestoreInProgress"
                },
                "RestoreExpiryDate": {
                    "$ref": "#/$defs/RestoreExpiryDate"
                }
            }
        },
        "IsRestoreInProgress": {
            "type": "boolean"
        },
        "RestoreExpiryDate": {
            "type": "string",
            "format": "date-time"
        },
        "ListObjectsV2Request": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                },
                "EncodingType": {
                    "$ref": "#/$defs/EncodingType"
                },
                "MaxKeys": {
                    "$ref": "#/$defs/MaxKeys"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                },
                "FetchOwner": {
                    "$ref": "#/$defs/FetchOwner"
                },
                "StartAfter": {
                    "$ref": "#/$defs/StartAfter"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "OptionalObjectAttributes": {
                    "$ref": "#/$defs/OptionalObjectAttributesList"
                }
            }
        },
        "FetchOwner": {
            "type": "boolean"
        },
        "StartAfter": {
            "type": "string"
        },
        "ListObjectsV2Output": {
            "type": "object",
            "properties": {
                "IsTruncated": {
                    "$ref": "#/$defs/IsTruncated"
                },
                "Contents": {
                    "$ref": "#/$defs/ObjectList"
                },
                "Name": {
                    "$ref": "#/$defs/BucketName"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                },
                "MaxKeys": {
                    "$ref": "#/$defs/MaxKeys"
                },
                "CommonPrefixes": {
                    "$ref": "#/$defs/CommonPrefixList"
                },
                "EncodingType": {
                    "$ref": "#/$defs/EncodingType"
                },
                "KeyCount": {
                    "$ref": "#/$defs/KeyCount"
                },
                "ContinuationToken": {
                    "$ref": "#/$defs/Token"
                },
                "NextContinuationToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "StartAfter": {
                    "$ref": "#/$defs/StartAfter"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "KeyCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListObjectVersionsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                },
                "EncodingType": {
                    "$ref": "#/$defs/EncodingType"
                },
                "KeyMarker": {
                    "$ref": "#/$defs/KeyMarker"
                },
                "MaxKeys": {
                    "$ref": "#/$defs/MaxKeys"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "VersionIdMarker": {
                    "$ref": "#/$defs/VersionIdMarker"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "OptionalObjectAttributes": {
                    "$ref": "#/$defs/OptionalObjectAttributesList"
                }
            }
        },
        "VersionIdMarker": {
            "type": "string"
        },
        "ListObjectVersionsOutput": {
            "type": "object",
            "properties": {
                "IsTruncated": {
                    "$ref": "#/$defs/IsTruncated"
                },
                "KeyMarker": {
                    "$ref": "#/$defs/KeyMarker"
                },
                "VersionIdMarker": {
                    "$ref": "#/$defs/VersionIdMarker"
                },
                "NextKeyMarker": {
                    "$ref": "#/$defs/NextKeyMarker"
                },
                "NextVersionIdMarker": {
                    "$ref": "#/$defs/NextVersionIdMarker"
                },
                "Versions": {
                    "$ref": "#/$defs/ObjectVersionList"
                },
                "DeleteMarkers": {
                    "$ref": "#/$defs/DeleteMarkers"
                },
                "Name": {
                    "$ref": "#/$defs/BucketName"
                },
                "Prefix": {
                    "$ref": "#/$defs/Prefix"
                },
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                },
                "MaxKeys": {
                    "$ref": "#/$defs/MaxKeys"
                },
                "CommonPrefixes": {
                    "$ref": "#/$defs/CommonPrefixList"
                },
                "EncodingType": {
                    "$ref": "#/$defs/EncodingType"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "NextVersionIdMarker": {
            "type": "string"
        },
        "ObjectVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ObjectVersion"
            }
        },
        "ObjectVersion": {
            "type": "object",
            "properties": {
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithmList"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                },
                "Size": {
                    "$ref": "#/$defs/Size"
                },
                "StorageClass": {
                    "$ref": "#/$defs/ObjectVersionStorageClass"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "IsLatest": {
                    "$ref": "#/$defs/IsLatest"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModified"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "RestoreStatus": {
                    "$ref": "#/$defs/RestoreStatus"
                }
            }
        },
        "ObjectVersionStorageClass": {
            "enum": [
                "STANDARD"
            ]
        },
        "IsLatest": {
            "type": "boolean"
        },
        "DeleteMarkers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeleteMarkerEntry"
            }
        },
        "DeleteMarkerEntry": {
            "type": "object",
            "properties": {
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "IsLatest": {
                    "$ref": "#/$defs/IsLatest"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModified"
                }
            }
        },
        "ListPartsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "MaxParts": {
                    "$ref": "#/$defs/MaxParts"
                },
                "PartNumberMarker": {
                    "$ref": "#/$defs/PartNumberMarker"
                },
                "UploadId": {
                    "$ref": "#/$defs/MultipartUploadId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                }
            }
        },
        "ListPartsOutput": {
            "type": "object",
            "properties": {
                "AbortDate": {
                    "$ref": "#/$defs/AbortDate"
                },
                "AbortRuleId": {
                    "$ref": "#/$defs/AbortRuleId"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "UploadId": {
                    "$ref": "#/$defs/MultipartUploadId"
                },
                "PartNumberMarker": {
                    "$ref": "#/$defs/PartNumberMarker"
                },
                "NextPartNumberMarker": {
                    "$ref": "#/$defs/NextPartNumberMarker"
                },
                "MaxParts": {
                    "$ref": "#/$defs/MaxParts"
                },
                "IsTruncated": {
                    "$ref": "#/$defs/IsTruncated"
                },
                "Parts": {
                    "$ref": "#/$defs/Parts"
                },
                "Initiator": {
                    "$ref": "#/$defs/Initiator"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                }
            }
        },
        "Parts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Part"
            }
        },
        "Part": {
            "type": "object",
            "properties": {
                "PartNumber": {
                    "$ref": "#/$defs/PartNumber"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModified"
                },
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "Size": {
                    "$ref": "#/$defs/Size"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                }
            }
        },
        "PutBucketAccelerateConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "AccelerateConfiguration": {
                    "$ref": "#/$defs/AccelerateConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                }
            }
        },
        "AccelerateConfiguration": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/BucketAccelerateStatus"
                }
            }
        },
        "PutBucketAclRequest": {
            "type": "object",
            "properties": {
                "ACL": {
                    "$ref": "#/$defs/BucketCannedACL"
                },
                "AccessControlPolicy": {
                    "$ref": "#/$defs/AccessControlPolicy"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "GrantFullControl": {
                    "$ref": "#/$defs/GrantFullControl"
                },
                "GrantRead": {
                    "$ref": "#/$defs/GrantRead"
                },
                "GrantReadACP": {
                    "$ref": "#/$defs/GrantReadACP"
                },
                "GrantWrite": {
                    "$ref": "#/$defs/GrantWrite"
                },
                "GrantWriteACP": {
                    "$ref": "#/$defs/GrantWriteACP"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "AccessControlPolicy": {
            "type": "object",
            "properties": {
                "Grants": {
                    "$ref": "#/$defs/Grants"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                }
            }
        },
        "PutBucketAnalyticsConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/AnalyticsId"
                },
                "AnalyticsConfiguration": {
                    "$ref": "#/$defs/AnalyticsConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "PutBucketCorsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "CORSConfiguration": {
                    "$ref": "#/$defs/CORSConfiguration"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "CORSConfiguration": {
            "type": "object",
            "properties": {
                "CORSRules": {
                    "$ref": "#/$defs/CORSRules"
                }
            }
        },
        "PutBucketEncryptionRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ServerSideEncryptionConfiguration": {
                    "$ref": "#/$defs/ServerSideEncryptionConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "PutBucketIntelligentTieringConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/IntelligentTieringId"
                },
                "IntelligentTieringConfiguration": {
                    "$ref": "#/$defs/IntelligentTieringConfiguration"
                }
            }
        },
        "PutBucketInventoryConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/InventoryId"
                },
                "InventoryConfiguration": {
                    "$ref": "#/$defs/InventoryConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "PutBucketLifecycleConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "LifecycleConfiguration": {
                    "$ref": "#/$defs/BucketLifecycleConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "TransitionDefaultMinimumObjectSize": {
                    "$ref": "#/$defs/TransitionDefaultMinimumObjectSize"
                }
            }
        },
        "BucketLifecycleConfiguration": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/LifecycleRules"
                }
            }
        },
        "PutBucketLifecycleConfigurationOutput": {
            "type": "object",
            "properties": {
                "TransitionDefaultMinimumObjectSize": {
                    "$ref": "#/$defs/TransitionDefaultMinimumObjectSize"
                }
            }
        },
        "PutBucketLoggingRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "BucketLoggingStatus": {
                    "$ref": "#/$defs/BucketLoggingStatus"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "BucketLoggingStatus": {
            "type": "object",
            "properties": {
                "LoggingEnabled": {
                    "$ref": "#/$defs/LoggingEnabled"
                }
            }
        },
        "PutBucketMetricsConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Id": {
                    "$ref": "#/$defs/MetricsId"
                },
                "MetricsConfiguration": {
                    "$ref": "#/$defs/MetricsConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "PutBucketNotificationConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "NotificationConfiguration": {
                    "$ref": "#/$defs/NotificationConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "SkipDestinationValidation": {
                    "$ref": "#/$defs/SkipValidation"
                }
            }
        },
        "SkipValidation": {
            "type": "boolean"
        },
        "PutBucketOwnershipControlsRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "OwnershipControls": {
                    "$ref": "#/$defs/OwnershipControls"
                }
            }
        },
        "PutBucketPolicyRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ConfirmRemoveSelfBucketAccess": {
                    "$ref": "#/$defs/ConfirmRemoveSelfBucketAccess"
                },
                "Policy": {
                    "$ref": "#/$defs/Policy"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "ConfirmRemoveSelfBucketAccess": {
            "type": "boolean"
        },
        "PutBucketReplicationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ReplicationConfiguration": {
                    "$ref": "#/$defs/ReplicationConfiguration"
                },
                "Token": {
                    "$ref": "#/$defs/ObjectLockToken"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "ObjectLockToken": {
            "type": "string"
        },
        "PutBucketRequestPaymentRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "RequestPaymentConfiguration": {
                    "$ref": "#/$defs/RequestPaymentConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "RequestPaymentConfiguration": {
            "type": "object",
            "properties": {
                "Payer": {
                    "$ref": "#/$defs/Payer"
                }
            }
        },
        "PutBucketTaggingRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "Tagging": {
                    "$ref": "#/$defs/Tagging"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "Tagging": {
            "type": "object",
            "properties": {
                "TagSet": {
                    "$ref": "#/$defs/TagSet"
                }
            }
        },
        "PutBucketVersioningRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "MFA": {
                    "$ref": "#/$defs/MFA"
                },
                "VersioningConfiguration": {
                    "$ref": "#/$defs/VersioningConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "VersioningConfiguration": {
            "type": "object",
            "properties": {
                "MFADelete": {
                    "$ref": "#/$defs/MFADelete"
                },
                "Status": {
                    "$ref": "#/$defs/BucketVersioningStatus"
                }
            }
        },
        "MFADelete": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "PutBucketWebsiteRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "WebsiteConfiguration": {
                    "$ref": "#/$defs/WebsiteConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "WebsiteConfiguration": {
            "type": "object",
            "properties": {
                "ErrorDocument": {
                    "$ref": "#/$defs/ErrorDocument"
                },
                "IndexDocument": {
                    "$ref": "#/$defs/IndexDocument"
                },
                "RedirectAllRequestsTo": {
                    "$ref": "#/$defs/RedirectAllRequestsTo"
                },
                "RoutingRules": {
                    "$ref": "#/$defs/RoutingRules"
                }
            }
        },
        "PutObjectRequest": {
            "type": "object",
            "properties": {
                "ACL": {
                    "$ref": "#/$defs/ObjectCannedACL"
                },
                "Body": {
                    "$ref": "#/$defs/StreamingBlob"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "CacheControl": {
                    "$ref": "#/$defs/CacheControl"
                },
                "ContentDisposition": {
                    "$ref": "#/$defs/ContentDisposition"
                },
                "ContentEncoding": {
                    "$ref": "#/$defs/ContentEncoding"
                },
                "ContentLanguage": {
                    "$ref": "#/$defs/ContentLanguage"
                },
                "ContentLength": {
                    "$ref": "#/$defs/ContentLength"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ContentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "Expires": {
                    "$ref": "#/$defs/Expires"
                },
                "IfMatch": {
                    "$ref": "#/$defs/IfMatch"
                },
                "IfNoneMatch": {
                    "$ref": "#/$defs/IfNoneMatch"
                },
                "GrantFullControl": {
                    "$ref": "#/$defs/GrantFullControl"
                },
                "GrantRead": {
                    "$ref": "#/$defs/GrantRead"
                },
                "GrantReadACP": {
                    "$ref": "#/$defs/GrantReadACP"
                },
                "GrantWriteACP": {
                    "$ref": "#/$defs/GrantWriteACP"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "WriteOffsetBytes": {
                    "$ref": "#/$defs/WriteOffsetBytes"
                },
                "Metadata": {
                    "$ref": "#/$defs/Metadata"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "WebsiteRedirectLocation": {
                    "$ref": "#/$defs/WebsiteRedirectLocation"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "SSEKMSEncryptionContext": {
                    "$ref": "#/$defs/SSEKMSEncryptionContext"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "Tagging": {
                    "$ref": "#/$defs/TaggingHeader"
                },
                "ObjectLockMode": {
                    "$ref": "#/$defs/ObjectLockMode"
                },
                "ObjectLockRetainUntilDate": {
                    "$ref": "#/$defs/ObjectLockRetainUntilDate"
                },
                "ObjectLockLegalHoldStatus": {
                    "$ref": "#/$defs/ObjectLockLegalHoldStatus"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "WriteOffsetBytes": {
            "type": "integer",
            "format": "int64"
        },
        "PutObjectOutput": {
            "type": "object",
            "properties": {
                "Expiration": {
                    "$ref": "#/$defs/Expiration"
                },
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "ChecksumType": {
                    "$ref": "#/$defs/ChecksumType"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "SSEKMSEncryptionContext": {
                    "$ref": "#/$defs/SSEKMSEncryptionContext"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "Size": {
                    "$ref": "#/$defs/Size"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "PutObjectAclRequest": {
            "type": "object",
            "properties": {
                "ACL": {
                    "$ref": "#/$defs/ObjectCannedACL"
                },
                "AccessControlPolicy": {
                    "$ref": "#/$defs/AccessControlPolicy"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "GrantFullControl": {
                    "$ref": "#/$defs/GrantFullControl"
                },
                "GrantRead": {
                    "$ref": "#/$defs/GrantRead"
                },
                "GrantReadACP": {
                    "$ref": "#/$defs/GrantReadACP"
                },
                "GrantWrite": {
                    "$ref": "#/$defs/GrantWrite"
                },
                "GrantWriteACP": {
                    "$ref": "#/$defs/GrantWriteACP"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "PutObjectAclOutput": {
            "type": "object",
            "properties": {
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "PutObjectLegalHoldRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "LegalHold": {
                    "$ref": "#/$defs/ObjectLockLegalHold"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "PutObjectLegalHoldOutput": {
            "type": "object",
            "properties": {
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "PutObjectLockConfigurationRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ObjectLockConfiguration": {
                    "$ref": "#/$defs/ObjectLockConfiguration"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "Token": {
                    "$ref": "#/$defs/ObjectLockToken"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "PutObjectLockConfigurationOutput": {
            "type": "object",
            "properties": {
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "PutObjectRetentionRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "Retention": {
                    "$ref": "#/$defs/ObjectLockRetention"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "BypassGovernanceRetention": {
                    "$ref": "#/$defs/BypassGovernanceRetention"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "PutObjectRetentionOutput": {
            "type": "object",
            "properties": {
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "PutObjectTaggingRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "Tagging": {
                    "$ref": "#/$defs/Tagging"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                }
            }
        },
        "PutObjectTaggingOutput": {
            "type": "object",
            "properties": {
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                }
            }
        },
        "PutPublicAccessBlockRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "PublicAccessBlockConfiguration": {
                    "$ref": "#/$defs/PublicAccessBlockConfiguration"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "RestoreObjectRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "RestoreRequest": {
                    "$ref": "#/$defs/RestoreRequest"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "RestoreRequest": {
            "type": "object",
            "properties": {
                "Days": {
                    "$ref": "#/$defs/Days"
                },
                "GlacierJobParameters": {
                    "$ref": "#/$defs/GlacierJobParameters"
                },
                "Type": {
                    "$ref": "#/$defs/RestoreRequestType"
                },
                "Tier": {
                    "$ref": "#/$defs/Tier"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "SelectParameters": {
                    "$ref": "#/$defs/SelectParameters"
                },
                "OutputLocation": {
                    "$ref": "#/$defs/OutputLocation"
                }
            }
        },
        "GlacierJobParameters": {
            "type": "object",
            "properties": {
                "Tier": {
                    "$ref": "#/$defs/Tier"
                }
            }
        },
        "Tier": {
            "enum": [
                "Standard",
                "Bulk",
                "Expedited"
            ]
        },
        "RestoreRequestType": {
            "enum": [
                "SELECT"
            ]
        },
        "Description": {
            "type": "string"
        },
        "SelectParameters": {
            "type": "object",
            "properties": {
                "InputSerialization": {
                    "$ref": "#/$defs/InputSerialization"
                },
                "ExpressionType": {
                    "$ref": "#/$defs/ExpressionType"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                },
                "OutputSerialization": {
                    "$ref": "#/$defs/OutputSerialization"
                }
            }
        },
        "InputSerialization": {
            "type": "object",
            "properties": {
                "CSV": {
                    "$ref": "#/$defs/CSVInput"
                },
                "CompressionType": {
                    "$ref": "#/$defs/CompressionType"
                },
                "JSON": {
                    "$ref": "#/$defs/JSONInput"
                },
                "Parquet": {
                    "$ref": "#/$defs/ParquetInput"
                }
            }
        },
        "CSVInput": {
            "type": "object",
            "properties": {
                "FileHeaderInfo": {
                    "$ref": "#/$defs/FileHeaderInfo"
                },
                "Comments": {
                    "$ref": "#/$defs/Comments"
                },
                "QuoteEscapeCharacter": {
                    "$ref": "#/$defs/QuoteEscapeCharacter"
                },
                "RecordDelimiter": {
                    "$ref": "#/$defs/RecordDelimiter"
                },
                "FieldDelimiter": {
                    "$ref": "#/$defs/FieldDelimiter"
                },
                "QuoteCharacter": {
                    "$ref": "#/$defs/QuoteCharacter"
                },
                "AllowQuotedRecordDelimiter": {
                    "$ref": "#/$defs/AllowQuotedRecordDelimiter"
                }
            }
        },
        "FileHeaderInfo": {
            "enum": [
                "USE",
                "IGNORE",
                "NONE"
            ]
        },
        "Comments": {
            "type": "string"
        },
        "QuoteEscapeCharacter": {
            "type": "string"
        },
        "RecordDelimiter": {
            "type": "string"
        },
        "FieldDelimiter": {
            "type": "string"
        },
        "QuoteCharacter": {
            "type": "string"
        },
        "AllowQuotedRecordDelimiter": {
            "type": "boolean"
        },
        "CompressionType": {
            "enum": [
                "NONE",
                "GZIP",
                "BZIP2"
            ]
        },
        "JSONInput": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/JSONType"
                }
            }
        },
        "JSONType": {
            "enum": [
                "DOCUMENT",
                "LINES"
            ]
        },
        "ParquetInput": {
            "type": "object",
            "properties": {}
        },
        "ExpressionType": {
            "enum": [
                "SQL"
            ]
        },
        "Expression": {
            "type": "string"
        },
        "OutputSerialization": {
            "type": "object",
            "properties": {
                "CSV": {
                    "$ref": "#/$defs/CSVOutput"
                },
                "JSON": {
                    "$ref": "#/$defs/JSONOutput"
                }
            }
        },
        "CSVOutput": {
            "type": "object",
            "properties": {
                "QuoteFields": {
                    "$ref": "#/$defs/QuoteFields"
                },
                "QuoteEscapeCharacter": {
                    "$ref": "#/$defs/QuoteEscapeCharacter"
                },
                "RecordDelimiter": {
                    "$ref": "#/$defs/RecordDelimiter"
                },
                "FieldDelimiter": {
                    "$ref": "#/$defs/FieldDelimiter"
                },
                "QuoteCharacter": {
                    "$ref": "#/$defs/QuoteCharacter"
                }
            }
        },
        "QuoteFields": {
            "enum": [
                "ALWAYS",
                "ASNEEDED"
            ]
        },
        "JSONOutput": {
            "type": "object",
            "properties": {
                "RecordDelimiter": {
                    "$ref": "#/$defs/RecordDelimiter"
                }
            }
        },
        "OutputLocation": {
            "type": "object",
            "properties": {
                "S3": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "S3Location": {
            "type": "object",
            "properties": {
                "BucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "Prefix": {
                    "$ref": "#/$defs/LocationPrefix"
                },
                "Encryption": {
                    "$ref": "#/$defs/Encryption"
                },
                "CannedACL": {
                    "$ref": "#/$defs/ObjectCannedACL"
                },
                "AccessControlList": {
                    "$ref": "#/$defs/Grants"
                },
                "Tagging": {
                    "$ref": "#/$defs/Tagging"
                },
                "UserMetadata": {
                    "$ref": "#/$defs/UserMetadata"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                }
            }
        },
        "LocationPrefix": {
            "type": "string"
        },
        "Encryption": {
            "type": "object",
            "properties": {
                "EncryptionType": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "KMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "KMSContext": {
                    "$ref": "#/$defs/KMSContext"
                }
            }
        },
        "KMSContext": {
            "type": "string"
        },
        "UserMetadata": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetadataEntry"
            }
        },
        "MetadataEntry": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/MetadataKey"
                },
                "Value": {
                    "$ref": "#/$defs/MetadataValue"
                }
            }
        },
        "MetadataKey": {
            "type": "string"
        },
        "RestoreObjectOutput": {
            "type": "object",
            "properties": {
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                },
                "RestoreOutputPath": {
                    "$ref": "#/$defs/RestoreOutputPath"
                }
            }
        },
        "RestoreOutputPath": {
            "type": "string"
        },
        "SelectObjectContentRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                },
                "ExpressionType": {
                    "$ref": "#/$defs/ExpressionType"
                },
                "RequestProgress": {
                    "$ref": "#/$defs/RequestProgress"
                },
                "InputSerialization": {
                    "$ref": "#/$defs/InputSerialization"
                },
                "OutputSerialization": {
                    "$ref": "#/$defs/OutputSerialization"
                },
                "ScanRange": {
                    "$ref": "#/$defs/ScanRange"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "RequestProgress": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/EnableRequestProgress"
                }
            }
        },
        "EnableRequestProgress": {
            "type": "boolean"
        },
        "ScanRange": {
            "type": "object",
            "properties": {
                "Start": {
                    "$ref": "#/$defs/Start"
                },
                "End": {
                    "$ref": "#/$defs/End"
                }
            }
        },
        "Start": {
            "type": "integer",
            "format": "int64"
        },
        "End": {
            "type": "integer",
            "format": "int64"
        },
        "SelectObjectContentOutput": {
            "type": "object",
            "properties": {
                "Payload": {
                    "$ref": "#/$defs/SelectObjectContentEventStream"
                }
            }
        },
        "SelectObjectContentEventStream": {
            "type": "object",
            "properties": {
                "Records": {
                    "$ref": "#/$defs/RecordsEvent"
                },
                "Stats": {
                    "$ref": "#/$defs/StatsEvent"
                },
                "Progress": {
                    "$ref": "#/$defs/ProgressEvent"
                },
                "Cont": {
                    "$ref": "#/$defs/ContinuationEvent"
                },
                "End": {
                    "$ref": "#/$defs/EndEvent"
                }
            }
        },
        "RecordsEvent": {
            "type": "object",
            "properties": {
                "Payload": {
                    "$ref": "#/$defs/Body"
                }
            }
        },
        "Body": {
            "type": "string",
            "format": "binary"
        },
        "StatsEvent": {
            "type": "object",
            "properties": {
                "Details": {
                    "$ref": "#/$defs/Stats"
                }
            }
        },
        "Stats": {
            "type": "object",
            "properties": {
                "BytesScanned": {
                    "$ref": "#/$defs/BytesScanned"
                },
                "BytesProcessed": {
                    "$ref": "#/$defs/BytesProcessed"
                },
                "BytesReturned": {
                    "$ref": "#/$defs/BytesReturned"
                }
            }
        },
        "BytesScanned": {
            "type": "integer",
            "format": "int64"
        },
        "BytesProcessed": {
            "type": "integer",
            "format": "int64"
        },
        "BytesReturned": {
            "type": "integer",
            "format": "int64"
        },
        "ProgressEvent": {
            "type": "object",
            "properties": {
                "Details": {
                    "$ref": "#/$defs/Progress"
                }
            }
        },
        "Progress": {
            "type": "object",
            "properties": {
                "BytesScanned": {
                    "$ref": "#/$defs/BytesScanned"
                },
                "BytesProcessed": {
                    "$ref": "#/$defs/BytesProcessed"
                },
                "BytesReturned": {
                    "$ref": "#/$defs/BytesReturned"
                }
            }
        },
        "ContinuationEvent": {
            "type": "object",
            "properties": {}
        },
        "EndEvent": {
            "type": "object",
            "properties": {}
        },
        "UploadPartRequest": {
            "type": "object",
            "properties": {
                "Body": {
                    "$ref": "#/$defs/StreamingBlob"
                },
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "ContentLength": {
                    "$ref": "#/$defs/ContentLength"
                },
                "ContentMD5": {
                    "$ref": "#/$defs/ContentMD5"
                },
                "ChecksumAlgorithm": {
                    "$ref": "#/$defs/ChecksumAlgorithm"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "PartNumber": {
                    "$ref": "#/$defs/PartNumber"
                },
                "UploadId": {
                    "$ref": "#/$defs/MultipartUploadId"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "UploadPartOutput": {
            "type": "object",
            "properties": {
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "UploadPartCopyRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "CopySource": {
                    "$ref": "#/$defs/CopySource"
                },
                "CopySourceIfMatch": {
                    "$ref": "#/$defs/CopySourceIfMatch"
                },
                "CopySourceIfModifiedSince": {
                    "$ref": "#/$defs/CopySourceIfModifiedSince"
                },
                "CopySourceIfNoneMatch": {
                    "$ref": "#/$defs/CopySourceIfNoneMatch"
                },
                "CopySourceIfUnmodifiedSince": {
                    "$ref": "#/$defs/CopySourceIfUnmodifiedSince"
                },
                "CopySourceRange": {
                    "$ref": "#/$defs/CopySourceRange"
                },
                "Key": {
                    "$ref": "#/$defs/ObjectKey"
                },
                "PartNumber": {
                    "$ref": "#/$defs/PartNumber"
                },
                "UploadId": {
                    "$ref": "#/$defs/MultipartUploadId"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKey": {
                    "$ref": "#/$defs/SSECustomerKey"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "CopySourceSSECustomerAlgorithm": {
                    "$ref": "#/$defs/CopySourceSSECustomerAlgorithm"
                },
                "CopySourceSSECustomerKey": {
                    "$ref": "#/$defs/CopySourceSSECustomerKey"
                },
                "CopySourceSSECustomerKeyMD5": {
                    "$ref": "#/$defs/CopySourceSSECustomerKeyMD5"
                },
                "RequestPayer": {
                    "$ref": "#/$defs/RequestPayer"
                },
                "ExpectedBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                },
                "ExpectedSourceBucketOwner": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "CopySourceRange": {
            "type": "string"
        },
        "UploadPartCopyOutput": {
            "type": "object",
            "properties": {
                "CopySourceVersionId": {
                    "$ref": "#/$defs/CopySourceVersionId"
                },
                "CopyPartResult": {
                    "$ref": "#/$defs/CopyPartResult"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                }
            }
        },
        "CopyPartResult": {
            "type": "object",
            "properties": {
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModified"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                }
            }
        },
        "WriteGetObjectResponseRequest": {
            "type": "object",
            "properties": {
                "RequestRoute": {
                    "$ref": "#/$defs/RequestRoute"
                },
                "RequestToken": {
                    "$ref": "#/$defs/RequestToken"
                },
                "Body": {
                    "$ref": "#/$defs/StreamingBlob"
                },
                "StatusCode": {
                    "$ref": "#/$defs/GetObjectResponseStatusCode"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "AcceptRanges": {
                    "$ref": "#/$defs/AcceptRanges"
                },
                "CacheControl": {
                    "$ref": "#/$defs/CacheControl"
                },
                "ContentDisposition": {
                    "$ref": "#/$defs/ContentDisposition"
                },
                "ContentEncoding": {
                    "$ref": "#/$defs/ContentEncoding"
                },
                "ContentLanguage": {
                    "$ref": "#/$defs/ContentLanguage"
                },
                "ContentLength": {
                    "$ref": "#/$defs/ContentLength"
                },
                "ContentRange": {
                    "$ref": "#/$defs/ContentRange"
                },
                "ContentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "ChecksumCRC32": {
                    "$ref": "#/$defs/ChecksumCRC32"
                },
                "ChecksumCRC32C": {
                    "$ref": "#/$defs/ChecksumCRC32C"
                },
                "ChecksumCRC64NVME": {
                    "$ref": "#/$defs/ChecksumCRC64NVME"
                },
                "ChecksumSHA1": {
                    "$ref": "#/$defs/ChecksumSHA1"
                },
                "ChecksumSHA256": {
                    "$ref": "#/$defs/ChecksumSHA256"
                },
                "DeleteMarker": {
                    "$ref": "#/$defs/DeleteMarker"
                },
                "ETag": {
                    "$ref": "#/$defs/ETag"
                },
                "Expires": {
                    "$ref": "#/$defs/Expires"
                },
                "Expiration": {
                    "$ref": "#/$defs/Expiration"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModified"
                },
                "MissingMeta": {
                    "$ref": "#/$defs/MissingMeta"
                },
                "Metadata": {
                    "$ref": "#/$defs/Metadata"
                },
                "ObjectLockMode": {
                    "$ref": "#/$defs/ObjectLockMode"
                },
                "ObjectLockLegalHoldStatus": {
                    "$ref": "#/$defs/ObjectLockLegalHoldStatus"
                },
                "ObjectLockRetainUntilDate": {
                    "$ref": "#/$defs/ObjectLockRetainUntilDate"
                },
                "PartsCount": {
                    "$ref": "#/$defs/PartsCount"
                },
                "ReplicationStatus": {
                    "$ref": "#/$defs/ReplicationStatus"
                },
                "RequestCharged": {
                    "$ref": "#/$defs/RequestCharged"
                },
                "Restore": {
                    "$ref": "#/$defs/Restore"
                },
                "ServerSideEncryption": {
                    "$ref": "#/$defs/ServerSideEncryption"
                },
                "SSECustomerAlgorithm": {
                    "$ref": "#/$defs/SSECustomerAlgorithm"
                },
                "SSEKMSKeyId": {
                    "$ref": "#/$defs/SSEKMSKeyId"
                },
                "SSECustomerKeyMD5": {
                    "$ref": "#/$defs/SSECustomerKeyMD5"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "TagCount": {
                    "$ref": "#/$defs/TagCount"
                },
                "VersionId": {
                    "$ref": "#/$defs/ObjectVersionId"
                },
                "BucketKeyEnabled": {
                    "$ref": "#/$defs/BucketKeyEnabled"
                }
            }
        },
        "RequestRoute": {
            "type": "string"
        },
        "RequestToken": {
            "type": "string"
        },
        "GetObjectResponseStatusCode": {
            "type": "integer",
            "format": "int32"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Bucket": {
                    "required": false,
                    "documentation": "The S3 bucket used to send the request. This is an optional parameter that will be set automatically for operations that are scoped to an S3 bucket.",
                    "type": "String"
                },
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                },
                "ForcePathStyle": {
                    "builtIn": "AWS::S3::ForcePathStyle",
                    "required": true,
                    "default": false,
                    "documentation": "When true, force a path-style endpoint to be used where the bucket name is part of the path.",
                    "type": "Boolean"
                },
                "Accelerate": {
                    "builtIn": "AWS::S3::Accelerate",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use S3 Accelerate. NOTE: Not all regions support S3 accelerate.",
                    "type": "Boolean"
                },
                "UseGlobalEndpoint": {
                    "builtIn": "AWS::S3::UseGlobalEndpoint",
                    "required": true,
                    "default": false,
                    "documentation": "Whether the global endpoint should be used, rather then the regional endpoint for us-east-1.",
                    "type": "Boolean"
                },
                "UseObjectLambdaEndpoint": {
                    "required": false,
                    "documentation": "Internal parameter to use object lambda endpoint for an operation (eg: WriteGetObjectResponse)",
                    "type": "Boolean"
                },
                "Key": {
                    "required": false,
                    "documentation": "The S3 Key used to send the request. This is an optional parameter that will be set automatically for operations that are scoped to an S3 Key.",
                    "type": "String"
                },
                "Prefix": {
                    "required": false,
                    "documentation": "The S3 Prefix used to send the request. This is an optional parameter that will be set automatically for operations that are scoped to an S3 Prefix.",
                    "type": "String"
                },
                "CopySource": {
                    "required": false,
                    "documentation": "The Copy Source used for Copy Object request. This is an optional parameter that will be set automatically for operations that are scoped to Copy Source.",
                    "type": "String"
                },
                "DisableAccessPoints": {
                    "required": false,
                    "documentation": "Internal parameter to disable Access Point Buckets",
                    "type": "Boolean"
                },
                "DisableMultiRegionAccessPoints": {
                    "builtIn": "AWS::S3::DisableMultiRegionAccessPoints",
                    "required": true,
                    "default": false,
                    "documentation": "Whether multi-region access points (MRAP) should be disabled.",
                    "type": "Boolean"
                },
                "UseArnRegion": {
                    "builtIn": "AWS::S3::UseArnRegion",
                    "required": false,
                    "documentation": "When an Access Point ARN is provided and this flag is enabled, the SDK MUST use the ARN's region when constructing the endpoint instead of the client's configured region.",
                    "type": "Boolean"
                },
                "UseS3ExpressControlEndpoint": {
                    "required": false,
                    "documentation": "Internal parameter to indicate whether S3Express operation should use control plane, (ex. CreateBucket)",
                    "type": "Boolean"
                },
                "DisableS3ExpressSessionAuth": {
                    "required": false,
                    "documentation": "Parameter to indicate whether S3Express session auth should be disabled",
                    "type": "Boolean"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "Accelerate"
                                        },
                                        true
                                    ]
                                },
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Accelerate cannot be used with FIPS",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                },
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Endpoint"
                                        }
                                    ]
                                }
                            ],
                            "error": "Cannot set dual-stack in combination with a custom endpoint.",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Endpoint"
                                        }
                                    ]
                                },
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "A custom endpoint cannot be combined with FIPS",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Endpoint"
                                        }
                                    ]
                                },
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "Accelerate"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "A custom endpoint cannot be combined with S3 Accelerate",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                },
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "partitionResult"
                                },
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "fn": "getAttr",
                                            "argv": [
                                                {
                                                    "ref": "partitionResult"
                                                },
                                                "name"
                                            ]
                                        },
                                        "aws-cn"
                                    ]
                                }
                            ],
                            "error": "Partition does not support FIPS",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Bucket"
                                        }
                                    ]
                                },
                                {
                                    "fn": "substring",
                                    "argv": [
                                        {
                                            "ref": "Bucket"
                                        },
                                        0,
                                        6,
                                        true
                                    ],
                                    "assign": "bucketSuffix"
                                },
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "bucketSuffix"
                                        },
                                        "--x-s3"
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "S3Express does not support Dual-stack.",
                                    "type": "error"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "Accelerate"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "S3Express does not support S3 Accelerate.",
                                    "type": "error"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "isSet",
                                            "argv": [
                                                {
                                                    "ref": "Endpoint"
                                                }
                                            ]
                                        },
                                        {
                                            "fn": "parseURL",
                                            "argv": [
                                                {
                                                    "ref": "Endpoint"
                                                }
                                            ],
                                            "assign": "url"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "isSet",
                                                    "argv": [
                                                        {
                                                            "ref": "DisableS3ExpressSessionAuth"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "DisableS3ExpressSessionAuth"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "url"
                                                                        },
                                                                        "isIp"
                                                                    ]
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "uriEncode",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Bucket"
                                                                        }
                                                                    ],
                                                                    "assign": "uri_encoded_bucket"
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "{url#scheme}://{url#authority}/{uri_encoded_bucket}{url#path}",
                                                                        "properties": {
                                                                            "backend": "S3Express",
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3express",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "aws.isVirtualHostableS3Bucket",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{Bucket}.{url#authority}{url#path}",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "S3Express bucket name is not a valid virtual hostable name.",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "url"
                                                                },
                                                                "isIp"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "uriEncode",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                }
                                                            ],
                                                            "assign": "uri_encoded_bucket"
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{url#authority}/{uri_encoded_bucket}{url#path}",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4-s3express",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "aws.isVirtualHostableS3Bucket",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        false
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "{url#scheme}://{Bucket}.{url#authority}{url#path}",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "S3Express bucket name is not a valid virtual hostable name.",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "isSet",
                                            "argv": [
                                                {
                                                    "ref": "UseS3ExpressControlEndpoint"
                                                }
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseS3ExpressControlEndpoint"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "uriEncode",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        }
                                                    ],
                                                    "assign": "uri_encoded_bucket"
                                                },
                                                {
                                                    "fn": "not",
                                                    "argv": [
                                                        {
                                                            "fn": "isSet",
                                                            "argv": [
                                                                {
                                                                    "ref": "Endpoint"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://s3express-control-fips.{Region}.amazonaws.com/{uri_encoded_bucket}",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://s3express-control.{Region}.amazonaws.com/{uri_encoded_bucket}",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.isVirtualHostableS3Bucket",
                                            "argv": [
                                                {
                                                    "ref": "Bucket"
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "isSet",
                                                    "argv": [
                                                        {
                                                            "ref": "DisableS3ExpressSessionAuth"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "DisableS3ExpressSessionAuth"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "substring",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                6,
                                                                14,
                                                                true
                                                            ],
                                                            "assign": "s3expressAvailabilityZoneId"
                                                        },
                                                        {
                                                            "fn": "substring",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                14,
                                                                16,
                                                                true
                                                            ],
                                                            "assign": "s3expressAvailabilityZoneDelim"
                                                        },
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "s3expressAvailabilityZoneDelim"
                                                                },
                                                                "--"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "substring",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                6,
                                                                15,
                                                                true
                                                            ],
                                                            "assign": "s3expressAvailabilityZoneId"
                                                        },
                                                        {
                                                            "fn": "substring",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                15,
                                                                17,
                                                                true
                                                            ],
                                                            "assign": "s3expressAvailabilityZoneDelim"
                                                        },
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "s3expressAvailabilityZoneDelim"
                                                                },
                                                                "--"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "substring",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                6,
                                                                19,
                                                                true
                                                            ],
                                                            "assign": "s3expressAvailabilityZoneId"
                                                        },
                                                        {
                                                            "fn": "substring",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                19,
                                                                21,
                                                                true
                                                            ],
                                                            "assign": "s3expressAvailabilityZoneDelim"
                                                        },
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "s3expressAvailabilityZoneDelim"
                                                                },
                                                                "--"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "substring",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                6,
                                                                20,
                                                                true
                                                            ],
                                                            "assign": "s3expressAvailabilityZoneId"
                                                        },
                                                        {
                                                            "fn": "substring",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                20,
                                                                22,
                                                                true
                                                            ],
                                                            "assign": "s3expressAvailabilityZoneDelim"
                                                        },
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "s3expressAvailabilityZoneDelim"
                                                                },
                                                                "--"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "substring",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                6,
                                                                26,
                                                                true
                                                            ],
                                                            "assign": "s3expressAvailabilityZoneId"
                                                        },
                                                        {
                                                            "fn": "substring",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                },
                                                                26,
                                                                28,
                                                                true
                                                            ],
                                                            "assign": "s3expressAvailabilityZoneDelim"
                                                        },
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "s3expressAvailabilityZoneDelim"
                                                                },
                                                                "--"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                                "properties": {
                                                                    "backend": "S3Express",
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3express",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "Unrecognized S3Express bucket name format.",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "substring",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        6,
                                                        14,
                                                        true
                                                    ],
                                                    "assign": "s3expressAvailabilityZoneId"
                                                },
                                                {
                                                    "fn": "substring",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        14,
                                                        16,
                                                        true
                                                    ],
                                                    "assign": "s3expressAvailabilityZoneDelim"
                                                },
                                                {
                                                    "fn": "stringEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "s3expressAvailabilityZoneDelim"
                                                        },
                                                        "--"
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "substring",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        6,
                                                        15,
                                                        true
                                                    ],
                                                    "assign": "s3expressAvailabilityZoneId"
                                                },
                                                {
                                                    "fn": "substring",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        15,
                                                        17,
                                                        true
                                                    ],
                                                    "assign": "s3expressAvailabilityZoneDelim"
                                                },
                                                {
                                                    "fn": "stringEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "s3expressAvailabilityZoneDelim"
                                                        },
                                                        "--"
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "substring",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        6,
                                                        19,
                                                        true
                                                    ],
                                                    "assign": "s3expressAvailabilityZoneId"
                                                },
                                                {
                                                    "fn": "substring",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        19,
                                                        21,
                                                        true
                                                    ],
                                                    "assign": "s3expressAvailabilityZoneDelim"
                                                },
                                                {
                                                    "fn": "stringEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "s3expressAvailabilityZoneDelim"
                                                        },
                                                        "--"
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "substring",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        6,
                                                        20,
                                                        true
                                                    ],
                                                    "assign": "s3expressAvailabilityZoneId"
                                                },
                                                {
                                                    "fn": "substring",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        20,
                                                        22,
                                                        true
                                                    ],
                                                    "assign": "s3expressAvailabilityZoneDelim"
                                                },
                                                {
                                                    "fn": "stringEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "s3expressAvailabilityZoneDelim"
                                                        },
                                                        "--"
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "substring",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        6,
                                                        26,
                                                        true
                                                    ],
                                                    "assign": "s3expressAvailabilityZoneId"
                                                },
                                                {
                                                    "fn": "substring",
                                                    "argv": [
                                                        {
                                                            "ref": "Bucket"
                                                        },
                                                        26,
                                                        28,
                                                        true
                                                    ],
                                                    "assign": "s3expressAvailabilityZoneDelim"
                                                },
                                                {
                                                    "fn": "stringEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "s3expressAvailabilityZoneDelim"
                                                        },
                                                        "--"
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.s3express-fips-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.s3express-{s3expressAvailabilityZoneId}.{Region}.amazonaws.com",
                                                        "properties": {
                                                            "backend": "S3Express",
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4-s3express",
                                                                    "signingName": "s3express",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "Unrecognized S3Express bucket name format.",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "error": "S3Express bucket name is not a valid virtual hostable name.",
                                    "type": "error"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "not",
                                    "argv": [
                                        {
                                            "fn": "isSet",
                                            "argv": [
                                                {
                                                    "ref": "Bucket"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "UseS3ExpressControlEndpoint"
                                        }
                                    ]
                                },
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseS3ExpressControlEndpoint"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "isSet",
                                            "argv": [
                                                {
                                                    "ref": "Endpoint"
                                                }
                                            ]
                                        },
                                        {
                                            "fn": "parseURL",
                                            "argv": [
                                                {
                                                    "ref": "Endpoint"
                                                }
                                            ],
                                            "assign": "url"
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "{url#scheme}://{url#authority}{url#path}",
                                        "properties": {
                                            "backend": "S3Express",
                                            "authSchemes": [
                                                {
                                                    "disableDoubleEncoding": true,
                                                    "name": "sigv4",
                                                    "signingName": "s3express",
                                                    "signingRegion": "{Region}"
                                                }
                                            ]
                                        },
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://s3express-control-fips.{Region}.amazonaws.com",
                                        "properties": {
                                            "backend": "S3Express",
                                            "authSchemes": [
                                                {
                                                    "disableDoubleEncoding": true,
                                                    "name": "sigv4",
                                                    "signingName": "s3express",
                                                    "signingRegion": "{Region}"
                                                }
                                            ]
                                        },
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://s3express-control.{Region}.amazonaws.com",
                                        "properties": {
                                            "backend": "S3Express",
                                            "authSchemes": [
                                                {
                                                    "disableDoubleEncoding": true,
                                                    "name": "sigv4",
                                                    "signingName": "s3express",
                                                    "signingRegion": "{Region}"
                                                }
                                            ]
                                        },
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Bucket"
                                        }
                                    ]
                                },
                                {
                                    "fn": "substring",
                                    "argv": [
                                        {
                                            "ref": "Bucket"
                                        },
                                        49,
                                        50,
                                        true
                                    ],
                                    "assign": "hardwareType"
                                },
                                {
                                    "fn": "substring",
                                    "argv": [
                                        {
                                            "ref": "Bucket"
                                        },
                                        8,
                                        12,
                                        true
                                    ],
                                    "assign": "regionPrefix"
                                },
                                {
                                    "fn": "substring",
                                    "argv": [
                                        {
                                            "ref": "Bucket"
                                        },
                                        0,
                                        7,
                                        true
                                    ],
                                    "assign": "bucketAliasSuffix"
                                },
                                {
                                    "fn": "substring",
                                    "argv": [
                                        {
                                            "ref": "Bucket"
                                        },
                                        32,
                                        49,
                                        true
                                    ],
                                    "assign": "outpostId"
                                },
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "regionPartition"
                                },
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "bucketAliasSuffix"
                                        },
                                        "--op-s3"
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "isValidHostLabel",
                                            "argv": [
                                                {
                                                    "ref": "outpostId"
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "stringEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "hardwareType"
                                                        },
                                                        "e"
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "regionPrefix"
                                                                },
                                                                "beta"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "error": "Expected a endpoint to be specified but no endpoint was found",
                                                            "type": "error"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.ec2.{url#authority}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4a",
                                                                            "signingName": "s3-outposts",
                                                                            "signingRegionSet": [
                                                                                "*"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3-outposts",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.ec2.s3-outposts.{Region}.{regionPartition#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4a",
                                                                    "signingName": "s3-outposts",
                                                                    "signingRegionSet": [
                                                                        "*"
                                                                    ]
                                                                },
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3-outposts",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "stringEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "hardwareType"
                                                        },
                                                        "o"
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "regionPrefix"
                                                                },
                                                                "beta"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "error": "Expected a endpoint to be specified but no endpoint was found",
                                                            "type": "error"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.op-{outpostId}.{url#authority}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4a",
                                                                            "signingName": "s3-outposts",
                                                                            "signingRegionSet": [
                                                                                "*"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3-outposts",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://{Bucket}.op-{outpostId}.s3-outposts.{Region}.{regionPartition#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4a",
                                                                    "signingName": "s3-outposts",
                                                                    "signingRegionSet": [
                                                                        "*"
                                                                    ]
                                                                },
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3-outposts",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "Unrecognized hardware type: \"Expected hardware type o or e but got {hardwareType}\"",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "error": "Invalid ARN: The outpost Id must only contain a-z, A-Z, 0-9 and `-`.",
                                    "type": "error"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Bucket"
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "isSet",
                                            "argv": [
                                                {
                                                    "ref": "Endpoint"
                                                }
                                            ]
                                        },
                                        {
                                            "fn": "not",
                                            "argv": [
                                                {
                                                    "fn": "isSet",
                                                    "argv": [
                                                        {
                                                            "fn": "parseURL",
                                                            "argv": [
                                                                {
                                                                    "ref": "Endpoint"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "error": "Custom endpoint `{Endpoint}` was not a valid URI",
                                    "type": "error"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "ForcePathStyle"
                                                },
                                                false
                                            ]
                                        },
                                        {
                                            "fn": "aws.isVirtualHostableS3Bucket",
                                            "argv": [
                                                {
                                                    "ref": "Bucket"
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "aws.partition",
                                                    "argv": [
                                                        {
                                                            "ref": "Region"
                                                        }
                                                    ],
                                                    "assign": "partitionResult"
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "isValidHostLabel",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "partitionResult"
                                                                                },
                                                                                "name"
                                                                            ]
                                                                        },
                                                                        "aws-cn"
                                                                    ]
                                                                }
                                                            ],
                                                            "error": "S3 Accelerate cannot be used in this region",
                                                            "type": "error"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://{Bucket}.s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3-fips.us-east-1.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://{Bucket}.s3-fips.{Region}.{partitionResult#dnsSuffix}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3-fips.{Region}.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3-accelerate.dualstack.us-east-1.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://{Bucket}.s3-accelerate.dualstack.{partitionResult#dnsSuffix}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3-accelerate.dualstack.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3.dualstack.us-east-1.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://{Bucket}.s3.dualstack.{Region}.{partitionResult#dnsSuffix}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3.dualstack.{Region}.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "url"
                                                                                },
                                                                                "isIp"
                                                                            ]
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{url#authority}{url#normalizedPath}{Bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "url"
                                                                                },
                                                                                "isIp"
                                                                            ]
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{Bucket}.{url#authority}{url#path}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "url"
                                                                                },
                                                                                "isIp"
                                                                            ]
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "us-east-1"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "endpoint": {
                                                                        "url": "{url#scheme}://{url#authority}{url#normalizedPath}{Bucket}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "{url#scheme}://{url#authority}{url#normalizedPath}{Bucket}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "url"
                                                                                },
                                                                                "isIp"
                                                                            ]
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "us-east-1"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "endpoint": {
                                                                        "url": "{url#scheme}://{Bucket}.{url#authority}{url#path}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "{url#scheme}://{Bucket}.{url#authority}{url#path}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "url"
                                                                                },
                                                                                "isIp"
                                                                            ]
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{url#authority}{url#normalizedPath}{Bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "url"
                                                                                },
                                                                                "isIp"
                                                                            ]
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{Bucket}.{url#authority}{url#path}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3-accelerate.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "us-east-1"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "endpoint": {
                                                                        "url": "https://{Bucket}.s3-accelerate.{partitionResult#dnsSuffix}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://{Bucket}.s3-accelerate.{partitionResult#dnsSuffix}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3-accelerate.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "us-east-1"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "endpoint": {
                                                                        "url": "https://{Bucket}.s3.{partitionResult#dnsSuffix}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://{Bucket}.s3.{Region}.{partitionResult#dnsSuffix}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://{Bucket}.s3.{Region}.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "Invalid region: region was not a valid DNS name.",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "isSet",
                                            "argv": [
                                                {
                                                    "ref": "Endpoint"
                                                }
                                            ]
                                        },
                                        {
                                            "fn": "parseURL",
                                            "argv": [
                                                {
                                                    "ref": "Endpoint"
                                                }
                                            ],
                                            "assign": "url"
                                        },
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "url"
                                                        },
                                                        "scheme"
                                                    ]
                                                },
                                                "http"
                                            ]
                                        },
                                        {
                                            "fn": "aws.isVirtualHostableS3Bucket",
                                            "argv": [
                                                {
                                                    "ref": "Bucket"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "ForcePathStyle"
                                                },
                                                false
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                false
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                false
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "Accelerate"
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "aws.partition",
                                                    "argv": [
                                                        {
                                                            "ref": "Region"
                                                        }
                                                    ],
                                                    "assign": "partitionResult"
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "isValidHostLabel",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{Bucket}.{url#authority}{url#path}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "Invalid region: region was not a valid DNS name.",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "ForcePathStyle"
                                                },
                                                false
                                            ]
                                        },
                                        {
                                            "fn": "aws.parseArn",
                                            "argv": [
                                                {
                                                    "ref": "Bucket"
                                                }
                                            ],
                                            "assign": "bucketArn"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "bucketArn"
                                                        },
                                                        "resourceId[0]"
                                                    ],
                                                    "assign": "arnType"
                                                },
                                                {
                                                    "fn": "not",
                                                    "argv": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "arnType"
                                                                },
                                                                ""
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "bucketArn"
                                                                        },
                                                                        "service"
                                                                    ]
                                                                },
                                                                "s3-object-lambda"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "arnType"
                                                                        },
                                                                        "accesspoint"
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "bucketArn"
                                                                                },
                                                                                "resourceId[1]"
                                                                            ],
                                                                            "assign": "accessPointName"
                                                                        },
                                                                        {
                                                                            "fn": "not",
                                                                            "argv": [
                                                                                {
                                                                                    "fn": "stringEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "accessPointName"
                                                                                        },
                                                                                        ""
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "booleanEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "UseDualStack"
                                                                                        },
                                                                                        true
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "error": "S3 Object Lambda does not support Dual-stack",
                                                                            "type": "error"
                                                                        },
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "booleanEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "Accelerate"
                                                                                        },
                                                                                        true
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "error": "S3 Object Lambda does not support S3 Accelerate",
                                                                            "type": "error"
                                                                        },
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "not",
                                                                                    "argv": [
                                                                                        {
                                                                                            "fn": "stringEquals",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "fn": "getAttr",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "bucketArn"
                                                                                                        },
                                                                                                        "region"
                                                                                                    ]
                                                                                                },
                                                                                                ""
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "rules": [
                                                                                {
                                                                                    "conditions": [
                                                                                        {
                                                                                            "fn": "isSet",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "DisableAccessPoints"
                                                                                                }
                                                                                            ]
                                                                                        },
                                                                                        {
                                                                                            "fn": "booleanEquals",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "DisableAccessPoints"
                                                                                                },
                                                                                                true
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "error": "Access points are not supported for this operation",
                                                                                    "type": "error"
                                                                                },
                                                                                {
                                                                                    "conditions": [
                                                                                        {
                                                                                            "fn": "not",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "fn": "isSet",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "fn": "getAttr",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "ref": "bucketArn"
                                                                                                                },
                                                                                                                "resourceId[2]"
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "rules": [
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "isSet",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseArnRegion"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseArnRegion"
                                                                                                        },
                                                                                                        false
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "fn": "not",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "fn": "stringEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "bucketArn"
                                                                                                                        },
                                                                                                                        "region"
                                                                                                                    ]
                                                                                                                },
                                                                                                                "{Region}"
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "error": "Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`",
                                                                                            "type": "error"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "aws.partition",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "fn": "getAttr",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "ref": "bucketArn"
                                                                                                                },
                                                                                                                "region"
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "assign": "bucketPartition"
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "aws.partition",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "ref": "Region"
                                                                                                                }
                                                                                                            ],
                                                                                                            "assign": "partitionResult"
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [
                                                                                                                {
                                                                                                                    "fn": "stringEquals",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "fn": "getAttr",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "ref": "bucketPartition"
                                                                                                                                },
                                                                                                                                "name"
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "fn": "getAttr",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "ref": "partitionResult"
                                                                                                                                },
                                                                                                                                "name"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ]
                                                                                                                }
                                                                                                            ],
                                                                                                            "rules": [
                                                                                                                {
                                                                                                                    "conditions": [
                                                                                                                        {
                                                                                                                            "fn": "isValidHostLabel",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "fn": "getAttr",
                                                                                                                                    "argv": [
                                                                                                                                        {
                                                                                                                                            "ref": "bucketArn"
                                                                                                                                        },
                                                                                                                                        "region"
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                true
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "rules": [
                                                                                                                        {
                                                                                                                            "conditions": [
                                                                                                                                {
                                                                                                                                    "fn": "stringEquals",
                                                                                                                                    "argv": [
                                                                                                                                        {
                                                                                                                                            "fn": "getAttr",
                                                                                                                                            "argv": [
                                                                                                                                                {
                                                                                                                                                    "ref": "bucketArn"
                                                                                                                                                },
                                                                                                                                                "accountId"
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        ""
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "error": "Invalid ARN: Missing account id",
                                                                                                                            "type": "error"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "conditions": [
                                                                                                                                {
                                                                                                                                    "fn": "isValidHostLabel",
                                                                                                                                    "argv": [
                                                                                                                                        {
                                                                                                                                            "fn": "getAttr",
                                                                                                                                            "argv": [
                                                                                                                                                {
                                                                                                                                                    "ref": "bucketArn"
                                                                                                                                                },
                                                                                                                                                "accountId"
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        false
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "rules": [
                                                                                                                                {
                                                                                                                                    "conditions": [
                                                                                                                                        {
                                                                                                                                            "fn": "isValidHostLabel",
                                                                                                                                            "argv": [
                                                                                                                                                {
                                                                                                                                                    "ref": "accessPointName"
                                                                                                                                                },
                                                                                                                                                false
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "rules": [
                                                                                                                                        {
                                                                                                                                            "conditions": [
                                                                                                                                                {
                                                                                                                                                    "fn": "isSet",
                                                                                                                                                    "argv": [
                                                                                                                                                        {
                                                                                                                                                            "ref": "Endpoint"
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "fn": "parseURL",
                                                                                                                                                    "argv": [
                                                                                                                                                        {
                                                                                                                                                            "ref": "Endpoint"
                                                                                                                                                        }
                                                                                                                                                    ],
                                                                                                                                                    "assign": "url"
                                                                                                                                                }
                                                                                                                                            ],
                                                                                                                                            "endpoint": {
                                                                                                                                                "url": "{url#scheme}://{accessPointName}-{bucketArn#accountId}.{url#authority}{url#path}",
                                                                                                                                                "properties": {
                                                                                                                                                    "authSchemes": [
                                                                                                                                                        {
                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                            "name": "sigv4",
                                                                                                                                                            "signingName": "s3-object-lambda",
                                                                                                                                                            "signingRegion": "{bucketArn#region}"
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                "headers": {}
                                                                                                                                            },
                                                                                                                                            "type": "endpoint"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "conditions": [
                                                                                                                                                {
                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                    "argv": [
                                                                                                                                                        {
                                                                                                                                                            "ref": "UseFIPS"
                                                                                                                                                        },
                                                                                                                                                        true
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            ],
                                                                                                                                            "endpoint": {
                                                                                                                                                "url": "https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}",
                                                                                                                                                "properties": {
                                                                                                                                                    "authSchemes": [
                                                                                                                                                        {
                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                            "name": "sigv4",
                                                                                                                                                            "signingName": "s3-object-lambda",
                                                                                                                                                            "signingRegion": "{bucketArn#region}"
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                "headers": {}
                                                                                                                                            },
                                                                                                                                            "type": "endpoint"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "conditions": [],
                                                                                                                                            "endpoint": {
                                                                                                                                                "url": "https://{accessPointName}-{bucketArn#accountId}.s3-object-lambda.{bucketArn#region}.{bucketPartition#dnsSuffix}",
                                                                                                                                                "properties": {
                                                                                                                                                    "authSchemes": [
                                                                                                                                                        {
                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                            "name": "sigv4",
                                                                                                                                                            "signingName": "s3-object-lambda",
                                                                                                                                                            "signingRegion": "{bucketArn#region}"
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                "headers": {}
                                                                                                                                            },
                                                                                                                                            "type": "endpoint"
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "type": "tree"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "conditions": [],
                                                                                                                                    "error": "Invalid ARN: The access point name may only contain a-z, A-Z, 0-9 and `-`. Found: `{accessPointName}`",
                                                                                                                                    "type": "error"
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "type": "tree"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "conditions": [],
                                                                                                                            "error": "Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`",
                                                                                                                            "type": "error"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "type": "tree"
                                                                                                                },
                                                                                                                {
                                                                                                                    "conditions": [],
                                                                                                                    "error": "Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)",
                                                                                                                    "type": "error"
                                                                                                                }
                                                                                                            ],
                                                                                                            "type": "tree"
                                                                                                        },
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "error": "Client was configured for partition `{partitionResult#name}` but ARN (`{Bucket}`) has `{bucketPartition#name}`",
                                                                                                            "type": "error"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        }
                                                                                    ],
                                                                                    "type": "tree"
                                                                                },
                                                                                {
                                                                                    "conditions": [],
                                                                                    "error": "Invalid ARN: The ARN may only contain a single resource component after `accesspoint`.",
                                                                                    "type": "error"
                                                                                }
                                                                            ],
                                                                            "type": "tree"
                                                                        },
                                                                        {
                                                                            "conditions": [],
                                                                            "error": "Invalid ARN: bucket ARN is missing a region",
                                                                            "type": "error"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "error": "Invalid ARN: Expected a resource of the format `accesspoint:<accesspoint name>` but no name was provided",
                                                                    "type": "error"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "error": "Invalid ARN: Object Lambda ARNs only support `accesspoint` arn types, but found: `{arnType}`",
                                                            "type": "error"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "arnType"
                                                                },
                                                                "accesspoint"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "bucketArn"
                                                                        },
                                                                        "resourceId[1]"
                                                                    ],
                                                                    "assign": "accessPointName"
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "accessPointName"
                                                                                },
                                                                                ""
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "not",
                                                                            "argv": [
                                                                                {
                                                                                    "fn": "stringEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "fn": "getAttr",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "bucketArn"
                                                                                                },
                                                                                                "region"
                                                                                            ]
                                                                                        },
                                                                                        ""
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "stringEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "arnType"
                                                                                        },
                                                                                        "accesspoint"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "rules": [
                                                                                {
                                                                                    "conditions": [
                                                                                        {
                                                                                            "fn": "not",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "fn": "stringEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "fn": "getAttr",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "ref": "bucketArn"
                                                                                                                },
                                                                                                                "region"
                                                                                                            ]
                                                                                                        },
                                                                                                        ""
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "rules": [
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "isSet",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "DisableAccessPoints"
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "DisableAccessPoints"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "error": "Access points are not supported for this operation",
                                                                                            "type": "error"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "not",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "fn": "isSet",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "bucketArn"
                                                                                                                        },
                                                                                                                        "resourceId[2]"
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "isSet",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "ref": "UseArnRegion"
                                                                                                                }
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "fn": "booleanEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "ref": "UseArnRegion"
                                                                                                                },
                                                                                                                false
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "fn": "not",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "stringEquals",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "fn": "getAttr",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "ref": "bucketArn"
                                                                                                                                },
                                                                                                                                "region"
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        "{Region}"
                                                                                                                    ]
                                                                                                                }
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "error": "Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`",
                                                                                                    "type": "error"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "aws.partition",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "bucketArn"
                                                                                                                        },
                                                                                                                        "region"
                                                                                                                    ]
                                                                                                                }
                                                                                                            ],
                                                                                                            "assign": "bucketPartition"
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [
                                                                                                                {
                                                                                                                    "fn": "aws.partition",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "Region"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "assign": "partitionResult"
                                                                                                                }
                                                                                                            ],
                                                                                                            "rules": [
                                                                                                                {
                                                                                                                    "conditions": [
                                                                                                                        {
                                                                                                                            "fn": "stringEquals",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "fn": "getAttr",
                                                                                                                                    "argv": [
                                                                                                                                        {
                                                                                                                                            "ref": "bucketPartition"
                                                                                                                                        },
                                                                                                                                        "name"
                                                                                                                                    ]
                                                                                                                                },
                                                                                                                                "{partitionResult#name}"
                                                                                                                            ]
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "rules": [
                                                                                                                        {
                                                                                                                            "conditions": [
                                                                                                                                {
                                                                                                                                    "fn": "isValidHostLabel",
                                                                                                                                    "argv": [
                                                                                                                                        {
                                                                                                                                            "fn": "getAttr",
                                                                                                                                            "argv": [
                                                                                                                                                {
                                                                                                                                                    "ref": "bucketArn"
                                                                                                                                                },
                                                                                                                                                "region"
                                                                                                                                            ]
                                                                                                                                        },
                                                                                                                                        true
                                                                                                                                    ]
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "rules": [
                                                                                                                                {
                                                                                                                                    "conditions": [
                                                                                                                                        {
                                                                                                                                            "fn": "stringEquals",
                                                                                                                                            "argv": [
                                                                                                                                                {
                                                                                                                                                    "fn": "getAttr",
                                                                                                                                                    "argv": [
                                                                                                                                                        {
                                                                                                                                                            "ref": "bucketArn"
                                                                                                                                                        },
                                                                                                                                                        "service"
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                "s3"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "rules": [
                                                                                                                                        {
                                                                                                                                            "conditions": [
                                                                                                                                                {
                                                                                                                                                    "fn": "isValidHostLabel",
                                                                                                                                                    "argv": [
                                                                                                                                                        {
                                                                                                                                                            "fn": "getAttr",
                                                                                                                                                            "argv": [
                                                                                                                                                                {
                                                                                                                                                                    "ref": "bucketArn"
                                                                                                                                                                },
                                                                                                                                                                "accountId"
                                                                                                                                                            ]
                                                                                                                                                        },
                                                                                                                                                        false
                                                                                                                                                    ]
                                                                                                                                                }
                                                                                                                                            ],
                                                                                                                                            "rules": [
                                                                                                                                                {
                                                                                                                                                    "conditions": [
                                                                                                                                                        {
                                                                                                                                                            "fn": "isValidHostLabel",
                                                                                                                                                            "argv": [
                                                                                                                                                                {
                                                                                                                                                                    "ref": "accessPointName"
                                                                                                                                                                },
                                                                                                                                                                false
                                                                                                                                                            ]
                                                                                                                                                        }
                                                                                                                                                    ],
                                                                                                                                                    "rules": [
                                                                                                                                                        {
                                                                                                                                                            "conditions": [
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "Accelerate"
                                                                                                                                                                        },
                                                                                                                                                                        true
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            ],
                                                                                                                                                            "error": "Access Points do not support S3 Accelerate",
                                                                                                                                                            "type": "error"
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "conditions": [
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "UseFIPS"
                                                                                                                                                                        },
                                                                                                                                                                        true
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "UseDualStack"
                                                                                                                                                                        },
                                                                                                                                                                        true
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            ],
                                                                                                                                                            "endpoint": {
                                                                                                                                                                "url": "https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "authSchemes": [
                                                                                                                                                                        {
                                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                                            "name": "sigv4",
                                                                                                                                                                            "signingName": "s3",
                                                                                                                                                                            "signingRegion": "{bucketArn#region}"
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "headers": {}
                                                                                                                                                            },
                                                                                                                                                            "type": "endpoint"
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "conditions": [
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "UseFIPS"
                                                                                                                                                                        },
                                                                                                                                                                        true
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "UseDualStack"
                                                                                                                                                                        },
                                                                                                                                                                        false
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            ],
                                                                                                                                                            "endpoint": {
                                                                                                                                                                "url": "https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint-fips.{bucketArn#region}.{bucketPartition#dnsSuffix}",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "authSchemes": [
                                                                                                                                                                        {
                                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                                            "name": "sigv4",
                                                                                                                                                                            "signingName": "s3",
                                                                                                                                                                            "signingRegion": "{bucketArn#region}"
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "headers": {}
                                                                                                                                                            },
                                                                                                                                                            "type": "endpoint"
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "conditions": [
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "UseFIPS"
                                                                                                                                                                        },
                                                                                                                                                                        false
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "UseDualStack"
                                                                                                                                                                        },
                                                                                                                                                                        true
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            ],
                                                                                                                                                            "endpoint": {
                                                                                                                                                                "url": "https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.dualstack.{bucketArn#region}.{bucketPartition#dnsSuffix}",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "authSchemes": [
                                                                                                                                                                        {
                                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                                            "name": "sigv4",
                                                                                                                                                                            "signingName": "s3",
                                                                                                                                                                            "signingRegion": "{bucketArn#region}"
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "headers": {}
                                                                                                                                                            },
                                                                                                                                                            "type": "endpoint"
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "conditions": [
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "UseFIPS"
                                                                                                                                                                        },
                                                                                                                                                                        false
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "UseDualStack"
                                                                                                                                                                        },
                                                                                                                                                                        false
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "fn": "isSet",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "Endpoint"
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "fn": "parseURL",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "Endpoint"
                                                                                                                                                                        }
                                                                                                                                                                    ],
                                                                                                                                                                    "assign": "url"
                                                                                                                                                                }
                                                                                                                                                            ],
                                                                                                                                                            "endpoint": {
                                                                                                                                                                "url": "{url#scheme}://{accessPointName}-{bucketArn#accountId}.{url#authority}{url#path}",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "authSchemes": [
                                                                                                                                                                        {
                                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                                            "name": "sigv4",
                                                                                                                                                                            "signingName": "s3",
                                                                                                                                                                            "signingRegion": "{bucketArn#region}"
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "headers": {}
                                                                                                                                                            },
                                                                                                                                                            "type": "endpoint"
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "conditions": [
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "UseFIPS"
                                                                                                                                                                        },
                                                                                                                                                                        false
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                {
                                                                                                                                                                    "fn": "booleanEquals",
                                                                                                                                                                    "argv": [
                                                                                                                                                                        {
                                                                                                                                                                            "ref": "UseDualStack"
                                                                                                                                                                        },
                                                                                                                                                                        false
                                                                                                                                                                    ]
                                                                                                                                                                }
                                                                                                                                                            ],
                                                                                                                                                            "endpoint": {
                                                                                                                                                                "url": "https://{accessPointName}-{bucketArn#accountId}.s3-accesspoint.{bucketArn#region}.{bucketPartition#dnsSuffix}",
                                                                                                                                                                "properties": {
                                                                                                                                                                    "authSchemes": [
                                                                                                                                                                        {
                                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                                            "name": "sigv4",
                                                                                                                                                                            "signingName": "s3",
                                                                                                                                                                            "signingRegion": "{bucketArn#region}"
                                                                                                                                                                        }
                                                                                                                                                                    ]
                                                                                                                                                                },
                                                                                                                                                                "headers": {}
                                                                                                                                                            },
                                                                                                                                                            "type": "endpoint"
                                                                                                                                                        }
                                                                                                                                                    ],
                                                                                                                                                    "type": "tree"
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "conditions": [],
                                                                                                                                                    "error": "Invalid ARN: The access point name may only contain a-z, A-Z, 0-9 and `-`. Found: `{accessPointName}`",
                                                                                                                                                    "type": "error"
                                                                                                                                                }
                                                                                                                                            ],
                                                                                                                                            "type": "tree"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "conditions": [],
                                                                                                                                            "error": "Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`",
                                                                                                                                            "type": "error"
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "type": "tree"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "conditions": [],
                                                                                                                                    "error": "Invalid ARN: The ARN was not for the S3 service, found: {bucketArn#service}",
                                                                                                                                    "type": "error"
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "type": "tree"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "conditions": [],
                                                                                                                            "error": "Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)",
                                                                                                                            "type": "error"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "type": "tree"
                                                                                                                },
                                                                                                                {
                                                                                                                    "conditions": [],
                                                                                                                    "error": "Client was configured for partition `{partitionResult#name}` but ARN (`{Bucket}`) has `{bucketPartition#name}`",
                                                                                                                    "type": "error"
                                                                                                                }
                                                                                                            ],
                                                                                                            "type": "tree"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [],
                                                                                            "error": "Invalid ARN: The ARN may only contain a single resource component after `accesspoint`.",
                                                                                            "type": "error"
                                                                                        }
                                                                                    ],
                                                                                    "type": "tree"
                                                                                }
                                                                            ],
                                                                            "type": "tree"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                },
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "isValidHostLabel",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "accessPointName"
                                                                                },
                                                                                true
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "booleanEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "UseDualStack"
                                                                                        },
                                                                                        true
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "error": "S3 MRAP does not support dual-stack",
                                                                            "type": "error"
                                                                        },
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "booleanEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "UseFIPS"
                                                                                        },
                                                                                        true
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "error": "S3 MRAP does not support FIPS",
                                                                            "type": "error"
                                                                        },
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "booleanEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "Accelerate"
                                                                                        },
                                                                                        true
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "error": "S3 MRAP does not support S3 Accelerate",
                                                                            "type": "error"
                                                                        },
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "booleanEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "DisableMultiRegionAccessPoints"
                                                                                        },
                                                                                        true
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "error": "Invalid configuration: Multi-Region Access Point ARNs are disabled.",
                                                                            "type": "error"
                                                                        },
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "aws.partition",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "Region"
                                                                                        }
                                                                                    ],
                                                                                    "assign": "mrapPartition"
                                                                                }
                                                                            ],
                                                                            "rules": [
                                                                                {
                                                                                    "conditions": [
                                                                                        {
                                                                                            "fn": "stringEquals",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "fn": "getAttr",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "mrapPartition"
                                                                                                        },
                                                                                                        "name"
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "fn": "getAttr",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "bucketArn"
                                                                                                        },
                                                                                                        "partition"
                                                                                                    ]
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "rules": [
                                                                                        {
                                                                                            "conditions": [],
                                                                                            "endpoint": {
                                                                                                "url": "https://{accessPointName}.accesspoint.s3-global.{mrapPartition#dnsSuffix}",
                                                                                                "properties": {
                                                                                                    "authSchemes": [
                                                                                                        {
                                                                                                            "disableDoubleEncoding": true,
                                                                                                            "name": "sigv4a",
                                                                                                            "signingName": "s3",
                                                                                                            "signingRegionSet": [
                                                                                                                "*"
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                },
                                                                                                "headers": {}
                                                                                            },
                                                                                            "type": "endpoint"
                                                                                        }
                                                                                    ],
                                                                                    "type": "tree"
                                                                                },
                                                                                {
                                                                                    "conditions": [],
                                                                                    "error": "Client was configured for partition `{mrapPartition#name}` but bucket referred to partition `{bucketArn#partition}`",
                                                                                    "type": "error"
                                                                                }
                                                                            ],
                                                                            "type": "tree"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "error": "Invalid Access Point Name",
                                                                    "type": "error"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "error": "Invalid ARN: Expected a resource of the format `accesspoint:<accesspoint name>` but no name was provided",
                                                            "type": "error"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "bucketArn"
                                                                        },
                                                                        "service"
                                                                    ]
                                                                },
                                                                "s3-outposts"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "error": "S3 Outposts does not support Dual-stack",
                                                            "type": "error"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "error": "S3 Outposts does not support FIPS",
                                                            "type": "error"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Accelerate"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "error": "S3 Outposts does not support S3 Accelerate",
                                                            "type": "error"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "getAttr",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "bucketArn"
                                                                                },
                                                                                "resourceId[4]"
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "error": "Invalid Arn: Outpost Access Point ARN contains sub resources",
                                                            "type": "error"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "bucketArn"
                                                                        },
                                                                        "resourceId[1]"
                                                                    ],
                                                                    "assign": "outpostId"
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "isValidHostLabel",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "outpostId"
                                                                                },
                                                                                false
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "isSet",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "UseArnRegion"
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "fn": "booleanEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "ref": "UseArnRegion"
                                                                                        },
                                                                                        false
                                                                                    ]
                                                                                },
                                                                                {
                                                                                    "fn": "not",
                                                                                    "argv": [
                                                                                        {
                                                                                            "fn": "stringEquals",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "fn": "getAttr",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "bucketArn"
                                                                                                        },
                                                                                                        "region"
                                                                                                    ]
                                                                                                },
                                                                                                "{Region}"
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "error": "Invalid configuration: region from ARN `{bucketArn#region}` does not match client region `{Region}` and UseArnRegion is `false`",
                                                                            "type": "error"
                                                                        },
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "aws.partition",
                                                                                    "argv": [
                                                                                        {
                                                                                            "fn": "getAttr",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "bucketArn"
                                                                                                },
                                                                                                "region"
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "assign": "bucketPartition"
                                                                                }
                                                                            ],
                                                                            "rules": [
                                                                                {
                                                                                    "conditions": [
                                                                                        {
                                                                                            "fn": "aws.partition",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "Region"
                                                                                                }
                                                                                            ],
                                                                                            "assign": "partitionResult"
                                                                                        }
                                                                                    ],
                                                                                    "rules": [
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "stringEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "fn": "getAttr",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "ref": "bucketPartition"
                                                                                                                },
                                                                                                                "name"
                                                                                                            ]
                                                                                                        },
                                                                                                        {
                                                                                                            "fn": "getAttr",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "ref": "partitionResult"
                                                                                                                },
                                                                                                                "name"
                                                                                                            ]
                                                                                                        }
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "isValidHostLabel",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "bucketArn"
                                                                                                                        },
                                                                                                                        "region"
                                                                                                                    ]
                                                                                                                },
                                                                                                                true
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [
                                                                                                                {
                                                                                                                    "fn": "isValidHostLabel",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "fn": "getAttr",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "ref": "bucketArn"
                                                                                                                                },
                                                                                                                                "accountId"
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        false
                                                                                                                    ]
                                                                                                                }
                                                                                                            ],
                                                                                                            "rules": [
                                                                                                                {
                                                                                                                    "conditions": [
                                                                                                                        {
                                                                                                                            "fn": "getAttr",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "ref": "bucketArn"
                                                                                                                                },
                                                                                                                                "resourceId[2]"
                                                                                                                            ],
                                                                                                                            "assign": "outpostType"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "rules": [
                                                                                                                        {
                                                                                                                            "conditions": [
                                                                                                                                {
                                                                                                                                    "fn": "getAttr",
                                                                                                                                    "argv": [
                                                                                                                                        {
                                                                                                                                            "ref": "bucketArn"
                                                                                                                                        },
                                                                                                                                        "resourceId[3]"
                                                                                                                                    ],
                                                                                                                                    "assign": "accessPointName"
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "rules": [
                                                                                                                                {
                                                                                                                                    "conditions": [
                                                                                                                                        {
                                                                                                                                            "fn": "stringEquals",
                                                                                                                                            "argv": [
                                                                                                                                                {
                                                                                                                                                    "ref": "outpostType"
                                                                                                                                                },
                                                                                                                                                "accesspoint"
                                                                                                                                            ]
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "rules": [
                                                                                                                                        {
                                                                                                                                            "conditions": [
                                                                                                                                                {
                                                                                                                                                    "fn": "isSet",
                                                                                                                                                    "argv": [
                                                                                                                                                        {
                                                                                                                                                            "ref": "Endpoint"
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                {
                                                                                                                                                    "fn": "parseURL",
                                                                                                                                                    "argv": [
                                                                                                                                                        {
                                                                                                                                                            "ref": "Endpoint"
                                                                                                                                                        }
                                                                                                                                                    ],
                                                                                                                                                    "assign": "url"
                                                                                                                                                }
                                                                                                                                            ],
                                                                                                                                            "endpoint": {
                                                                                                                                                "url": "https://{accessPointName}-{bucketArn#accountId}.{outpostId}.{url#authority}",
                                                                                                                                                "properties": {
                                                                                                                                                    "authSchemes": [
                                                                                                                                                        {
                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                            "name": "sigv4a",
                                                                                                                                                            "signingName": "s3-outposts",
                                                                                                                                                            "signingRegionSet": [
                                                                                                                                                                "*"
                                                                                                                                                            ]
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                            "name": "sigv4",
                                                                                                                                                            "signingName": "s3-outposts",
                                                                                                                                                            "signingRegion": "{bucketArn#region}"
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                "headers": {}
                                                                                                                                            },
                                                                                                                                            "type": "endpoint"
                                                                                                                                        },
                                                                                                                                        {
                                                                                                                                            "conditions": [],
                                                                                                                                            "endpoint": {
                                                                                                                                                "url": "https://{accessPointName}-{bucketArn#accountId}.{outpostId}.s3-outposts.{bucketArn#region}.{bucketPartition#dnsSuffix}",
                                                                                                                                                "properties": {
                                                                                                                                                    "authSchemes": [
                                                                                                                                                        {
                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                            "name": "sigv4a",
                                                                                                                                                            "signingName": "s3-outposts",
                                                                                                                                                            "signingRegionSet": [
                                                                                                                                                                "*"
                                                                                                                                                            ]
                                                                                                                                                        },
                                                                                                                                                        {
                                                                                                                                                            "disableDoubleEncoding": true,
                                                                                                                                                            "name": "sigv4",
                                                                                                                                                            "signingName": "s3-outposts",
                                                                                                                                                            "signingRegion": "{bucketArn#region}"
                                                                                                                                                        }
                                                                                                                                                    ]
                                                                                                                                                },
                                                                                                                                                "headers": {}
                                                                                                                                            },
                                                                                                                                            "type": "endpoint"
                                                                                                                                        }
                                                                                                                                    ],
                                                                                                                                    "type": "tree"
                                                                                                                                },
                                                                                                                                {
                                                                                                                                    "conditions": [],
                                                                                                                                    "error": "Expected an outpost type `accesspoint`, found {outpostType}",
                                                                                                                                    "type": "error"
                                                                                                                                }
                                                                                                                            ],
                                                                                                                            "type": "tree"
                                                                                                                        },
                                                                                                                        {
                                                                                                                            "conditions": [],
                                                                                                                            "error": "Invalid ARN: expected an access point name",
                                                                                                                            "type": "error"
                                                                                                                        }
                                                                                                                    ],
                                                                                                                    "type": "tree"
                                                                                                                },
                                                                                                                {
                                                                                                                    "conditions": [],
                                                                                                                    "error": "Invalid ARN: Expected a 4-component resource",
                                                                                                                    "type": "error"
                                                                                                                }
                                                                                                            ],
                                                                                                            "type": "tree"
                                                                                                        },
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "error": "Invalid ARN: The account id may only contain a-z, A-Z, 0-9 and `-`. Found: `{bucketArn#accountId}`",
                                                                                                            "type": "error"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "Invalid region in ARN: `{bucketArn#region}` (invalid DNS name)",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [],
                                                                                            "error": "Client was configured for partition `{partitionResult#name}` but ARN (`{Bucket}`) has `{bucketPartition#name}`",
                                                                                            "type": "error"
                                                                                        }
                                                                                    ],
                                                                                    "type": "tree"
                                                                                }
                                                                            ],
                                                                            "type": "tree"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "error": "Invalid ARN: The outpost Id may only contain a-z, A-Z, 0-9 and `-`. Found: `{outpostId}`",
                                                                    "type": "error"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "error": "Invalid ARN: The Outpost Id was not set",
                                                            "type": "error"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "Invalid ARN: Unrecognized format: {Bucket} (type: {arnType})",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "Invalid ARN: No ARN type specified",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "substring",
                                            "argv": [
                                                {
                                                    "ref": "Bucket"
                                                },
                                                0,
                                                4,
                                                false
                                            ],
                                            "assign": "arnPrefix"
                                        },
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                {
                                                    "ref": "arnPrefix"
                                                },
                                                "arn:"
                                            ]
                                        },
                                        {
                                            "fn": "not",
                                            "argv": [
                                                {
                                                    "fn": "isSet",
                                                    "argv": [
                                                        {
                                                            "fn": "aws.parseArn",
                                                            "argv": [
                                                                {
                                                                    "ref": "Bucket"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "error": "Invalid ARN: `{Bucket}` was not a valid ARN",
                                    "type": "error"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "ForcePathStyle"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "aws.parseArn",
                                            "argv": [
                                                {
                                                    "ref": "Bucket"
                                                }
                                            ]
                                        }
                                    ],
                                    "error": "Path-style addressing cannot be used with ARN buckets",
                                    "type": "error"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "uriEncode",
                                            "argv": [
                                                {
                                                    "ref": "Bucket"
                                                }
                                            ],
                                            "assign": "uri_encoded_bucket"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "aws.partition",
                                                    "argv": [
                                                        {
                                                            "ref": "Region"
                                                        }
                                                    ],
                                                    "assign": "partitionResult"
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Accelerate"
                                                                },
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://s3-fips.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://s3-fips.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://s3-fips.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        true
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{url#authority}{url#normalizedPath}{uri_encoded_bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "us-east-1"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "endpoint": {
                                                                        "url": "{url#scheme}://{url#authority}{url#normalizedPath}{uri_encoded_bucket}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "{url#scheme}://{url#authority}{url#normalizedPath}{uri_encoded_bucket}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "parseURL",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ],
                                                                    "assign": "url"
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{url#authority}{url#normalizedPath}{uri_encoded_bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://s3.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "us-east-1"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        true
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "us-east-1"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "endpoint": {
                                                                        "url": "https://s3.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://s3.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                        "properties": {
                                                                            "authSchemes": [
                                                                                {
                                                                                    "disableDoubleEncoding": true,
                                                                                    "name": "sigv4",
                                                                                    "signingName": "s3",
                                                                                    "signingRegion": "{Region}"
                                                                                }
                                                                            ]
                                                                        },
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseDualStack"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "isSet",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Endpoint"
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseFIPS"
                                                                        },
                                                                        false
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "Region"
                                                                                },
                                                                                "aws-global"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                {
                                                                    "fn": "booleanEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "UseGlobalEndpoint"
                                                                        },
                                                                        false
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://s3.{Region}.{partitionResult#dnsSuffix}/{uri_encoded_bucket}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "Path-style addressing cannot be used with S3 Accelerate",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "UseObjectLambdaEndpoint"
                                        }
                                    ]
                                },
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseObjectLambdaEndpoint"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "partitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "isValidHostLabel",
                                                    "argv": [
                                                        {
                                                            "ref": "Region"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "error": "S3 Object Lambda does not support Dual-stack",
                                                    "type": "error"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Accelerate"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "error": "S3 Object Lambda does not support S3 Accelerate",
                                                    "type": "error"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "isSet",
                                                            "argv": [
                                                                {
                                                                    "ref": "Endpoint"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "parseURL",
                                                            "argv": [
                                                                {
                                                                    "ref": "Endpoint"
                                                                }
                                                            ],
                                                            "assign": "url"
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "{url#scheme}://{url#authority}{url#path}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3-object-lambda",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://s3-object-lambda-fips.{Region}.{partitionResult#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3-object-lambda",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://s3-object-lambda.{Region}.{partitionResult#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3-object-lambda",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "Invalid region: region was not a valid DNS name.",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "not",
                                    "argv": [
                                        {
                                            "fn": "isSet",
                                            "argv": [
                                                {
                                                    "ref": "Bucket"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "partitionResult"
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "isValidHostLabel",
                                                    "argv": [
                                                        {
                                                            "ref": "Region"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "aws-global"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://s3-fips.dualstack.us-east-1.{partitionResult#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3",
                                                                    "signingRegion": "us-east-1"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseGlobalEndpoint"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseGlobalEndpoint"
                                                                },
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://s3-fips.dualstack.{Region}.{partitionResult#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "aws-global"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://s3-fips.us-east-1.{partitionResult#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3",
                                                                    "signingRegion": "us-east-1"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseGlobalEndpoint"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://s3-fips.{Region}.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseGlobalEndpoint"
                                                                },
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://s3-fips.{Region}.{partitionResult#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "aws-global"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://s3.dualstack.us-east-1.{partitionResult#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3",
                                                                    "signingRegion": "us-east-1"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseGlobalEndpoint"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseGlobalEndpoint"
                                                                },
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://s3.dualstack.{Region}.{partitionResult#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "isSet",
                                                            "argv": [
                                                                {
                                                                    "ref": "Endpoint"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "parseURL",
                                                            "argv": [
                                                                {
                                                                    "ref": "Endpoint"
                                                                }
                                                            ],
                                                            "assign": "url"
                                                        },
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "aws-global"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "{url#scheme}://{url#authority}{url#path}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3",
                                                                    "signingRegion": "us-east-1"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "isSet",
                                                            "argv": [
                                                                {
                                                                    "ref": "Endpoint"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "parseURL",
                                                            "argv": [
                                                                {
                                                                    "ref": "Endpoint"
                                                                }
                                                            ],
                                                            "assign": "url"
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseGlobalEndpoint"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "us-east-1"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{url#authority}{url#path}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "{url#scheme}://{url#authority}{url#path}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "isSet",
                                                            "argv": [
                                                                {
                                                                    "ref": "Endpoint"
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "parseURL",
                                                            "argv": [
                                                                {
                                                                    "ref": "Endpoint"
                                                                }
                                                            ],
                                                            "assign": "url"
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseGlobalEndpoint"
                                                                },
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "{url#scheme}://{url#authority}{url#path}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "aws-global"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://s3.{partitionResult#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3",
                                                                    "signingRegion": "us-east-1"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseGlobalEndpoint"
                                                                },
                                                                true
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "us-east-1"
                                                                    ]
                                                                }
                                                            ],
                                                            "endpoint": {
                                                                "url": "https://s3.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "endpoint": {
                                                                "url": "https://s3.{Region}.{partitionResult#dnsSuffix}",
                                                                "properties": {
                                                                    "authSchemes": [
                                                                        {
                                                                            "disableDoubleEncoding": true,
                                                                            "name": "sigv4",
                                                                            "signingName": "s3",
                                                                            "signingRegion": "{Region}"
                                                                        }
                                                                    ]
                                                                },
                                                                "headers": {}
                                                            },
                                                            "type": "endpoint"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseFIPS"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseDualStack"
                                                                },
                                                                false
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "isSet",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Endpoint"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "not",
                                                            "argv": [
                                                                {
                                                                    "fn": "stringEquals",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "Region"
                                                                        },
                                                                        "aws-global"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "UseGlobalEndpoint"
                                                                },
                                                                false
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://s3.{Region}.{partitionResult#dnsSuffix}",
                                                        "properties": {
                                                            "authSchemes": [
                                                                {
                                                                    "disableDoubleEncoding": true,
                                                                    "name": "sigv4",
                                                                    "signingName": "s3",
                                                                    "signingRegion": "{Region}"
                                                                }
                                                            ]
                                                        },
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "Invalid region: region was not a valid DNS name.",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "A region must be set when sending requests to S3.",
                    "type": "error"
                }
            ]
        }
    }
}
