{
    "name": "sts",
    "commands": [
        {
            "name": "AssumeRole",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSSecurityTokenServiceV20110615.AssumeRole"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssumeRoleResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssumeRoleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssumeRoleWithSAML",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSSecurityTokenServiceV20110615.AssumeRoleWithSAML"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssumeRoleWithSAMLResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssumeRoleWithSAMLRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssumeRoleWithWebIdentity",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSSecurityTokenServiceV20110615.AssumeRoleWithWebIdentity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssumeRoleWithWebIdentityResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssumeRoleWithWebIdentityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssumeRoot",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSSecurityTokenServiceV20110615.AssumeRoot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssumeRootResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssumeRootRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DecodeAuthorizationMessage",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSSecurityTokenServiceV20110615.DecodeAuthorizationMessage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DecodeAuthorizationMessageResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DecodeAuthorizationMessageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAccessKeyInfo",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSSecurityTokenServiceV20110615.GetAccessKeyInfo"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAccessKeyInfoResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetAccessKeyInfoRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCallerIdentity",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSSecurityTokenServiceV20110615.GetCallerIdentity"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCallerIdentityResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetCallerIdentityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFederationToken",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSSecurityTokenServiceV20110615.GetFederationToken"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFederationTokenResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetFederationTokenRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSessionToken",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSSecurityTokenServiceV20110615.GetSessionToken"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSessionTokenResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSessionTokenRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssumeRoleResponse": {
            "type": "object",
            "properties": {
                "Credentials": {
                    "$ref": "#/$defs/Credentials"
                },
                "AssumedRoleUser": {
                    "$ref": "#/$defs/AssumedRoleUser"
                },
                "PackedPolicySize": {
                    "$ref": "#/$defs/nonNegativeIntegerType"
                },
                "SourceIdentity": {
                    "$ref": "#/$defs/sourceIdentityType"
                }
            }
        },
        "Credentials": {
            "type": "object",
            "properties": {
                "AccessKeyId": {
                    "$ref": "#/$defs/accessKeyIdType"
                },
                "SecretAccessKey": {
                    "$ref": "#/$defs/accessKeySecretType"
                },
                "SessionToken": {
                    "$ref": "#/$defs/tokenType"
                },
                "Expiration": {
                    "$ref": "#/$defs/dateType"
                }
            }
        },
        "accessKeyIdType": {
            "type": "string"
        },
        "accessKeySecretType": {
            "type": "string"
        },
        "tokenType": {
            "type": "string"
        },
        "dateType": {
            "type": "string",
            "format": "date-time"
        },
        "AssumedRoleUser": {
            "type": "object",
            "properties": {
                "AssumedRoleId": {
                    "$ref": "#/$defs/assumedRoleIdType"
                },
                "Arn": {
                    "$ref": "#/$defs/arnType"
                }
            }
        },
        "assumedRoleIdType": {
            "type": "string"
        },
        "arnType": {
            "type": "string"
        },
        "nonNegativeIntegerType": {
            "type": "integer",
            "format": "int32"
        },
        "sourceIdentityType": {
            "type": "string"
        },
        "AssumeRoleRequest": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/arnType"
                },
                "RoleSessionName": {
                    "$ref": "#/$defs/roleSessionNameType"
                },
                "PolicyArns": {
                    "$ref": "#/$defs/policyDescriptorListType"
                },
                "Policy": {
                    "$ref": "#/$defs/unrestrictedSessionPolicyDocumentType"
                },
                "DurationSeconds": {
                    "$ref": "#/$defs/roleDurationSecondsType"
                },
                "Tags": {
                    "$ref": "#/$defs/tagListType"
                },
                "TransitiveTagKeys": {
                    "$ref": "#/$defs/tagKeyListType"
                },
                "ExternalId": {
                    "$ref": "#/$defs/externalIdType"
                },
                "SerialNumber": {
                    "$ref": "#/$defs/serialNumberType"
                },
                "TokenCode": {
                    "$ref": "#/$defs/tokenCodeType"
                },
                "SourceIdentity": {
                    "$ref": "#/$defs/sourceIdentityType"
                },
                "ProvidedContexts": {
                    "$ref": "#/$defs/ProvidedContextsListType"
                }
            }
        },
        "roleSessionNameType": {
            "type": "string"
        },
        "policyDescriptorListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PolicyDescriptorType"
            }
        },
        "PolicyDescriptorType": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/arnType"
                }
            }
        },
        "unrestrictedSessionPolicyDocumentType": {
            "type": "string"
        },
        "roleDurationSecondsType": {
            "type": "integer",
            "format": "int32"
        },
        "tagListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/tagKeyType"
                },
                "Value": {
                    "$ref": "#/$defs/tagValueType"
                }
            }
        },
        "tagKeyType": {
            "type": "string"
        },
        "tagValueType": {
            "type": "string"
        },
        "tagKeyListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/tagKeyType"
            }
        },
        "externalIdType": {
            "type": "string"
        },
        "serialNumberType": {
            "type": "string"
        },
        "tokenCodeType": {
            "type": "string"
        },
        "ProvidedContextsListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProvidedContext"
            }
        },
        "ProvidedContext": {
            "type": "object",
            "properties": {
                "ProviderArn": {
                    "$ref": "#/$defs/arnType"
                },
                "ContextAssertion": {
                    "$ref": "#/$defs/contextAssertionType"
                }
            }
        },
        "contextAssertionType": {
            "type": "string"
        },
        "AssumeRoleWithSAMLResponse": {
            "type": "object",
            "properties": {
                "Credentials": {
                    "$ref": "#/$defs/Credentials"
                },
                "AssumedRoleUser": {
                    "$ref": "#/$defs/AssumedRoleUser"
                },
                "PackedPolicySize": {
                    "$ref": "#/$defs/nonNegativeIntegerType"
                },
                "Subject": {
                    "$ref": "#/$defs/Subject"
                },
                "SubjectType": {
                    "$ref": "#/$defs/SubjectType"
                },
                "Issuer": {
                    "$ref": "#/$defs/Issuer"
                },
                "Audience": {
                    "$ref": "#/$defs/Audience"
                },
                "NameQualifier": {
                    "$ref": "#/$defs/NameQualifier"
                },
                "SourceIdentity": {
                    "$ref": "#/$defs/sourceIdentityType"
                }
            }
        },
        "Subject": {
            "type": "string"
        },
        "SubjectType": {
            "type": "string"
        },
        "Issuer": {
            "type": "string"
        },
        "Audience": {
            "type": "string"
        },
        "NameQualifier": {
            "type": "string"
        },
        "AssumeRoleWithSAMLRequest": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/arnType"
                },
                "PrincipalArn": {
                    "$ref": "#/$defs/arnType"
                },
                "SAMLAssertion": {
                    "$ref": "#/$defs/SAMLAssertionType"
                },
                "PolicyArns": {
                    "$ref": "#/$defs/policyDescriptorListType"
                },
                "Policy": {
                    "$ref": "#/$defs/sessionPolicyDocumentType"
                },
                "DurationSeconds": {
                    "$ref": "#/$defs/roleDurationSecondsType"
                }
            }
        },
        "SAMLAssertionType": {
            "type": "string"
        },
        "sessionPolicyDocumentType": {
            "type": "string"
        },
        "AssumeRoleWithWebIdentityResponse": {
            "type": "object",
            "properties": {
                "Credentials": {
                    "$ref": "#/$defs/Credentials"
                },
                "SubjectFromWebIdentityToken": {
                    "$ref": "#/$defs/webIdentitySubjectType"
                },
                "AssumedRoleUser": {
                    "$ref": "#/$defs/AssumedRoleUser"
                },
                "PackedPolicySize": {
                    "$ref": "#/$defs/nonNegativeIntegerType"
                },
                "Provider": {
                    "$ref": "#/$defs/Issuer"
                },
                "Audience": {
                    "$ref": "#/$defs/Audience"
                },
                "SourceIdentity": {
                    "$ref": "#/$defs/sourceIdentityType"
                }
            }
        },
        "webIdentitySubjectType": {
            "type": "string"
        },
        "AssumeRoleWithWebIdentityRequest": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/arnType"
                },
                "RoleSessionName": {
                    "$ref": "#/$defs/roleSessionNameType"
                },
                "WebIdentityToken": {
                    "$ref": "#/$defs/clientTokenType"
                },
                "ProviderId": {
                    "$ref": "#/$defs/urlType"
                },
                "PolicyArns": {
                    "$ref": "#/$defs/policyDescriptorListType"
                },
                "Policy": {
                    "$ref": "#/$defs/sessionPolicyDocumentType"
                },
                "DurationSeconds": {
                    "$ref": "#/$defs/roleDurationSecondsType"
                }
            }
        },
        "clientTokenType": {
            "type": "string"
        },
        "urlType": {
            "type": "string"
        },
        "AssumeRootResponse": {
            "type": "object",
            "properties": {
                "Credentials": {
                    "$ref": "#/$defs/Credentials"
                },
                "SourceIdentity": {
                    "$ref": "#/$defs/sourceIdentityType"
                }
            }
        },
        "AssumeRootRequest": {
            "type": "object",
            "properties": {
                "TargetPrincipal": {
                    "$ref": "#/$defs/TargetPrincipalType"
                },
                "TaskPolicyArn": {
                    "$ref": "#/$defs/PolicyDescriptorType"
                },
                "DurationSeconds": {
                    "$ref": "#/$defs/RootDurationSecondsType"
                }
            }
        },
        "TargetPrincipalType": {
            "type": "string"
        },
        "RootDurationSecondsType": {
            "type": "integer",
            "format": "int32"
        },
        "DecodeAuthorizationMessageResponse": {
            "type": "object",
            "properties": {
                "DecodedMessage": {
                    "$ref": "#/$defs/decodedMessageType"
                }
            }
        },
        "decodedMessageType": {
            "type": "string"
        },
        "DecodeAuthorizationMessageRequest": {
            "type": "object",
            "properties": {
                "EncodedMessage": {
                    "$ref": "#/$defs/encodedMessageType"
                }
            }
        },
        "encodedMessageType": {
            "type": "string"
        },
        "GetAccessKeyInfoResponse": {
            "type": "object",
            "properties": {
                "Account": {
                    "$ref": "#/$defs/accountType"
                }
            }
        },
        "accountType": {
            "type": "string"
        },
        "GetAccessKeyInfoRequest": {
            "type": "object",
            "properties": {
                "AccessKeyId": {
                    "$ref": "#/$defs/accessKeyIdType"
                }
            }
        },
        "GetCallerIdentityResponse": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/userIdType"
                },
                "Account": {
                    "$ref": "#/$defs/accountType"
                },
                "Arn": {
                    "$ref": "#/$defs/arnType"
                }
            }
        },
        "userIdType": {
            "type": "string"
        },
        "GetCallerIdentityRequest": {
            "type": "object",
            "properties": {}
        },
        "GetFederationTokenResponse": {
            "type": "object",
            "properties": {
                "Credentials": {
                    "$ref": "#/$defs/Credentials"
                },
                "FederatedUser": {
                    "$ref": "#/$defs/FederatedUser"
                },
                "PackedPolicySize": {
                    "$ref": "#/$defs/nonNegativeIntegerType"
                }
            }
        },
        "FederatedUser": {
            "type": "object",
            "properties": {
                "FederatedUserId": {
                    "$ref": "#/$defs/federatedIdType"
                },
                "Arn": {
                    "$ref": "#/$defs/arnType"
                }
            }
        },
        "federatedIdType": {
            "type": "string"
        },
        "GetFederationTokenRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/userNameType"
                },
                "Policy": {
                    "$ref": "#/$defs/sessionPolicyDocumentType"
                },
                "PolicyArns": {
                    "$ref": "#/$defs/policyDescriptorListType"
                },
                "DurationSeconds": {
                    "$ref": "#/$defs/durationSecondsType"
                },
                "Tags": {
                    "$ref": "#/$defs/tagListType"
                }
            }
        },
        "userNameType": {
            "type": "string"
        },
        "durationSecondsType": {
            "type": "integer",
            "format": "int32"
        },
        "GetSessionTokenResponse": {
            "type": "object",
            "properties": {
                "Credentials": {
                    "$ref": "#/$defs/Credentials"
                }
            }
        },
        "GetSessionTokenRequest": {
            "type": "object",
            "properties": {
                "DurationSeconds": {
                    "$ref": "#/$defs/durationSecondsType"
                },
                "SerialNumber": {
                    "$ref": "#/$defs/serialNumberType"
                },
                "TokenCode": {
                    "$ref": "#/$defs/tokenCodeType"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                },
                "UseGlobalEndpoint": {
                    "builtIn": "AWS::STS::UseGlobalEndpoint",
                    "required": true,
                    "default": false,
                    "documentation": "Whether the global endpoint should be used, rather then the regional endpoint for us-east-1.",
                    "type": "Boolean"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "booleanEquals",
                            "argv": [
                                {
                                    "ref": "UseGlobalEndpoint"
                                },
                                true
                            ]
                        },
                        {
                            "fn": "not",
                            "argv": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Endpoint"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        },
                        {
                            "fn": "aws.partition",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ],
                            "assign": "PartitionResult"
                        },
                        {
                            "fn": "booleanEquals",
                            "argv": [
                                {
                                    "ref": "UseFIPS"
                                },
                                false
                            ]
                        },
                        {
                            "fn": "booleanEquals",
                            "argv": [
                                {
                                    "ref": "UseDualStack"
                                },
                                false
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "ap-northeast-1"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "ap-south-1"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "ap-southeast-1"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "ap-southeast-2"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "aws-global"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "ca-central-1"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "eu-central-1"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "eu-north-1"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "eu-west-1"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "eu-west-2"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "eu-west-3"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "sa-east-1"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "us-east-1"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "us-east-2"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "us-west-1"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        },
                                        "us-west-2"
                                    ]
                                }
                            ],
                            "endpoint": {
                                "url": "https://sts.amazonaws.com",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "us-east-1"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": "https://sts.{Region}.{PartitionResult#dnsSuffix}",
                                "properties": {
                                    "authSchemes": [
                                        {
                                            "name": "sigv4",
                                            "signingName": "sts",
                                            "signingRegion": "{Region}"
                                        }
                                    ]
                                },
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://sts.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://sts-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                },
                                                "aws-global"
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://sts.amazonaws.com",
                                        "properties": {
                                            "authSchemes": [
                                                {
                                                    "name": "sigv4",
                                                    "signingName": "sts",
                                                    "signingRegion": "us-east-1"
                                                }
                                            ]
                                        },
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://sts.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
