{
    "name": "route53resolver",
    "commands": [
        {
            "name": "AssociateFirewallRuleGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateFirewallRuleGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateFirewallRuleGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateFirewallRuleGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateResolverEndpointIpAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateResolverEndpointIpAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateResolverEndpointIpAddressResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateResolverEndpointIpAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateResolverQueryLogConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateResolverQueryLogConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateResolverQueryLogConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateResolverQueryLogConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateResolverRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateResolverRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateResolverRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateResolverRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFirewallDomainList",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateFirewallDomainList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFirewallDomainListResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFirewallDomainListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFirewallRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateFirewallRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFirewallRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFirewallRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFirewallRuleGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateFirewallRuleGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFirewallRuleGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFirewallRuleGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateOutpostResolver",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateOutpostResolver"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateOutpostResolverResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateOutpostResolverRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateResolverEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateResolverEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateResolverEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateResolverEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateResolverQueryLogConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateResolverQueryLogConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateResolverQueryLogConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateResolverQueryLogConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateResolverRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateResolverRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateResolverRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateResolverRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFirewallDomainList",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteFirewallDomainList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFirewallDomainListResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFirewallDomainListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFirewallRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteFirewallRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFirewallRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFirewallRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFirewallRuleGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteFirewallRuleGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFirewallRuleGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFirewallRuleGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteOutpostResolver",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteOutpostResolver"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteOutpostResolverResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteOutpostResolverRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResolverEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteResolverEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteResolverEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResolverEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResolverQueryLogConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteResolverQueryLogConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteResolverQueryLogConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResolverQueryLogConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResolverRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteResolverRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteResolverRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResolverRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateFirewallRuleGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateFirewallRuleGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateFirewallRuleGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateFirewallRuleGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateResolverEndpointIpAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateResolverEndpointIpAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateResolverEndpointIpAddressResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateResolverEndpointIpAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateResolverQueryLogConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateResolverQueryLogConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateResolverQueryLogConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateResolverQueryLogConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateResolverRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateResolverRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateResolverRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateResolverRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFirewallConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFirewallConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFirewallConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFirewallConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFirewallDomainList",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFirewallDomainList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFirewallDomainListResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFirewallDomainListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFirewallRuleGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFirewallRuleGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFirewallRuleGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFirewallRuleGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFirewallRuleGroupAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFirewallRuleGroupAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFirewallRuleGroupAssociationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFirewallRuleGroupAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFirewallRuleGroupPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFirewallRuleGroupPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFirewallRuleGroupPolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFirewallRuleGroupPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetOutpostResolver",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetOutpostResolver"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOutpostResolverResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOutpostResolverRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResolverConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResolverConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResolverConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResolverConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResolverDnssecConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResolverDnssecConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResolverDnssecConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResolverDnssecConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResolverEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResolverEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResolverEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResolverEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResolverQueryLogConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResolverQueryLogConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResolverQueryLogConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResolverQueryLogConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResolverQueryLogConfigAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResolverQueryLogConfigAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResolverQueryLogConfigAssociationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResolverQueryLogConfigAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResolverQueryLogConfigPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResolverQueryLogConfigPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResolverQueryLogConfigPolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResolverQueryLogConfigPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResolverRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResolverRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResolverRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResolverRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResolverRuleAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResolverRuleAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResolverRuleAssociationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResolverRuleAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResolverRulePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResolverRulePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResolverRulePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResolverRulePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportFirewallDomains",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ImportFirewallDomains"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportFirewallDomainsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportFirewallDomainsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFirewallConfigs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFirewallConfigs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFirewallConfigsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFirewallConfigsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFirewallDomainLists",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFirewallDomainLists"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFirewallDomainListsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFirewallDomainListsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFirewallDomains",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFirewallDomains"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFirewallDomainsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFirewallDomainsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFirewallRuleGroupAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFirewallRuleGroupAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFirewallRuleGroupAssociationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFirewallRuleGroupAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFirewallRuleGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFirewallRuleGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFirewallRuleGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFirewallRuleGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFirewallRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFirewallRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFirewallRulesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFirewallRulesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListOutpostResolvers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListOutpostResolvers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOutpostResolversResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOutpostResolversRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResolverConfigs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResolverConfigs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResolverConfigsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResolverConfigsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResolverDnssecConfigs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResolverDnssecConfigs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResolverDnssecConfigsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResolverDnssecConfigsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResolverEndpointIpAddresses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResolverEndpointIpAddresses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResolverEndpointIpAddressesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResolverEndpointIpAddressesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResolverEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResolverEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResolverEndpointsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResolverEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResolverQueryLogConfigAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResolverQueryLogConfigAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResolverQueryLogConfigAssociationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResolverQueryLogConfigAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResolverQueryLogConfigs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResolverQueryLogConfigs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResolverQueryLogConfigsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResolverQueryLogConfigsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResolverRuleAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResolverRuleAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResolverRuleAssociationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResolverRuleAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResolverRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResolverRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResolverRulesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResolverRulesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutFirewallRuleGroupPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutFirewallRuleGroupPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutFirewallRuleGroupPolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutFirewallRuleGroupPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutResolverQueryLogConfigPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutResolverQueryLogConfigPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutResolverQueryLogConfigPolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutResolverQueryLogConfigPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutResolverRulePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutResolverRulePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutResolverRulePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutResolverRulePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFirewallConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateFirewallConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFirewallConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFirewallConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFirewallDomains",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateFirewallDomains"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFirewallDomainsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFirewallDomainsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFirewallRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateFirewallRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFirewallRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFirewallRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFirewallRuleGroupAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateFirewallRuleGroupAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFirewallRuleGroupAssociationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFirewallRuleGroupAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateOutpostResolver",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateOutpostResolver"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateOutpostResolverResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateOutpostResolverRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateResolverConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateResolverConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResolverConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResolverConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateResolverDnssecConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateResolverDnssecConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResolverDnssecConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResolverDnssecConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateResolverEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateResolverEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResolverEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResolverEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateResolverRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateResolverRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResolverRuleResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResolverRuleRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateFirewallRuleGroupResponse": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupAssociation": {
                    "$ref": "#/$defs/FirewallRuleGroupAssociation"
                }
            }
        },
        "FirewallRuleGroupAssociation": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "FirewallRuleGroupId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "VpcId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                },
                "MutationProtection": {
                    "$ref": "#/$defs/MutationProtectionStatus"
                },
                "ManagedOwnerName": {
                    "$ref": "#/$defs/ServicePrinciple"
                },
                "Status": {
                    "$ref": "#/$defs/FirewallRuleGroupAssociationStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "ModificationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                }
            }
        },
        "ResourceId": {
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "Name": {
            "type": "string"
        },
        "Priority": {
            "type": "integer",
            "format": "int32"
        },
        "MutationProtectionStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "ServicePrinciple": {
            "type": "string"
        },
        "FirewallRuleGroupAssociationStatus": {
            "enum": [
                "COMPLETE",
                "DELETING",
                "UPDATING"
            ]
        },
        "StatusMessage": {
            "type": "string"
        },
        "CreatorRequestId": {
            "type": "string"
        },
        "Rfc3339TimeString": {
            "type": "string"
        },
        "AssociateFirewallRuleGroupRequest": {
            "type": "object",
            "properties": {
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "FirewallRuleGroupId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "VpcId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "MutationProtection": {
                    "$ref": "#/$defs/MutationProtectionStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "AssociateResolverEndpointIpAddressResponse": {
            "type": "object",
            "properties": {
                "ResolverEndpoint": {
                    "$ref": "#/$defs/ResolverEndpoint"
                }
            }
        },
        "ResolverEndpoint": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIds"
                },
                "Direction": {
                    "$ref": "#/$defs/ResolverEndpointDirection"
                },
                "IpAddressCount": {
                    "$ref": "#/$defs/IpAddressCount"
                },
                "HostVPCId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Status": {
                    "$ref": "#/$defs/ResolverEndpointStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "ModificationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/OutpostArn"
                },
                "PreferredInstanceType": {
                    "$ref": "#/$defs/OutpostInstanceType"
                },
                "ResolverEndpointType": {
                    "$ref": "#/$defs/ResolverEndpointType"
                },
                "Protocols": {
                    "$ref": "#/$defs/ProtocolList"
                }
            }
        },
        "SecurityGroupIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceId"
            }
        },
        "ResolverEndpointDirection": {
            "enum": [
                "Inbound",
                "Outbound"
            ]
        },
        "IpAddressCount": {
            "type": "integer",
            "format": "int32"
        },
        "ResolverEndpointStatus": {
            "enum": [
                "Creating",
                "Operational",
                "Updating",
                "AutoRecovering",
                "ActionNeeded",
                "Deleting"
            ]
        },
        "OutpostArn": {
            "type": "string"
        },
        "OutpostInstanceType": {
            "type": "string"
        },
        "ResolverEndpointType": {
            "enum": [
                "IPV6",
                "IPV4",
                "DUALSTACK"
            ]
        },
        "ProtocolList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Protocol"
            }
        },
        "Protocol": {
            "enum": [
                "DOH",
                "DO53",
                "DOHFIPS"
            ]
        },
        "AssociateResolverEndpointIpAddressRequest": {
            "type": "object",
            "properties": {
                "ResolverEndpointId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "IpAddress": {
                    "$ref": "#/$defs/IpAddressUpdate"
                }
            }
        },
        "IpAddressUpdate": {
            "type": "object",
            "properties": {
                "IpId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "Ipv6": {
                    "$ref": "#/$defs/Ipv6"
                }
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "Ip": {
            "type": "string"
        },
        "Ipv6": {
            "type": "string"
        },
        "AssociateResolverQueryLogConfigResponse": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfigAssociation": {
                    "$ref": "#/$defs/ResolverQueryLogConfigAssociation"
                }
            }
        },
        "ResolverQueryLogConfigAssociation": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "ResolverQueryLogConfigId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Status": {
                    "$ref": "#/$defs/ResolverQueryLogConfigAssociationStatus"
                },
                "Error": {
                    "$ref": "#/$defs/ResolverQueryLogConfigAssociationError"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ResolverQueryLogConfigAssociationErrorMessage"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                }
            }
        },
        "ResolverQueryLogConfigAssociationStatus": {
            "enum": [
                "Creating",
                "Active",
                "ActionNeeded",
                "Deleting",
                "Failed"
            ]
        },
        "ResolverQueryLogConfigAssociationError": {
            "enum": [
                "None",
                "DestinationNotFound",
                "AccessDenied",
                "InternalServiceError"
            ]
        },
        "ResolverQueryLogConfigAssociationErrorMessage": {
            "type": "string"
        },
        "AssociateResolverQueryLogConfigRequest": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfigId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "AssociateResolverRuleResponse": {
            "type": "object",
            "properties": {
                "ResolverRuleAssociation": {
                    "$ref": "#/$defs/ResolverRuleAssociation"
                }
            }
        },
        "ResolverRuleAssociation": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "ResolverRuleId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "VPCId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Status": {
                    "$ref": "#/$defs/ResolverRuleAssociationStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                }
            }
        },
        "ResolverRuleAssociationStatus": {
            "enum": [
                "Creating",
                "Complete",
                "Deleting",
                "Failed",
                "Overridden"
            ]
        },
        "AssociateResolverRuleRequest": {
            "type": "object",
            "properties": {
                "ResolverRuleId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "VPCId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "CreateFirewallDomainListResponse": {
            "type": "object",
            "properties": {
                "FirewallDomainList": {
                    "$ref": "#/$defs/FirewallDomainList"
                }
            }
        },
        "FirewallDomainList": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "DomainCount": {
                    "$ref": "#/$defs/Unsigned"
                },
                "Status": {
                    "$ref": "#/$defs/FirewallDomainListStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "ManagedOwnerName": {
                    "$ref": "#/$defs/ServicePrinciple"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "ModificationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                }
            }
        },
        "Unsigned": {
            "type": "integer",
            "format": "int32"
        },
        "FirewallDomainListStatus": {
            "enum": [
                "COMPLETE",
                "COMPLETE_IMPORT_FAILED",
                "IMPORTING",
                "DELETING",
                "UPDATING"
            ]
        },
        "CreateFirewallDomainListRequest": {
            "type": "object",
            "properties": {
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateFirewallRuleResponse": {
            "type": "object",
            "properties": {
                "FirewallRule": {
                    "$ref": "#/$defs/FirewallRule"
                }
            }
        },
        "FirewallRule": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "FirewallDomainListId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                },
                "Action": {
                    "$ref": "#/$defs/Action"
                },
                "BlockResponse": {
                    "$ref": "#/$defs/BlockResponse"
                },
                "BlockOverrideDomain": {
                    "$ref": "#/$defs/BlockOverrideDomain"
                },
                "BlockOverrideDnsType": {
                    "$ref": "#/$defs/BlockOverrideDnsType"
                },
                "BlockOverrideTtl": {
                    "$ref": "#/$defs/Unsigned"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "ModificationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "FirewallDomainRedirectionAction": {
                    "$ref": "#/$defs/FirewallDomainRedirectionAction"
                },
                "Qtype": {
                    "$ref": "#/$defs/Qtype"
                }
            }
        },
        "Action": {
            "enum": [
                "ALLOW",
                "BLOCK",
                "ALERT"
            ]
        },
        "BlockResponse": {
            "enum": [
                "NODATA",
                "NXDOMAIN",
                "OVERRIDE"
            ]
        },
        "BlockOverrideDomain": {
            "type": "string"
        },
        "BlockOverrideDnsType": {
            "enum": [
                "CNAME"
            ]
        },
        "FirewallDomainRedirectionAction": {
            "enum": [
                "INSPECT_REDIRECTION_DOMAIN",
                "TRUST_REDIRECTION_DOMAIN"
            ]
        },
        "Qtype": {
            "type": "string"
        },
        "CreateFirewallRuleRequest": {
            "type": "object",
            "properties": {
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "FirewallRuleGroupId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "FirewallDomainListId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                },
                "Action": {
                    "$ref": "#/$defs/Action"
                },
                "BlockResponse": {
                    "$ref": "#/$defs/BlockResponse"
                },
                "BlockOverrideDomain": {
                    "$ref": "#/$defs/BlockOverrideDomain"
                },
                "BlockOverrideDnsType": {
                    "$ref": "#/$defs/BlockOverrideDnsType"
                },
                "BlockOverrideTtl": {
                    "$ref": "#/$defs/BlockOverrideTtl"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "FirewallDomainRedirectionAction": {
                    "$ref": "#/$defs/FirewallDomainRedirectionAction"
                },
                "Qtype": {
                    "$ref": "#/$defs/Qtype"
                }
            }
        },
        "BlockOverrideTtl": {
            "type": "integer",
            "format": "int32"
        },
        "CreateFirewallRuleGroupResponse": {
            "type": "object",
            "properties": {
                "FirewallRuleGroup": {
                    "$ref": "#/$defs/FirewallRuleGroup"
                }
            }
        },
        "FirewallRuleGroup": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "RuleCount": {
                    "$ref": "#/$defs/Unsigned"
                },
                "Status": {
                    "$ref": "#/$defs/FirewallRuleGroupStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "OwnerId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "ShareStatus": {
                    "$ref": "#/$defs/ShareStatus"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "ModificationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                }
            }
        },
        "FirewallRuleGroupStatus": {
            "enum": [
                "COMPLETE",
                "DELETING",
                "UPDATING"
            ]
        },
        "AccountId": {
            "type": "string"
        },
        "ShareStatus": {
            "enum": [
                "NotShared",
                "SharedWithMe",
                "SharedByMe"
            ]
        },
        "CreateFirewallRuleGroupRequest": {
            "type": "object",
            "properties": {
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateOutpostResolverResponse": {
            "type": "object",
            "properties": {
                "OutpostResolver": {
                    "$ref": "#/$defs/OutpostResolver"
                }
            }
        },
        "OutpostResolver": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "ModificationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/InstanceCount"
                },
                "PreferredInstanceType": {
                    "$ref": "#/$defs/OutpostInstanceType"
                },
                "Name": {
                    "$ref": "#/$defs/OutpostResolverName"
                },
                "Status": {
                    "$ref": "#/$defs/OutpostResolverStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/OutpostResolverStatusMessage"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/OutpostArn"
                }
            }
        },
        "InstanceCount": {
            "type": "integer",
            "format": "int32"
        },
        "OutpostResolverName": {
            "type": "string"
        },
        "OutpostResolverStatus": {
            "enum": [
                "CREATING",
                "OPERATIONAL",
                "UPDATING",
                "DELETING",
                "ACTION_NEEDED",
                "FAILED_CREATION",
                "FAILED_DELETION"
            ]
        },
        "OutpostResolverStatusMessage": {
            "type": "string"
        },
        "CreateOutpostResolverRequest": {
            "type": "object",
            "properties": {
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "Name": {
                    "$ref": "#/$defs/OutpostResolverName"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/InstanceCount"
                },
                "PreferredInstanceType": {
                    "$ref": "#/$defs/OutpostInstanceType"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/OutpostArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateResolverEndpointResponse": {
            "type": "object",
            "properties": {
                "ResolverEndpoint": {
                    "$ref": "#/$defs/ResolverEndpoint"
                }
            }
        },
        "CreateResolverEndpointRequest": {
            "type": "object",
            "properties": {
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIds"
                },
                "Direction": {
                    "$ref": "#/$defs/ResolverEndpointDirection"
                },
                "IpAddresses": {
                    "$ref": "#/$defs/IpAddressesRequest"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/OutpostArn"
                },
                "PreferredInstanceType": {
                    "$ref": "#/$defs/OutpostInstanceType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ResolverEndpointType": {
                    "$ref": "#/$defs/ResolverEndpointType"
                },
                "Protocols": {
                    "$ref": "#/$defs/ProtocolList"
                }
            }
        },
        "IpAddressesRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpAddressRequest"
            }
        },
        "IpAddressRequest": {
            "type": "object",
            "properties": {
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "Ipv6": {
                    "$ref": "#/$defs/Ipv6"
                }
            }
        },
        "CreateResolverQueryLogConfigResponse": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfig": {
                    "$ref": "#/$defs/ResolverQueryLogConfig"
                }
            }
        },
        "ResolverQueryLogConfig": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "OwnerId": {
                    "$ref": "#/$defs/AccountId"
                },
                "Status": {
                    "$ref": "#/$defs/ResolverQueryLogConfigStatus"
                },
                "ShareStatus": {
                    "$ref": "#/$defs/ShareStatus"
                },
                "AssociationCount": {
                    "$ref": "#/$defs/Count"
                },
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "Name": {
                    "$ref": "#/$defs/ResolverQueryLogConfigName"
                },
                "DestinationArn": {
                    "$ref": "#/$defs/DestinationArn"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                }
            }
        },
        "ResolverQueryLogConfigStatus": {
            "enum": [
                "Creating",
                "Created",
                "Deleting",
                "Failed"
            ]
        },
        "Count": {
            "type": "integer",
            "format": "int32"
        },
        "ResolverQueryLogConfigName": {
            "type": "string"
        },
        "DestinationArn": {
            "type": "string"
        },
        "CreateResolverQueryLogConfigRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ResolverQueryLogConfigName"
                },
                "DestinationArn": {
                    "$ref": "#/$defs/DestinationArn"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateResolverRuleResponse": {
            "type": "object",
            "properties": {
                "ResolverRule": {
                    "$ref": "#/$defs/ResolverRule"
                }
            }
        },
        "ResolverRule": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "Status": {
                    "$ref": "#/$defs/ResolverRuleStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "RuleType": {
                    "$ref": "#/$defs/RuleTypeOption"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "TargetIps": {
                    "$ref": "#/$defs/TargetList"
                },
                "ResolverEndpointId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "OwnerId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ShareStatus": {
                    "$ref": "#/$defs/ShareStatus"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "ModificationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                }
            }
        },
        "DomainName": {
            "type": "string"
        },
        "ResolverRuleStatus": {
            "enum": [
                "Complete",
                "Deleting",
                "Updating",
                "Failed"
            ]
        },
        "RuleTypeOption": {
            "enum": [
                "Forward",
                "System",
                "Recursive"
            ]
        },
        "TargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetAddress"
            }
        },
        "TargetAddress": {
            "type": "object",
            "properties": {
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "Port": {
                    "$ref": "#/$defs/Port"
                },
                "Ipv6": {
                    "$ref": "#/$defs/Ipv6"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                }
            }
        },
        "Port": {
            "type": "integer",
            "format": "int32"
        },
        "CreateResolverRuleRequest": {
            "type": "object",
            "properties": {
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "RuleType": {
                    "$ref": "#/$defs/RuleTypeOption"
                },
                "DomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "TargetIps": {
                    "$ref": "#/$defs/TargetList"
                },
                "ResolverEndpointId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DeleteFirewallDomainListResponse": {
            "type": "object",
            "properties": {
                "FirewallDomainList": {
                    "$ref": "#/$defs/FirewallDomainList"
                }
            }
        },
        "DeleteFirewallDomainListRequest": {
            "type": "object",
            "properties": {
                "FirewallDomainListId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "DeleteFirewallRuleResponse": {
            "type": "object",
            "properties": {
                "FirewallRule": {
                    "$ref": "#/$defs/FirewallRule"
                }
            }
        },
        "DeleteFirewallRuleRequest": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "FirewallDomainListId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Qtype": {
                    "$ref": "#/$defs/Qtype"
                }
            }
        },
        "DeleteFirewallRuleGroupResponse": {
            "type": "object",
            "properties": {
                "FirewallRuleGroup": {
                    "$ref": "#/$defs/FirewallRuleGroup"
                }
            }
        },
        "DeleteFirewallRuleGroupRequest": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "DeleteOutpostResolverResponse": {
            "type": "object",
            "properties": {
                "OutpostResolver": {
                    "$ref": "#/$defs/OutpostResolver"
                }
            }
        },
        "DeleteOutpostResolverRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "DeleteResolverEndpointResponse": {
            "type": "object",
            "properties": {
                "ResolverEndpoint": {
                    "$ref": "#/$defs/ResolverEndpoint"
                }
            }
        },
        "DeleteResolverEndpointRequest": {
            "type": "object",
            "properties": {
                "ResolverEndpointId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "DeleteResolverQueryLogConfigResponse": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfig": {
                    "$ref": "#/$defs/ResolverQueryLogConfig"
                }
            }
        },
        "DeleteResolverQueryLogConfigRequest": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfigId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "DeleteResolverRuleResponse": {
            "type": "object",
            "properties": {
                "ResolverRule": {
                    "$ref": "#/$defs/ResolverRule"
                }
            }
        },
        "DeleteResolverRuleRequest": {
            "type": "object",
            "properties": {
                "ResolverRuleId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "DisassociateFirewallRuleGroupResponse": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupAssociation": {
                    "$ref": "#/$defs/FirewallRuleGroupAssociation"
                }
            }
        },
        "DisassociateFirewallRuleGroupRequest": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupAssociationId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "DisassociateResolverEndpointIpAddressResponse": {
            "type": "object",
            "properties": {
                "ResolverEndpoint": {
                    "$ref": "#/$defs/ResolverEndpoint"
                }
            }
        },
        "DisassociateResolverEndpointIpAddressRequest": {
            "type": "object",
            "properties": {
                "ResolverEndpointId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "IpAddress": {
                    "$ref": "#/$defs/IpAddressUpdate"
                }
            }
        },
        "DisassociateResolverQueryLogConfigResponse": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfigAssociation": {
                    "$ref": "#/$defs/ResolverQueryLogConfigAssociation"
                }
            }
        },
        "DisassociateResolverQueryLogConfigRequest": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfigId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "DisassociateResolverRuleResponse": {
            "type": "object",
            "properties": {
                "ResolverRuleAssociation": {
                    "$ref": "#/$defs/ResolverRuleAssociation"
                }
            }
        },
        "DisassociateResolverRuleRequest": {
            "type": "object",
            "properties": {
                "VPCId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "ResolverRuleId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetFirewallConfigResponse": {
            "type": "object",
            "properties": {
                "FirewallConfig": {
                    "$ref": "#/$defs/FirewallConfig"
                }
            }
        },
        "FirewallConfig": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "OwnerId": {
                    "$ref": "#/$defs/AccountId"
                },
                "FirewallFailOpen": {
                    "$ref": "#/$defs/FirewallFailOpenStatus"
                }
            }
        },
        "FirewallFailOpenStatus": {
            "enum": [
                "ENABLED",
                "DISABLED",
                "USE_LOCAL_RESOURCE_SETTING"
            ]
        },
        "GetFirewallConfigRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetFirewallDomainListResponse": {
            "type": "object",
            "properties": {
                "FirewallDomainList": {
                    "$ref": "#/$defs/FirewallDomainList"
                }
            }
        },
        "GetFirewallDomainListRequest": {
            "type": "object",
            "properties": {
                "FirewallDomainListId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetFirewallRuleGroupResponse": {
            "type": "object",
            "properties": {
                "FirewallRuleGroup": {
                    "$ref": "#/$defs/FirewallRuleGroup"
                }
            }
        },
        "GetFirewallRuleGroupRequest": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetFirewallRuleGroupAssociationResponse": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupAssociation": {
                    "$ref": "#/$defs/FirewallRuleGroupAssociation"
                }
            }
        },
        "GetFirewallRuleGroupAssociationRequest": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupAssociationId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetFirewallRuleGroupPolicyResponse": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupPolicy": {
                    "$ref": "#/$defs/FirewallRuleGroupPolicy"
                }
            }
        },
        "FirewallRuleGroupPolicy": {
            "type": "string"
        },
        "GetFirewallRuleGroupPolicyRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetOutpostResolverResponse": {
            "type": "object",
            "properties": {
                "OutpostResolver": {
                    "$ref": "#/$defs/OutpostResolver"
                }
            }
        },
        "GetOutpostResolverRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetResolverConfigResponse": {
            "type": "object",
            "properties": {
                "ResolverConfig": {
                    "$ref": "#/$defs/ResolverConfig"
                }
            }
        },
        "ResolverConfig": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "OwnerId": {
                    "$ref": "#/$defs/AccountId"
                },
                "AutodefinedReverse": {
                    "$ref": "#/$defs/ResolverAutodefinedReverseStatus"
                }
            }
        },
        "ResolverAutodefinedReverseStatus": {
            "enum": [
                "Enabling",
                "Enabled",
                "Disabling",
                "Disabled",
                "UpdatingToUseLocalResourceSetting",
                "UseLocalResourceSetting"
            ]
        },
        "GetResolverConfigRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetResolverDnssecConfigResponse": {
            "type": "object",
            "properties": {
                "ResolverDNSSECConfig": {
                    "$ref": "#/$defs/ResolverDnssecConfig"
                }
            }
        },
        "ResolverDnssecConfig": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "OwnerId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "ValidationStatus": {
                    "$ref": "#/$defs/ResolverDNSSECValidationStatus"
                }
            }
        },
        "ResolverDNSSECValidationStatus": {
            "enum": [
                "Enabling",
                "Enabled",
                "Disabling",
                "Disabled",
                "UpdateToUseLocalResourceSetting",
                "UseLocalResourceSetting"
            ]
        },
        "GetResolverDnssecConfigRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetResolverEndpointResponse": {
            "type": "object",
            "properties": {
                "ResolverEndpoint": {
                    "$ref": "#/$defs/ResolverEndpoint"
                }
            }
        },
        "GetResolverEndpointRequest": {
            "type": "object",
            "properties": {
                "ResolverEndpointId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetResolverQueryLogConfigResponse": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfig": {
                    "$ref": "#/$defs/ResolverQueryLogConfig"
                }
            }
        },
        "GetResolverQueryLogConfigRequest": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfigId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetResolverQueryLogConfigAssociationResponse": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfigAssociation": {
                    "$ref": "#/$defs/ResolverQueryLogConfigAssociation"
                }
            }
        },
        "GetResolverQueryLogConfigAssociationRequest": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfigAssociationId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetResolverQueryLogConfigPolicyResponse": {
            "type": "object",
            "properties": {
                "ResolverQueryLogConfigPolicy": {
                    "$ref": "#/$defs/ResolverQueryLogConfigPolicy"
                }
            }
        },
        "ResolverQueryLogConfigPolicy": {
            "type": "string"
        },
        "GetResolverQueryLogConfigPolicyRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetResolverRuleResponse": {
            "type": "object",
            "properties": {
                "ResolverRule": {
                    "$ref": "#/$defs/ResolverRule"
                }
            }
        },
        "GetResolverRuleRequest": {
            "type": "object",
            "properties": {
                "ResolverRuleId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetResolverRuleAssociationResponse": {
            "type": "object",
            "properties": {
                "ResolverRuleAssociation": {
                    "$ref": "#/$defs/ResolverRuleAssociation"
                }
            }
        },
        "GetResolverRuleAssociationRequest": {
            "type": "object",
            "properties": {
                "ResolverRuleAssociationId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        },
        "GetResolverRulePolicyResponse": {
            "type": "object",
            "properties": {
                "ResolverRulePolicy": {
                    "$ref": "#/$defs/ResolverRulePolicy"
                }
            }
        },
        "ResolverRulePolicy": {
            "type": "string"
        },
        "GetResolverRulePolicyRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ImportFirewallDomainsResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Status": {
                    "$ref": "#/$defs/FirewallDomainListStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                }
            }
        },
        "ImportFirewallDomainsRequest": {
            "type": "object",
            "properties": {
                "FirewallDomainListId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Operation": {
                    "$ref": "#/$defs/FirewallDomainImportOperation"
                },
                "DomainFileUrl": {
                    "$ref": "#/$defs/DomainListFileUrl"
                }
            }
        },
        "FirewallDomainImportOperation": {
            "enum": [
                "REPLACE"
            ]
        },
        "DomainListFileUrl": {
            "type": "string"
        },
        "ListFirewallConfigsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "FirewallConfigs": {
                    "$ref": "#/$defs/FirewallConfigList"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "FirewallConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FirewallConfig"
            }
        },
        "ListFirewallConfigsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListFirewallConfigsMaxResult"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListFirewallConfigsMaxResult": {
            "type": "integer",
            "format": "int32"
        },
        "ListFirewallDomainListsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "FirewallDomainLists": {
                    "$ref": "#/$defs/FirewallDomainListMetadataList"
                }
            }
        },
        "FirewallDomainListMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FirewallDomainListMetadata"
            }
        },
        "FirewallDomainListMetadata": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "ManagedOwnerName": {
                    "$ref": "#/$defs/ServicePrinciple"
                }
            }
        },
        "ListFirewallDomainListsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListFirewallDomainsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Domains": {
                    "$ref": "#/$defs/FirewallDomains"
                }
            }
        },
        "FirewallDomains": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FirewallDomainName"
            }
        },
        "FirewallDomainName": {
            "type": "string"
        },
        "ListFirewallDomainsRequest": {
            "type": "object",
            "properties": {
                "FirewallDomainListId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListDomainMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListDomainMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListFirewallRuleGroupAssociationsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "FirewallRuleGroupAssociations": {
                    "$ref": "#/$defs/FirewallRuleGroupAssociations"
                }
            }
        },
        "FirewallRuleGroupAssociations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FirewallRuleGroupAssociation"
            }
        },
        "ListFirewallRuleGroupAssociationsRequest": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "VpcId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                },
                "Status": {
                    "$ref": "#/$defs/FirewallRuleGroupAssociationStatus"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListFirewallRuleGroupsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "FirewallRuleGroups": {
                    "$ref": "#/$defs/FirewallRuleGroupMetadataList"
                }
            }
        },
        "FirewallRuleGroupMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FirewallRuleGroupMetadata"
            }
        },
        "FirewallRuleGroupMetadata": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "OwnerId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/CreatorRequestId"
                },
                "ShareStatus": {
                    "$ref": "#/$defs/ShareStatus"
                }
            }
        },
        "ListFirewallRuleGroupsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListFirewallRulesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "FirewallRules": {
                    "$ref": "#/$defs/FirewallRules"
                }
            }
        },
        "FirewallRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FirewallRule"
            }
        },
        "ListFirewallRulesRequest": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                },
                "Action": {
                    "$ref": "#/$defs/Action"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListOutpostResolversResponse": {
            "type": "object",
            "properties": {
                "OutpostResolvers": {
                    "$ref": "#/$defs/OutpostResolverList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "OutpostResolverList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutpostResolver"
            }
        },
        "ListOutpostResolversRequest": {
            "type": "object",
            "properties": {
                "OutpostArn": {
                    "$ref": "#/$defs/OutpostArn"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListResolverConfigsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ResolverConfigs": {
                    "$ref": "#/$defs/ResolverConfigList"
                }
            }
        },
        "ResolverConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResolverConfig"
            }
        },
        "ListResolverConfigsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListResolverConfigsMaxResult"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListResolverConfigsMaxResult": {
            "type": "integer",
            "format": "int32"
        },
        "ListResolverDnssecConfigsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ResolverDnssecConfigs": {
                    "$ref": "#/$defs/ResolverDnssecConfigList"
                }
            }
        },
        "ResolverDnssecConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResolverDnssecConfig"
            }
        },
        "ListResolverDnssecConfigsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/Filters"
                }
            }
        },
        "Filters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FilterName"
                },
                "Values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "FilterName": {
            "type": "string"
        },
        "FilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterValue"
            }
        },
        "FilterValue": {
            "type": "string"
        },
        "ListResolverEndpointIpAddressesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "IpAddresses": {
                    "$ref": "#/$defs/IpAddressesResponse"
                }
            }
        },
        "IpAddressesResponse": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpAddressResponse"
            }
        },
        "IpAddressResponse": {
            "type": "object",
            "properties": {
                "IpId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "Ipv6": {
                    "$ref": "#/$defs/Ipv6"
                },
                "Status": {
                    "$ref": "#/$defs/IpAddressStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "CreationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                },
                "ModificationTime": {
                    "$ref": "#/$defs/Rfc3339TimeString"
                }
            }
        },
        "IpAddressStatus": {
            "enum": [
                "Creating",
                "FailedCreation",
                "Attaching",
                "Attached",
                "RemapDetaching",
                "RemapAttaching",
                "Detaching",
                "FailedResourceGone",
                "Deleting",
                "DeleteFailedFasExpired",
                "Updating",
                "UpdateFailed"
            ]
        },
        "ListResolverEndpointIpAddressesRequest": {
            "type": "object",
            "properties": {
                "ResolverEndpointId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListResolverEndpointsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ResolverEndpoints": {
                    "$ref": "#/$defs/ResolverEndpoints"
                }
            }
        },
        "ResolverEndpoints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResolverEndpoint"
            }
        },
        "ListResolverEndpointsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/Filters"
                }
            }
        },
        "ListResolverQueryLogConfigAssociationsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "TotalCount": {
                    "$ref": "#/$defs/Count"
                },
                "TotalFilteredCount": {
                    "$ref": "#/$defs/Count"
                },
                "ResolverQueryLogConfigAssociations": {
                    "$ref": "#/$defs/ResolverQueryLogConfigAssociationList"
                }
            }
        },
        "ResolverQueryLogConfigAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResolverQueryLogConfigAssociation"
            }
        },
        "ListResolverQueryLogConfigAssociationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/Filters"
                },
                "SortBy": {
                    "$ref": "#/$defs/SortByKey"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortOrder"
                }
            }
        },
        "SortByKey": {
            "type": "string"
        },
        "SortOrder": {
            "enum": [
                "Ascending",
                "Descending"
            ]
        },
        "ListResolverQueryLogConfigsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "TotalCount": {
                    "$ref": "#/$defs/Count"
                },
                "TotalFilteredCount": {
                    "$ref": "#/$defs/Count"
                },
                "ResolverQueryLogConfigs": {
                    "$ref": "#/$defs/ResolverQueryLogConfigList"
                }
            }
        },
        "ResolverQueryLogConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResolverQueryLogConfig"
            }
        },
        "ListResolverQueryLogConfigsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/Filters"
                },
                "SortBy": {
                    "$ref": "#/$defs/SortByKey"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortOrder"
                }
            }
        },
        "ListResolverRuleAssociationsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ResolverRuleAssociations": {
                    "$ref": "#/$defs/ResolverRuleAssociations"
                }
            }
        },
        "ResolverRuleAssociations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResolverRuleAssociation"
            }
        },
        "ListResolverRuleAssociationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/Filters"
                }
            }
        },
        "ListResolverRulesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ResolverRules": {
                    "$ref": "#/$defs/ResolverRules"
                }
            }
        },
        "ResolverRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResolverRule"
            }
        },
        "ListResolverRulesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/Filters"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PutFirewallRuleGroupPolicyResponse": {
            "type": "object",
            "properties": {
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "PutFirewallRuleGroupPolicyRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "FirewallRuleGroupPolicy": {
                    "$ref": "#/$defs/FirewallRuleGroupPolicy"
                }
            }
        },
        "PutResolverQueryLogConfigPolicyResponse": {
            "type": "object",
            "properties": {
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "PutResolverQueryLogConfigPolicyRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "ResolverQueryLogConfigPolicy": {
                    "$ref": "#/$defs/ResolverQueryLogConfigPolicy"
                }
            }
        },
        "PutResolverRulePolicyResponse": {
            "type": "object",
            "properties": {
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "PutResolverRulePolicyRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "ResolverRulePolicy": {
                    "$ref": "#/$defs/ResolverRulePolicy"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateFirewallConfigResponse": {
            "type": "object",
            "properties": {
                "FirewallConfig": {
                    "$ref": "#/$defs/FirewallConfig"
                }
            }
        },
        "UpdateFirewallConfigRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "FirewallFailOpen": {
                    "$ref": "#/$defs/FirewallFailOpenStatus"
                }
            }
        },
        "UpdateFirewallDomainsResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Status": {
                    "$ref": "#/$defs/FirewallDomainListStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                }
            }
        },
        "UpdateFirewallDomainsRequest": {
            "type": "object",
            "properties": {
                "FirewallDomainListId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Operation": {
                    "$ref": "#/$defs/FirewallDomainUpdateOperation"
                },
                "Domains": {
                    "$ref": "#/$defs/FirewallDomains"
                }
            }
        },
        "FirewallDomainUpdateOperation": {
            "enum": [
                "ADD",
                "REMOVE",
                "REPLACE"
            ]
        },
        "UpdateFirewallRuleResponse": {
            "type": "object",
            "properties": {
                "FirewallRule": {
                    "$ref": "#/$defs/FirewallRule"
                }
            }
        },
        "UpdateFirewallRuleRequest": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "FirewallDomainListId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                },
                "Action": {
                    "$ref": "#/$defs/Action"
                },
                "BlockResponse": {
                    "$ref": "#/$defs/BlockResponse"
                },
                "BlockOverrideDomain": {
                    "$ref": "#/$defs/BlockOverrideDomain"
                },
                "BlockOverrideDnsType": {
                    "$ref": "#/$defs/BlockOverrideDnsType"
                },
                "BlockOverrideTtl": {
                    "$ref": "#/$defs/BlockOverrideTtl"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "FirewallDomainRedirectionAction": {
                    "$ref": "#/$defs/FirewallDomainRedirectionAction"
                },
                "Qtype": {
                    "$ref": "#/$defs/Qtype"
                }
            }
        },
        "UpdateFirewallRuleGroupAssociationResponse": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupAssociation": {
                    "$ref": "#/$defs/FirewallRuleGroupAssociation"
                }
            }
        },
        "UpdateFirewallRuleGroupAssociationRequest": {
            "type": "object",
            "properties": {
                "FirewallRuleGroupAssociationId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                },
                "MutationProtection": {
                    "$ref": "#/$defs/MutationProtectionStatus"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                }
            }
        },
        "UpdateOutpostResolverResponse": {
            "type": "object",
            "properties": {
                "OutpostResolver": {
                    "$ref": "#/$defs/OutpostResolver"
                }
            }
        },
        "UpdateOutpostResolverRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Name": {
                    "$ref": "#/$defs/OutpostResolverName"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/InstanceCount"
                },
                "PreferredInstanceType": {
                    "$ref": "#/$defs/OutpostInstanceType"
                }
            }
        },
        "UpdateResolverConfigResponse": {
            "type": "object",
            "properties": {
                "ResolverConfig": {
                    "$ref": "#/$defs/ResolverConfig"
                }
            }
        },
        "UpdateResolverConfigRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "AutodefinedReverseFlag": {
                    "$ref": "#/$defs/AutodefinedReverseFlag"
                }
            }
        },
        "AutodefinedReverseFlag": {
            "enum": [
                "ENABLE",
                "DISABLE",
                "USE_LOCAL_RESOURCE_SETTING"
            ]
        },
        "UpdateResolverDnssecConfigResponse": {
            "type": "object",
            "properties": {
                "ResolverDNSSECConfig": {
                    "$ref": "#/$defs/ResolverDnssecConfig"
                }
            }
        },
        "UpdateResolverDnssecConfigRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Validation": {
                    "$ref": "#/$defs/Validation"
                }
            }
        },
        "Validation": {
            "enum": [
                "ENABLE",
                "DISABLE",
                "USE_LOCAL_RESOURCE_SETTING"
            ]
        },
        "UpdateResolverEndpointResponse": {
            "type": "object",
            "properties": {
                "ResolverEndpoint": {
                    "$ref": "#/$defs/ResolverEndpoint"
                }
            }
        },
        "UpdateResolverEndpointRequest": {
            "type": "object",
            "properties": {
                "ResolverEndpointId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "ResolverEndpointType": {
                    "$ref": "#/$defs/ResolverEndpointType"
                },
                "UpdateIpAddresses": {
                    "$ref": "#/$defs/UpdateIpAddresses"
                },
                "Protocols": {
                    "$ref": "#/$defs/ProtocolList"
                }
            }
        },
        "UpdateIpAddresses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdateIpAddress"
            }
        },
        "UpdateIpAddress": {
            "type": "object",
            "properties": {
                "IpId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Ipv6": {
                    "$ref": "#/$defs/Ipv6"
                }
            }
        },
        "UpdateResolverRuleResponse": {
            "type": "object",
            "properties": {
                "ResolverRule": {
                    "$ref": "#/$defs/ResolverRule"
                }
            }
        },
        "UpdateResolverRuleRequest": {
            "type": "object",
            "properties": {
                "ResolverRuleId": {
                    "$ref": "#/$defs/ResourceId"
                },
                "Config": {
                    "$ref": "#/$defs/ResolverRuleConfig"
                }
            }
        },
        "ResolverRuleConfig": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "TargetIps": {
                    "$ref": "#/$defs/TargetList"
                },
                "ResolverEndpointId": {
                    "$ref": "#/$defs/ResourceId"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://route53resolver-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            {
                                                                "ref": "Region"
                                                            },
                                                            "us-gov-east-1"
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://route53resolver.us-gov-east-1.amazonaws.com",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            {
                                                                "ref": "Region"
                                                            },
                                                            "us-gov-west-1"
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://route53resolver.us-gov-west-1.amazonaws.com",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://route53resolver-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://route53resolver.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://route53resolver.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}