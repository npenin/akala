{
    "name": "elasticloadbalancing",
    "commands": [
        {
            "name": "AddListenerCertificates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.AddListenerCertificates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddListenerCertificatesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddListenerCertificatesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "AddTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.AddTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddTagsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddTagsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "AddTrustStoreRevocations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.AddTrustStoreRevocations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddTrustStoreRevocationsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddTrustStoreRevocationsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateListener",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.CreateListener"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateListenerOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateListenerInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLoadBalancer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.CreateLoadBalancer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLoadBalancerOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLoadBalancerInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.CreateRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRuleOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRuleInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTargetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.CreateTargetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTargetGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTargetGroupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTrustStore",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.CreateTrustStore"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTrustStoreOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTrustStoreInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteListener",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DeleteListener"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteListenerOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteListenerInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLoadBalancer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DeleteLoadBalancer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLoadBalancerOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLoadBalancerInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DeleteRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRuleOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRuleInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSharedTrustStoreAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DeleteSharedTrustStoreAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSharedTrustStoreAssociationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSharedTrustStoreAssociationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTargetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DeleteTargetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTargetGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTargetGroupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTrustStore",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DeleteTrustStore"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTrustStoreOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTrustStoreInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterTargets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DeregisterTargets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterTargetsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterTargetsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAccountLimits",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeAccountLimits"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAccountLimitsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAccountLimitsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCapacityReservationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCapacityReservationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeListenerAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeListenerAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeListenerAttributesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeListenerAttributesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeListenerCertificates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeListenerCertificates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeListenerCertificatesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeListenerCertificatesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeListeners",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeListeners"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeListenersOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeListenersInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLoadBalancerAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeLoadBalancerAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLoadBalancerAttributesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLoadBalancerAttributesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLoadBalancers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeLoadBalancers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLoadBalancersOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLoadBalancersInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRulesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRulesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSSLPolicies",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeSSLPolicies"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSSLPoliciesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSSLPoliciesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTagsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTagsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTargetGroupAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeTargetGroupAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTargetGroupAttributesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTargetGroupAttributesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTargetGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeTargetGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTargetGroupsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTargetGroupsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTargetHealth",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeTargetHealth"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTargetHealthOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTargetHealthInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTrustStoreAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeTrustStoreAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTrustStoreAssociationsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTrustStoreAssociationsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTrustStoreRevocations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeTrustStoreRevocations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTrustStoreRevocationsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTrustStoreRevocationsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTrustStores",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.DescribeTrustStores"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTrustStoresOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTrustStoresInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.GetResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcePolicyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcePolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTrustStoreCaCertificatesBundle",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.GetTrustStoreCaCertificatesBundle"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTrustStoreCaCertificatesBundleOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTrustStoreCaCertificatesBundleInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTrustStoreRevocationContent",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.GetTrustStoreRevocationContent"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTrustStoreRevocationContentOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTrustStoreRevocationContentInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.ModifyCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyCapacityReservationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyCapacityReservationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyIpPools",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.ModifyIpPools"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyIpPoolsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyIpPoolsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyListener",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.ModifyListener"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyListenerOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyListenerInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyListenerAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.ModifyListenerAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyListenerAttributesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyListenerAttributesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyLoadBalancerAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.ModifyLoadBalancerAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyLoadBalancerAttributesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyLoadBalancerAttributesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.ModifyRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyRuleOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyRuleInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyTargetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.ModifyTargetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyTargetGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyTargetGroupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyTargetGroupAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.ModifyTargetGroupAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyTargetGroupAttributesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyTargetGroupAttributesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyTrustStore",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.ModifyTrustStore"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyTrustStoreOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyTrustStoreInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterTargets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.RegisterTargets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterTargetsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterTargetsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveListenerCertificates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.RemoveListenerCertificates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveListenerCertificatesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveListenerCertificatesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.RemoveTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveTagsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveTagsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveTrustStoreRevocations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.RemoveTrustStoreRevocations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveTrustStoreRevocationsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveTrustStoreRevocationsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SetIpAddressType",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.SetIpAddressType"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SetIpAddressTypeOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetIpAddressTypeInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SetRulePriorities",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.SetRulePriorities"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SetRulePrioritiesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetRulePrioritiesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SetSecurityGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.SetSecurityGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SetSecurityGroupsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetSecurityGroupsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SetSubnets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ElasticLoadBalancing_v10.SetSubnets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SetSubnetsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetSubnetsInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddListenerCertificatesOutput": {
            "type": "object",
            "properties": {
                "Certificates": {
                    "$ref": "#/$defs/CertificateList"
                }
            }
        },
        "CertificateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Certificate"
            }
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "CertificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "IsDefault": {
                    "$ref": "#/$defs/Default"
                }
            }
        },
        "CertificateArn": {
            "type": "string"
        },
        "Default": {
            "type": "boolean"
        },
        "AddListenerCertificatesInput": {
            "type": "object",
            "properties": {
                "ListenerArn": {
                    "$ref": "#/$defs/ListenerArn"
                },
                "Certificates": {
                    "$ref": "#/$defs/CertificateList"
                }
            }
        },
        "ListenerArn": {
            "type": "string"
        },
        "AddTagsOutput": {
            "type": "object",
            "properties": {}
        },
        "AddTagsInput": {
            "type": "object",
            "properties": {
                "ResourceArns": {
                    "$ref": "#/$defs/ResourceArns"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ResourceArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceArn"
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "AddTrustStoreRevocationsOutput": {
            "type": "object",
            "properties": {
                "TrustStoreRevocations": {
                    "$ref": "#/$defs/TrustStoreRevocations"
                }
            }
        },
        "TrustStoreRevocations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrustStoreRevocation"
            }
        },
        "TrustStoreRevocation": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "RevocationId": {
                    "$ref": "#/$defs/RevocationId"
                },
                "RevocationType": {
                    "$ref": "#/$defs/RevocationType"
                },
                "NumberOfRevokedEntries": {
                    "$ref": "#/$defs/NumberOfRevokedEntries"
                }
            }
        },
        "TrustStoreArn": {
            "type": "string"
        },
        "RevocationId": {
            "type": "integer",
            "format": "int64"
        },
        "RevocationType": {
            "enum": [
                "CRL"
            ]
        },
        "NumberOfRevokedEntries": {
            "type": "integer",
            "format": "int64"
        },
        "AddTrustStoreRevocationsInput": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "RevocationContents": {
                    "$ref": "#/$defs/RevocationContents"
                }
            }
        },
        "RevocationContents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RevocationContent"
            }
        },
        "RevocationContent": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "S3Key": {
                    "$ref": "#/$defs/S3Key"
                },
                "S3ObjectVersion": {
                    "$ref": "#/$defs/S3ObjectVersion"
                },
                "RevocationType": {
                    "$ref": "#/$defs/RevocationType"
                }
            }
        },
        "S3Bucket": {
            "type": "string"
        },
        "S3Key": {
            "type": "string"
        },
        "S3ObjectVersion": {
            "type": "string"
        },
        "CreateListenerOutput": {
            "type": "object",
            "properties": {
                "Listeners": {
                    "$ref": "#/$defs/Listeners"
                }
            }
        },
        "Listeners": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Listener"
            }
        },
        "Listener": {
            "type": "object",
            "properties": {
                "ListenerArn": {
                    "$ref": "#/$defs/ListenerArn"
                },
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "Port": {
                    "$ref": "#/$defs/Port"
                },
                "Protocol": {
                    "$ref": "#/$defs/ProtocolEnum"
                },
                "Certificates": {
                    "$ref": "#/$defs/CertificateList"
                },
                "SslPolicy": {
                    "$ref": "#/$defs/SslPolicyName"
                },
                "DefaultActions": {
                    "$ref": "#/$defs/Actions"
                },
                "AlpnPolicy": {
                    "$ref": "#/$defs/AlpnPolicyName"
                },
                "MutualAuthentication": {
                    "$ref": "#/$defs/MutualAuthenticationAttributes"
                }
            }
        },
        "LoadBalancerArn": {
            "type": "string"
        },
        "Port": {
            "type": "integer",
            "format": "int32"
        },
        "ProtocolEnum": {
            "enum": [
                "HTTP",
                "HTTPS",
                "TCP",
                "TLS",
                "UDP",
                "TCP_UDP",
                "GENEVE"
            ]
        },
        "SslPolicyName": {
            "type": "string"
        },
        "Actions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Action"
            }
        },
        "Action": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ActionTypeEnum"
                },
                "TargetGroupArn": {
                    "$ref": "#/$defs/TargetGroupArn"
                },
                "AuthenticateOidcConfig": {
                    "$ref": "#/$defs/AuthenticateOidcActionConfig"
                },
                "AuthenticateCognitoConfig": {
                    "$ref": "#/$defs/AuthenticateCognitoActionConfig"
                },
                "Order": {
                    "$ref": "#/$defs/ActionOrder"
                },
                "RedirectConfig": {
                    "$ref": "#/$defs/RedirectActionConfig"
                },
                "FixedResponseConfig": {
                    "$ref": "#/$defs/FixedResponseActionConfig"
                },
                "ForwardConfig": {
                    "$ref": "#/$defs/ForwardActionConfig"
                }
            }
        },
        "ActionTypeEnum": {
            "enum": [
                "FORWARD",
                "AUTHENTICATE_OIDC",
                "AUTHENTICATE_COGNITO",
                "REDIRECT",
                "FIXED_RESPONSE"
            ]
        },
        "TargetGroupArn": {
            "type": "string"
        },
        "AuthenticateOidcActionConfig": {
            "type": "object",
            "properties": {
                "Issuer": {
                    "$ref": "#/$defs/AuthenticateOidcActionIssuer"
                },
                "AuthorizationEndpoint": {
                    "$ref": "#/$defs/AuthenticateOidcActionAuthorizationEndpoint"
                },
                "TokenEndpoint": {
                    "$ref": "#/$defs/AuthenticateOidcActionTokenEndpoint"
                },
                "UserInfoEndpoint": {
                    "$ref": "#/$defs/AuthenticateOidcActionUserInfoEndpoint"
                },
                "ClientId": {
                    "$ref": "#/$defs/AuthenticateOidcActionClientId"
                },
                "ClientSecret": {
                    "$ref": "#/$defs/AuthenticateOidcActionClientSecret"
                },
                "SessionCookieName": {
                    "$ref": "#/$defs/AuthenticateOidcActionSessionCookieName"
                },
                "Scope": {
                    "$ref": "#/$defs/AuthenticateOidcActionScope"
                },
                "SessionTimeout": {
                    "$ref": "#/$defs/AuthenticateOidcActionSessionTimeout"
                },
                "AuthenticationRequestExtraParams": {
                    "$ref": "#/$defs/AuthenticateOidcActionAuthenticationRequestExtraParams"
                },
                "OnUnauthenticatedRequest": {
                    "$ref": "#/$defs/AuthenticateOidcActionConditionalBehaviorEnum"
                },
                "UseExistingClientSecret": {
                    "$ref": "#/$defs/AuthenticateOidcActionUseExistingClientSecret"
                }
            }
        },
        "AuthenticateOidcActionIssuer": {
            "type": "string"
        },
        "AuthenticateOidcActionAuthorizationEndpoint": {
            "type": "string"
        },
        "AuthenticateOidcActionTokenEndpoint": {
            "type": "string"
        },
        "AuthenticateOidcActionUserInfoEndpoint": {
            "type": "string"
        },
        "AuthenticateOidcActionClientId": {
            "type": "string"
        },
        "AuthenticateOidcActionClientSecret": {
            "type": "string"
        },
        "AuthenticateOidcActionSessionCookieName": {
            "type": "string"
        },
        "AuthenticateOidcActionScope": {
            "type": "string"
        },
        "AuthenticateOidcActionSessionTimeout": {
            "type": "integer",
            "format": "int64"
        },
        "AuthenticateOidcActionAuthenticationRequestExtraParams": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AuthenticateOidcActionAuthenticationRequestParamValue"
            }
        },
        "AuthenticateOidcActionAuthenticationRequestParamValue": {
            "type": "string"
        },
        "AuthenticateOidcActionConditionalBehaviorEnum": {
            "enum": [
                "DENY",
                "ALLOW",
                "AUTHENTICATE"
            ]
        },
        "AuthenticateOidcActionUseExistingClientSecret": {
            "type": "boolean"
        },
        "AuthenticateCognitoActionConfig": {
            "type": "object",
            "properties": {
                "UserPoolArn": {
                    "$ref": "#/$defs/AuthenticateCognitoActionUserPoolArn"
                },
                "UserPoolClientId": {
                    "$ref": "#/$defs/AuthenticateCognitoActionUserPoolClientId"
                },
                "UserPoolDomain": {
                    "$ref": "#/$defs/AuthenticateCognitoActionUserPoolDomain"
                },
                "SessionCookieName": {
                    "$ref": "#/$defs/AuthenticateCognitoActionSessionCookieName"
                },
                "Scope": {
                    "$ref": "#/$defs/AuthenticateCognitoActionScope"
                },
                "SessionTimeout": {
                    "$ref": "#/$defs/AuthenticateCognitoActionSessionTimeout"
                },
                "AuthenticationRequestExtraParams": {
                    "$ref": "#/$defs/AuthenticateCognitoActionAuthenticationRequestExtraParams"
                },
                "OnUnauthenticatedRequest": {
                    "$ref": "#/$defs/AuthenticateCognitoActionConditionalBehaviorEnum"
                }
            }
        },
        "AuthenticateCognitoActionUserPoolArn": {
            "type": "string"
        },
        "AuthenticateCognitoActionUserPoolClientId": {
            "type": "string"
        },
        "AuthenticateCognitoActionUserPoolDomain": {
            "type": "string"
        },
        "AuthenticateCognitoActionSessionCookieName": {
            "type": "string"
        },
        "AuthenticateCognitoActionScope": {
            "type": "string"
        },
        "AuthenticateCognitoActionSessionTimeout": {
            "type": "integer",
            "format": "int64"
        },
        "AuthenticateCognitoActionAuthenticationRequestExtraParams": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AuthenticateCognitoActionAuthenticationRequestParamValue"
            }
        },
        "AuthenticateCognitoActionAuthenticationRequestParamValue": {
            "type": "string"
        },
        "AuthenticateCognitoActionConditionalBehaviorEnum": {
            "enum": [
                "DENY",
                "ALLOW",
                "AUTHENTICATE"
            ]
        },
        "ActionOrder": {
            "type": "integer",
            "format": "int32"
        },
        "RedirectActionConfig": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/RedirectActionProtocol"
                },
                "Port": {
                    "$ref": "#/$defs/RedirectActionPort"
                },
                "Host": {
                    "$ref": "#/$defs/RedirectActionHost"
                },
                "Path": {
                    "$ref": "#/$defs/RedirectActionPath"
                },
                "Query": {
                    "$ref": "#/$defs/RedirectActionQuery"
                },
                "StatusCode": {
                    "$ref": "#/$defs/RedirectActionStatusCodeEnum"
                }
            }
        },
        "RedirectActionProtocol": {
            "type": "string"
        },
        "RedirectActionPort": {
            "type": "string"
        },
        "RedirectActionHost": {
            "type": "string"
        },
        "RedirectActionPath": {
            "type": "string"
        },
        "RedirectActionQuery": {
            "type": "string"
        },
        "RedirectActionStatusCodeEnum": {
            "enum": [
                "HTTP_301",
                "HTTP_302"
            ]
        },
        "FixedResponseActionConfig": {
            "type": "object",
            "properties": {
                "MessageBody": {
                    "$ref": "#/$defs/FixedResponseActionMessage"
                },
                "StatusCode": {
                    "$ref": "#/$defs/FixedResponseActionStatusCode"
                },
                "ContentType": {
                    "$ref": "#/$defs/FixedResponseActionContentType"
                }
            }
        },
        "FixedResponseActionMessage": {
            "type": "string"
        },
        "FixedResponseActionStatusCode": {
            "type": "string"
        },
        "FixedResponseActionContentType": {
            "type": "string"
        },
        "ForwardActionConfig": {
            "type": "object",
            "properties": {
                "TargetGroups": {
                    "$ref": "#/$defs/TargetGroupList"
                },
                "TargetGroupStickinessConfig": {
                    "$ref": "#/$defs/TargetGroupStickinessConfig"
                }
            }
        },
        "TargetGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetGroupTuple"
            }
        },
        "TargetGroupTuple": {
            "type": "object",
            "properties": {
                "TargetGroupArn": {
                    "$ref": "#/$defs/TargetGroupArn"
                },
                "Weight": {
                    "$ref": "#/$defs/TargetGroupWeight"
                }
            }
        },
        "TargetGroupWeight": {
            "type": "integer",
            "format": "int32"
        },
        "TargetGroupStickinessConfig": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/TargetGroupStickinessEnabled"
                },
                "DurationSeconds": {
                    "$ref": "#/$defs/TargetGroupStickinessDurationSeconds"
                }
            }
        },
        "TargetGroupStickinessEnabled": {
            "type": "boolean"
        },
        "TargetGroupStickinessDurationSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "AlpnPolicyName": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AlpnPolicyValue"
            }
        },
        "AlpnPolicyValue": {
            "type": "string"
        },
        "MutualAuthenticationAttributes": {
            "type": "object",
            "properties": {
                "Mode": {
                    "$ref": "#/$defs/Mode"
                },
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "IgnoreClientCertificateExpiry": {
                    "$ref": "#/$defs/IgnoreClientCertificateExpiry"
                },
                "TrustStoreAssociationStatus": {
                    "$ref": "#/$defs/TrustStoreAssociationStatusEnum"
                },
                "AdvertiseTrustStoreCaNames": {
                    "$ref": "#/$defs/AdvertiseTrustStoreCaNamesEnum"
                }
            }
        },
        "Mode": {
            "type": "string"
        },
        "IgnoreClientCertificateExpiry": {
            "type": "boolean"
        },
        "TrustStoreAssociationStatusEnum": {
            "enum": [
                "ACTIVE",
                "REMOVED"
            ]
        },
        "AdvertiseTrustStoreCaNamesEnum": {
            "enum": [
                "on",
                "off"
            ]
        },
        "CreateListenerInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "Protocol": {
                    "$ref": "#/$defs/ProtocolEnum"
                },
                "Port": {
                    "$ref": "#/$defs/Port"
                },
                "SslPolicy": {
                    "$ref": "#/$defs/SslPolicyName"
                },
                "Certificates": {
                    "$ref": "#/$defs/CertificateList"
                },
                "DefaultActions": {
                    "$ref": "#/$defs/Actions"
                },
                "AlpnPolicy": {
                    "$ref": "#/$defs/AlpnPolicyName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "MutualAuthentication": {
                    "$ref": "#/$defs/MutualAuthenticationAttributes"
                }
            }
        },
        "CreateLoadBalancerOutput": {
            "type": "object",
            "properties": {
                "LoadBalancers": {
                    "$ref": "#/$defs/LoadBalancers"
                }
            }
        },
        "LoadBalancers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancer"
            }
        },
        "LoadBalancer": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "DNSName": {
                    "$ref": "#/$defs/DNSName"
                },
                "CanonicalHostedZoneId": {
                    "$ref": "#/$defs/CanonicalHostedZoneId"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTime"
                },
                "LoadBalancerName": {
                    "$ref": "#/$defs/LoadBalancerName"
                },
                "Scheme": {
                    "$ref": "#/$defs/LoadBalancerSchemeEnum"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "State": {
                    "$ref": "#/$defs/LoadBalancerState"
                },
                "Type": {
                    "$ref": "#/$defs/LoadBalancerTypeEnum"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZones"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "CustomerOwnedIpv4Pool": {
                    "$ref": "#/$defs/CustomerOwnedIpv4Pool"
                },
                "EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic": {
                    "$ref": "#/$defs/EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic"
                },
                "EnablePrefixForIpv6SourceNat": {
                    "$ref": "#/$defs/EnablePrefixForIpv6SourceNatEnum"
                },
                "IpamPools": {
                    "$ref": "#/$defs/IpamPools"
                }
            }
        },
        "DNSName": {
            "type": "string"
        },
        "CanonicalHostedZoneId": {
            "type": "string"
        },
        "CreatedTime": {
            "type": "string",
            "format": "date-time"
        },
        "LoadBalancerName": {
            "type": "string"
        },
        "LoadBalancerSchemeEnum": {
            "enum": [
                "INTERNET_FACING",
                "INTERNAL"
            ]
        },
        "VpcId": {
            "type": "string"
        },
        "LoadBalancerState": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/LoadBalancerStateEnum"
                },
                "Reason": {
                    "$ref": "#/$defs/StateReason"
                }
            }
        },
        "LoadBalancerStateEnum": {
            "enum": [
                "ACTIVE",
                "PROVISIONING",
                "ACTIVE_IMPAIRED",
                "FAILED"
            ]
        },
        "StateReason": {
            "type": "string"
        },
        "LoadBalancerTypeEnum": {
            "enum": [
                "APPLICATION",
                "NETWORK",
                "GATEWAY"
            ]
        },
        "AvailabilityZones": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZone"
            }
        },
        "AvailabilityZone": {
            "type": "object",
            "properties": {
                "ZoneName": {
                    "$ref": "#/$defs/ZoneName"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "LoadBalancerAddresses": {
                    "$ref": "#/$defs/LoadBalancerAddresses"
                },
                "SourceNatIpv6Prefixes": {
                    "$ref": "#/$defs/SourceNatIpv6Prefixes"
                }
            }
        },
        "ZoneName": {
            "type": "string"
        },
        "SubnetId": {
            "type": "string"
        },
        "OutpostId": {
            "type": "string"
        },
        "LoadBalancerAddresses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerAddress"
            }
        },
        "LoadBalancerAddress": {
            "type": "object",
            "properties": {
                "IpAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "AllocationId": {
                    "$ref": "#/$defs/AllocationId"
                },
                "PrivateIPv4Address": {
                    "$ref": "#/$defs/PrivateIPv4Address"
                },
                "IPv6Address": {
                    "$ref": "#/$defs/IPv6Address"
                }
            }
        },
        "IpAddress": {
            "type": "string"
        },
        "AllocationId": {
            "type": "string"
        },
        "PrivateIPv4Address": {
            "type": "string"
        },
        "IPv6Address": {
            "type": "string"
        },
        "SourceNatIpv6Prefixes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SourceNatIpv6Prefix"
            }
        },
        "SourceNatIpv6Prefix": {
            "type": "string"
        },
        "SecurityGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "IpAddressType": {
            "enum": [
                "IPV4",
                "DUALSTACK",
                "DUALSTACK_WITHOUT_PUBLIC_IPV4"
            ]
        },
        "CustomerOwnedIpv4Pool": {
            "type": "string"
        },
        "EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic": {
            "type": "string"
        },
        "EnablePrefixForIpv6SourceNatEnum": {
            "enum": [
                "ON",
                "OFF"
            ]
        },
        "IpamPools": {
            "type": "object",
            "properties": {
                "Ipv4IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                }
            }
        },
        "IpamPoolId": {
            "type": "string"
        },
        "CreateLoadBalancerInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/LoadBalancerName"
                },
                "Subnets": {
                    "$ref": "#/$defs/Subnets"
                },
                "SubnetMappings": {
                    "$ref": "#/$defs/SubnetMappings"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                },
                "Scheme": {
                    "$ref": "#/$defs/LoadBalancerSchemeEnum"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "Type": {
                    "$ref": "#/$defs/LoadBalancerTypeEnum"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "CustomerOwnedIpv4Pool": {
                    "$ref": "#/$defs/CustomerOwnedIpv4Pool"
                },
                "EnablePrefixForIpv6SourceNat": {
                    "$ref": "#/$defs/EnablePrefixForIpv6SourceNatEnum"
                },
                "IpamPools": {
                    "$ref": "#/$defs/IpamPools"
                }
            }
        },
        "Subnets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "SubnetMappings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetMapping"
            }
        },
        "SubnetMapping": {
            "type": "object",
            "properties": {
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "AllocationId": {
                    "$ref": "#/$defs/AllocationId"
                },
                "PrivateIPv4Address": {
                    "$ref": "#/$defs/PrivateIPv4Address"
                },
                "IPv6Address": {
                    "$ref": "#/$defs/IPv6Address"
                },
                "SourceNatIpv6Prefix": {
                    "$ref": "#/$defs/SourceNatIpv6Prefix"
                }
            }
        },
        "CreateRuleOutput": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/Rules"
                }
            }
        },
        "Rules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Rule"
            }
        },
        "Rule": {
            "type": "object",
            "properties": {
                "RuleArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "Priority": {
                    "$ref": "#/$defs/String"
                },
                "Conditions": {
                    "$ref": "#/$defs/RuleConditionList"
                },
                "Actions": {
                    "$ref": "#/$defs/Actions"
                },
                "IsDefault": {
                    "$ref": "#/$defs/IsDefault"
                }
            }
        },
        "RuleArn": {
            "type": "string"
        },
        "String": {
            "type": "string"
        },
        "RuleConditionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RuleCondition"
            }
        },
        "RuleCondition": {
            "type": "object",
            "properties": {
                "Field": {
                    "$ref": "#/$defs/ConditionFieldName"
                },
                "Values": {
                    "$ref": "#/$defs/ListOfString"
                },
                "HostHeaderConfig": {
                    "$ref": "#/$defs/HostHeaderConditionConfig"
                },
                "PathPatternConfig": {
                    "$ref": "#/$defs/PathPatternConditionConfig"
                },
                "HttpHeaderConfig": {
                    "$ref": "#/$defs/HttpHeaderConditionConfig"
                },
                "QueryStringConfig": {
                    "$ref": "#/$defs/QueryStringConditionConfig"
                },
                "HttpRequestMethodConfig": {
                    "$ref": "#/$defs/HttpRequestMethodConditionConfig"
                },
                "SourceIpConfig": {
                    "$ref": "#/$defs/SourceIpConditionConfig"
                }
            }
        },
        "ConditionFieldName": {
            "type": "string"
        },
        "ListOfString": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StringValue"
            }
        },
        "StringValue": {
            "type": "string"
        },
        "HostHeaderConditionConfig": {
            "type": "object",
            "properties": {
                "Values": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "PathPatternConditionConfig": {
            "type": "object",
            "properties": {
                "Values": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "HttpHeaderConditionConfig": {
            "type": "object",
            "properties": {
                "HttpHeaderName": {
                    "$ref": "#/$defs/HttpHeaderConditionName"
                },
                "Values": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "HttpHeaderConditionName": {
            "type": "string"
        },
        "QueryStringConditionConfig": {
            "type": "object",
            "properties": {
                "Values": {
                    "$ref": "#/$defs/QueryStringKeyValuePairList"
                }
            }
        },
        "QueryStringKeyValuePairList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/QueryStringKeyValuePair"
            }
        },
        "QueryStringKeyValuePair": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/StringValue"
                },
                "Value": {
                    "$ref": "#/$defs/StringValue"
                }
            }
        },
        "HttpRequestMethodConditionConfig": {
            "type": "object",
            "properties": {
                "Values": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "SourceIpConditionConfig": {
            "type": "object",
            "properties": {
                "Values": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "IsDefault": {
            "type": "boolean"
        },
        "CreateRuleInput": {
            "type": "object",
            "properties": {
                "ListenerArn": {
                    "$ref": "#/$defs/ListenerArn"
                },
                "Conditions": {
                    "$ref": "#/$defs/RuleConditionList"
                },
                "Priority": {
                    "$ref": "#/$defs/RulePriority"
                },
                "Actions": {
                    "$ref": "#/$defs/Actions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "RulePriority": {
            "type": "integer",
            "format": "int32"
        },
        "CreateTargetGroupOutput": {
            "type": "object",
            "properties": {
                "TargetGroups": {
                    "$ref": "#/$defs/TargetGroups"
                }
            }
        },
        "TargetGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetGroup"
            }
        },
        "TargetGroup": {
            "type": "object",
            "properties": {
                "TargetGroupArn": {
                    "$ref": "#/$defs/TargetGroupArn"
                },
                "TargetGroupName": {
                    "$ref": "#/$defs/TargetGroupName"
                },
                "Protocol": {
                    "$ref": "#/$defs/ProtocolEnum"
                },
                "Port": {
                    "$ref": "#/$defs/Port"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "HealthCheckProtocol": {
                    "$ref": "#/$defs/ProtocolEnum"
                },
                "HealthCheckPort": {
                    "$ref": "#/$defs/HealthCheckPort"
                },
                "HealthCheckEnabled": {
                    "$ref": "#/$defs/HealthCheckEnabled"
                },
                "HealthCheckIntervalSeconds": {
                    "$ref": "#/$defs/HealthCheckIntervalSeconds"
                },
                "HealthCheckTimeoutSeconds": {
                    "$ref": "#/$defs/HealthCheckTimeoutSeconds"
                },
                "HealthyThresholdCount": {
                    "$ref": "#/$defs/HealthCheckThresholdCount"
                },
                "UnhealthyThresholdCount": {
                    "$ref": "#/$defs/HealthCheckThresholdCount"
                },
                "HealthCheckPath": {
                    "$ref": "#/$defs/Path"
                },
                "Matcher": {
                    "$ref": "#/$defs/Matcher"
                },
                "LoadBalancerArns": {
                    "$ref": "#/$defs/LoadBalancerArns"
                },
                "TargetType": {
                    "$ref": "#/$defs/TargetTypeEnum"
                },
                "ProtocolVersion": {
                    "$ref": "#/$defs/ProtocolVersion"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/TargetGroupIpAddressTypeEnum"
                }
            }
        },
        "TargetGroupName": {
            "type": "string"
        },
        "HealthCheckPort": {
            "type": "string"
        },
        "HealthCheckEnabled": {
            "type": "boolean"
        },
        "HealthCheckIntervalSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "HealthCheckTimeoutSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "HealthCheckThresholdCount": {
            "type": "integer",
            "format": "int32"
        },
        "Path": {
            "type": "string"
        },
        "Matcher": {
            "type": "object",
            "properties": {
                "HttpCode": {
                    "$ref": "#/$defs/HttpCode"
                },
                "GrpcCode": {
                    "$ref": "#/$defs/GrpcCode"
                }
            }
        },
        "HttpCode": {
            "type": "string"
        },
        "GrpcCode": {
            "type": "string"
        },
        "LoadBalancerArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerArn"
            }
        },
        "TargetTypeEnum": {
            "enum": [
                "INSTANCE",
                "IP",
                "LAMBDA",
                "ALB"
            ]
        },
        "ProtocolVersion": {
            "type": "string"
        },
        "TargetGroupIpAddressTypeEnum": {
            "enum": [
                "IPV4",
                "IPV6"
            ]
        },
        "CreateTargetGroupInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/TargetGroupName"
                },
                "Protocol": {
                    "$ref": "#/$defs/ProtocolEnum"
                },
                "ProtocolVersion": {
                    "$ref": "#/$defs/ProtocolVersion"
                },
                "Port": {
                    "$ref": "#/$defs/Port"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "HealthCheckProtocol": {
                    "$ref": "#/$defs/ProtocolEnum"
                },
                "HealthCheckPort": {
                    "$ref": "#/$defs/HealthCheckPort"
                },
                "HealthCheckEnabled": {
                    "$ref": "#/$defs/HealthCheckEnabled"
                },
                "HealthCheckPath": {
                    "$ref": "#/$defs/Path"
                },
                "HealthCheckIntervalSeconds": {
                    "$ref": "#/$defs/HealthCheckIntervalSeconds"
                },
                "HealthCheckTimeoutSeconds": {
                    "$ref": "#/$defs/HealthCheckTimeoutSeconds"
                },
                "HealthyThresholdCount": {
                    "$ref": "#/$defs/HealthCheckThresholdCount"
                },
                "UnhealthyThresholdCount": {
                    "$ref": "#/$defs/HealthCheckThresholdCount"
                },
                "Matcher": {
                    "$ref": "#/$defs/Matcher"
                },
                "TargetType": {
                    "$ref": "#/$defs/TargetTypeEnum"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/TargetGroupIpAddressTypeEnum"
                }
            }
        },
        "CreateTrustStoreOutput": {
            "type": "object",
            "properties": {
                "TrustStores": {
                    "$ref": "#/$defs/TrustStores"
                }
            }
        },
        "TrustStores": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrustStore"
            }
        },
        "TrustStore": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/TrustStoreName"
                },
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "Status": {
                    "$ref": "#/$defs/TrustStoreStatus"
                },
                "NumberOfCaCertificates": {
                    "$ref": "#/$defs/NumberOfCaCertificates"
                },
                "TotalRevokedEntries": {
                    "$ref": "#/$defs/TotalRevokedEntries"
                }
            }
        },
        "TrustStoreName": {
            "type": "string"
        },
        "TrustStoreStatus": {
            "enum": [
                "ACTIVE",
                "CREATING"
            ]
        },
        "NumberOfCaCertificates": {
            "type": "integer",
            "format": "int32"
        },
        "TotalRevokedEntries": {
            "type": "integer",
            "format": "int64"
        },
        "CreateTrustStoreInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/TrustStoreName"
                },
                "CaCertificatesBundleS3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "CaCertificatesBundleS3Key": {
                    "$ref": "#/$defs/S3Key"
                },
                "CaCertificatesBundleS3ObjectVersion": {
                    "$ref": "#/$defs/S3ObjectVersion"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DeleteListenerOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteListenerInput": {
            "type": "object",
            "properties": {
                "ListenerArn": {
                    "$ref": "#/$defs/ListenerArn"
                }
            }
        },
        "DeleteLoadBalancerOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteLoadBalancerInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                }
            }
        },
        "DeleteRuleOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteRuleInput": {
            "type": "object",
            "properties": {
                "RuleArn": {
                    "$ref": "#/$defs/RuleArn"
                }
            }
        },
        "DeleteSharedTrustStoreAssociationOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteSharedTrustStoreAssociationInput": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "DeleteTargetGroupOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteTargetGroupInput": {
            "type": "object",
            "properties": {
                "TargetGroupArn": {
                    "$ref": "#/$defs/TargetGroupArn"
                }
            }
        },
        "DeleteTrustStoreOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteTrustStoreInput": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                }
            }
        },
        "DeregisterTargetsOutput": {
            "type": "object",
            "properties": {}
        },
        "DeregisterTargetsInput": {
            "type": "object",
            "properties": {
                "TargetGroupArn": {
                    "$ref": "#/$defs/TargetGroupArn"
                },
                "Targets": {
                    "$ref": "#/$defs/TargetDescriptions"
                }
            }
        },
        "TargetDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetDescription"
            }
        },
        "TargetDescription": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/TargetId"
                },
                "Port": {
                    "$ref": "#/$defs/Port"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/ZoneName"
                }
            }
        },
        "TargetId": {
            "type": "string"
        },
        "DescribeAccountLimitsOutput": {
            "type": "object",
            "properties": {
                "Limits": {
                    "$ref": "#/$defs/Limits"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "Limits": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Limit"
            }
        },
        "Limit": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/Name"
                },
                "Max": {
                    "$ref": "#/$defs/Max"
                }
            }
        },
        "Name": {
            "type": "string"
        },
        "Max": {
            "type": "string"
        },
        "Marker": {
            "type": "string"
        },
        "DescribeAccountLimitsInput": {
            "type": "object",
            "properties": {
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "PageSize": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCapacityReservationOutput": {
            "type": "object",
            "properties": {
                "LastModifiedTime": {
                    "$ref": "#/$defs/LastModifiedTime"
                },
                "DecreaseRequestsRemaining": {
                    "$ref": "#/$defs/DecreaseRequestsRemaining"
                },
                "MinimumLoadBalancerCapacity": {
                    "$ref": "#/$defs/MinimumLoadBalancerCapacity"
                },
                "CapacityReservationState": {
                    "$ref": "#/$defs/ZonalCapacityReservationStates"
                }
            }
        },
        "LastModifiedTime": {
            "type": "string",
            "format": "date-time"
        },
        "DecreaseRequestsRemaining": {
            "type": "integer",
            "format": "int32"
        },
        "MinimumLoadBalancerCapacity": {
            "type": "object",
            "properties": {
                "CapacityUnits": {
                    "$ref": "#/$defs/CapacityUnits"
                }
            }
        },
        "CapacityUnits": {
            "type": "integer",
            "format": "int32"
        },
        "ZonalCapacityReservationStates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ZonalCapacityReservationState"
            }
        },
        "ZonalCapacityReservationState": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/CapacityReservationStatus"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/ZoneName"
                },
                "EffectiveCapacityUnits": {
                    "$ref": "#/$defs/CapacityUnitsDouble"
                }
            }
        },
        "CapacityReservationStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/CapacityReservationStateEnum"
                },
                "Reason": {
                    "$ref": "#/$defs/StateReason"
                }
            }
        },
        "CapacityReservationStateEnum": {
            "enum": [
                "PROVISIONED",
                "PENDING",
                "REBALANCING",
                "FAILED"
            ]
        },
        "CapacityUnitsDouble": {
            "type": "number",
            "format": "double"
        },
        "DescribeCapacityReservationInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                }
            }
        },
        "DescribeListenerAttributesOutput": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/ListenerAttributes"
                }
            }
        },
        "ListenerAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListenerAttribute"
            }
        },
        "ListenerAttribute": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ListenerAttributeKey"
                },
                "Value": {
                    "$ref": "#/$defs/ListenerAttributeValue"
                }
            }
        },
        "ListenerAttributeKey": {
            "type": "string"
        },
        "ListenerAttributeValue": {
            "type": "string"
        },
        "DescribeListenerAttributesInput": {
            "type": "object",
            "properties": {
                "ListenerArn": {
                    "$ref": "#/$defs/ListenerArn"
                }
            }
        },
        "DescribeListenerCertificatesOutput": {
            "type": "object",
            "properties": {
                "Certificates": {
                    "$ref": "#/$defs/CertificateList"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "DescribeListenerCertificatesInput": {
            "type": "object",
            "properties": {
                "ListenerArn": {
                    "$ref": "#/$defs/ListenerArn"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "DescribeListenersOutput": {
            "type": "object",
            "properties": {
                "Listeners": {
                    "$ref": "#/$defs/Listeners"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "DescribeListenersInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "ListenerArns": {
                    "$ref": "#/$defs/ListenerArns"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "ListenerArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListenerArn"
            }
        },
        "DescribeLoadBalancerAttributesOutput": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/LoadBalancerAttributes"
                }
            }
        },
        "LoadBalancerAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerAttribute"
            }
        },
        "LoadBalancerAttribute": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/LoadBalancerAttributeKey"
                },
                "Value": {
                    "$ref": "#/$defs/LoadBalancerAttributeValue"
                }
            }
        },
        "LoadBalancerAttributeKey": {
            "type": "string"
        },
        "LoadBalancerAttributeValue": {
            "type": "string"
        },
        "DescribeLoadBalancerAttributesInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                }
            }
        },
        "DescribeLoadBalancersOutput": {
            "type": "object",
            "properties": {
                "LoadBalancers": {
                    "$ref": "#/$defs/LoadBalancers"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "DescribeLoadBalancersInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArns": {
                    "$ref": "#/$defs/LoadBalancerArns"
                },
                "Names": {
                    "$ref": "#/$defs/LoadBalancerNames"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "LoadBalancerNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerName"
            }
        },
        "DescribeRulesOutput": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/Rules"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "DescribeRulesInput": {
            "type": "object",
            "properties": {
                "ListenerArn": {
                    "$ref": "#/$defs/ListenerArn"
                },
                "RuleArns": {
                    "$ref": "#/$defs/RuleArns"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "RuleArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RuleArn"
            }
        },
        "DescribeSSLPoliciesOutput": {
            "type": "object",
            "properties": {
                "SslPolicies": {
                    "$ref": "#/$defs/SslPolicies"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "SslPolicies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SslPolicy"
            }
        },
        "SslPolicy": {
            "type": "object",
            "properties": {
                "SslProtocols": {
                    "$ref": "#/$defs/SslProtocols"
                },
                "Ciphers": {
                    "$ref": "#/$defs/Ciphers"
                },
                "Name": {
                    "$ref": "#/$defs/SslPolicyName"
                },
                "SupportedLoadBalancerTypes": {
                    "$ref": "#/$defs/ListOfString"
                }
            }
        },
        "SslProtocols": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SslProtocol"
            }
        },
        "SslProtocol": {
            "type": "string"
        },
        "Ciphers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Cipher"
            }
        },
        "Cipher": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CipherName"
                },
                "Priority": {
                    "$ref": "#/$defs/CipherPriority"
                }
            }
        },
        "CipherName": {
            "type": "string"
        },
        "CipherPriority": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeSSLPoliciesInput": {
            "type": "object",
            "properties": {
                "Names": {
                    "$ref": "#/$defs/SslPolicyNames"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "LoadBalancerType": {
                    "$ref": "#/$defs/LoadBalancerTypeEnum"
                }
            }
        },
        "SslPolicyNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SslPolicyName"
            }
        },
        "DescribeTagsOutput": {
            "type": "object",
            "properties": {
                "TagDescriptions": {
                    "$ref": "#/$defs/TagDescriptions"
                }
            }
        },
        "TagDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagDescription"
            }
        },
        "TagDescription": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DescribeTagsInput": {
            "type": "object",
            "properties": {
                "ResourceArns": {
                    "$ref": "#/$defs/ResourceArns"
                }
            }
        },
        "DescribeTargetGroupAttributesOutput": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/TargetGroupAttributes"
                }
            }
        },
        "TargetGroupAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetGroupAttribute"
            }
        },
        "TargetGroupAttribute": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TargetGroupAttributeKey"
                },
                "Value": {
                    "$ref": "#/$defs/TargetGroupAttributeValue"
                }
            }
        },
        "TargetGroupAttributeKey": {
            "type": "string"
        },
        "TargetGroupAttributeValue": {
            "type": "string"
        },
        "DescribeTargetGroupAttributesInput": {
            "type": "object",
            "properties": {
                "TargetGroupArn": {
                    "$ref": "#/$defs/TargetGroupArn"
                }
            }
        },
        "DescribeTargetGroupsOutput": {
            "type": "object",
            "properties": {
                "TargetGroups": {
                    "$ref": "#/$defs/TargetGroups"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "DescribeTargetGroupsInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "TargetGroupArns": {
                    "$ref": "#/$defs/TargetGroupArns"
                },
                "Names": {
                    "$ref": "#/$defs/TargetGroupNames"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "TargetGroupArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetGroupArn"
            }
        },
        "TargetGroupNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetGroupName"
            }
        },
        "DescribeTargetHealthOutput": {
            "type": "object",
            "properties": {
                "TargetHealthDescriptions": {
                    "$ref": "#/$defs/TargetHealthDescriptions"
                }
            }
        },
        "TargetHealthDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetHealthDescription"
            }
        },
        "TargetHealthDescription": {
            "type": "object",
            "properties": {
                "Target": {
                    "$ref": "#/$defs/TargetDescription"
                },
                "HealthCheckPort": {
                    "$ref": "#/$defs/HealthCheckPort"
                },
                "TargetHealth": {
                    "$ref": "#/$defs/TargetHealth"
                },
                "AnomalyDetection": {
                    "$ref": "#/$defs/AnomalyDetection"
                },
                "AdministrativeOverride": {
                    "$ref": "#/$defs/AdministrativeOverride"
                }
            }
        },
        "TargetHealth": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/TargetHealthStateEnum"
                },
                "Reason": {
                    "$ref": "#/$defs/TargetHealthReasonEnum"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "TargetHealthStateEnum": {
            "enum": [
                "INITIAL",
                "HEALTHY",
                "UNHEALTHY",
                "UNHEALTHY_DRAINING",
                "UNUSED",
                "DRAINING",
                "UNAVAILABLE"
            ]
        },
        "TargetHealthReasonEnum": {
            "enum": [
                "REGISTRATION_IN_PROGRESS",
                "INITIAL_HEALTH_CHECKING",
                "RESPONSE_CODE_MISMATCH",
                "TIMEOUT",
                "FAILED_HEALTH_CHECKS",
                "NOT_REGISTERED",
                "NOT_IN_USE",
                "DEREGISTRATION_IN_PROGRESS",
                "INVALID_STATE",
                "IP_UNUSABLE",
                "HEALTH_CHECK_DISABLED",
                "INTERNAL_ERROR"
            ]
        },
        "Description": {
            "type": "string"
        },
        "AnomalyDetection": {
            "type": "object",
            "properties": {
                "Result": {
                    "$ref": "#/$defs/AnomalyResultEnum"
                },
                "MitigationInEffect": {
                    "$ref": "#/$defs/MitigationInEffectEnum"
                }
            }
        },
        "AnomalyResultEnum": {
            "enum": [
                "ANOMALOUS",
                "NORMAL"
            ]
        },
        "MitigationInEffectEnum": {
            "enum": [
                "YES",
                "NO"
            ]
        },
        "AdministrativeOverride": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/TargetAdministrativeOverrideStateEnum"
                },
                "Reason": {
                    "$ref": "#/$defs/TargetAdministrativeOverrideReasonEnum"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "TargetAdministrativeOverrideStateEnum": {
            "enum": [
                "UNKNOWN",
                "NO_OVERRIDE",
                "ZONAL_SHIFT_ACTIVE",
                "ZONAL_SHIFT_DELEGATED_TO_DNS"
            ]
        },
        "TargetAdministrativeOverrideReasonEnum": {
            "enum": [
                "INTERNAL_ERROR",
                "NO_OVERRIDE_ENGAGED",
                "ZONAL_SHIFT_ENGAGED",
                "ZONAL_SHIFT_DELEGATED_TO_DNS"
            ]
        },
        "DescribeTargetHealthInput": {
            "type": "object",
            "properties": {
                "TargetGroupArn": {
                    "$ref": "#/$defs/TargetGroupArn"
                },
                "Targets": {
                    "$ref": "#/$defs/TargetDescriptions"
                },
                "Include": {
                    "$ref": "#/$defs/ListOfDescribeTargetHealthIncludeOptions"
                }
            }
        },
        "ListOfDescribeTargetHealthIncludeOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeTargetHealthInputIncludeEnum"
            }
        },
        "DescribeTargetHealthInputIncludeEnum": {
            "enum": [
                "ANOMALY",
                "ALL"
            ]
        },
        "DescribeTrustStoreAssociationsOutput": {
            "type": "object",
            "properties": {
                "TrustStoreAssociations": {
                    "$ref": "#/$defs/TrustStoreAssociations"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "TrustStoreAssociations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrustStoreAssociation"
            }
        },
        "TrustStoreAssociation": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/TrustStoreAssociationResourceArn"
                }
            }
        },
        "TrustStoreAssociationResourceArn": {
            "type": "string"
        },
        "DescribeTrustStoreAssociationsInput": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "DescribeTrustStoreRevocationsOutput": {
            "type": "object",
            "properties": {
                "TrustStoreRevocations": {
                    "$ref": "#/$defs/DescribeTrustStoreRevocationResponse"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "DescribeTrustStoreRevocationResponse": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeTrustStoreRevocation"
            }
        },
        "DescribeTrustStoreRevocation": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "RevocationId": {
                    "$ref": "#/$defs/RevocationId"
                },
                "RevocationType": {
                    "$ref": "#/$defs/RevocationType"
                },
                "NumberOfRevokedEntries": {
                    "$ref": "#/$defs/NumberOfRevokedEntries"
                }
            }
        },
        "DescribeTrustStoreRevocationsInput": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "RevocationIds": {
                    "$ref": "#/$defs/RevocationIds"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "RevocationIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RevocationId"
            }
        },
        "DescribeTrustStoresOutput": {
            "type": "object",
            "properties": {
                "TrustStores": {
                    "$ref": "#/$defs/TrustStores"
                },
                "NextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "DescribeTrustStoresInput": {
            "type": "object",
            "properties": {
                "TrustStoreArns": {
                    "$ref": "#/$defs/TrustStoreArns"
                },
                "Names": {
                    "$ref": "#/$defs/TrustStoreNames"
                },
                "Marker": {
                    "$ref": "#/$defs/Marker"
                },
                "PageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "TrustStoreArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrustStoreArn"
            }
        },
        "TrustStoreNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrustStoreName"
            }
        },
        "GetResourcePolicyOutput": {
            "type": "object",
            "properties": {
                "Policy": {
                    "$ref": "#/$defs/Policy"
                }
            }
        },
        "Policy": {
            "type": "string"
        },
        "GetResourcePolicyInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "GetTrustStoreCaCertificatesBundleOutput": {
            "type": "object",
            "properties": {
                "Location": {
                    "$ref": "#/$defs/Location"
                }
            }
        },
        "Location": {
            "type": "string"
        },
        "GetTrustStoreCaCertificatesBundleInput": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                }
            }
        },
        "GetTrustStoreRevocationContentOutput": {
            "type": "object",
            "properties": {
                "Location": {
                    "$ref": "#/$defs/Location"
                }
            }
        },
        "GetTrustStoreRevocationContentInput": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "RevocationId": {
                    "$ref": "#/$defs/RevocationId"
                }
            }
        },
        "ModifyCapacityReservationOutput": {
            "type": "object",
            "properties": {
                "LastModifiedTime": {
                    "$ref": "#/$defs/LastModifiedTime"
                },
                "DecreaseRequestsRemaining": {
                    "$ref": "#/$defs/DecreaseRequestsRemaining"
                },
                "MinimumLoadBalancerCapacity": {
                    "$ref": "#/$defs/MinimumLoadBalancerCapacity"
                },
                "CapacityReservationState": {
                    "$ref": "#/$defs/ZonalCapacityReservationStates"
                }
            }
        },
        "ModifyCapacityReservationInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "MinimumLoadBalancerCapacity": {
                    "$ref": "#/$defs/MinimumLoadBalancerCapacity"
                },
                "ResetCapacityReservation": {
                    "$ref": "#/$defs/ResetCapacityReservation"
                }
            }
        },
        "ResetCapacityReservation": {
            "type": "boolean"
        },
        "ModifyIpPoolsOutput": {
            "type": "object",
            "properties": {
                "IpamPools": {
                    "$ref": "#/$defs/IpamPools"
                }
            }
        },
        "ModifyIpPoolsInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "IpamPools": {
                    "$ref": "#/$defs/IpamPools"
                },
                "RemoveIpamPools": {
                    "$ref": "#/$defs/RemoveIpamPools"
                }
            }
        },
        "RemoveIpamPools": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RemoveIpamPoolEnum"
            }
        },
        "RemoveIpamPoolEnum": {
            "enum": [
                "ipv4"
            ]
        },
        "ModifyListenerOutput": {
            "type": "object",
            "properties": {
                "Listeners": {
                    "$ref": "#/$defs/Listeners"
                }
            }
        },
        "ModifyListenerInput": {
            "type": "object",
            "properties": {
                "ListenerArn": {
                    "$ref": "#/$defs/ListenerArn"
                },
                "Port": {
                    "$ref": "#/$defs/Port"
                },
                "Protocol": {
                    "$ref": "#/$defs/ProtocolEnum"
                },
                "SslPolicy": {
                    "$ref": "#/$defs/SslPolicyName"
                },
                "Certificates": {
                    "$ref": "#/$defs/CertificateList"
                },
                "DefaultActions": {
                    "$ref": "#/$defs/Actions"
                },
                "AlpnPolicy": {
                    "$ref": "#/$defs/AlpnPolicyName"
                },
                "MutualAuthentication": {
                    "$ref": "#/$defs/MutualAuthenticationAttributes"
                }
            }
        },
        "ModifyListenerAttributesOutput": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/ListenerAttributes"
                }
            }
        },
        "ModifyListenerAttributesInput": {
            "type": "object",
            "properties": {
                "ListenerArn": {
                    "$ref": "#/$defs/ListenerArn"
                },
                "Attributes": {
                    "$ref": "#/$defs/ListenerAttributes"
                }
            }
        },
        "ModifyLoadBalancerAttributesOutput": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/LoadBalancerAttributes"
                }
            }
        },
        "ModifyLoadBalancerAttributesInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "Attributes": {
                    "$ref": "#/$defs/LoadBalancerAttributes"
                }
            }
        },
        "ModifyRuleOutput": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/Rules"
                }
            }
        },
        "ModifyRuleInput": {
            "type": "object",
            "properties": {
                "RuleArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "Conditions": {
                    "$ref": "#/$defs/RuleConditionList"
                },
                "Actions": {
                    "$ref": "#/$defs/Actions"
                }
            }
        },
        "ModifyTargetGroupOutput": {
            "type": "object",
            "properties": {
                "TargetGroups": {
                    "$ref": "#/$defs/TargetGroups"
                }
            }
        },
        "ModifyTargetGroupInput": {
            "type": "object",
            "properties": {
                "TargetGroupArn": {
                    "$ref": "#/$defs/TargetGroupArn"
                },
                "HealthCheckProtocol": {
                    "$ref": "#/$defs/ProtocolEnum"
                },
                "HealthCheckPort": {
                    "$ref": "#/$defs/HealthCheckPort"
                },
                "HealthCheckPath": {
                    "$ref": "#/$defs/Path"
                },
                "HealthCheckEnabled": {
                    "$ref": "#/$defs/HealthCheckEnabled"
                },
                "HealthCheckIntervalSeconds": {
                    "$ref": "#/$defs/HealthCheckIntervalSeconds"
                },
                "HealthCheckTimeoutSeconds": {
                    "$ref": "#/$defs/HealthCheckTimeoutSeconds"
                },
                "HealthyThresholdCount": {
                    "$ref": "#/$defs/HealthCheckThresholdCount"
                },
                "UnhealthyThresholdCount": {
                    "$ref": "#/$defs/HealthCheckThresholdCount"
                },
                "Matcher": {
                    "$ref": "#/$defs/Matcher"
                }
            }
        },
        "ModifyTargetGroupAttributesOutput": {
            "type": "object",
            "properties": {
                "Attributes": {
                    "$ref": "#/$defs/TargetGroupAttributes"
                }
            }
        },
        "ModifyTargetGroupAttributesInput": {
            "type": "object",
            "properties": {
                "TargetGroupArn": {
                    "$ref": "#/$defs/TargetGroupArn"
                },
                "Attributes": {
                    "$ref": "#/$defs/TargetGroupAttributes"
                }
            }
        },
        "ModifyTrustStoreOutput": {
            "type": "object",
            "properties": {
                "TrustStores": {
                    "$ref": "#/$defs/TrustStores"
                }
            }
        },
        "ModifyTrustStoreInput": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "CaCertificatesBundleS3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "CaCertificatesBundleS3Key": {
                    "$ref": "#/$defs/S3Key"
                },
                "CaCertificatesBundleS3ObjectVersion": {
                    "$ref": "#/$defs/S3ObjectVersion"
                }
            }
        },
        "RegisterTargetsOutput": {
            "type": "object",
            "properties": {}
        },
        "RegisterTargetsInput": {
            "type": "object",
            "properties": {
                "TargetGroupArn": {
                    "$ref": "#/$defs/TargetGroupArn"
                },
                "Targets": {
                    "$ref": "#/$defs/TargetDescriptions"
                }
            }
        },
        "RemoveListenerCertificatesOutput": {
            "type": "object",
            "properties": {}
        },
        "RemoveListenerCertificatesInput": {
            "type": "object",
            "properties": {
                "ListenerArn": {
                    "$ref": "#/$defs/ListenerArn"
                },
                "Certificates": {
                    "$ref": "#/$defs/CertificateList"
                }
            }
        },
        "RemoveTagsOutput": {
            "type": "object",
            "properties": {}
        },
        "RemoveTagsInput": {
            "type": "object",
            "properties": {
                "ResourceArns": {
                    "$ref": "#/$defs/ResourceArns"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeys"
                }
            }
        },
        "TagKeys": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "RemoveTrustStoreRevocationsOutput": {
            "type": "object",
            "properties": {}
        },
        "RemoveTrustStoreRevocationsInput": {
            "type": "object",
            "properties": {
                "TrustStoreArn": {
                    "$ref": "#/$defs/TrustStoreArn"
                },
                "RevocationIds": {
                    "$ref": "#/$defs/RevocationIds"
                }
            }
        },
        "SetIpAddressTypeOutput": {
            "type": "object",
            "properties": {
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                }
            }
        },
        "SetIpAddressTypeInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                }
            }
        },
        "SetRulePrioritiesOutput": {
            "type": "object",
            "properties": {
                "Rules": {
                    "$ref": "#/$defs/Rules"
                }
            }
        },
        "SetRulePrioritiesInput": {
            "type": "object",
            "properties": {
                "RulePriorities": {
                    "$ref": "#/$defs/RulePriorityList"
                }
            }
        },
        "RulePriorityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RulePriorityPair"
            }
        },
        "RulePriorityPair": {
            "type": "object",
            "properties": {
                "RuleArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "Priority": {
                    "$ref": "#/$defs/RulePriority"
                }
            }
        },
        "SetSecurityGroupsOutput": {
            "type": "object",
            "properties": {
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroups"
                },
                "EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic": {
                    "$ref": "#/$defs/EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum"
                }
            }
        },
        "EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum": {
            "enum": [
                "on",
                "off"
            ]
        },
        "SetSecurityGroupsInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroups"
                },
                "EnforceSecurityGroupInboundRulesOnPrivateLinkTraffic": {
                    "$ref": "#/$defs/EnforceSecurityGroupInboundRulesOnPrivateLinkTrafficEnum"
                }
            }
        },
        "SetSubnetsOutput": {
            "type": "object",
            "properties": {
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZones"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "EnablePrefixForIpv6SourceNat": {
                    "$ref": "#/$defs/EnablePrefixForIpv6SourceNatEnum"
                }
            }
        },
        "SetSubnetsInput": {
            "type": "object",
            "properties": {
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "Subnets": {
                    "$ref": "#/$defs/Subnets"
                },
                "SubnetMappings": {
                    "$ref": "#/$defs/SubnetMappings"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "EnablePrefixForIpv6SourceNat": {
                    "$ref": "#/$defs/EnablePrefixForIpv6SourceNatEnum"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://elasticloadbalancing-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://elasticloadbalancing.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://elasticloadbalancing-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://elasticloadbalancing.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://elasticloadbalancing.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}