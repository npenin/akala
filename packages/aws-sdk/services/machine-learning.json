{
    "name": "machinelearning",
    "commands": [
        {
            "name": "AddTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.AddTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddTagsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddTagsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBatchPrediction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.CreateBatchPrediction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBatchPredictionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBatchPredictionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDataSourceFromRDS",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.CreateDataSourceFromRDS"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDataSourceFromRDSOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDataSourceFromRDSInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDataSourceFromRedshift",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.CreateDataSourceFromRedshift"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDataSourceFromRedshiftOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDataSourceFromRedshiftInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDataSourceFromS3",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.CreateDataSourceFromS3"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDataSourceFromS3Output"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDataSourceFromS3Input"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateEvaluation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.CreateEvaluation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEvaluationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEvaluationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateMLModel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.CreateMLModel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMLModelOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMLModelInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRealtimeEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.CreateRealtimeEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRealtimeEndpointOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRealtimeEndpointInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBatchPrediction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DeleteBatchPrediction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBatchPredictionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBatchPredictionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDataSource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DeleteDataSource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDataSourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDataSourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteEvaluation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DeleteEvaluation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEvaluationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEvaluationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteMLModel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DeleteMLModel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMLModelOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMLModelInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRealtimeEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DeleteRealtimeEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRealtimeEndpointOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRealtimeEndpointInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DeleteTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTagsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTagsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeBatchPredictions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DescribeBatchPredictions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeBatchPredictionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeBatchPredictionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDataSources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DescribeDataSources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDataSourcesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDataSourcesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEvaluations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DescribeEvaluations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEvaluationsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEvaluationsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeMLModels",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DescribeMLModels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMLModelsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMLModelsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.DescribeTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTagsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTagsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBatchPrediction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.GetBatchPrediction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBatchPredictionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBatchPredictionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDataSource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.GetDataSource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataSourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDataSourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEvaluation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.GetEvaluation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEvaluationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEvaluationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMLModel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.GetMLModel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMLModelOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMLModelInput"
                        }
                    }
                }
            }
        },
        {
            "name": "Predict",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.Predict"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PredictOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PredictInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateBatchPrediction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.UpdateBatchPrediction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBatchPredictionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBatchPredictionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDataSource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.UpdateDataSource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDataSourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDataSourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateEvaluation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.UpdateEvaluation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEvaluationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEvaluationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateMLModel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonML_20141212.UpdateMLModel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMLModelOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMLModelInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddTagsOutput": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TaggableResourceType"
                }
            }
        },
        "EntityId": {
            "type": "string"
        },
        "TaggableResourceType": {
            "enum": [
                "BATCH_PREDICTION",
                "DATASOURCE",
                "EVALUATION",
                "ML_MODEL"
            ]
        },
        "AddTagsInput": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ResourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TaggableResourceType"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateBatchPredictionOutput": {
            "type": "object",
            "properties": {
                "BatchPredictionId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "CreateBatchPredictionInput": {
            "type": "object",
            "properties": {
                "BatchPredictionId": {
                    "$ref": "#/$defs/EntityId"
                },
                "BatchPredictionName": {
                    "$ref": "#/$defs/EntityName"
                },
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "BatchPredictionDataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "OutputUri": {
                    "$ref": "#/$defs/S3Url"
                }
            }
        },
        "EntityName": {
            "type": "string"
        },
        "S3Url": {
            "type": "string"
        },
        "CreateDataSourceFromRDSOutput": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "CreateDataSourceFromRDSInput": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "DataSourceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "RDSData": {
                    "$ref": "#/$defs/RDSDataSpec"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "ComputeStatistics": {
                    "$ref": "#/$defs/ComputeStatistics"
                }
            }
        },
        "RDSDataSpec": {
            "type": "object",
            "properties": {
                "DatabaseInformation": {
                    "$ref": "#/$defs/RDSDatabase"
                },
                "SelectSqlQuery": {
                    "$ref": "#/$defs/RDSSelectSqlQuery"
                },
                "DatabaseCredentials": {
                    "$ref": "#/$defs/RDSDatabaseCredentials"
                },
                "S3StagingLocation": {
                    "$ref": "#/$defs/S3Url"
                },
                "DataRearrangement": {
                    "$ref": "#/$defs/DataRearrangement"
                },
                "DataSchema": {
                    "$ref": "#/$defs/DataSchema"
                },
                "DataSchemaUri": {
                    "$ref": "#/$defs/S3Url"
                },
                "ResourceRole": {
                    "$ref": "#/$defs/EDPResourceRole"
                },
                "ServiceRole": {
                    "$ref": "#/$defs/EDPServiceRole"
                },
                "SubnetId": {
                    "$ref": "#/$defs/EDPSubnetId"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/EDPSecurityGroupIds"
                }
            }
        },
        "RDSDatabase": {
            "type": "object",
            "properties": {
                "InstanceIdentifier": {
                    "$ref": "#/$defs/RDSInstanceIdentifier"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/RDSDatabaseName"
                }
            }
        },
        "RDSInstanceIdentifier": {
            "type": "string"
        },
        "RDSDatabaseName": {
            "type": "string"
        },
        "RDSSelectSqlQuery": {
            "type": "string"
        },
        "RDSDatabaseCredentials": {
            "type": "object",
            "properties": {
                "Username": {
                    "$ref": "#/$defs/RDSDatabaseUsername"
                },
                "Password": {
                    "$ref": "#/$defs/RDSDatabasePassword"
                }
            }
        },
        "RDSDatabaseUsername": {
            "type": "string"
        },
        "RDSDatabasePassword": {
            "type": "string"
        },
        "DataRearrangement": {
            "type": "string"
        },
        "DataSchema": {
            "type": "string"
        },
        "EDPResourceRole": {
            "type": "string"
        },
        "EDPServiceRole": {
            "type": "string"
        },
        "EDPSubnetId": {
            "type": "string"
        },
        "EDPSecurityGroupIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EDPSecurityGroupId"
            }
        },
        "EDPSecurityGroupId": {
            "type": "string"
        },
        "RoleARN": {
            "type": "string"
        },
        "ComputeStatistics": {
            "type": "boolean"
        },
        "CreateDataSourceFromRedshiftOutput": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "CreateDataSourceFromRedshiftInput": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "DataSourceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "DataSpec": {
                    "$ref": "#/$defs/RedshiftDataSpec"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "ComputeStatistics": {
                    "$ref": "#/$defs/ComputeStatistics"
                }
            }
        },
        "RedshiftDataSpec": {
            "type": "object",
            "properties": {
                "DatabaseInformation": {
                    "$ref": "#/$defs/RedshiftDatabase"
                },
                "SelectSqlQuery": {
                    "$ref": "#/$defs/RedshiftSelectSqlQuery"
                },
                "DatabaseCredentials": {
                    "$ref": "#/$defs/RedshiftDatabaseCredentials"
                },
                "S3StagingLocation": {
                    "$ref": "#/$defs/S3Url"
                },
                "DataRearrangement": {
                    "$ref": "#/$defs/DataRearrangement"
                },
                "DataSchema": {
                    "$ref": "#/$defs/DataSchema"
                },
                "DataSchemaUri": {
                    "$ref": "#/$defs/S3Url"
                }
            }
        },
        "RedshiftDatabase": {
            "type": "object",
            "properties": {
                "DatabaseName": {
                    "$ref": "#/$defs/RedshiftDatabaseName"
                },
                "ClusterIdentifier": {
                    "$ref": "#/$defs/RedshiftClusterIdentifier"
                }
            }
        },
        "RedshiftDatabaseName": {
            "type": "string"
        },
        "RedshiftClusterIdentifier": {
            "type": "string"
        },
        "RedshiftSelectSqlQuery": {
            "type": "string"
        },
        "RedshiftDatabaseCredentials": {
            "type": "object",
            "properties": {
                "Username": {
                    "$ref": "#/$defs/RedshiftDatabaseUsername"
                },
                "Password": {
                    "$ref": "#/$defs/RedshiftDatabasePassword"
                }
            }
        },
        "RedshiftDatabaseUsername": {
            "type": "string"
        },
        "RedshiftDatabasePassword": {
            "type": "string"
        },
        "CreateDataSourceFromS3Output": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "CreateDataSourceFromS3Input": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "DataSourceName": {
                    "$ref": "#/$defs/EntityName"
                },
                "DataSpec": {
                    "$ref": "#/$defs/S3DataSpec"
                },
                "ComputeStatistics": {
                    "$ref": "#/$defs/ComputeStatistics"
                }
            }
        },
        "S3DataSpec": {
            "type": "object",
            "properties": {
                "DataLocationS3": {
                    "$ref": "#/$defs/S3Url"
                },
                "DataRearrangement": {
                    "$ref": "#/$defs/DataRearrangement"
                },
                "DataSchema": {
                    "$ref": "#/$defs/DataSchema"
                },
                "DataSchemaLocationS3": {
                    "$ref": "#/$defs/S3Url"
                }
            }
        },
        "CreateEvaluationOutput": {
            "type": "object",
            "properties": {
                "EvaluationId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "CreateEvaluationInput": {
            "type": "object",
            "properties": {
                "EvaluationId": {
                    "$ref": "#/$defs/EntityId"
                },
                "EvaluationName": {
                    "$ref": "#/$defs/EntityName"
                },
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "EvaluationDataSourceId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "CreateMLModelOutput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "CreateMLModelInput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "MLModelName": {
                    "$ref": "#/$defs/EntityName"
                },
                "MLModelType": {
                    "$ref": "#/$defs/MLModelType"
                },
                "Parameters": {
                    "$ref": "#/$defs/TrainingParameters"
                },
                "TrainingDataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "Recipe": {
                    "$ref": "#/$defs/Recipe"
                },
                "RecipeUri": {
                    "$ref": "#/$defs/S3Url"
                }
            }
        },
        "MLModelType": {
            "enum": [
                "REGRESSION",
                "BINARY",
                "MULTICLASS"
            ]
        },
        "TrainingParameters": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/StringType"
            }
        },
        "StringType": {
            "type": "string"
        },
        "Recipe": {
            "type": "string"
        },
        "CreateRealtimeEndpointOutput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "RealtimeEndpointInfo": {
                    "$ref": "#/$defs/RealtimeEndpointInfo"
                }
            }
        },
        "RealtimeEndpointInfo": {
            "type": "object",
            "properties": {
                "PeakRequestsPerSecond": {
                    "$ref": "#/$defs/IntegerType"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "EndpointUrl": {
                    "$ref": "#/$defs/VipURL"
                },
                "EndpointStatus": {
                    "$ref": "#/$defs/RealtimeEndpointStatus"
                }
            }
        },
        "IntegerType": {
            "type": "integer",
            "format": "int32"
        },
        "EpochTime": {
            "type": "string",
            "format": "date-time"
        },
        "VipURL": {
            "type": "string"
        },
        "RealtimeEndpointStatus": {
            "enum": [
                "NONE",
                "READY",
                "UPDATING",
                "FAILED"
            ]
        },
        "CreateRealtimeEndpointInput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DeleteBatchPredictionOutput": {
            "type": "object",
            "properties": {
                "BatchPredictionId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DeleteBatchPredictionInput": {
            "type": "object",
            "properties": {
                "BatchPredictionId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DeleteDataSourceOutput": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DeleteDataSourceInput": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DeleteEvaluationOutput": {
            "type": "object",
            "properties": {
                "EvaluationId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DeleteEvaluationInput": {
            "type": "object",
            "properties": {
                "EvaluationId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DeleteMLModelOutput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DeleteMLModelInput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DeleteRealtimeEndpointOutput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "RealtimeEndpointInfo": {
                    "$ref": "#/$defs/RealtimeEndpointInfo"
                }
            }
        },
        "DeleteRealtimeEndpointInput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DeleteTagsOutput": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TaggableResourceType"
                }
            }
        },
        "DeleteTagsInput": {
            "type": "object",
            "properties": {
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                },
                "ResourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TaggableResourceType"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "DescribeBatchPredictionsOutput": {
            "type": "object",
            "properties": {
                "Results": {
                    "$ref": "#/$defs/BatchPredictions"
                },
                "NextToken": {
                    "$ref": "#/$defs/StringType"
                }
            }
        },
        "BatchPredictions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchPrediction"
            }
        },
        "BatchPrediction": {
            "type": "object",
            "properties": {
                "BatchPredictionId": {
                    "$ref": "#/$defs/EntityId"
                },
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "BatchPredictionDataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "InputDataLocationS3": {
                    "$ref": "#/$defs/S3Url"
                },
                "CreatedByIamUser": {
                    "$ref": "#/$defs/AwsUserArn"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "Name": {
                    "$ref": "#/$defs/EntityName"
                },
                "Status": {
                    "$ref": "#/$defs/EntityStatus"
                },
                "OutputUri": {
                    "$ref": "#/$defs/S3Url"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                },
                "ComputeTime": {
                    "$ref": "#/$defs/LongType"
                },
                "FinishedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "StartedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "TotalRecordCount": {
                    "$ref": "#/$defs/LongType"
                },
                "InvalidRecordCount": {
                    "$ref": "#/$defs/LongType"
                }
            }
        },
        "AwsUserArn": {
            "type": "string"
        },
        "EntityStatus": {
            "enum": [
                "PENDING",
                "INPROGRESS",
                "FAILED",
                "COMPLETED",
                "DELETED"
            ]
        },
        "Message": {
            "type": "string"
        },
        "LongType": {
            "type": "integer",
            "format": "int64"
        },
        "DescribeBatchPredictionsInput": {
            "type": "object",
            "properties": {
                "FilterVariable": {
                    "$ref": "#/$defs/BatchPredictionFilterVariable"
                },
                "EQ": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "GT": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "LT": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "GE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "LE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "NE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "Prefix": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "NextToken": {
                    "$ref": "#/$defs/StringType"
                },
                "Limit": {
                    "$ref": "#/$defs/PageLimit"
                }
            }
        },
        "BatchPredictionFilterVariable": {
            "enum": [
                "CREATED_AT",
                "LAST_UPDATED_AT",
                "STATUS",
                "NAME",
                "IAM_USER",
                "ML_MODEL_ID",
                "DATASOURCE_ID",
                "DATA_URI"
            ]
        },
        "ComparatorValue": {
            "type": "string"
        },
        "SortOrder": {
            "enum": [
                "ASC",
                "DSC"
            ]
        },
        "PageLimit": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeDataSourcesOutput": {
            "type": "object",
            "properties": {
                "Results": {
                    "$ref": "#/$defs/DataSources"
                },
                "NextToken": {
                    "$ref": "#/$defs/StringType"
                }
            }
        },
        "DataSources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataSource"
            }
        },
        "DataSource": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "DataLocationS3": {
                    "$ref": "#/$defs/S3Url"
                },
                "DataRearrangement": {
                    "$ref": "#/$defs/DataRearrangement"
                },
                "CreatedByIamUser": {
                    "$ref": "#/$defs/AwsUserArn"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "DataSizeInBytes": {
                    "$ref": "#/$defs/LongType"
                },
                "NumberOfFiles": {
                    "$ref": "#/$defs/LongType"
                },
                "Name": {
                    "$ref": "#/$defs/EntityName"
                },
                "Status": {
                    "$ref": "#/$defs/EntityStatus"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                },
                "RedshiftMetadata": {
                    "$ref": "#/$defs/RedshiftMetadata"
                },
                "RDSMetadata": {
                    "$ref": "#/$defs/RDSMetadata"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "ComputeStatistics": {
                    "$ref": "#/$defs/ComputeStatistics"
                },
                "ComputeTime": {
                    "$ref": "#/$defs/LongType"
                },
                "FinishedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "StartedAt": {
                    "$ref": "#/$defs/EpochTime"
                }
            }
        },
        "RedshiftMetadata": {
            "type": "object",
            "properties": {
                "RedshiftDatabase": {
                    "$ref": "#/$defs/RedshiftDatabase"
                },
                "DatabaseUserName": {
                    "$ref": "#/$defs/RedshiftDatabaseUsername"
                },
                "SelectSqlQuery": {
                    "$ref": "#/$defs/RedshiftSelectSqlQuery"
                }
            }
        },
        "RDSMetadata": {
            "type": "object",
            "properties": {
                "Database": {
                    "$ref": "#/$defs/RDSDatabase"
                },
                "DatabaseUserName": {
                    "$ref": "#/$defs/RDSDatabaseUsername"
                },
                "SelectSqlQuery": {
                    "$ref": "#/$defs/RDSSelectSqlQuery"
                },
                "ResourceRole": {
                    "$ref": "#/$defs/EDPResourceRole"
                },
                "ServiceRole": {
                    "$ref": "#/$defs/EDPServiceRole"
                },
                "DataPipelineId": {
                    "$ref": "#/$defs/EDPPipelineId"
                }
            }
        },
        "EDPPipelineId": {
            "type": "string"
        },
        "DescribeDataSourcesInput": {
            "type": "object",
            "properties": {
                "FilterVariable": {
                    "$ref": "#/$defs/DataSourceFilterVariable"
                },
                "EQ": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "GT": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "LT": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "GE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "LE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "NE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "Prefix": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "NextToken": {
                    "$ref": "#/$defs/StringType"
                },
                "Limit": {
                    "$ref": "#/$defs/PageLimit"
                }
            }
        },
        "DataSourceFilterVariable": {
            "enum": [
                "CREATED_AT",
                "LAST_UPDATED_AT",
                "STATUS",
                "NAME",
                "DATA_URI",
                "IAM_USER"
            ]
        },
        "DescribeEvaluationsOutput": {
            "type": "object",
            "properties": {
                "Results": {
                    "$ref": "#/$defs/Evaluations"
                },
                "NextToken": {
                    "$ref": "#/$defs/StringType"
                }
            }
        },
        "Evaluations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Evaluation"
            }
        },
        "Evaluation": {
            "type": "object",
            "properties": {
                "EvaluationId": {
                    "$ref": "#/$defs/EntityId"
                },
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "EvaluationDataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "InputDataLocationS3": {
                    "$ref": "#/$defs/S3Url"
                },
                "CreatedByIamUser": {
                    "$ref": "#/$defs/AwsUserArn"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "Name": {
                    "$ref": "#/$defs/EntityName"
                },
                "Status": {
                    "$ref": "#/$defs/EntityStatus"
                },
                "PerformanceMetrics": {
                    "$ref": "#/$defs/PerformanceMetrics"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                },
                "ComputeTime": {
                    "$ref": "#/$defs/LongType"
                },
                "FinishedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "StartedAt": {
                    "$ref": "#/$defs/EpochTime"
                }
            }
        },
        "PerformanceMetrics": {
            "type": "object",
            "properties": {
                "Properties": {
                    "$ref": "#/$defs/PerformanceMetricsProperties"
                }
            }
        },
        "PerformanceMetricsProperties": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PerformanceMetricsPropertyValue"
            }
        },
        "PerformanceMetricsPropertyValue": {
            "type": "string"
        },
        "DescribeEvaluationsInput": {
            "type": "object",
            "properties": {
                "FilterVariable": {
                    "$ref": "#/$defs/EvaluationFilterVariable"
                },
                "EQ": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "GT": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "LT": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "GE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "LE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "NE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "Prefix": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "NextToken": {
                    "$ref": "#/$defs/StringType"
                },
                "Limit": {
                    "$ref": "#/$defs/PageLimit"
                }
            }
        },
        "EvaluationFilterVariable": {
            "enum": [
                "CREATED_AT",
                "LAST_UPDATED_AT",
                "STATUS",
                "NAME",
                "IAM_USER",
                "ML_MODEL_ID",
                "DATASOURCE_ID",
                "DATA_URI"
            ]
        },
        "DescribeMLModelsOutput": {
            "type": "object",
            "properties": {
                "Results": {
                    "$ref": "#/$defs/MLModels"
                },
                "NextToken": {
                    "$ref": "#/$defs/StringType"
                }
            }
        },
        "MLModels": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MLModel"
            }
        },
        "MLModel": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "TrainingDataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "CreatedByIamUser": {
                    "$ref": "#/$defs/AwsUserArn"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "Name": {
                    "$ref": "#/$defs/MLModelName"
                },
                "Status": {
                    "$ref": "#/$defs/EntityStatus"
                },
                "SizeInBytes": {
                    "$ref": "#/$defs/LongType"
                },
                "EndpointInfo": {
                    "$ref": "#/$defs/RealtimeEndpointInfo"
                },
                "TrainingParameters": {
                    "$ref": "#/$defs/TrainingParameters"
                },
                "InputDataLocationS3": {
                    "$ref": "#/$defs/S3Url"
                },
                "Algorithm": {
                    "$ref": "#/$defs/Algorithm"
                },
                "MLModelType": {
                    "$ref": "#/$defs/MLModelType"
                },
                "ScoreThreshold": {
                    "$ref": "#/$defs/ScoreThreshold"
                },
                "ScoreThresholdLastUpdatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                },
                "ComputeTime": {
                    "$ref": "#/$defs/LongType"
                },
                "FinishedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "StartedAt": {
                    "$ref": "#/$defs/EpochTime"
                }
            }
        },
        "MLModelName": {
            "type": "string"
        },
        "Algorithm": {
            "enum": [
                "SGD"
            ]
        },
        "ScoreThreshold": {
            "type": "number",
            "format": "float"
        },
        "DescribeMLModelsInput": {
            "type": "object",
            "properties": {
                "FilterVariable": {
                    "$ref": "#/$defs/MLModelFilterVariable"
                },
                "EQ": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "GT": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "LT": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "GE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "LE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "NE": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "Prefix": {
                    "$ref": "#/$defs/ComparatorValue"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "NextToken": {
                    "$ref": "#/$defs/StringType"
                },
                "Limit": {
                    "$ref": "#/$defs/PageLimit"
                }
            }
        },
        "MLModelFilterVariable": {
            "enum": [
                "CREATED_AT",
                "LAST_UPDATED_AT",
                "STATUS",
                "NAME",
                "IAM_USER",
                "TRAINING_DATASOURCE_ID",
                "REAL_TIME_ENDPOINT_STATUS",
                "ML_MODEL_TYPE",
                "ALGORITHM",
                "TRAINING_DATA_URI"
            ]
        },
        "DescribeTagsOutput": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TaggableResourceType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DescribeTagsInput": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TaggableResourceType"
                }
            }
        },
        "GetBatchPredictionOutput": {
            "type": "object",
            "properties": {
                "BatchPredictionId": {
                    "$ref": "#/$defs/EntityId"
                },
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "BatchPredictionDataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "InputDataLocationS3": {
                    "$ref": "#/$defs/S3Url"
                },
                "CreatedByIamUser": {
                    "$ref": "#/$defs/AwsUserArn"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "Name": {
                    "$ref": "#/$defs/EntityName"
                },
                "Status": {
                    "$ref": "#/$defs/EntityStatus"
                },
                "OutputUri": {
                    "$ref": "#/$defs/S3Url"
                },
                "LogUri": {
                    "$ref": "#/$defs/PresignedS3Url"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                },
                "ComputeTime": {
                    "$ref": "#/$defs/LongType"
                },
                "FinishedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "StartedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "TotalRecordCount": {
                    "$ref": "#/$defs/LongType"
                },
                "InvalidRecordCount": {
                    "$ref": "#/$defs/LongType"
                }
            }
        },
        "PresignedS3Url": {
            "type": "string"
        },
        "GetBatchPredictionInput": {
            "type": "object",
            "properties": {
                "BatchPredictionId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "GetDataSourceOutput": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "DataLocationS3": {
                    "$ref": "#/$defs/S3Url"
                },
                "DataRearrangement": {
                    "$ref": "#/$defs/DataRearrangement"
                },
                "CreatedByIamUser": {
                    "$ref": "#/$defs/AwsUserArn"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "DataSizeInBytes": {
                    "$ref": "#/$defs/LongType"
                },
                "NumberOfFiles": {
                    "$ref": "#/$defs/LongType"
                },
                "Name": {
                    "$ref": "#/$defs/EntityName"
                },
                "Status": {
                    "$ref": "#/$defs/EntityStatus"
                },
                "LogUri": {
                    "$ref": "#/$defs/PresignedS3Url"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                },
                "RedshiftMetadata": {
                    "$ref": "#/$defs/RedshiftMetadata"
                },
                "RDSMetadata": {
                    "$ref": "#/$defs/RDSMetadata"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "ComputeStatistics": {
                    "$ref": "#/$defs/ComputeStatistics"
                },
                "ComputeTime": {
                    "$ref": "#/$defs/LongType"
                },
                "FinishedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "StartedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "DataSourceSchema": {
                    "$ref": "#/$defs/DataSchema"
                }
            }
        },
        "GetDataSourceInput": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "Verbose": {
                    "$ref": "#/$defs/Verbose"
                }
            }
        },
        "Verbose": {
            "type": "boolean"
        },
        "GetEvaluationOutput": {
            "type": "object",
            "properties": {
                "EvaluationId": {
                    "$ref": "#/$defs/EntityId"
                },
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "EvaluationDataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "InputDataLocationS3": {
                    "$ref": "#/$defs/S3Url"
                },
                "CreatedByIamUser": {
                    "$ref": "#/$defs/AwsUserArn"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "Name": {
                    "$ref": "#/$defs/EntityName"
                },
                "Status": {
                    "$ref": "#/$defs/EntityStatus"
                },
                "PerformanceMetrics": {
                    "$ref": "#/$defs/PerformanceMetrics"
                },
                "LogUri": {
                    "$ref": "#/$defs/PresignedS3Url"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                },
                "ComputeTime": {
                    "$ref": "#/$defs/LongType"
                },
                "FinishedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "StartedAt": {
                    "$ref": "#/$defs/EpochTime"
                }
            }
        },
        "GetEvaluationInput": {
            "type": "object",
            "properties": {
                "EvaluationId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "GetMLModelOutput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "TrainingDataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "CreatedByIamUser": {
                    "$ref": "#/$defs/AwsUserArn"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "LastUpdatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "Name": {
                    "$ref": "#/$defs/MLModelName"
                },
                "Status": {
                    "$ref": "#/$defs/EntityStatus"
                },
                "SizeInBytes": {
                    "$ref": "#/$defs/LongType"
                },
                "EndpointInfo": {
                    "$ref": "#/$defs/RealtimeEndpointInfo"
                },
                "TrainingParameters": {
                    "$ref": "#/$defs/TrainingParameters"
                },
                "InputDataLocationS3": {
                    "$ref": "#/$defs/S3Url"
                },
                "MLModelType": {
                    "$ref": "#/$defs/MLModelType"
                },
                "ScoreThreshold": {
                    "$ref": "#/$defs/ScoreThreshold"
                },
                "ScoreThresholdLastUpdatedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "LogUri": {
                    "$ref": "#/$defs/PresignedS3Url"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                },
                "ComputeTime": {
                    "$ref": "#/$defs/LongType"
                },
                "FinishedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "StartedAt": {
                    "$ref": "#/$defs/EpochTime"
                },
                "Recipe": {
                    "$ref": "#/$defs/Recipe"
                },
                "Schema": {
                    "$ref": "#/$defs/DataSchema"
                }
            }
        },
        "GetMLModelInput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "Verbose": {
                    "$ref": "#/$defs/Verbose"
                }
            }
        },
        "PredictOutput": {
            "type": "object",
            "properties": {
                "Prediction": {
                    "$ref": "#/$defs/Prediction"
                }
            }
        },
        "Prediction": {
            "type": "object",
            "properties": {
                "predictedLabel": {
                    "$ref": "#/$defs/Label"
                },
                "predictedValue": {
                    "$ref": "#/$defs/floatLabel"
                },
                "predictedScores": {
                    "$ref": "#/$defs/ScoreValuePerLabelMap"
                },
                "details": {
                    "$ref": "#/$defs/DetailsMap"
                }
            }
        },
        "Label": {
            "type": "string"
        },
        "floatLabel": {
            "type": "number",
            "format": "float"
        },
        "ScoreValuePerLabelMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ScoreValue"
            }
        },
        "ScoreValue": {
            "type": "number",
            "format": "float"
        },
        "DetailsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DetailsValue"
            }
        },
        "DetailsValue": {
            "type": "string"
        },
        "PredictInput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "Record": {
                    "$ref": "#/$defs/Record"
                },
                "PredictEndpoint": {
                    "$ref": "#/$defs/VipURL"
                }
            }
        },
        "Record": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/VariableValue"
            }
        },
        "VariableValue": {
            "type": "string"
        },
        "UpdateBatchPredictionOutput": {
            "type": "object",
            "properties": {
                "BatchPredictionId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "UpdateBatchPredictionInput": {
            "type": "object",
            "properties": {
                "BatchPredictionId": {
                    "$ref": "#/$defs/EntityId"
                },
                "BatchPredictionName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "UpdateDataSourceOutput": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "UpdateDataSourceInput": {
            "type": "object",
            "properties": {
                "DataSourceId": {
                    "$ref": "#/$defs/EntityId"
                },
                "DataSourceName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "UpdateEvaluationOutput": {
            "type": "object",
            "properties": {
                "EvaluationId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "UpdateEvaluationInput": {
            "type": "object",
            "properties": {
                "EvaluationId": {
                    "$ref": "#/$defs/EntityId"
                },
                "EvaluationName": {
                    "$ref": "#/$defs/EntityName"
                }
            }
        },
        "UpdateMLModelOutput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "UpdateMLModelInput": {
            "type": "object",
            "properties": {
                "MLModelId": {
                    "$ref": "#/$defs/EntityId"
                },
                "MLModelName": {
                    "$ref": "#/$defs/EntityName"
                },
                "ScoreThreshold": {
                    "$ref": "#/$defs/ScoreThreshold"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://machinelearning-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://machinelearning-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://machinelearning.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://machinelearning.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}