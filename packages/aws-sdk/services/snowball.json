{
    "name": "snowball",
    "commands": [
        {
            "name": "CancelCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelClusterResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelJobResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAddressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClusterResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateJobResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLongTermPricing",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateLongTermPricing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLongTermPricingResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLongTermPricingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateReturnShippingLabel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateReturnShippingLabel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateReturnShippingLabelResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateReturnShippingLabelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAddressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAddresses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAddresses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAddressesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAddressesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClusterResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeJobResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReturnShippingLabel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeReturnShippingLabel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReturnShippingLabelResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReturnShippingLabelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetJobManifest",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetJobManifest"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetJobManifestResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetJobManifestRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetJobUnlockCode",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetJobUnlockCode"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetJobUnlockCodeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetJobUnlockCodeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSnowballUsage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSnowballUsage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSnowballUsageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSnowballUsageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSoftwareUpdates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSoftwareUpdates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSoftwareUpdatesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSoftwareUpdatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListClusterJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListClusterJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClusterJobsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClusterJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListClusters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListClusters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListClustersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListClustersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCompatibleImages",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListCompatibleImages"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCompatibleImagesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCompatibleImagesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListLongTermPricing",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListLongTermPricing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListLongTermPricingResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListLongTermPricingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPickupLocations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListPickupLocations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPickupLocationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPickupLocationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServiceVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListServiceVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServiceVersionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListServiceVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClusterResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateJobResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateJobShipmentState",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateJobShipmentState"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateJobShipmentStateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateJobShipmentStateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateLongTermPricing",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateLongTermPricing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateLongTermPricingResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateLongTermPricingRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CancelClusterResult": {
            "type": "object",
            "properties": {}
        },
        "CancelClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                }
            }
        },
        "ClusterId": {
            "type": "string"
        },
        "CancelJobResult": {
            "type": "object",
            "properties": {}
        },
        "CancelJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "JobId": {
            "type": "string"
        },
        "CreateAddressResult": {
            "type": "object",
            "properties": {
                "AddressId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "CreateAddressRequest": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/Address"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "AddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Company": {
                    "$ref": "#/$defs/String"
                },
                "Street1": {
                    "$ref": "#/$defs/String"
                },
                "Street2": {
                    "$ref": "#/$defs/String"
                },
                "Street3": {
                    "$ref": "#/$defs/String"
                },
                "City": {
                    "$ref": "#/$defs/String"
                },
                "StateOrProvince": {
                    "$ref": "#/$defs/String"
                },
                "PrefectureOrDistrict": {
                    "$ref": "#/$defs/String"
                },
                "Landmark": {
                    "$ref": "#/$defs/String"
                },
                "Country": {
                    "$ref": "#/$defs/String"
                },
                "PostalCode": {
                    "$ref": "#/$defs/String"
                },
                "PhoneNumber": {
                    "$ref": "#/$defs/String"
                },
                "IsRestricted": {
                    "$ref": "#/$defs/Boolean"
                },
                "Type": {
                    "$ref": "#/$defs/AddressType"
                }
            }
        },
        "AddressId": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "AddressType": {
            "enum": [
                "CUST_PICKUP",
                "AWS_SHIP"
            ]
        },
        "CreateClusterResult": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "JobListEntries": {
                    "$ref": "#/$defs/JobListEntryList"
                }
            }
        },
        "JobListEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobListEntry"
            }
        },
        "JobListEntry": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/String"
                },
                "JobState": {
                    "$ref": "#/$defs/JobState"
                },
                "IsMaster": {
                    "$ref": "#/$defs/Boolean"
                },
                "JobType": {
                    "$ref": "#/$defs/JobType"
                },
                "SnowballType": {
                    "$ref": "#/$defs/SnowballType"
                },
                "CreationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "JobState": {
            "enum": [
                "NEW",
                "PREPARING_APPLIANCE",
                "PREPARING_SHIPMENT",
                "IN_TRANSIT_TO_CUSTOMER",
                "WITH_CUSTOMER",
                "IN_TRANSIT_TO_AWS",
                "WITH_AWS_SORTING_FACILITY",
                "WITH_AWS",
                "IN_PROGRESS",
                "COMPLETE",
                "CANCELLED",
                "LISTING",
                "PENDING"
            ]
        },
        "JobType": {
            "enum": [
                "IMPORT",
                "EXPORT",
                "LOCAL_USE"
            ]
        },
        "SnowballType": {
            "enum": [
                "STANDARD",
                "EDGE",
                "EDGE_C",
                "EDGE_CG",
                "EDGE_S",
                "SNC1_HDD",
                "SNC1_SSD",
                "V3_5C",
                "V3_5S",
                "RACK_5U_C"
            ]
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "CreateClusterRequest": {
            "type": "object",
            "properties": {
                "JobType": {
                    "$ref": "#/$defs/JobType"
                },
                "Resources": {
                    "$ref": "#/$defs/JobResource"
                },
                "OnDeviceServiceConfiguration": {
                    "$ref": "#/$defs/OnDeviceServiceConfiguration"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "AddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "KmsKeyARN": {
                    "$ref": "#/$defs/KmsKeyARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "SnowballType": {
                    "$ref": "#/$defs/SnowballType"
                },
                "ShippingOption": {
                    "$ref": "#/$defs/ShippingOption"
                },
                "Notification": {
                    "$ref": "#/$defs/Notification"
                },
                "ForwardingAddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "TaxDocuments": {
                    "$ref": "#/$defs/TaxDocuments"
                },
                "RemoteManagement": {
                    "$ref": "#/$defs/RemoteManagement"
                },
                "InitialClusterSize": {
                    "$ref": "#/$defs/InitialClusterSize"
                },
                "ForceCreateJobs": {
                    "$ref": "#/$defs/Boolean"
                },
                "LongTermPricingIds": {
                    "$ref": "#/$defs/LongTermPricingIdList"
                },
                "SnowballCapacityPreference": {
                    "$ref": "#/$defs/SnowballCapacity"
                }
            }
        },
        "JobResource": {
            "type": "object",
            "properties": {
                "S3Resources": {
                    "$ref": "#/$defs/S3ResourceList"
                },
                "LambdaResources": {
                    "$ref": "#/$defs/LambdaResourceList"
                },
                "Ec2AmiResources": {
                    "$ref": "#/$defs/Ec2AmiResourceList"
                }
            }
        },
        "S3ResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3Resource"
            }
        },
        "S3Resource": {
            "type": "object",
            "properties": {
                "BucketArn": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "KeyRange": {
                    "$ref": "#/$defs/KeyRange"
                },
                "TargetOnDeviceServices": {
                    "$ref": "#/$defs/TargetOnDeviceServiceList"
                }
            }
        },
        "ResourceARN": {
            "type": "string"
        },
        "KeyRange": {
            "type": "object",
            "properties": {
                "BeginMarker": {
                    "$ref": "#/$defs/String"
                },
                "EndMarker": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TargetOnDeviceServiceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetOnDeviceService"
            }
        },
        "TargetOnDeviceService": {
            "type": "object",
            "properties": {
                "ServiceName": {
                    "$ref": "#/$defs/DeviceServiceName"
                },
                "TransferOption": {
                    "$ref": "#/$defs/TransferOption"
                }
            }
        },
        "DeviceServiceName": {
            "enum": [
                "NFS_ON_DEVICE_SERVICE",
                "S3_ON_DEVICE_SERVICE"
            ]
        },
        "TransferOption": {
            "enum": [
                "IMPORT",
                "EXPORT",
                "LOCAL_USE"
            ]
        },
        "LambdaResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LambdaResource"
            }
        },
        "LambdaResource": {
            "type": "object",
            "properties": {
                "LambdaArn": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "EventTriggers": {
                    "$ref": "#/$defs/EventTriggerDefinitionList"
                }
            }
        },
        "EventTriggerDefinitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventTriggerDefinition"
            }
        },
        "EventTriggerDefinition": {
            "type": "object",
            "properties": {
                "EventResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "Ec2AmiResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ec2AmiResource"
            }
        },
        "Ec2AmiResource": {
            "type": "object",
            "properties": {
                "AmiId": {
                    "$ref": "#/$defs/AmiId"
                },
                "SnowballAmiId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AmiId": {
            "type": "string"
        },
        "OnDeviceServiceConfiguration": {
            "type": "object",
            "properties": {
                "NFSOnDeviceService": {
                    "$ref": "#/$defs/NFSOnDeviceServiceConfiguration"
                },
                "TGWOnDeviceService": {
                    "$ref": "#/$defs/TGWOnDeviceServiceConfiguration"
                },
                "EKSOnDeviceService": {
                    "$ref": "#/$defs/EKSOnDeviceServiceConfiguration"
                },
                "S3OnDeviceService": {
                    "$ref": "#/$defs/S3OnDeviceServiceConfiguration"
                }
            }
        },
        "NFSOnDeviceServiceConfiguration": {
            "type": "object",
            "properties": {
                "StorageLimit": {
                    "$ref": "#/$defs/StorageLimit"
                },
                "StorageUnit": {
                    "$ref": "#/$defs/StorageUnit"
                }
            }
        },
        "StorageLimit": {
            "type": "integer",
            "format": "int32"
        },
        "StorageUnit": {
            "enum": [
                "TB"
            ]
        },
        "TGWOnDeviceServiceConfiguration": {
            "type": "object",
            "properties": {
                "StorageLimit": {
                    "$ref": "#/$defs/StorageLimit"
                },
                "StorageUnit": {
                    "$ref": "#/$defs/StorageUnit"
                }
            }
        },
        "EKSOnDeviceServiceConfiguration": {
            "type": "object",
            "properties": {
                "KubernetesVersion": {
                    "$ref": "#/$defs/String"
                },
                "EKSAnywhereVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "S3OnDeviceServiceConfiguration": {
            "type": "object",
            "properties": {
                "StorageLimit": {
                    "$ref": "#/$defs/S3StorageLimit"
                },
                "StorageUnit": {
                    "$ref": "#/$defs/StorageUnit"
                },
                "ServiceSize": {
                    "$ref": "#/$defs/ServiceSize"
                },
                "FaultTolerance": {
                    "$ref": "#/$defs/NodeFaultTolerance"
                }
            }
        },
        "S3StorageLimit": {
            "type": "number",
            "format": "double"
        },
        "ServiceSize": {
            "type": "integer",
            "format": "int32"
        },
        "NodeFaultTolerance": {
            "type": "integer",
            "format": "int32"
        },
        "KmsKeyARN": {
            "type": "string"
        },
        "RoleARN": {
            "type": "string"
        },
        "ShippingOption": {
            "enum": [
                "SECOND_DAY",
                "NEXT_DAY",
                "EXPRESS",
                "STANDARD"
            ]
        },
        "Notification": {
            "type": "object",
            "properties": {
                "SnsTopicARN": {
                    "$ref": "#/$defs/SnsTopicARN"
                },
                "JobStatesToNotify": {
                    "$ref": "#/$defs/JobStateList"
                },
                "NotifyAll": {
                    "$ref": "#/$defs/Boolean"
                },
                "DevicePickupSnsTopicARN": {
                    "$ref": "#/$defs/SnsTopicARN"
                }
            }
        },
        "SnsTopicARN": {
            "type": "string"
        },
        "JobStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobState"
            }
        },
        "TaxDocuments": {
            "type": "object",
            "properties": {
                "IND": {
                    "$ref": "#/$defs/INDTaxDocuments"
                }
            }
        },
        "INDTaxDocuments": {
            "type": "object",
            "properties": {
                "GSTIN": {
                    "$ref": "#/$defs/GSTIN"
                }
            }
        },
        "GSTIN": {
            "type": "string"
        },
        "RemoteManagement": {
            "enum": [
                "INSTALLED_ONLY",
                "INSTALLED_AUTOSTART",
                "NOT_INSTALLED"
            ]
        },
        "InitialClusterSize": {
            "type": "integer",
            "format": "int32"
        },
        "LongTermPricingIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LongTermPricingId"
            }
        },
        "LongTermPricingId": {
            "type": "string"
        },
        "SnowballCapacity": {
            "enum": [
                "T50",
                "T80",
                "T100",
                "T42",
                "T98",
                "T8",
                "T14",
                "T32",
                "NO_PREFERENCE",
                "T240",
                "T13"
            ]
        },
        "CreateJobResult": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "CreateJobRequest": {
            "type": "object",
            "properties": {
                "JobType": {
                    "$ref": "#/$defs/JobType"
                },
                "Resources": {
                    "$ref": "#/$defs/JobResource"
                },
                "OnDeviceServiceConfiguration": {
                    "$ref": "#/$defs/OnDeviceServiceConfiguration"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "AddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "KmsKeyARN": {
                    "$ref": "#/$defs/KmsKeyARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "SnowballCapacityPreference": {
                    "$ref": "#/$defs/SnowballCapacity"
                },
                "ShippingOption": {
                    "$ref": "#/$defs/ShippingOption"
                },
                "Notification": {
                    "$ref": "#/$defs/Notification"
                },
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "SnowballType": {
                    "$ref": "#/$defs/SnowballType"
                },
                "ForwardingAddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "TaxDocuments": {
                    "$ref": "#/$defs/TaxDocuments"
                },
                "DeviceConfiguration": {
                    "$ref": "#/$defs/DeviceConfiguration"
                },
                "RemoteManagement": {
                    "$ref": "#/$defs/RemoteManagement"
                },
                "LongTermPricingId": {
                    "$ref": "#/$defs/LongTermPricingId"
                },
                "ImpactLevel": {
                    "$ref": "#/$defs/ImpactLevel"
                },
                "PickupDetails": {
                    "$ref": "#/$defs/PickupDetails"
                }
            }
        },
        "DeviceConfiguration": {
            "type": "object",
            "properties": {
                "SnowconeDeviceConfiguration": {
                    "$ref": "#/$defs/SnowconeDeviceConfiguration"
                }
            }
        },
        "SnowconeDeviceConfiguration": {
            "type": "object",
            "properties": {
                "WirelessConnection": {
                    "$ref": "#/$defs/WirelessConnection"
                }
            }
        },
        "WirelessConnection": {
            "type": "object",
            "properties": {
                "IsWifiEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ImpactLevel": {
            "enum": [
                "IL2",
                "IL4",
                "IL5",
                "IL6",
                "IL99"
            ]
        },
        "PickupDetails": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "PhoneNumber": {
                    "$ref": "#/$defs/PhoneNumber"
                },
                "Email": {
                    "$ref": "#/$defs/Email"
                },
                "IdentificationNumber": {
                    "$ref": "#/$defs/String"
                },
                "IdentificationExpirationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "IdentificationIssuingOrg": {
                    "$ref": "#/$defs/String"
                },
                "DevicePickupId": {
                    "$ref": "#/$defs/DevicePickupId"
                }
            }
        },
        "PhoneNumber": {
            "type": "string"
        },
        "Email": {
            "type": "string"
        },
        "DevicePickupId": {
            "type": "string"
        },
        "CreateLongTermPricingResult": {
            "type": "object",
            "properties": {
                "LongTermPricingId": {
                    "$ref": "#/$defs/LongTermPricingId"
                }
            }
        },
        "CreateLongTermPricingRequest": {
            "type": "object",
            "properties": {
                "LongTermPricingType": {
                    "$ref": "#/$defs/LongTermPricingType"
                },
                "IsLongTermPricingAutoRenew": {
                    "$ref": "#/$defs/JavaBoolean"
                },
                "SnowballType": {
                    "$ref": "#/$defs/SnowballType"
                }
            }
        },
        "LongTermPricingType": {
            "enum": [
                "ONE_YEAR",
                "THREE_YEAR",
                "ONE_MONTH"
            ]
        },
        "JavaBoolean": {
            "type": "boolean"
        },
        "CreateReturnShippingLabelResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ShippingLabelStatus"
                }
            }
        },
        "ShippingLabelStatus": {
            "enum": [
                "IN_PROGRESS",
                "TIMED_OUT",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "CreateReturnShippingLabelRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "ShippingOption": {
                    "$ref": "#/$defs/ShippingOption"
                }
            }
        },
        "DescribeAddressResult": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/Address"
                }
            }
        },
        "DescribeAddressRequest": {
            "type": "object",
            "properties": {
                "AddressId": {
                    "$ref": "#/$defs/AddressId"
                }
            }
        },
        "DescribeAddressesResult": {
            "type": "object",
            "properties": {
                "Addresses": {
                    "$ref": "#/$defs/AddressList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Address"
            }
        },
        "DescribeAddressesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListLimit": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeClusterResult": {
            "type": "object",
            "properties": {
                "ClusterMetadata": {
                    "$ref": "#/$defs/ClusterMetadata"
                }
            }
        },
        "ClusterMetadata": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyARN": {
                    "$ref": "#/$defs/KmsKeyARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "ClusterState": {
                    "$ref": "#/$defs/ClusterState"
                },
                "JobType": {
                    "$ref": "#/$defs/JobType"
                },
                "SnowballType": {
                    "$ref": "#/$defs/SnowballType"
                },
                "CreationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Resources": {
                    "$ref": "#/$defs/JobResource"
                },
                "AddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "ShippingOption": {
                    "$ref": "#/$defs/ShippingOption"
                },
                "Notification": {
                    "$ref": "#/$defs/Notification"
                },
                "ForwardingAddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "TaxDocuments": {
                    "$ref": "#/$defs/TaxDocuments"
                },
                "OnDeviceServiceConfiguration": {
                    "$ref": "#/$defs/OnDeviceServiceConfiguration"
                }
            }
        },
        "ClusterState": {
            "enum": [
                "AWAITING_QUORUM",
                "PENDING",
                "IN_USE",
                "COMPLETE",
                "CANCELLED"
            ]
        },
        "DescribeClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                }
            }
        },
        "DescribeJobResult": {
            "type": "object",
            "properties": {
                "JobMetadata": {
                    "$ref": "#/$defs/JobMetadata"
                },
                "SubJobMetadata": {
                    "$ref": "#/$defs/JobMetadataList"
                }
            }
        },
        "JobMetadata": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/String"
                },
                "JobState": {
                    "$ref": "#/$defs/JobState"
                },
                "JobType": {
                    "$ref": "#/$defs/JobType"
                },
                "SnowballType": {
                    "$ref": "#/$defs/SnowballType"
                },
                "CreationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Resources": {
                    "$ref": "#/$defs/JobResource"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyARN": {
                    "$ref": "#/$defs/KmsKeyARN"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "AddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "ShippingDetails": {
                    "$ref": "#/$defs/ShippingDetails"
                },
                "SnowballCapacityPreference": {
                    "$ref": "#/$defs/SnowballCapacity"
                },
                "Notification": {
                    "$ref": "#/$defs/Notification"
                },
                "DataTransferProgress": {
                    "$ref": "#/$defs/DataTransfer"
                },
                "JobLogInfo": {
                    "$ref": "#/$defs/JobLogs"
                },
                "ClusterId": {
                    "$ref": "#/$defs/String"
                },
                "ForwardingAddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "TaxDocuments": {
                    "$ref": "#/$defs/TaxDocuments"
                },
                "DeviceConfiguration": {
                    "$ref": "#/$defs/DeviceConfiguration"
                },
                "RemoteManagement": {
                    "$ref": "#/$defs/RemoteManagement"
                },
                "LongTermPricingId": {
                    "$ref": "#/$defs/LongTermPricingId"
                },
                "OnDeviceServiceConfiguration": {
                    "$ref": "#/$defs/OnDeviceServiceConfiguration"
                },
                "ImpactLevel": {
                    "$ref": "#/$defs/ImpactLevel"
                },
                "PickupDetails": {
                    "$ref": "#/$defs/PickupDetails"
                },
                "SnowballId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ShippingDetails": {
            "type": "object",
            "properties": {
                "ShippingOption": {
                    "$ref": "#/$defs/ShippingOption"
                },
                "InboundShipment": {
                    "$ref": "#/$defs/Shipment"
                },
                "OutboundShipment": {
                    "$ref": "#/$defs/Shipment"
                }
            }
        },
        "Shipment": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "TrackingNumber": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DataTransfer": {
            "type": "object",
            "properties": {
                "BytesTransferred": {
                    "$ref": "#/$defs/Long"
                },
                "ObjectsTransferred": {
                    "$ref": "#/$defs/Long"
                },
                "TotalBytes": {
                    "$ref": "#/$defs/Long"
                },
                "TotalObjects": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "JobLogs": {
            "type": "object",
            "properties": {
                "JobCompletionReportURI": {
                    "$ref": "#/$defs/String"
                },
                "JobSuccessLogURI": {
                    "$ref": "#/$defs/String"
                },
                "JobFailureLogURI": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "JobMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobMetadata"
            }
        },
        "DescribeJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DescribeReturnShippingLabelResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ShippingLabelStatus"
                },
                "ExpirationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ReturnShippingLabelURI": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeReturnShippingLabelRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "GetJobManifestResult": {
            "type": "object",
            "properties": {
                "ManifestURI": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetJobManifestRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "GetJobUnlockCodeResult": {
            "type": "object",
            "properties": {
                "UnlockCode": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetJobUnlockCodeRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "GetSnowballUsageResult": {
            "type": "object",
            "properties": {
                "SnowballLimit": {
                    "$ref": "#/$defs/Integer"
                },
                "SnowballsInUse": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "GetSnowballUsageRequest": {
            "type": "object",
            "properties": {}
        },
        "GetSoftwareUpdatesResult": {
            "type": "object",
            "properties": {
                "UpdatesURI": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetSoftwareUpdatesRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "ListClusterJobsResult": {
            "type": "object",
            "properties": {
                "JobListEntries": {
                    "$ref": "#/$defs/JobListEntryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListClusterJobsRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListClustersResult": {
            "type": "object",
            "properties": {
                "ClusterListEntries": {
                    "$ref": "#/$defs/ClusterListEntryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClusterListEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClusterListEntry"
            }
        },
        "ClusterListEntry": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/String"
                },
                "ClusterState": {
                    "$ref": "#/$defs/ClusterState"
                },
                "CreationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListClustersRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListCompatibleImagesResult": {
            "type": "object",
            "properties": {
                "CompatibleImages": {
                    "$ref": "#/$defs/CompatibleImageList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CompatibleImageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CompatibleImage"
            }
        },
        "CompatibleImage": {
            "type": "object",
            "properties": {
                "AmiId": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListCompatibleImagesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListJobsResult": {
            "type": "object",
            "properties": {
                "JobListEntries": {
                    "$ref": "#/$defs/JobListEntryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListJobsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListLongTermPricingResult": {
            "type": "object",
            "properties": {
                "LongTermPricingEntries": {
                    "$ref": "#/$defs/LongTermPricingEntryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LongTermPricingEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LongTermPricingListEntry"
            }
        },
        "LongTermPricingListEntry": {
            "type": "object",
            "properties": {
                "LongTermPricingId": {
                    "$ref": "#/$defs/LongTermPricingId"
                },
                "LongTermPricingEndDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LongTermPricingStartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LongTermPricingType": {
                    "$ref": "#/$defs/LongTermPricingType"
                },
                "CurrentActiveJob": {
                    "$ref": "#/$defs/JobId"
                },
                "ReplacementJob": {
                    "$ref": "#/$defs/JobId"
                },
                "IsLongTermPricingAutoRenew": {
                    "$ref": "#/$defs/JavaBoolean"
                },
                "LongTermPricingStatus": {
                    "$ref": "#/$defs/String"
                },
                "SnowballType": {
                    "$ref": "#/$defs/SnowballType"
                },
                "JobIds": {
                    "$ref": "#/$defs/LongTermPricingAssociatedJobIdList"
                }
            }
        },
        "LongTermPricingAssociatedJobIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobId"
            }
        },
        "ListLongTermPricingRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListPickupLocationsResult": {
            "type": "object",
            "properties": {
                "Addresses": {
                    "$ref": "#/$defs/AddressList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListPickupLocationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListServiceVersionsResult": {
            "type": "object",
            "properties": {
                "ServiceVersions": {
                    "$ref": "#/$defs/ServiceVersionList"
                },
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "DependentServices": {
                    "$ref": "#/$defs/DependentServiceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceVersion"
            }
        },
        "ServiceVersion": {
            "type": "object",
            "properties": {
                "Version": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceName": {
            "enum": [
                "KUBERNETES",
                "EKS_ANYWHERE"
            ]
        },
        "DependentServiceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DependentService"
            }
        },
        "DependentService": {
            "type": "object",
            "properties": {
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "ServiceVersion": {
                    "$ref": "#/$defs/ServiceVersion"
                }
            }
        },
        "ListServiceVersionsRequest": {
            "type": "object",
            "properties": {
                "ServiceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "DependentServices": {
                    "$ref": "#/$defs/DependentServiceList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListLimit"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateClusterResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterId": {
                    "$ref": "#/$defs/ClusterId"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Resources": {
                    "$ref": "#/$defs/JobResource"
                },
                "OnDeviceServiceConfiguration": {
                    "$ref": "#/$defs/OnDeviceServiceConfiguration"
                },
                "AddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "ShippingOption": {
                    "$ref": "#/$defs/ShippingOption"
                },
                "Notification": {
                    "$ref": "#/$defs/Notification"
                },
                "ForwardingAddressId": {
                    "$ref": "#/$defs/AddressId"
                }
            }
        },
        "UpdateJobResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "RoleARN": {
                    "$ref": "#/$defs/RoleARN"
                },
                "Notification": {
                    "$ref": "#/$defs/Notification"
                },
                "Resources": {
                    "$ref": "#/$defs/JobResource"
                },
                "OnDeviceServiceConfiguration": {
                    "$ref": "#/$defs/OnDeviceServiceConfiguration"
                },
                "AddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "ShippingOption": {
                    "$ref": "#/$defs/ShippingOption"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "SnowballCapacityPreference": {
                    "$ref": "#/$defs/SnowballCapacity"
                },
                "ForwardingAddressId": {
                    "$ref": "#/$defs/AddressId"
                },
                "PickupDetails": {
                    "$ref": "#/$defs/PickupDetails"
                }
            }
        },
        "UpdateJobShipmentStateResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateJobShipmentStateRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "ShipmentState": {
                    "$ref": "#/$defs/ShipmentState"
                }
            }
        },
        "ShipmentState": {
            "enum": [
                "RECEIVED",
                "RETURNED"
            ]
        },
        "UpdateLongTermPricingResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateLongTermPricingRequest": {
            "type": "object",
            "properties": {
                "LongTermPricingId": {
                    "$ref": "#/$defs/LongTermPricingId"
                },
                "ReplacementJob": {
                    "$ref": "#/$defs/JobId"
                },
                "IsLongTermPricingAutoRenew": {
                    "$ref": "#/$defs/JavaBoolean"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://snowball-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://snowball-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://snowball.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://snowball.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}