{
    "name": "connect",
    "commands": [
        {
            "name": "ListRealtimeContactAnalysisSegments",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/realtime-contact-analysis/analysis-segments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRealtimeContactAnalysisSegmentsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRealtimeContactAnalysisSegmentsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "ListRealtimeContactAnalysisSegmentsResponse": {
            "type": "object",
            "properties": {
                "Segments": {
                    "$ref": "#/$defs/RealtimeContactAnalysisSegments"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RealtimeContactAnalysisSegments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RealtimeContactAnalysisSegment"
            }
        },
        "RealtimeContactAnalysisSegment": {
            "type": "object",
            "properties": {
                "Transcript": {
                    "$ref": "#/$defs/Transcript"
                },
                "Categories": {
                    "$ref": "#/$defs/Categories"
                },
                "PostContactSummary": {
                    "$ref": "#/$defs/PostContactSummary"
                }
            }
        },
        "Transcript": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/TranscriptId"
                },
                "ParticipantId": {
                    "$ref": "#/$defs/ParticipantId"
                },
                "ParticipantRole": {
                    "$ref": "#/$defs/ParticipantRole"
                },
                "Content": {
                    "$ref": "#/$defs/TranscriptContent"
                },
                "BeginOffsetMillis": {
                    "$ref": "#/$defs/OffsetMillis"
                },
                "EndOffsetMillis": {
                    "$ref": "#/$defs/OffsetMillis"
                },
                "Sentiment": {
                    "$ref": "#/$defs/SentimentValue"
                },
                "IssuesDetected": {
                    "$ref": "#/$defs/IssuesDetected"
                }
            }
        },
        "TranscriptId": {
            "type": "string"
        },
        "ParticipantId": {
            "type": "string"
        },
        "ParticipantRole": {
            "type": "string"
        },
        "TranscriptContent": {
            "type": "string"
        },
        "OffsetMillis": {
            "type": "integer",
            "format": "int32"
        },
        "SentimentValue": {
            "enum": [
                "POSITIVE",
                "NEUTRAL",
                "NEGATIVE"
            ]
        },
        "IssuesDetected": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IssueDetected"
            }
        },
        "IssueDetected": {
            "type": "object",
            "properties": {
                "CharacterOffsets": {
                    "$ref": "#/$defs/CharacterOffsets"
                }
            }
        },
        "CharacterOffsets": {
            "type": "object",
            "properties": {
                "BeginOffsetChar": {
                    "$ref": "#/$defs/CharacterOffset"
                },
                "EndOffsetChar": {
                    "$ref": "#/$defs/CharacterOffset"
                }
            }
        },
        "CharacterOffset": {
            "type": "integer",
            "format": "int32"
        },
        "Categories": {
            "type": "object",
            "properties": {
                "MatchedCategories": {
                    "$ref": "#/$defs/MatchedCategories"
                },
                "MatchedDetails": {
                    "$ref": "#/$defs/MatchedDetails"
                }
            }
        },
        "MatchedCategories": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CategoryName"
            }
        },
        "CategoryName": {
            "type": "string"
        },
        "MatchedDetails": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/CategoryDetails"
            }
        },
        "CategoryDetails": {
            "type": "object",
            "properties": {
                "PointsOfInterest": {
                    "$ref": "#/$defs/PointsOfInterest"
                }
            }
        },
        "PointsOfInterest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PointOfInterest"
            }
        },
        "PointOfInterest": {
            "type": "object",
            "properties": {
                "BeginOffsetMillis": {
                    "$ref": "#/$defs/OffsetMillis"
                },
                "EndOffsetMillis": {
                    "$ref": "#/$defs/OffsetMillis"
                }
            }
        },
        "PostContactSummary": {
            "type": "object",
            "properties": {
                "Content": {
                    "$ref": "#/$defs/PostContactSummaryContent"
                },
                "Status": {
                    "$ref": "#/$defs/PostContactSummaryStatus"
                },
                "FailureCode": {
                    "$ref": "#/$defs/PostContactSummaryFailureCode"
                }
            }
        },
        "PostContactSummaryContent": {
            "type": "string"
        },
        "PostContactSummaryStatus": {
            "enum": [
                "FAILED",
                "COMPLETED"
            ]
        },
        "PostContactSummaryFailureCode": {
            "enum": [
                "QUOTA_EXCEEDED",
                "INSUFFICIENT_CONVERSATION_CONTENT",
                "FAILED_SAFETY_GUIDELINES",
                "INVALID_ANALYSIS_CONFIGURATION",
                "INTERNAL_ERROR"
            ]
        },
        "NextToken": {
            "type": "string"
        },
        "ListRealtimeContactAnalysisSegmentsRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "ContactId": {
                    "$ref": "#/$defs/ContactId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InstanceId": {
            "type": "string"
        },
        "ContactId": {
            "type": "string"
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://contact-lens-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://contact-lens-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://contact-lens.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://contact-lens.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}