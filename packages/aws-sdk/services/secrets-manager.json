{
    "name": "secretsmanager",
    "commands": [
        {
            "name": "BatchGetSecretValue",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.BatchGetSecretValue"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetSecretValueResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetSecretValueRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelRotateSecret",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.CancelRotateSecret"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelRotateSecretResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelRotateSecretRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSecret",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.CreateSecret"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSecretResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSecretRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.DeleteResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSecret",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.DeleteSecret"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSecretResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSecretRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSecret",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.DescribeSecret"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSecretResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSecretRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRandomPassword",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.GetRandomPassword"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRandomPasswordResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRandomPasswordRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.GetResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSecretValue",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.GetSecretValue"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSecretValueResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSecretValueRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSecrets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.ListSecrets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSecretsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSecretsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSecretVersionIds",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.ListSecretVersionIds"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSecretVersionIdsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSecretVersionIdsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.PutResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutResourcePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutSecretValue",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.PutSecretValue"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutSecretValueResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutSecretValueRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveRegionsFromReplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.RemoveRegionsFromReplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveRegionsFromReplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveRegionsFromReplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplicateSecretToRegions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.ReplicateSecretToRegions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReplicateSecretToRegionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReplicateSecretToRegionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RestoreSecret",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.RestoreSecret"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestoreSecretResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestoreSecretRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RotateSecret",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.RotateSecret"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RotateSecretResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RotateSecretRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopReplicationToReplica",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.StopReplicationToReplica"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopReplicationToReplicaResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopReplicationToReplicaRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSecret",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.UpdateSecret"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSecretResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSecretRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSecretVersionStage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.UpdateSecretVersionStage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSecretVersionStageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSecretVersionStageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ValidateResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "secretsmanager.ValidateResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ValidateResourcePolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ValidateResourcePolicyRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchGetSecretValueResponse": {
            "type": "object",
            "properties": {
                "SecretValues": {
                    "$ref": "#/$defs/SecretValuesType"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenType"
                },
                "Errors": {
                    "$ref": "#/$defs/APIErrorListType"
                }
            }
        },
        "SecretValuesType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecretValueEntry"
            }
        },
        "SecretValueEntry": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                },
                "VersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                },
                "SecretBinary": {
                    "$ref": "#/$defs/SecretBinaryType"
                },
                "SecretString": {
                    "$ref": "#/$defs/SecretStringType"
                },
                "VersionStages": {
                    "$ref": "#/$defs/SecretVersionStagesType"
                },
                "CreatedDate": {
                    "$ref": "#/$defs/CreatedDateType"
                }
            }
        },
        "SecretARNType": {
            "type": "string"
        },
        "SecretNameType": {
            "type": "string"
        },
        "SecretVersionIdType": {
            "type": "string"
        },
        "SecretBinaryType": {
            "type": "string",
            "format": "binary"
        },
        "SecretStringType": {
            "type": "string"
        },
        "SecretVersionStagesType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecretVersionStageType"
            }
        },
        "SecretVersionStageType": {
            "type": "string"
        },
        "CreatedDateType": {
            "type": "string",
            "format": "date-time"
        },
        "NextTokenType": {
            "type": "string"
        },
        "APIErrorListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/APIErrorType"
            }
        },
        "APIErrorType": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "SecretIdType": {
            "type": "string"
        },
        "ErrorCode": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "BatchGetSecretValueRequest": {
            "type": "object",
            "properties": {
                "SecretIdList": {
                    "$ref": "#/$defs/SecretIdListType"
                },
                "Filters": {
                    "$ref": "#/$defs/FiltersListType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsBatchType"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenType"
                }
            }
        },
        "SecretIdListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecretIdType"
            }
        },
        "FiltersListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/FilterNameStringType"
                },
                "Values": {
                    "$ref": "#/$defs/FilterValuesStringList"
                }
            }
        },
        "FilterNameStringType": {
            "enum": [
                "description",
                "name",
                "tag_key",
                "tag_value",
                "primary_region",
                "owning_service",
                "all"
            ]
        },
        "FilterValuesStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterValueStringType"
            }
        },
        "FilterValueStringType": {
            "type": "string"
        },
        "MaxResultsBatchType": {
            "type": "integer",
            "format": "int32"
        },
        "CancelRotateSecretResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                },
                "VersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                }
            }
        },
        "CancelRotateSecretRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                }
            }
        },
        "CreateSecretResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                },
                "VersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                },
                "ReplicationStatus": {
                    "$ref": "#/$defs/ReplicationStatusListType"
                }
            }
        },
        "ReplicationStatusListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicationStatusType"
            }
        },
        "ReplicationStatusType": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/RegionType"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyIdType"
                },
                "Status": {
                    "$ref": "#/$defs/StatusType"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessageType"
                },
                "LastAccessedDate": {
                    "$ref": "#/$defs/LastAccessedDateType"
                }
            }
        },
        "RegionType": {
            "type": "string"
        },
        "KmsKeyIdType": {
            "type": "string"
        },
        "StatusType": {
            "enum": [
                "InSync",
                "Failed",
                "InProgress"
            ]
        },
        "StatusMessageType": {
            "type": "string"
        },
        "LastAccessedDateType": {
            "type": "string",
            "format": "date-time"
        },
        "CreateSecretRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameType"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestTokenType"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionType"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyIdType"
                },
                "SecretBinary": {
                    "$ref": "#/$defs/SecretBinaryType"
                },
                "SecretString": {
                    "$ref": "#/$defs/SecretStringType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagListType"
                },
                "AddReplicaRegions": {
                    "$ref": "#/$defs/AddReplicaRegionListType"
                },
                "ForceOverwriteReplicaSecret": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "NameType": {
            "type": "string"
        },
        "ClientRequestTokenType": {
            "type": "string"
        },
        "DescriptionType": {
            "type": "string"
        },
        "TagListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKeyType"
                },
                "Value": {
                    "$ref": "#/$defs/TagValueType"
                }
            }
        },
        "TagKeyType": {
            "type": "string"
        },
        "TagValueType": {
            "type": "string"
        },
        "AddReplicaRegionListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicaRegionType"
            }
        },
        "ReplicaRegionType": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/RegionType"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyIdType"
                }
            }
        },
        "BooleanType": {
            "type": "boolean"
        },
        "DeleteResourcePolicyResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/NameType"
                }
            }
        },
        "DeleteResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                }
            }
        },
        "DeleteSecretResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                },
                "DeletionDate": {
                    "$ref": "#/$defs/DeletionDateType"
                }
            }
        },
        "DeletionDateType": {
            "type": "string",
            "format": "date-time"
        },
        "DeleteSecretRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "RecoveryWindowInDays": {
                    "$ref": "#/$defs/RecoveryWindowInDaysType"
                },
                "ForceDeleteWithoutRecovery": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "RecoveryWindowInDaysType": {
            "type": "integer",
            "format": "int64"
        },
        "DescribeSecretResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionType"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyIdType"
                },
                "RotationEnabled": {
                    "$ref": "#/$defs/RotationEnabledType"
                },
                "RotationLambdaARN": {
                    "$ref": "#/$defs/RotationLambdaARNType"
                },
                "RotationRules": {
                    "$ref": "#/$defs/RotationRulesType"
                },
                "LastRotatedDate": {
                    "$ref": "#/$defs/LastRotatedDateType"
                },
                "LastChangedDate": {
                    "$ref": "#/$defs/LastChangedDateType"
                },
                "LastAccessedDate": {
                    "$ref": "#/$defs/LastAccessedDateType"
                },
                "DeletedDate": {
                    "$ref": "#/$defs/DeletedDateType"
                },
                "NextRotationDate": {
                    "$ref": "#/$defs/NextRotationDateType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagListType"
                },
                "VersionIdsToStages": {
                    "$ref": "#/$defs/SecretVersionsToStagesMapType"
                },
                "OwningService": {
                    "$ref": "#/$defs/OwningServiceType"
                },
                "CreatedDate": {
                    "$ref": "#/$defs/TimestampType"
                },
                "PrimaryRegion": {
                    "$ref": "#/$defs/RegionType"
                },
                "ReplicationStatus": {
                    "$ref": "#/$defs/ReplicationStatusListType"
                }
            }
        },
        "RotationEnabledType": {
            "type": "boolean"
        },
        "RotationLambdaARNType": {
            "type": "string"
        },
        "RotationRulesType": {
            "type": "object",
            "properties": {
                "AutomaticallyAfterDays": {
                    "$ref": "#/$defs/AutomaticallyRotateAfterDaysType"
                },
                "Duration": {
                    "$ref": "#/$defs/DurationType"
                },
                "ScheduleExpression": {
                    "$ref": "#/$defs/ScheduleExpressionType"
                }
            }
        },
        "AutomaticallyRotateAfterDaysType": {
            "type": "integer",
            "format": "int64"
        },
        "DurationType": {
            "type": "string"
        },
        "ScheduleExpressionType": {
            "type": "string"
        },
        "LastRotatedDateType": {
            "type": "string",
            "format": "date-time"
        },
        "LastChangedDateType": {
            "type": "string",
            "format": "date-time"
        },
        "DeletedDateType": {
            "type": "string",
            "format": "date-time"
        },
        "NextRotationDateType": {
            "type": "string",
            "format": "date-time"
        },
        "SecretVersionsToStagesMapType": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/SecretVersionStagesType"
            }
        },
        "OwningServiceType": {
            "type": "string"
        },
        "TimestampType": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeSecretRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                }
            }
        },
        "GetRandomPasswordResponse": {
            "type": "object",
            "properties": {
                "RandomPassword": {
                    "$ref": "#/$defs/RandomPasswordType"
                }
            }
        },
        "RandomPasswordType": {
            "type": "string"
        },
        "GetRandomPasswordRequest": {
            "type": "object",
            "properties": {
                "PasswordLength": {
                    "$ref": "#/$defs/PasswordLengthType"
                },
                "ExcludeCharacters": {
                    "$ref": "#/$defs/ExcludeCharactersType"
                },
                "ExcludeNumbers": {
                    "$ref": "#/$defs/ExcludeNumbersType"
                },
                "ExcludePunctuation": {
                    "$ref": "#/$defs/ExcludePunctuationType"
                },
                "ExcludeUppercase": {
                    "$ref": "#/$defs/ExcludeUppercaseType"
                },
                "ExcludeLowercase": {
                    "$ref": "#/$defs/ExcludeLowercaseType"
                },
                "IncludeSpace": {
                    "$ref": "#/$defs/IncludeSpaceType"
                },
                "RequireEachIncludedType": {
                    "$ref": "#/$defs/RequireEachIncludedTypeType"
                }
            }
        },
        "PasswordLengthType": {
            "type": "integer",
            "format": "int64"
        },
        "ExcludeCharactersType": {
            "type": "string"
        },
        "ExcludeNumbersType": {
            "type": "boolean"
        },
        "ExcludePunctuationType": {
            "type": "boolean"
        },
        "ExcludeUppercaseType": {
            "type": "boolean"
        },
        "ExcludeLowercaseType": {
            "type": "boolean"
        },
        "IncludeSpaceType": {
            "type": "boolean"
        },
        "RequireEachIncludedTypeType": {
            "type": "boolean"
        },
        "GetResourcePolicyResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/NameType"
                },
                "ResourcePolicy": {
                    "$ref": "#/$defs/NonEmptyResourcePolicyType"
                }
            }
        },
        "NonEmptyResourcePolicyType": {
            "type": "string"
        },
        "GetResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                }
            }
        },
        "GetSecretValueResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                },
                "VersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                },
                "SecretBinary": {
                    "$ref": "#/$defs/SecretBinaryType"
                },
                "SecretString": {
                    "$ref": "#/$defs/SecretStringType"
                },
                "VersionStages": {
                    "$ref": "#/$defs/SecretVersionStagesType"
                },
                "CreatedDate": {
                    "$ref": "#/$defs/CreatedDateType"
                }
            }
        },
        "GetSecretValueRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                },
                "VersionStage": {
                    "$ref": "#/$defs/SecretVersionStageType"
                }
            }
        },
        "ListSecretsResponse": {
            "type": "object",
            "properties": {
                "SecretList": {
                    "$ref": "#/$defs/SecretListType"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenType"
                }
            }
        },
        "SecretListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecretListEntry"
            }
        },
        "SecretListEntry": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionType"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyIdType"
                },
                "RotationEnabled": {
                    "$ref": "#/$defs/RotationEnabledType"
                },
                "RotationLambdaARN": {
                    "$ref": "#/$defs/RotationLambdaARNType"
                },
                "RotationRules": {
                    "$ref": "#/$defs/RotationRulesType"
                },
                "LastRotatedDate": {
                    "$ref": "#/$defs/LastRotatedDateType"
                },
                "LastChangedDate": {
                    "$ref": "#/$defs/LastChangedDateType"
                },
                "LastAccessedDate": {
                    "$ref": "#/$defs/LastAccessedDateType"
                },
                "DeletedDate": {
                    "$ref": "#/$defs/DeletedDateType"
                },
                "NextRotationDate": {
                    "$ref": "#/$defs/NextRotationDateType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagListType"
                },
                "SecretVersionsToStages": {
                    "$ref": "#/$defs/SecretVersionsToStagesMapType"
                },
                "OwningService": {
                    "$ref": "#/$defs/OwningServiceType"
                },
                "CreatedDate": {
                    "$ref": "#/$defs/TimestampType"
                },
                "PrimaryRegion": {
                    "$ref": "#/$defs/RegionType"
                }
            }
        },
        "ListSecretsRequest": {
            "type": "object",
            "properties": {
                "IncludePlannedDeletion": {
                    "$ref": "#/$defs/BooleanType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsType"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenType"
                },
                "Filters": {
                    "$ref": "#/$defs/FiltersListType"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortOrderType"
                }
            }
        },
        "MaxResultsType": {
            "type": "integer",
            "format": "int32"
        },
        "SortOrderType": {
            "enum": [
                "asc",
                "desc"
            ]
        },
        "ListSecretVersionIdsResponse": {
            "type": "object",
            "properties": {
                "Versions": {
                    "$ref": "#/$defs/SecretVersionsListType"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenType"
                },
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                }
            }
        },
        "SecretVersionsListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecretVersionsListEntry"
            }
        },
        "SecretVersionsListEntry": {
            "type": "object",
            "properties": {
                "VersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                },
                "VersionStages": {
                    "$ref": "#/$defs/SecretVersionStagesType"
                },
                "LastAccessedDate": {
                    "$ref": "#/$defs/LastAccessedDateType"
                },
                "CreatedDate": {
                    "$ref": "#/$defs/CreatedDateType"
                },
                "KmsKeyIds": {
                    "$ref": "#/$defs/KmsKeyIdListType"
                }
            }
        },
        "KmsKeyIdListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KmsKeyIdType"
            }
        },
        "ListSecretVersionIdsRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsType"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextTokenType"
                },
                "IncludeDeprecated": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "PutResourcePolicyResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/NameType"
                }
            }
        },
        "PutResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "ResourcePolicy": {
                    "$ref": "#/$defs/NonEmptyResourcePolicyType"
                },
                "BlockPublicPolicy": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "PutSecretValueResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                },
                "VersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                },
                "VersionStages": {
                    "$ref": "#/$defs/SecretVersionStagesType"
                }
            }
        },
        "PutSecretValueRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestTokenType"
                },
                "SecretBinary": {
                    "$ref": "#/$defs/SecretBinaryType"
                },
                "SecretString": {
                    "$ref": "#/$defs/SecretStringType"
                },
                "VersionStages": {
                    "$ref": "#/$defs/SecretVersionStagesType"
                },
                "RotationToken": {
                    "$ref": "#/$defs/RotationTokenType"
                }
            }
        },
        "RotationTokenType": {
            "type": "string"
        },
        "RemoveRegionsFromReplicationResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "ReplicationStatus": {
                    "$ref": "#/$defs/ReplicationStatusListType"
                }
            }
        },
        "RemoveRegionsFromReplicationRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "RemoveReplicaRegions": {
                    "$ref": "#/$defs/RemoveReplicaRegionListType"
                }
            }
        },
        "RemoveReplicaRegionListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RegionType"
            }
        },
        "ReplicateSecretToRegionsResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "ReplicationStatus": {
                    "$ref": "#/$defs/ReplicationStatusListType"
                }
            }
        },
        "ReplicateSecretToRegionsRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "AddReplicaRegions": {
                    "$ref": "#/$defs/AddReplicaRegionListType"
                },
                "ForceOverwriteReplicaSecret": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "RestoreSecretResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                }
            }
        },
        "RestoreSecretRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                }
            }
        },
        "RotateSecretResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                },
                "VersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                }
            }
        },
        "RotateSecretRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestTokenType"
                },
                "RotationLambdaARN": {
                    "$ref": "#/$defs/RotationLambdaARNType"
                },
                "RotationRules": {
                    "$ref": "#/$defs/RotationRulesType"
                },
                "RotateImmediately": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "StopReplicationToReplicaResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                }
            }
        },
        "StopReplicationToReplicaRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagListType"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyListType"
                }
            }
        },
        "TagKeyListType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKeyType"
            }
        },
        "UpdateSecretResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                },
                "VersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                }
            }
        },
        "UpdateSecretRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestTokenType"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionType"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyIdType"
                },
                "SecretBinary": {
                    "$ref": "#/$defs/SecretBinaryType"
                },
                "SecretString": {
                    "$ref": "#/$defs/SecretStringType"
                }
            }
        },
        "UpdateSecretVersionStageResponse": {
            "type": "object",
            "properties": {
                "ARN": {
                    "$ref": "#/$defs/SecretARNType"
                },
                "Name": {
                    "$ref": "#/$defs/SecretNameType"
                }
            }
        },
        "UpdateSecretVersionStageRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "VersionStage": {
                    "$ref": "#/$defs/SecretVersionStageType"
                },
                "RemoveFromVersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                },
                "MoveToVersionId": {
                    "$ref": "#/$defs/SecretVersionIdType"
                }
            }
        },
        "ValidateResourcePolicyResponse": {
            "type": "object",
            "properties": {
                "PolicyValidationPassed": {
                    "$ref": "#/$defs/BooleanType"
                },
                "ValidationErrors": {
                    "$ref": "#/$defs/ValidationErrorsType"
                }
            }
        },
        "ValidationErrorsType": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValidationErrorsEntry"
            }
        },
        "ValidationErrorsEntry": {
            "type": "object",
            "properties": {
                "CheckName": {
                    "$ref": "#/$defs/NameType"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ValidateResourcePolicyRequest": {
            "type": "object",
            "properties": {
                "SecretId": {
                    "$ref": "#/$defs/SecretIdType"
                },
                "ResourcePolicy": {
                    "$ref": "#/$defs/NonEmptyResourcePolicyType"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                "aws",
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://secretsmanager-fips.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                "aws-us-gov",
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://secretsmanager-fips.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://secretsmanager-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://secretsmanager-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                "aws",
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://secretsmanager.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                "aws-cn",
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://secretsmanager.{Region}.amazonaws.com.cn",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                "aws-us-gov",
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://secretsmanager.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://secretsmanager.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://secretsmanager.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}