{
    "name": "frauddetector",
    "commands": [
        {
            "name": "BatchCreateVariable",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.BatchCreateVariable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchCreateVariableResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/BatchCreateVariableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetVariable",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.BatchGetVariable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetVariableResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/BatchGetVariableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelBatchImportJob",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.CancelBatchImportJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelBatchImportJobResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CancelBatchImportJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelBatchPredictionJob",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.CancelBatchPredictionJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelBatchPredictionJobResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CancelBatchPredictionJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBatchImportJob",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.CreateBatchImportJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBatchImportJobResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateBatchImportJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBatchPredictionJob",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.CreateBatchPredictionJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBatchPredictionJobResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateBatchPredictionJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDetectorVersion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.CreateDetectorVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDetectorVersionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateDetectorVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateList",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.CreateList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateListResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateModel",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.CreateModel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateModelResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateModelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateModelVersion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.CreateModelVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateModelVersionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateModelVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRule",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.CreateRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRuleResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVariable",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.CreateVariable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVariableResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateVariableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBatchImportJob",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteBatchImportJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBatchImportJobResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBatchImportJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBatchPredictionJob",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteBatchPredictionJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBatchPredictionJobResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteBatchPredictionJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDetector",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteDetector"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDetectorResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteDetectorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDetectorVersion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteDetectorVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDetectorVersionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteDetectorVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteEntityType",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteEntityType"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEntityTypeResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteEntityTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteEvent",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteEvent"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEventResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteEventRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteEventsByEventType",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteEventsByEventType"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEventsByEventTypeResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteEventsByEventTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteEventType",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteEventType"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEventTypeResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteEventTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteExternalModel",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteExternalModel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteExternalModelResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteExternalModelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLabel",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteLabel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLabelResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteLabelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteList",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteListResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteModel",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteModel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteModelResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteModelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteModelVersion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteModelVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteModelVersionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteModelVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteOutcome",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteOutcome"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteOutcomeResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteOutcomeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRule",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRuleResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVariable",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DeleteVariable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVariableResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteVariableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDetector",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DescribeDetector"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDetectorResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeDetectorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeModelVersions",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.DescribeModelVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeModelVersionsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeModelVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBatchImportJobs",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetBatchImportJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBatchImportJobsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBatchImportJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBatchPredictionJobs",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetBatchPredictionJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBatchPredictionJobsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetBatchPredictionJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDeleteEventsByEventTypeStatus",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetDeleteEventsByEventTypeStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDeleteEventsByEventTypeStatusResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetDeleteEventsByEventTypeStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDetectors",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetDetectors"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDetectorsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetDetectorsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDetectorVersion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetDetectorVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDetectorVersionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetDetectorVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEntityTypes",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetEntityTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEntityTypesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetEntityTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEvent",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetEvent"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEventResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetEventRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEventPrediction",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetEventPrediction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEventPredictionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetEventPredictionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEventPredictionMetadata",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetEventPredictionMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEventPredictionMetadataResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetEventPredictionMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEventTypes",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetEventTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEventTypesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetEventTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetExternalModels",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetExternalModels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetExternalModelsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetExternalModelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKMSEncryptionKey",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetKMSEncryptionKey"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKMSEncryptionKeyResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLabels",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetLabels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLabelsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetLabelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetListElements",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetListElements"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetListElementsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetListElementsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetListsMetadata",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetListsMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetListsMetadataResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetListsMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetModels",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetModels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetModelsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetModelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetModelVersion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetModelVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetModelVersionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetModelVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetOutcomes",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetOutcomes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOutcomesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetOutcomesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRules",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRulesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetRulesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetVariables",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.GetVariables"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVariablesResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetVariablesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListEventPredictions",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.ListEventPredictions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEventPredictionsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListEventPredictionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutDetector",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.PutDetector"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDetectorResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutDetectorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutEntityType",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.PutEntityType"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEntityTypeResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutEntityTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutEventType",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.PutEventType"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEventTypeResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutEventTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutExternalModel",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.PutExternalModel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutExternalModelResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutExternalModelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutKMSEncryptionKey",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.PutKMSEncryptionKey"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutKMSEncryptionKeyResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutKMSEncryptionKeyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutLabel",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.PutLabel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutLabelResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutLabelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutOutcome",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.PutOutcome"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutOutcomeResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutOutcomeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SendEvent",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.SendEvent"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendEventResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SendEventRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDetectorVersion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateDetectorVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDetectorVersionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateDetectorVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDetectorVersionMetadata",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateDetectorVersionMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDetectorVersionMetadataResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateDetectorVersionMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDetectorVersionStatus",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateDetectorVersionStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDetectorVersionStatusResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateDetectorVersionStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateEventLabel",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateEventLabel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEventLabelResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateEventLabelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateList",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateListResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateModel",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateModel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateModelResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateModelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateModelVersion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateModelVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateModelVersionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateModelVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateModelVersionStatus",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateModelVersionStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateModelVersionStatusResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateModelVersionStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRuleMetadata",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateRuleMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRuleMetadataResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateRuleMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRuleVersion",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateRuleVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRuleVersionResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateRuleVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateVariable",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSHawksNestServiceFacade.UpdateVariable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateVariableResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateVariableRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchCreateVariableResult": {
            "type": "object",
            "properties": {
                "errors": {
                    "$ref": "#/$defs/BatchCreateVariableErrorList"
                }
            }
        },
        "BatchCreateVariableErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchCreateVariableError"
            }
        },
        "BatchCreateVariableError": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "code": {
                    "$ref": "#/$defs/Integer2"
                },
                "message": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "string": {
            "type": "string"
        },
        "Integer2": {
            "type": "integer",
            "format": "int32"
        },
        "BatchCreateVariableRequest": {
            "type": "object",
            "properties": {
                "variableEntries": {
                    "$ref": "#/$defs/VariableEntryList"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "VariableEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VariableEntry"
            }
        },
        "VariableEntry": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "dataType": {
                    "$ref": "#/$defs/string"
                },
                "dataSource": {
                    "$ref": "#/$defs/string"
                },
                "defaultValue": {
                    "$ref": "#/$defs/string"
                },
                "description": {
                    "$ref": "#/$defs/string"
                },
                "variableType": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "tagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/tagKey"
                },
                "value": {
                    "$ref": "#/$defs/tagValue"
                }
            }
        },
        "tagKey": {
            "type": "string"
        },
        "tagValue": {
            "type": "string"
        },
        "BatchGetVariableResult": {
            "type": "object",
            "properties": {
                "variables": {
                    "$ref": "#/$defs/VariableList"
                },
                "errors": {
                    "$ref": "#/$defs/BatchGetVariableErrorList"
                }
            }
        },
        "VariableList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Variable"
            }
        },
        "Variable": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "dataType": {
                    "$ref": "#/$defs/DataType"
                },
                "dataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "defaultValue": {
                    "$ref": "#/$defs/string"
                },
                "description": {
                    "$ref": "#/$defs/string"
                },
                "variableType": {
                    "$ref": "#/$defs/string"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "DataType": {
            "enum": [
                "STRING",
                "INTEGER",
                "FLOAT",
                "BOOLEAN",
                "DATETIME"
            ]
        },
        "DataSource": {
            "enum": [
                "EVENT",
                "MODEL_SCORE",
                "EXTERNAL_MODEL_SCORE"
            ]
        },
        "time": {
            "type": "string"
        },
        "fraudDetectorArn": {
            "type": "string"
        },
        "BatchGetVariableErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetVariableError"
            }
        },
        "BatchGetVariableError": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "code": {
                    "$ref": "#/$defs/Integer2"
                },
                "message": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BatchGetVariableRequest": {
            "type": "object",
            "properties": {
                "names": {
                    "$ref": "#/$defs/NameList"
                }
            }
        },
        "NameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "CancelBatchImportJobResult": {
            "type": "object",
            "properties": {}
        },
        "CancelBatchImportJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "identifier": {
            "type": "string"
        },
        "CancelBatchPredictionJobResult": {
            "type": "object",
            "properties": {}
        },
        "CancelBatchPredictionJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "CreateBatchImportJobResult": {
            "type": "object",
            "properties": {}
        },
        "CreateBatchImportJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/identifier"
                },
                "inputPath": {
                    "$ref": "#/$defs/s3BucketLocation"
                },
                "outputPath": {
                    "$ref": "#/$defs/s3BucketLocation"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "iamRoleArn": {
                    "$ref": "#/$defs/iamRoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "s3BucketLocation": {
            "type": "string"
        },
        "iamRoleArn": {
            "type": "string"
        },
        "CreateBatchPredictionJobResult": {
            "type": "object",
            "properties": {}
        },
        "CreateBatchPredictionJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/identifier"
                },
                "inputPath": {
                    "$ref": "#/$defs/s3BucketLocation"
                },
                "outputPath": {
                    "$ref": "#/$defs/s3BucketLocation"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorName": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersion": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "iamRoleArn": {
                    "$ref": "#/$defs/iamRoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "wholeNumberVersionString": {
            "type": "string"
        },
        "CreateDetectorVersionResult": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "status": {
                    "$ref": "#/$defs/DetectorVersionStatus"
                }
            }
        },
        "DetectorVersionStatus": {
            "enum": [
                "DRAFT",
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "CreateDetectorVersionRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "externalModelEndpoints": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "rules": {
                    "$ref": "#/$defs/RuleList"
                },
                "modelVersions": {
                    "$ref": "#/$defs/ListOfModelVersions"
                },
                "ruleExecutionMode": {
                    "$ref": "#/$defs/RuleExecutionMode"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "description": {
            "type": "string"
        },
        "ListOfStrings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "RuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Rule"
            }
        },
        "Rule": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "ruleId": {
                    "$ref": "#/$defs/identifier"
                },
                "ruleVersion": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                }
            }
        },
        "ListOfModelVersions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ModelVersion"
            }
        },
        "ModelVersion": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "modelVersionNumber": {
                    "$ref": "#/$defs/floatVersionString"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "modelIdentifier": {
            "type": "string"
        },
        "ModelTypeEnum": {
            "enum": [
                "ONLINE_FRAUD_INSIGHTS",
                "TRANSACTION_FRAUD_INSIGHTS",
                "ACCOUNT_TAKEOVER_INSIGHTS"
            ]
        },
        "floatVersionString": {
            "type": "string"
        },
        "RuleExecutionMode": {
            "enum": [
                "ALL_MATCHED",
                "FIRST_MATCHED"
            ]
        },
        "CreateListResult": {
            "type": "object",
            "properties": {}
        },
        "CreateListRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/noDashIdentifier"
                },
                "elements": {
                    "$ref": "#/$defs/ElementsList"
                },
                "variableType": {
                    "$ref": "#/$defs/variableType"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "noDashIdentifier": {
            "type": "string"
        },
        "ElementsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Elements"
            }
        },
        "Elements": {
            "type": "string"
        },
        "variableType": {
            "type": "string"
        },
        "CreateModelResult": {
            "type": "object",
            "properties": {}
        },
        "CreateModelRequest": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/string"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "CreateModelVersionResult": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "modelVersionNumber": {
                    "$ref": "#/$defs/floatVersionString"
                },
                "status": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateModelVersionRequest": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "trainingDataSource": {
                    "$ref": "#/$defs/TrainingDataSourceEnum"
                },
                "trainingDataSchema": {
                    "$ref": "#/$defs/TrainingDataSchema"
                },
                "externalEventsDetail": {
                    "$ref": "#/$defs/ExternalEventsDetail"
                },
                "ingestedEventsDetail": {
                    "$ref": "#/$defs/IngestedEventsDetail"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "TrainingDataSourceEnum": {
            "enum": [
                "EXTERNAL_EVENTS",
                "INGESTED_EVENTS"
            ]
        },
        "TrainingDataSchema": {
            "type": "object",
            "properties": {
                "modelVariables": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "labelSchema": {
                    "$ref": "#/$defs/LabelSchema"
                }
            }
        },
        "LabelSchema": {
            "type": "object",
            "properties": {
                "labelMapper": {
                    "$ref": "#/$defs/labelMapper"
                },
                "unlabeledEventsTreatment": {
                    "$ref": "#/$defs/UnlabeledEventsTreatment"
                }
            }
        },
        "labelMapper": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ListOfStrings"
            }
        },
        "UnlabeledEventsTreatment": {
            "enum": [
                "IGNORE",
                "FRAUD",
                "LEGIT",
                "AUTO"
            ]
        },
        "ExternalEventsDetail": {
            "type": "object",
            "properties": {
                "dataLocation": {
                    "$ref": "#/$defs/s3BucketLocation"
                },
                "dataAccessRoleArn": {
                    "$ref": "#/$defs/iamRoleArn"
                }
            }
        },
        "IngestedEventsDetail": {
            "type": "object",
            "properties": {
                "ingestedEventsTimeWindow": {
                    "$ref": "#/$defs/IngestedEventsTimeWindow"
                }
            }
        },
        "IngestedEventsTimeWindow": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/time"
                },
                "endTime": {
                    "$ref": "#/$defs/time"
                }
            }
        },
        "CreateRuleResult": {
            "type": "object",
            "properties": {
                "rule": {
                    "$ref": "#/$defs/Rule"
                }
            }
        },
        "CreateRuleRequest": {
            "type": "object",
            "properties": {
                "ruleId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "expression": {
                    "$ref": "#/$defs/ruleExpression"
                },
                "language": {
                    "$ref": "#/$defs/Language"
                },
                "outcomes": {
                    "$ref": "#/$defs/NonEmptyListOfStrings"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "ruleExpression": {
            "type": "string"
        },
        "Language": {
            "enum": [
                "DETECTORPL"
            ]
        },
        "NonEmptyListOfStrings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "CreateVariableResult": {
            "type": "object",
            "properties": {}
        },
        "CreateVariableRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "dataType": {
                    "$ref": "#/$defs/DataType"
                },
                "dataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "defaultValue": {
                    "$ref": "#/$defs/string"
                },
                "description": {
                    "$ref": "#/$defs/string"
                },
                "variableType": {
                    "$ref": "#/$defs/string"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "DeleteBatchImportJobResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteBatchImportJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "DeleteBatchPredictionJobResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteBatchPredictionJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "DeleteDetectorResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteDetectorRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "DeleteDetectorVersionResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteDetectorVersionRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                }
            }
        },
        "DeleteEntityTypeResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteEntityTypeRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "DeleteEventResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteEventRequest": {
            "type": "object",
            "properties": {
                "eventId": {
                    "$ref": "#/$defs/identifier"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "deleteAuditHistory": {
                    "$ref": "#/$defs/DeleteAuditHistory"
                }
            }
        },
        "DeleteAuditHistory": {
            "type": "boolean"
        },
        "DeleteEventsByEventTypeResult": {
            "type": "object",
            "properties": {
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "eventsDeletionStatus": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteEventsByEventTypeRequest": {
            "type": "object",
            "properties": {
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "DeleteEventTypeResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteEventTypeRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "DeleteExternalModelResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteExternalModelRequest": {
            "type": "object",
            "properties": {
                "modelEndpoint": {
                    "$ref": "#/$defs/sageMakerEndpointIdentifier"
                }
            }
        },
        "sageMakerEndpointIdentifier": {
            "type": "string"
        },
        "DeleteLabelResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteLabelRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "DeleteListResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteListRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/noDashIdentifier"
                }
            }
        },
        "DeleteModelResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteModelRequest": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                }
            }
        },
        "DeleteModelVersionResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteModelVersionRequest": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "modelVersionNumber": {
                    "$ref": "#/$defs/floatVersionString"
                }
            }
        },
        "DeleteOutcomeResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteOutcomeRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "DeleteRuleResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteRuleRequest": {
            "type": "object",
            "properties": {
                "rule": {
                    "$ref": "#/$defs/Rule"
                }
            }
        },
        "DeleteVariableResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteVariableRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DescribeDetectorResult": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionSummaries": {
                    "$ref": "#/$defs/DetectorVersionSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "DetectorVersionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectorVersionSummary"
            }
        },
        "DetectorVersionSummary": {
            "type": "object",
            "properties": {
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "status": {
                    "$ref": "#/$defs/DetectorVersionStatus"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                }
            }
        },
        "DescribeDetectorRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/DetectorVersionMaxResults"
                }
            }
        },
        "DetectorVersionMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeModelVersionsResult": {
            "type": "object",
            "properties": {
                "modelVersionDetails": {
                    "$ref": "#/$defs/modelVersionDetailList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "modelVersionDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ModelVersionDetail"
            }
        },
        "ModelVersionDetail": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "modelVersionNumber": {
                    "$ref": "#/$defs/floatVersionString"
                },
                "status": {
                    "$ref": "#/$defs/string"
                },
                "trainingDataSource": {
                    "$ref": "#/$defs/TrainingDataSourceEnum"
                },
                "trainingDataSchema": {
                    "$ref": "#/$defs/TrainingDataSchema"
                },
                "externalEventsDetail": {
                    "$ref": "#/$defs/ExternalEventsDetail"
                },
                "ingestedEventsDetail": {
                    "$ref": "#/$defs/IngestedEventsDetail"
                },
                "trainingResult": {
                    "$ref": "#/$defs/TrainingResult"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                },
                "trainingResultV2": {
                    "$ref": "#/$defs/TrainingResultV2"
                }
            }
        },
        "TrainingResult": {
            "type": "object",
            "properties": {
                "dataValidationMetrics": {
                    "$ref": "#/$defs/DataValidationMetrics"
                },
                "trainingMetrics": {
                    "$ref": "#/$defs/TrainingMetrics"
                },
                "variableImportanceMetrics": {
                    "$ref": "#/$defs/VariableImportanceMetrics"
                }
            }
        },
        "DataValidationMetrics": {
            "type": "object",
            "properties": {
                "fileLevelMessages": {
                    "$ref": "#/$defs/fileValidationMessageList"
                },
                "fieldLevelMessages": {
                    "$ref": "#/$defs/fieldValidationMessageList"
                }
            }
        },
        "fileValidationMessageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FileValidationMessage"
            }
        },
        "FileValidationMessage": {
            "type": "object",
            "properties": {
                "title": {
                    "$ref": "#/$defs/string"
                },
                "content": {
                    "$ref": "#/$defs/string"
                },
                "type": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "fieldValidationMessageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FieldValidationMessage"
            }
        },
        "FieldValidationMessage": {
            "type": "object",
            "properties": {
                "fieldName": {
                    "$ref": "#/$defs/string"
                },
                "identifier": {
                    "$ref": "#/$defs/string"
                },
                "title": {
                    "$ref": "#/$defs/string"
                },
                "content": {
                    "$ref": "#/$defs/string"
                },
                "type": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "TrainingMetrics": {
            "type": "object",
            "properties": {
                "auc": {
                    "$ref": "#/$defs/float"
                },
                "metricDataPoints": {
                    "$ref": "#/$defs/metricDataPointsList"
                }
            }
        },
        "float": {
            "type": "number",
            "format": "float"
        },
        "metricDataPointsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricDataPoint"
            }
        },
        "MetricDataPoint": {
            "type": "object",
            "properties": {
                "fpr": {
                    "$ref": "#/$defs/float"
                },
                "precision": {
                    "$ref": "#/$defs/float"
                },
                "tpr": {
                    "$ref": "#/$defs/float"
                },
                "threshold": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "VariableImportanceMetrics": {
            "type": "object",
            "properties": {
                "logOddsMetrics": {
                    "$ref": "#/$defs/ListOfLogOddsMetrics"
                }
            }
        },
        "ListOfLogOddsMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LogOddsMetric"
            }
        },
        "LogOddsMetric": {
            "type": "object",
            "properties": {
                "variableName": {
                    "$ref": "#/$defs/string"
                },
                "variableType": {
                    "$ref": "#/$defs/string"
                },
                "variableImportance": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "TrainingResultV2": {
            "type": "object",
            "properties": {
                "dataValidationMetrics": {
                    "$ref": "#/$defs/DataValidationMetrics"
                },
                "trainingMetricsV2": {
                    "$ref": "#/$defs/TrainingMetricsV2"
                },
                "variableImportanceMetrics": {
                    "$ref": "#/$defs/VariableImportanceMetrics"
                },
                "aggregatedVariablesImportanceMetrics": {
                    "$ref": "#/$defs/AggregatedVariablesImportanceMetrics"
                }
            }
        },
        "TrainingMetricsV2": {
            "type": "object",
            "properties": {
                "ofi": {
                    "$ref": "#/$defs/OFITrainingMetricsValue"
                },
                "tfi": {
                    "$ref": "#/$defs/TFITrainingMetricsValue"
                },
                "ati": {
                    "$ref": "#/$defs/ATITrainingMetricsValue"
                }
            }
        },
        "OFITrainingMetricsValue": {
            "type": "object",
            "properties": {
                "metricDataPoints": {
                    "$ref": "#/$defs/OFIMetricDataPointsList"
                },
                "modelPerformance": {
                    "$ref": "#/$defs/OFIModelPerformance"
                }
            }
        },
        "OFIMetricDataPointsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OFIMetricDataPoint"
            }
        },
        "OFIMetricDataPoint": {
            "type": "object",
            "properties": {
                "fpr": {
                    "$ref": "#/$defs/float"
                },
                "precision": {
                    "$ref": "#/$defs/float"
                },
                "tpr": {
                    "$ref": "#/$defs/float"
                },
                "threshold": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "OFIModelPerformance": {
            "type": "object",
            "properties": {
                "auc": {
                    "$ref": "#/$defs/float"
                },
                "uncertaintyRange": {
                    "$ref": "#/$defs/UncertaintyRange"
                }
            }
        },
        "UncertaintyRange": {
            "type": "object",
            "properties": {
                "lowerBoundValue": {
                    "$ref": "#/$defs/float"
                },
                "upperBoundValue": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "TFITrainingMetricsValue": {
            "type": "object",
            "properties": {
                "metricDataPoints": {
                    "$ref": "#/$defs/TFIMetricDataPointsList"
                },
                "modelPerformance": {
                    "$ref": "#/$defs/TFIModelPerformance"
                }
            }
        },
        "TFIMetricDataPointsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TFIMetricDataPoint"
            }
        },
        "TFIMetricDataPoint": {
            "type": "object",
            "properties": {
                "fpr": {
                    "$ref": "#/$defs/float"
                },
                "precision": {
                    "$ref": "#/$defs/float"
                },
                "tpr": {
                    "$ref": "#/$defs/float"
                },
                "threshold": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "TFIModelPerformance": {
            "type": "object",
            "properties": {
                "auc": {
                    "$ref": "#/$defs/float"
                },
                "uncertaintyRange": {
                    "$ref": "#/$defs/UncertaintyRange"
                }
            }
        },
        "ATITrainingMetricsValue": {
            "type": "object",
            "properties": {
                "metricDataPoints": {
                    "$ref": "#/$defs/ATIMetricDataPointsList"
                },
                "modelPerformance": {
                    "$ref": "#/$defs/ATIModelPerformance"
                }
            }
        },
        "ATIMetricDataPointsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ATIMetricDataPoint"
            }
        },
        "ATIMetricDataPoint": {
            "type": "object",
            "properties": {
                "cr": {
                    "$ref": "#/$defs/float"
                },
                "adr": {
                    "$ref": "#/$defs/float"
                },
                "threshold": {
                    "$ref": "#/$defs/float"
                },
                "atodr": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "ATIModelPerformance": {
            "type": "object",
            "properties": {
                "asi": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "AggregatedVariablesImportanceMetrics": {
            "type": "object",
            "properties": {
                "logOddsMetrics": {
                    "$ref": "#/$defs/ListOfAggregatedLogOddsMetrics"
                }
            }
        },
        "ListOfAggregatedLogOddsMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AggregatedLogOddsMetric"
            }
        },
        "AggregatedLogOddsMetric": {
            "type": "object",
            "properties": {
                "variableNames": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "aggregatedVariablesImportance": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "DescribeModelVersionsRequest": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelVersionNumber": {
                    "$ref": "#/$defs/floatVersionString"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/modelsMaxPageSize"
                }
            }
        },
        "modelsMaxPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "GetBatchImportJobsResult": {
            "type": "object",
            "properties": {
                "batchImports": {
                    "$ref": "#/$defs/BatchImportList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BatchImportList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchImport"
            }
        },
        "BatchImport": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/identifier"
                },
                "status": {
                    "$ref": "#/$defs/AsyncJobStatus"
                },
                "failureReason": {
                    "$ref": "#/$defs/string"
                },
                "startTime": {
                    "$ref": "#/$defs/time"
                },
                "completionTime": {
                    "$ref": "#/$defs/time"
                },
                "inputPath": {
                    "$ref": "#/$defs/s3BucketLocation"
                },
                "outputPath": {
                    "$ref": "#/$defs/s3BucketLocation"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "iamRoleArn": {
                    "$ref": "#/$defs/iamRoleArn"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                },
                "processedRecordsCount": {
                    "$ref": "#/$defs/Integer"
                },
                "failedRecordsCount": {
                    "$ref": "#/$defs/Integer"
                },
                "totalRecordsCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "AsyncJobStatus": {
            "enum": [
                "IN_PROGRESS_INITIALIZING",
                "IN_PROGRESS",
                "CANCEL_IN_PROGRESS",
                "CANCELED",
                "COMPLETE",
                "FAILED"
            ]
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "GetBatchImportJobsRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/identifier"
                },
                "maxResults": {
                    "$ref": "#/$defs/batchImportsMaxPageSize"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "batchImportsMaxPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "GetBatchPredictionJobsResult": {
            "type": "object",
            "properties": {
                "batchPredictions": {
                    "$ref": "#/$defs/BatchPredictionList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BatchPredictionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchPrediction"
            }
        },
        "BatchPrediction": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/identifier"
                },
                "status": {
                    "$ref": "#/$defs/AsyncJobStatus"
                },
                "failureReason": {
                    "$ref": "#/$defs/string"
                },
                "startTime": {
                    "$ref": "#/$defs/time"
                },
                "completionTime": {
                    "$ref": "#/$defs/time"
                },
                "lastHeartbeatTime": {
                    "$ref": "#/$defs/time"
                },
                "inputPath": {
                    "$ref": "#/$defs/s3BucketLocation"
                },
                "outputPath": {
                    "$ref": "#/$defs/s3BucketLocation"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorName": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersion": {
                    "$ref": "#/$defs/floatVersionString"
                },
                "iamRoleArn": {
                    "$ref": "#/$defs/iamRoleArn"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                },
                "processedRecordsCount": {
                    "$ref": "#/$defs/Integer"
                },
                "totalRecordsCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GetBatchPredictionJobsRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/identifier"
                },
                "maxResults": {
                    "$ref": "#/$defs/batchPredictionsMaxPageSize"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "batchPredictionsMaxPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "GetDeleteEventsByEventTypeStatusResult": {
            "type": "object",
            "properties": {
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "eventsDeletionStatus": {
                    "$ref": "#/$defs/AsyncJobStatus"
                }
            }
        },
        "GetDeleteEventsByEventTypeStatusRequest": {
            "type": "object",
            "properties": {
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                }
            }
        },
        "GetDetectorsResult": {
            "type": "object",
            "properties": {
                "detectors": {
                    "$ref": "#/$defs/DetectorList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DetectorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Detector"
            }
        },
        "Detector": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "GetDetectorsRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/DetectorsMaxResults"
                }
            }
        },
        "DetectorsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetDetectorVersionResult": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "externalModelEndpoints": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "modelVersions": {
                    "$ref": "#/$defs/ListOfModelVersions"
                },
                "rules": {
                    "$ref": "#/$defs/RuleList"
                },
                "status": {
                    "$ref": "#/$defs/DetectorVersionStatus"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "ruleExecutionMode": {
                    "$ref": "#/$defs/RuleExecutionMode"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "GetDetectorVersionRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                }
            }
        },
        "GetEntityTypesResult": {
            "type": "object",
            "properties": {
                "entityTypes": {
                    "$ref": "#/$defs/entityTypeList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "entityTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntityType"
            }
        },
        "EntityType": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "GetEntityTypesRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/entityTypesMaxResults"
                }
            }
        },
        "entityTypesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetEventResult": {
            "type": "object",
            "properties": {
                "event": {
                    "$ref": "#/$defs/Event"
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "eventId": {
                    "$ref": "#/$defs/string"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/string"
                },
                "eventTimestamp": {
                    "$ref": "#/$defs/string"
                },
                "eventVariables": {
                    "$ref": "#/$defs/EventAttributeMap"
                },
                "currentLabel": {
                    "$ref": "#/$defs/string"
                },
                "labelTimestamp": {
                    "$ref": "#/$defs/string"
                },
                "entities": {
                    "$ref": "#/$defs/listOfEntities"
                }
            }
        },
        "EventAttributeMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/attributeValue"
            }
        },
        "attributeValue": {
            "type": "string"
        },
        "listOfEntities": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Entity"
            }
        },
        "Entity": {
            "type": "object",
            "properties": {
                "entityType": {
                    "$ref": "#/$defs/string"
                },
                "entityId": {
                    "$ref": "#/$defs/entityRestrictedString"
                }
            }
        },
        "entityRestrictedString": {
            "type": "string"
        },
        "GetEventRequest": {
            "type": "object",
            "properties": {
                "eventId": {
                    "$ref": "#/$defs/string"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetEventPredictionResult": {
            "type": "object",
            "properties": {
                "modelScores": {
                    "$ref": "#/$defs/ListOfModelScores"
                },
                "ruleResults": {
                    "$ref": "#/$defs/ListOfRuleResults"
                },
                "externalModelOutputs": {
                    "$ref": "#/$defs/ListOfExternalModelOutputs"
                }
            }
        },
        "ListOfModelScores": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ModelScores"
            }
        },
        "ModelScores": {
            "type": "object",
            "properties": {
                "modelVersion": {
                    "$ref": "#/$defs/ModelVersion"
                },
                "scores": {
                    "$ref": "#/$defs/ModelPredictionMap"
                }
            }
        },
        "ModelPredictionMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/float"
            }
        },
        "ListOfRuleResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RuleResult"
            }
        },
        "RuleResult": {
            "type": "object",
            "properties": {
                "ruleId": {
                    "$ref": "#/$defs/string"
                },
                "outcomes": {
                    "$ref": "#/$defs/ListOfStrings"
                }
            }
        },
        "ListOfExternalModelOutputs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExternalModelOutputs"
            }
        },
        "ExternalModelOutputs": {
            "type": "object",
            "properties": {
                "externalModel": {
                    "$ref": "#/$defs/ExternalModelSummary"
                },
                "outputs": {
                    "$ref": "#/$defs/ExternalModelPredictionMap"
                }
            }
        },
        "ExternalModelSummary": {
            "type": "object",
            "properties": {
                "modelEndpoint": {
                    "$ref": "#/$defs/string"
                },
                "modelSource": {
                    "$ref": "#/$defs/ModelSource"
                }
            }
        },
        "ModelSource": {
            "enum": [
                "SAGEMAKER"
            ]
        },
        "ExternalModelPredictionMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string"
            }
        },
        "GetEventPredictionRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/string"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "eventId": {
                    "$ref": "#/$defs/string"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/string"
                },
                "entities": {
                    "$ref": "#/$defs/listOfEntities"
                },
                "eventTimestamp": {
                    "$ref": "#/$defs/utcTimestampISO8601"
                },
                "eventVariables": {
                    "$ref": "#/$defs/EventVariableMap"
                },
                "externalModelEndpointDataBlobs": {
                    "$ref": "#/$defs/ExternalModelEndpointDataBlobMap"
                }
            }
        },
        "utcTimestampISO8601": {
            "type": "string"
        },
        "EventVariableMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/variableValue"
            }
        },
        "variableValue": {
            "type": "string"
        },
        "ExternalModelEndpointDataBlobMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ModelEndpointDataBlob"
            }
        },
        "ModelEndpointDataBlob": {
            "type": "object",
            "properties": {
                "byteBuffer": {
                    "$ref": "#/$defs/blob"
                },
                "contentType": {
                    "$ref": "#/$defs/contentType"
                }
            }
        },
        "blob": {
            "type": "string",
            "format": "binary"
        },
        "contentType": {
            "type": "string"
        },
        "GetEventPredictionMetadataResult": {
            "type": "object",
            "properties": {
                "eventId": {
                    "$ref": "#/$defs/identifier"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "entityId": {
                    "$ref": "#/$defs/string"
                },
                "entityType": {
                    "$ref": "#/$defs/string"
                },
                "eventTimestamp": {
                    "$ref": "#/$defs/time"
                },
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "detectorVersionStatus": {
                    "$ref": "#/$defs/string"
                },
                "eventVariables": {
                    "$ref": "#/$defs/ListOfEventVariableSummaries"
                },
                "rules": {
                    "$ref": "#/$defs/EvaluatedRuleList"
                },
                "ruleExecutionMode": {
                    "$ref": "#/$defs/RuleExecutionMode"
                },
                "outcomes": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "evaluatedModelVersions": {
                    "$ref": "#/$defs/ListOfEvaluatedModelVersions"
                },
                "evaluatedExternalModels": {
                    "$ref": "#/$defs/ListOfEvaluatedExternalModels"
                },
                "predictionTimestamp": {
                    "$ref": "#/$defs/time"
                }
            }
        },
        "ListOfEventVariableSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventVariableSummary"
            }
        },
        "EventVariableSummary": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/sensitiveString"
                },
                "value": {
                    "$ref": "#/$defs/sensitiveString"
                },
                "source": {
                    "$ref": "#/$defs/sensitiveString"
                }
            }
        },
        "sensitiveString": {
            "type": "string"
        },
        "EvaluatedRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EvaluatedRule"
            }
        },
        "EvaluatedRule": {
            "type": "object",
            "properties": {
                "ruleId": {
                    "$ref": "#/$defs/identifier"
                },
                "ruleVersion": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "expression": {
                    "$ref": "#/$defs/sensitiveString"
                },
                "expressionWithValues": {
                    "$ref": "#/$defs/sensitiveString"
                },
                "outcomes": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "evaluated": {
                    "$ref": "#/$defs/Boolean"
                },
                "matched": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "ListOfEvaluatedModelVersions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EvaluatedModelVersion"
            }
        },
        "EvaluatedModelVersion": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/string"
                },
                "modelVersion": {
                    "$ref": "#/$defs/string"
                },
                "modelType": {
                    "$ref": "#/$defs/string"
                },
                "evaluations": {
                    "$ref": "#/$defs/ListOfModelVersionEvaluations"
                }
            }
        },
        "ListOfModelVersionEvaluations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ModelVersionEvaluation"
            }
        },
        "ModelVersionEvaluation": {
            "type": "object",
            "properties": {
                "outputVariableName": {
                    "$ref": "#/$defs/string"
                },
                "evaluationScore": {
                    "$ref": "#/$defs/string"
                },
                "predictionExplanations": {
                    "$ref": "#/$defs/PredictionExplanations"
                }
            }
        },
        "PredictionExplanations": {
            "type": "object",
            "properties": {
                "variableImpactExplanations": {
                    "$ref": "#/$defs/listOfVariableImpactExplanations"
                },
                "aggregatedVariablesImpactExplanations": {
                    "$ref": "#/$defs/ListOfAggregatedVariablesImpactExplanations"
                }
            }
        },
        "listOfVariableImpactExplanations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VariableImpactExplanation"
            }
        },
        "VariableImpactExplanation": {
            "type": "object",
            "properties": {
                "eventVariableName": {
                    "$ref": "#/$defs/string"
                },
                "relativeImpact": {
                    "$ref": "#/$defs/string"
                },
                "logOddsImpact": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "ListOfAggregatedVariablesImpactExplanations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AggregatedVariablesImpactExplanation"
            }
        },
        "AggregatedVariablesImpactExplanation": {
            "type": "object",
            "properties": {
                "eventVariableNames": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "relativeImpact": {
                    "$ref": "#/$defs/string"
                },
                "logOddsImpact": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "ListOfEvaluatedExternalModels": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EvaluatedExternalModel"
            }
        },
        "EvaluatedExternalModel": {
            "type": "object",
            "properties": {
                "modelEndpoint": {
                    "$ref": "#/$defs/string"
                },
                "useEventVariables": {
                    "$ref": "#/$defs/Boolean"
                },
                "inputVariables": {
                    "$ref": "#/$defs/MapOfStrings"
                },
                "outputVariables": {
                    "$ref": "#/$defs/MapOfStrings"
                }
            }
        },
        "MapOfStrings": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string"
            }
        },
        "GetEventPredictionMetadataRequest": {
            "type": "object",
            "properties": {
                "eventId": {
                    "$ref": "#/$defs/identifier"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "predictionTimestamp": {
                    "$ref": "#/$defs/time"
                }
            }
        },
        "GetEventTypesResult": {
            "type": "object",
            "properties": {
                "eventTypes": {
                    "$ref": "#/$defs/eventTypeList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "eventTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventType"
            }
        },
        "EventType": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "eventVariables": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "labels": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "entityTypes": {
                    "$ref": "#/$defs/NonEmptyListOfStrings"
                },
                "eventIngestion": {
                    "$ref": "#/$defs/EventIngestion"
                },
                "ingestedEventStatistics": {
                    "$ref": "#/$defs/IngestedEventStatistics"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                },
                "eventOrchestration": {
                    "$ref": "#/$defs/EventOrchestration"
                }
            }
        },
        "EventIngestion": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "IngestedEventStatistics": {
            "type": "object",
            "properties": {
                "numberOfEvents": {
                    "$ref": "#/$defs/Long"
                },
                "eventDataSizeInBytes": {
                    "$ref": "#/$defs/Long"
                },
                "leastRecentEvent": {
                    "$ref": "#/$defs/time"
                },
                "mostRecentEvent": {
                    "$ref": "#/$defs/time"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                }
            }
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "EventOrchestration": {
            "type": "object",
            "properties": {
                "eventBridgeEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetEventTypesRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/eventTypesMaxResults"
                }
            }
        },
        "eventTypesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetExternalModelsResult": {
            "type": "object",
            "properties": {
                "externalModels": {
                    "$ref": "#/$defs/ExternalModelList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ExternalModelList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExternalModel"
            }
        },
        "ExternalModel": {
            "type": "object",
            "properties": {
                "modelEndpoint": {
                    "$ref": "#/$defs/string"
                },
                "modelSource": {
                    "$ref": "#/$defs/ModelSource"
                },
                "invokeModelEndpointRoleArn": {
                    "$ref": "#/$defs/string"
                },
                "inputConfiguration": {
                    "$ref": "#/$defs/ModelInputConfiguration"
                },
                "outputConfiguration": {
                    "$ref": "#/$defs/ModelOutputConfiguration"
                },
                "modelEndpointStatus": {
                    "$ref": "#/$defs/ModelEndpointStatus"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "ModelInputConfiguration": {
            "type": "object",
            "properties": {
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "format": {
                    "$ref": "#/$defs/ModelInputDataFormat"
                },
                "useEventVariables": {
                    "$ref": "#/$defs/UseEventVariables"
                },
                "jsonInputTemplate": {
                    "$ref": "#/$defs/modelInputTemplate"
                },
                "csvInputTemplate": {
                    "$ref": "#/$defs/modelInputTemplate"
                }
            }
        },
        "ModelInputDataFormat": {
            "enum": [
                "CSV",
                "JSON"
            ]
        },
        "UseEventVariables": {
            "type": "boolean"
        },
        "modelInputTemplate": {
            "type": "string"
        },
        "ModelOutputConfiguration": {
            "type": "object",
            "properties": {
                "format": {
                    "$ref": "#/$defs/ModelOutputDataFormat"
                },
                "jsonKeyToVariableMap": {
                    "$ref": "#/$defs/JsonKeyToVariableMap"
                },
                "csvIndexToVariableMap": {
                    "$ref": "#/$defs/CsvIndexToVariableMap"
                }
            }
        },
        "ModelOutputDataFormat": {
            "enum": [
                "CSV",
                "JSONLINES"
            ]
        },
        "JsonKeyToVariableMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string"
            }
        },
        "CsvIndexToVariableMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string"
            }
        },
        "ModelEndpointStatus": {
            "enum": [
                "ASSOCIATED",
                "DISSOCIATED"
            ]
        },
        "GetExternalModelsRequest": {
            "type": "object",
            "properties": {
                "modelEndpoint": {
                    "$ref": "#/$defs/string"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/ExternalModelsMaxResults"
                }
            }
        },
        "ExternalModelsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetKMSEncryptionKeyResult": {
            "type": "object",
            "properties": {
                "kmsKey": {
                    "$ref": "#/$defs/KMSKey"
                }
            }
        },
        "KMSKey": {
            "type": "object",
            "properties": {
                "kmsEncryptionKeyArn": {
                    "$ref": "#/$defs/KmsEncryptionKeyArn"
                }
            }
        },
        "KmsEncryptionKeyArn": {
            "type": "string"
        },
        "GetLabelsResult": {
            "type": "object",
            "properties": {
                "labels": {
                    "$ref": "#/$defs/labelList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "labelList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Label"
            }
        },
        "Label": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "GetLabelsRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/labelsMaxResults"
                }
            }
        },
        "labelsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetListElementsResult": {
            "type": "object",
            "properties": {
                "elements": {
                    "$ref": "#/$defs/ElementsList"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                }
            }
        },
        "nextToken": {
            "type": "string"
        },
        "GetListElementsRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/noDashIdentifier"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ListsElementsMaxResults"
                }
            }
        },
        "ListsElementsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetListsMetadataResult": {
            "type": "object",
            "properties": {
                "lists": {
                    "$ref": "#/$defs/AllowDenyLists"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                }
            }
        },
        "AllowDenyLists": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowDenyList"
            }
        },
        "AllowDenyList": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/noDashIdentifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "variableType": {
                    "$ref": "#/$defs/variableType"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "updatedTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "GetListsMetadataRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/noDashIdentifier"
                },
                "nextToken": {
                    "$ref": "#/$defs/nextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/ListsMetadataMaxResults"
                }
            }
        },
        "ListsMetadataMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetModelsResult": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "models": {
                    "$ref": "#/$defs/modelList"
                }
            }
        },
        "modelList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Model"
            }
        },
        "Model": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/string"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "GetModelsRequest": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/modelsMaxPageSize"
                }
            }
        },
        "GetModelVersionResult": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "modelVersionNumber": {
                    "$ref": "#/$defs/floatVersionString"
                },
                "trainingDataSource": {
                    "$ref": "#/$defs/TrainingDataSourceEnum"
                },
                "trainingDataSchema": {
                    "$ref": "#/$defs/TrainingDataSchema"
                },
                "externalEventsDetail": {
                    "$ref": "#/$defs/ExternalEventsDetail"
                },
                "ingestedEventsDetail": {
                    "$ref": "#/$defs/IngestedEventsDetail"
                },
                "status": {
                    "$ref": "#/$defs/string"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "GetModelVersionRequest": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "modelVersionNumber": {
                    "$ref": "#/$defs/floatVersionString"
                }
            }
        },
        "GetOutcomesResult": {
            "type": "object",
            "properties": {
                "outcomes": {
                    "$ref": "#/$defs/OutcomeList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "OutcomeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Outcome"
            }
        },
        "Outcome": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "GetOutcomesRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/OutcomesMaxResults"
                }
            }
        },
        "OutcomesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetRulesResult": {
            "type": "object",
            "properties": {
                "ruleDetails": {
                    "$ref": "#/$defs/RuleDetailList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RuleDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RuleDetail"
            }
        },
        "RuleDetail": {
            "type": "object",
            "properties": {
                "ruleId": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "ruleVersion": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "expression": {
                    "$ref": "#/$defs/ruleExpression"
                },
                "language": {
                    "$ref": "#/$defs/Language"
                },
                "outcomes": {
                    "$ref": "#/$defs/NonEmptyListOfStrings"
                },
                "lastUpdatedTime": {
                    "$ref": "#/$defs/time"
                },
                "createdTime": {
                    "$ref": "#/$defs/time"
                },
                "arn": {
                    "$ref": "#/$defs/fraudDetectorArn"
                }
            }
        },
        "GetRulesRequest": {
            "type": "object",
            "properties": {
                "ruleId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "ruleVersion": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/RulesMaxResults"
                }
            }
        },
        "RulesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetVariablesResult": {
            "type": "object",
            "properties": {
                "variables": {
                    "$ref": "#/$defs/VariableList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetVariablesRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/VariablesMaxResults"
                }
            }
        },
        "VariablesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListEventPredictionsResult": {
            "type": "object",
            "properties": {
                "eventPredictionSummaries": {
                    "$ref": "#/$defs/ListOfEventPredictionSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListOfEventPredictionSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventPredictionSummary"
            }
        },
        "EventPredictionSummary": {
            "type": "object",
            "properties": {
                "eventId": {
                    "$ref": "#/$defs/identifier"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "eventTimestamp": {
                    "$ref": "#/$defs/time"
                },
                "predictionTimestamp": {
                    "$ref": "#/$defs/time"
                },
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                }
            }
        },
        "ListEventPredictionsRequest": {
            "type": "object",
            "properties": {
                "eventId": {
                    "$ref": "#/$defs/FilterCondition"
                },
                "eventType": {
                    "$ref": "#/$defs/FilterCondition"
                },
                "detectorId": {
                    "$ref": "#/$defs/FilterCondition"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/FilterCondition"
                },
                "predictionTimeRange": {
                    "$ref": "#/$defs/PredictionTimeRange"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/EventPredictionsMaxResults"
                }
            }
        },
        "FilterCondition": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/filterString"
                }
            }
        },
        "filterString": {
            "type": "string"
        },
        "PredictionTimeRange": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/time"
                },
                "endTime": {
                    "$ref": "#/$defs/time"
                }
            }
        },
        "EventPredictionsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListTagsForResourceResult": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/tagList"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceARN": {
                    "$ref": "#/$defs/fraudDetectorArn"
                },
                "nextToken": {
                    "$ref": "#/$defs/string"
                },
                "maxResults": {
                    "$ref": "#/$defs/TagsMaxResults"
                }
            }
        },
        "TagsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "PutDetectorResult": {
            "type": "object",
            "properties": {}
        },
        "PutDetectorRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "PutEntityTypeResult": {
            "type": "object",
            "properties": {}
        },
        "PutEntityTypeRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "PutEventTypeResult": {
            "type": "object",
            "properties": {}
        },
        "PutEventTypeRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "eventVariables": {
                    "$ref": "#/$defs/NonEmptyListOfStrings"
                },
                "labels": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "entityTypes": {
                    "$ref": "#/$defs/NonEmptyListOfStrings"
                },
                "eventIngestion": {
                    "$ref": "#/$defs/EventIngestion"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                },
                "eventOrchestration": {
                    "$ref": "#/$defs/EventOrchestration"
                }
            }
        },
        "PutExternalModelResult": {
            "type": "object",
            "properties": {}
        },
        "PutExternalModelRequest": {
            "type": "object",
            "properties": {
                "modelEndpoint": {
                    "$ref": "#/$defs/sageMakerEndpointIdentifier"
                },
                "modelSource": {
                    "$ref": "#/$defs/ModelSource"
                },
                "invokeModelEndpointRoleArn": {
                    "$ref": "#/$defs/string"
                },
                "inputConfiguration": {
                    "$ref": "#/$defs/ModelInputConfiguration"
                },
                "outputConfiguration": {
                    "$ref": "#/$defs/ModelOutputConfiguration"
                },
                "modelEndpointStatus": {
                    "$ref": "#/$defs/ModelEndpointStatus"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "PutKMSEncryptionKeyResult": {
            "type": "object",
            "properties": {}
        },
        "PutKMSEncryptionKeyRequest": {
            "type": "object",
            "properties": {
                "kmsEncryptionKeyArn": {
                    "$ref": "#/$defs/KmsEncryptionKeyArn"
                }
            }
        },
        "PutLabelResult": {
            "type": "object",
            "properties": {}
        },
        "PutLabelRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "PutOutcomeResult": {
            "type": "object",
            "properties": {}
        },
        "PutOutcomeRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "SendEventResult": {
            "type": "object",
            "properties": {}
        },
        "SendEventRequest": {
            "type": "object",
            "properties": {
                "eventId": {
                    "$ref": "#/$defs/identifier"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "eventTimestamp": {
                    "$ref": "#/$defs/utcTimestampISO8601"
                },
                "eventVariables": {
                    "$ref": "#/$defs/EventVariableMap"
                },
                "assignedLabel": {
                    "$ref": "#/$defs/identifier"
                },
                "labelTimestamp": {
                    "$ref": "#/$defs/utcTimestampISO8601"
                },
                "entities": {
                    "$ref": "#/$defs/listOfEntities"
                }
            }
        },
        "TagResourceResult": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceARN": {
                    "$ref": "#/$defs/fraudDetectorArn"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "UntagResourceResult": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceARN": {
                    "$ref": "#/$defs/fraudDetectorArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/tagKeyList"
                }
            }
        },
        "tagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/tagKey"
            }
        },
        "UpdateDetectorVersionResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateDetectorVersionRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "externalModelEndpoints": {
                    "$ref": "#/$defs/ListOfStrings"
                },
                "rules": {
                    "$ref": "#/$defs/RuleList"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "modelVersions": {
                    "$ref": "#/$defs/ListOfModelVersions"
                },
                "ruleExecutionMode": {
                    "$ref": "#/$defs/RuleExecutionMode"
                }
            }
        },
        "UpdateDetectorVersionMetadataResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateDetectorVersionMetadataRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "description": {
                    "$ref": "#/$defs/description"
                }
            }
        },
        "UpdateDetectorVersionStatusResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateDetectorVersionStatusRequest": {
            "type": "object",
            "properties": {
                "detectorId": {
                    "$ref": "#/$defs/identifier"
                },
                "detectorVersionId": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "status": {
                    "$ref": "#/$defs/DetectorVersionStatus"
                }
            }
        },
        "UpdateEventLabelResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateEventLabelRequest": {
            "type": "object",
            "properties": {
                "eventId": {
                    "$ref": "#/$defs/identifier"
                },
                "eventTypeName": {
                    "$ref": "#/$defs/identifier"
                },
                "assignedLabel": {
                    "$ref": "#/$defs/identifier"
                },
                "labelTimestamp": {
                    "$ref": "#/$defs/utcTimestampISO8601"
                }
            }
        },
        "UpdateListResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateListRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/noDashIdentifier"
                },
                "elements": {
                    "$ref": "#/$defs/ElementsList"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "updateMode": {
                    "$ref": "#/$defs/ListUpdateMode"
                },
                "variableType": {
                    "$ref": "#/$defs/variableType"
                }
            }
        },
        "ListUpdateMode": {
            "enum": [
                "REPLACE",
                "APPEND",
                "REMOVE"
            ]
        },
        "UpdateModelResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateModelRequest": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "description": {
                    "$ref": "#/$defs/description"
                }
            }
        },
        "UpdateModelVersionResult": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "modelVersionNumber": {
                    "$ref": "#/$defs/floatVersionString"
                },
                "status": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateModelVersionRequest": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "majorVersionNumber": {
                    "$ref": "#/$defs/wholeNumberVersionString"
                },
                "externalEventsDetail": {
                    "$ref": "#/$defs/ExternalEventsDetail"
                },
                "ingestedEventsDetail": {
                    "$ref": "#/$defs/IngestedEventsDetail"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "UpdateModelVersionStatusResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateModelVersionStatusRequest": {
            "type": "object",
            "properties": {
                "modelId": {
                    "$ref": "#/$defs/modelIdentifier"
                },
                "modelType": {
                    "$ref": "#/$defs/ModelTypeEnum"
                },
                "modelVersionNumber": {
                    "$ref": "#/$defs/floatVersionString"
                },
                "status": {
                    "$ref": "#/$defs/ModelVersionStatus"
                }
            }
        },
        "ModelVersionStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE",
                "TRAINING_CANCELLED"
            ]
        },
        "UpdateRuleMetadataResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateRuleMetadataRequest": {
            "type": "object",
            "properties": {
                "rule": {
                    "$ref": "#/$defs/Rule"
                },
                "description": {
                    "$ref": "#/$defs/description"
                }
            }
        },
        "UpdateRuleVersionResult": {
            "type": "object",
            "properties": {
                "rule": {
                    "$ref": "#/$defs/Rule"
                }
            }
        },
        "UpdateRuleVersionRequest": {
            "type": "object",
            "properties": {
                "rule": {
                    "$ref": "#/$defs/Rule"
                },
                "description": {
                    "$ref": "#/$defs/description"
                },
                "expression": {
                    "$ref": "#/$defs/ruleExpression"
                },
                "language": {
                    "$ref": "#/$defs/Language"
                },
                "outcomes": {
                    "$ref": "#/$defs/NonEmptyListOfStrings"
                },
                "tags": {
                    "$ref": "#/$defs/tagList"
                }
            }
        },
        "UpdateVariableResult": {
            "type": "object",
            "properties": {}
        },
        "UpdateVariableRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "defaultValue": {
                    "$ref": "#/$defs/string"
                },
                "description": {
                    "$ref": "#/$defs/string"
                },
                "variableType": {
                    "$ref": "#/$defs/string"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://frauddetector-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://frauddetector-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://frauddetector.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://frauddetector.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
