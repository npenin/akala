{
    "name": "mgh",
    "commands": [
        {
            "name": "AssociateCreatedArtifact",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.AssociateCreatedArtifact"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateCreatedArtifactResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateCreatedArtifactRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateDiscoveredResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.AssociateDiscoveredResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateDiscoveredResourceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateDiscoveredResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateProgressUpdateStream",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.CreateProgressUpdateStream"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProgressUpdateStreamResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateProgressUpdateStreamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteProgressUpdateStream",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.DeleteProgressUpdateStream"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProgressUpdateStreamResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProgressUpdateStreamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeApplicationState",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.DescribeApplicationState"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeApplicationStateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeApplicationStateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeMigrationTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.DescribeMigrationTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMigrationTaskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMigrationTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateCreatedArtifact",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.DisassociateCreatedArtifact"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateCreatedArtifactResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateCreatedArtifactRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateDiscoveredResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.DisassociateDiscoveredResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateDiscoveredResourceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateDiscoveredResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportMigrationTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.ImportMigrationTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportMigrationTaskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportMigrationTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListApplicationStates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.ListApplicationStates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationStatesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationStatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCreatedArtifacts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.ListCreatedArtifacts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCreatedArtifactsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCreatedArtifactsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDiscoveredResources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.ListDiscoveredResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDiscoveredResourcesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDiscoveredResourcesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMigrationTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.ListMigrationTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMigrationTasksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMigrationTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListProgressUpdateStreams",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.ListProgressUpdateStreams"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProgressUpdateStreamsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProgressUpdateStreamsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "NotifyApplicationState",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.NotifyApplicationState"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/NotifyApplicationStateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/NotifyApplicationStateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "NotifyMigrationTaskState",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.NotifyMigrationTaskState"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/NotifyMigrationTaskStateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/NotifyMigrationTaskStateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutResourceAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AWSMigrationHub.PutResourceAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutResourceAttributesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutResourceAttributesRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateCreatedArtifactResult": {
            "type": "object",
            "properties": {}
        },
        "AssociateCreatedArtifactRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "CreatedArtifact": {
                    "$ref": "#/$defs/CreatedArtifact"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "ProgressUpdateStream": {
            "type": "string"
        },
        "MigrationTaskName": {
            "type": "string"
        },
        "CreatedArtifact": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CreatedArtifactName"
                },
                "Description": {
                    "$ref": "#/$defs/CreatedArtifactDescription"
                }
            }
        },
        "CreatedArtifactName": {
            "type": "string"
        },
        "CreatedArtifactDescription": {
            "type": "string"
        },
        "DryRun": {
            "type": "boolean"
        },
        "AssociateDiscoveredResourceResult": {
            "type": "object",
            "properties": {}
        },
        "AssociateDiscoveredResourceRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "DiscoveredResource": {
                    "$ref": "#/$defs/DiscoveredResource"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "DiscoveredResource": {
            "type": "object",
            "properties": {
                "ConfigurationId": {
                    "$ref": "#/$defs/ConfigurationId"
                },
                "Description": {
                    "$ref": "#/$defs/DiscoveredResourceDescription"
                }
            }
        },
        "ConfigurationId": {
            "type": "string"
        },
        "DiscoveredResourceDescription": {
            "type": "string"
        },
        "CreateProgressUpdateStreamResult": {
            "type": "object",
            "properties": {}
        },
        "CreateProgressUpdateStreamRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStreamName": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "DeleteProgressUpdateStreamResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteProgressUpdateStreamRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStreamName": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "DescribeApplicationStateResult": {
            "type": "object",
            "properties": {
                "ApplicationStatus": {
                    "$ref": "#/$defs/ApplicationStatus"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/UpdateDateTime"
                }
            }
        },
        "ApplicationStatus": {
            "enum": [
                "NOT_STARTED",
                "IN_PROGRESS",
                "COMPLETED"
            ]
        },
        "UpdateDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeApplicationStateRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                }
            }
        },
        "ApplicationId": {
            "type": "string"
        },
        "DescribeMigrationTaskResult": {
            "type": "object",
            "properties": {
                "MigrationTask": {
                    "$ref": "#/$defs/MigrationTask"
                }
            }
        },
        "MigrationTask": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "Task": {
                    "$ref": "#/$defs/Task"
                },
                "UpdateDateTime": {
                    "$ref": "#/$defs/UpdateDateTime"
                },
                "ResourceAttributeList": {
                    "$ref": "#/$defs/LatestResourceAttributeList"
                }
            }
        },
        "Task": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "StatusDetail": {
                    "$ref": "#/$defs/StatusDetail"
                },
                "ProgressPercent": {
                    "$ref": "#/$defs/ProgressPercent"
                }
            }
        },
        "Status": {
            "enum": [
                "NOT_STARTED",
                "IN_PROGRESS",
                "FAILED",
                "COMPLETED"
            ]
        },
        "StatusDetail": {
            "type": "string"
        },
        "ProgressPercent": {
            "type": "integer",
            "format": "int32"
        },
        "LatestResourceAttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceAttribute"
            }
        },
        "ResourceAttribute": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ResourceAttributeType"
                },
                "Value": {
                    "$ref": "#/$defs/ResourceAttributeValue"
                }
            }
        },
        "ResourceAttributeType": {
            "enum": [
                "IPV4_ADDRESS",
                "IPV6_ADDRESS",
                "MAC_ADDRESS",
                "FQDN",
                "VM_MANAGER_ID",
                "VM_MANAGED_OBJECT_REFERENCE",
                "VM_NAME",
                "VM_PATH",
                "BIOS_ID",
                "MOTHERBOARD_SERIAL_NUMBER"
            ]
        },
        "ResourceAttributeValue": {
            "type": "string"
        },
        "DescribeMigrationTaskRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                }
            }
        },
        "DisassociateCreatedArtifactResult": {
            "type": "object",
            "properties": {}
        },
        "DisassociateCreatedArtifactRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "CreatedArtifactName": {
                    "$ref": "#/$defs/CreatedArtifactName"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "DisassociateDiscoveredResourceResult": {
            "type": "object",
            "properties": {}
        },
        "DisassociateDiscoveredResourceRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "ConfigurationId": {
                    "$ref": "#/$defs/ConfigurationId"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "ImportMigrationTaskResult": {
            "type": "object",
            "properties": {}
        },
        "ImportMigrationTaskRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "ListApplicationStatesResult": {
            "type": "object",
            "properties": {
                "ApplicationStateList": {
                    "$ref": "#/$defs/ApplicationStateList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ApplicationStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationState"
            }
        },
        "ApplicationState": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "ApplicationStatus": {
                    "$ref": "#/$defs/ApplicationStatus"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/UpdateDateTime"
                }
            }
        },
        "Token": {
            "type": "string"
        },
        "ListApplicationStatesRequest": {
            "type": "object",
            "properties": {
                "ApplicationIds": {
                    "$ref": "#/$defs/ApplicationIds"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ApplicationIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationId"
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListCreatedArtifactsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "CreatedArtifactList": {
                    "$ref": "#/$defs/CreatedArtifactList"
                }
            }
        },
        "CreatedArtifactList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CreatedArtifact"
            }
        },
        "ListCreatedArtifactsRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsCreatedArtifacts"
                }
            }
        },
        "MaxResultsCreatedArtifacts": {
            "type": "integer",
            "format": "int32"
        },
        "ListDiscoveredResourcesResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "DiscoveredResourceList": {
                    "$ref": "#/$defs/DiscoveredResourceList"
                }
            }
        },
        "DiscoveredResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DiscoveredResource"
            }
        },
        "ListDiscoveredResourcesRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsResources"
                }
            }
        },
        "MaxResultsResources": {
            "type": "integer",
            "format": "int32"
        },
        "ListMigrationTasksResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MigrationTaskSummaryList": {
                    "$ref": "#/$defs/MigrationTaskSummaryList"
                }
            }
        },
        "MigrationTaskSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MigrationTaskSummary"
            }
        },
        "MigrationTaskSummary": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                },
                "ProgressPercent": {
                    "$ref": "#/$defs/ProgressPercent"
                },
                "StatusDetail": {
                    "$ref": "#/$defs/StatusDetail"
                },
                "UpdateDateTime": {
                    "$ref": "#/$defs/UpdateDateTime"
                }
            }
        },
        "ListMigrationTasksRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "ResourceName": {
            "type": "string"
        },
        "ListProgressUpdateStreamsResult": {
            "type": "object",
            "properties": {
                "ProgressUpdateStreamSummaryList": {
                    "$ref": "#/$defs/ProgressUpdateStreamSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ProgressUpdateStreamSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProgressUpdateStreamSummary"
            }
        },
        "ProgressUpdateStreamSummary": {
            "type": "object",
            "properties": {
                "ProgressUpdateStreamName": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                }
            }
        },
        "ListProgressUpdateStreamsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "NotifyApplicationStateResult": {
            "type": "object",
            "properties": {}
        },
        "NotifyApplicationStateRequest": {
            "type": "object",
            "properties": {
                "ApplicationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "Status": {
                    "$ref": "#/$defs/ApplicationStatus"
                },
                "UpdateDateTime": {
                    "$ref": "#/$defs/UpdateDateTime"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "NotifyMigrationTaskStateResult": {
            "type": "object",
            "properties": {}
        },
        "NotifyMigrationTaskStateRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "Task": {
                    "$ref": "#/$defs/Task"
                },
                "UpdateDateTime": {
                    "$ref": "#/$defs/UpdateDateTime"
                },
                "NextUpdateSeconds": {
                    "$ref": "#/$defs/NextUpdateSeconds"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "NextUpdateSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "PutResourceAttributesResult": {
            "type": "object",
            "properties": {}
        },
        "PutResourceAttributesRequest": {
            "type": "object",
            "properties": {
                "ProgressUpdateStream": {
                    "$ref": "#/$defs/ProgressUpdateStream"
                },
                "MigrationTaskName": {
                    "$ref": "#/$defs/MigrationTaskName"
                },
                "ResourceAttributeList": {
                    "$ref": "#/$defs/ResourceAttributeList"
                },
                "DryRun": {
                    "$ref": "#/$defs/DryRun"
                }
            }
        },
        "ResourceAttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceAttribute"
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mgh-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mgh-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://mgh.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://mgh.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}