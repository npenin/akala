{
    "name": "cognito-sync",
    "commands": [
        {
            "name": "BulkPublish",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/identitypools/{IdentityPoolId}/bulkpublish"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BulkPublishResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BulkPublishRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDataset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "IdentityId": "route.IdentityId",
                            "DatasetName": "route.DatasetName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDatasetResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0.IdentityId",
                        "param.0.DatasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDatasetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeDataset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "IdentityId": "route.IdentityId",
                            "DatasetName": "route.DatasetName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDatasetResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0.IdentityId",
                        "param.0.DatasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDatasetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeIdentityPoolUsage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/identitypools/{IdentityPoolId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIdentityPoolUsageResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIdentityPoolUsageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeIdentityUsage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "IdentityId": "route.IdentityId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/identitypools/{IdentityPoolId}/identities/{IdentityId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIdentityUsageResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0.IdentityId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIdentityUsageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBulkPublishDetails",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/identitypools/{IdentityPoolId}/getBulkPublishDetails"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBulkPublishDetailsResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBulkPublishDetailsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCognitoEvents",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/identitypools/{IdentityPoolId}/events"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCognitoEventsResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCognitoEventsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetIdentityPoolConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/identitypools/{IdentityPoolId}/configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIdentityPoolConfigurationResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIdentityPoolConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListDatasets",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "IdentityId": "route.IdentityId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDatasetsResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0.IdentityId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDatasetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListIdentityPoolUsage",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/identitypools"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIdentityPoolUsageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListIdentityPoolUsageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRecords",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "IdentityId": "route.IdentityId",
                            "DatasetName": "route.DatasetName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/records"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRecordsResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0.IdentityId",
                        "param.0.DatasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRecordsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "RegisterDevice",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "IdentityId": "route.IdentityId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/identitypools/{IdentityPoolId}/identity/{IdentityId}/device"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterDeviceResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0.IdentityId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SetCognitoEvents",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/identitypools/{IdentityPoolId}/events"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetCognitoEventsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SetIdentityPoolConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/identitypools/{IdentityPoolId}/configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SetIdentityPoolConfigurationResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetIdentityPoolConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SubscribeToDataset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "IdentityId": "route.IdentityId",
                            "DatasetName": "route.DatasetName",
                            "DeviceId": "route.DeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SubscribeToDatasetResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0.IdentityId",
                        "param.0.DatasetName",
                        "param.0.DeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SubscribeToDatasetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UnsubscribeFromDataset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "IdentityId": "route.IdentityId",
                            "DatasetName": "route.DatasetName",
                            "DeviceId": "route.DeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}/subscriptions/{DeviceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UnsubscribeFromDatasetResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0.IdentityId",
                        "param.0.DatasetName",
                        "param.0.DeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UnsubscribeFromDatasetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRecords",
            "config": {
                "http": {
                    "inject": [
                        {
                            "IdentityPoolId": "route.IdentityPoolId",
                            "IdentityId": "route.IdentityId",
                            "DatasetName": "route.DatasetName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/identitypools/{IdentityPoolId}/identities/{IdentityId}/datasets/{DatasetName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRecordsResponse"
                    },
                    "inject": [
                        "param.0.IdentityPoolId",
                        "param.0.IdentityId",
                        "param.0.DatasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRecordsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BulkPublishResponse": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                }
            }
        },
        "IdentityPoolId": {
            "type": "string"
        },
        "BulkPublishRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                }
            }
        },
        "DeleteDatasetResponse": {
            "type": "object",
            "properties": {
                "Dataset": {
                    "$ref": "#/$defs/Dataset"
                }
            }
        },
        "Dataset": {
            "type": "object",
            "properties": {
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "CreationDate": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/String"
                },
                "DataStorage": {
                    "$ref": "#/$defs/Long"
                },
                "NumRecords": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "IdentityId": {
            "type": "string"
        },
        "DatasetName": {
            "type": "string"
        },
        "Date": {
            "type": "string",
            "format": "date-time"
        },
        "String": {
            "type": "string"
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "DeleteDatasetRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "DescribeDatasetResponse": {
            "type": "object",
            "properties": {
                "Dataset": {
                    "$ref": "#/$defs/Dataset"
                }
            }
        },
        "DescribeDatasetRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "DescribeIdentityPoolUsageResponse": {
            "type": "object",
            "properties": {
                "IdentityPoolUsage": {
                    "$ref": "#/$defs/IdentityPoolUsage"
                }
            }
        },
        "IdentityPoolUsage": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "SyncSessionsCount": {
                    "$ref": "#/$defs/Long"
                },
                "DataStorage": {
                    "$ref": "#/$defs/Long"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "DescribeIdentityPoolUsageRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                }
            }
        },
        "DescribeIdentityUsageResponse": {
            "type": "object",
            "properties": {
                "IdentityUsage": {
                    "$ref": "#/$defs/IdentityUsage"
                }
            }
        },
        "IdentityUsage": {
            "type": "object",
            "properties": {
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                },
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "DatasetCount": {
                    "$ref": "#/$defs/Integer"
                },
                "DataStorage": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeIdentityUsageRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                }
            }
        },
        "GetBulkPublishDetailsResponse": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "BulkPublishStartTime": {
                    "$ref": "#/$defs/Date"
                },
                "BulkPublishCompleteTime": {
                    "$ref": "#/$defs/Date"
                },
                "BulkPublishStatus": {
                    "$ref": "#/$defs/BulkPublishStatus"
                },
                "FailureMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BulkPublishStatus": {
            "enum": [
                "NOT_STARTED",
                "IN_PROGRESS",
                "FAILED",
                "SUCCEEDED"
            ]
        },
        "GetBulkPublishDetailsRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                }
            }
        },
        "GetCognitoEventsResponse": {
            "type": "object",
            "properties": {
                "Events": {
                    "$ref": "#/$defs/Events"
                }
            }
        },
        "Events": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/LambdaFunctionArn"
            }
        },
        "LambdaFunctionArn": {
            "type": "string"
        },
        "GetCognitoEventsRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                }
            }
        },
        "GetIdentityPoolConfigurationResponse": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "PushSync": {
                    "$ref": "#/$defs/PushSync"
                },
                "CognitoStreams": {
                    "$ref": "#/$defs/CognitoStreams"
                }
            }
        },
        "PushSync": {
            "type": "object",
            "properties": {
                "ApplicationArns": {
                    "$ref": "#/$defs/ApplicationArnList"
                },
                "RoleArn": {
                    "$ref": "#/$defs/AssumeRoleArn"
                }
            }
        },
        "ApplicationArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationArn"
            }
        },
        "ApplicationArn": {
            "type": "string"
        },
        "AssumeRoleArn": {
            "type": "string"
        },
        "CognitoStreams": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "RoleArn": {
                    "$ref": "#/$defs/AssumeRoleArn"
                },
                "StreamingStatus": {
                    "$ref": "#/$defs/StreamingStatus"
                }
            }
        },
        "StreamName": {
            "type": "string"
        },
        "StreamingStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "GetIdentityPoolConfigurationRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                }
            }
        },
        "ListDatasetsResponse": {
            "type": "object",
            "properties": {
                "Datasets": {
                    "$ref": "#/$defs/DatasetList"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DatasetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Dataset"
            }
        },
        "ListDatasetsRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerString"
                }
            }
        },
        "IntegerString": {
            "type": "integer",
            "format": "int32"
        },
        "ListIdentityPoolUsageResponse": {
            "type": "object",
            "properties": {
                "IdentityPoolUsages": {
                    "$ref": "#/$defs/IdentityPoolUsageList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IdentityPoolUsageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdentityPoolUsage"
            }
        },
        "ListIdentityPoolUsageRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerString"
                }
            }
        },
        "ListRecordsResponse": {
            "type": "object",
            "properties": {
                "Records": {
                    "$ref": "#/$defs/RecordList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                },
                "DatasetSyncCount": {
                    "$ref": "#/$defs/Long"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/String"
                },
                "MergedDatasetNames": {
                    "$ref": "#/$defs/MergedDatasetNameList"
                },
                "DatasetExists": {
                    "$ref": "#/$defs/Boolean"
                },
                "DatasetDeletedAfterRequestedSyncCount": {
                    "$ref": "#/$defs/Boolean"
                },
                "SyncSessionToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RecordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Record"
            }
        },
        "Record": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/RecordKey"
                },
                "Value": {
                    "$ref": "#/$defs/RecordValue"
                },
                "SyncCount": {
                    "$ref": "#/$defs/Long"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/String"
                },
                "DeviceLastModifiedDate": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "RecordKey": {
            "type": "string"
        },
        "RecordValue": {
            "type": "string"
        },
        "MergedDatasetNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "ListRecordsRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "LastSyncCount": {
                    "$ref": "#/$defs/Long"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerString"
                },
                "SyncSessionToken": {
                    "$ref": "#/$defs/SyncSessionToken"
                }
            }
        },
        "SyncSessionToken": {
            "type": "string"
        },
        "RegisterDeviceResponse": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                }
            }
        },
        "DeviceId": {
            "type": "string"
        },
        "RegisterDeviceRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                },
                "Platform": {
                    "$ref": "#/$defs/Platform"
                },
                "Token": {
                    "$ref": "#/$defs/PushToken"
                }
            }
        },
        "Platform": {
            "enum": [
                "APNS",
                "APNS_SANDBOX",
                "GCM",
                "ADM"
            ]
        },
        "PushToken": {
            "type": "string"
        },
        "SetCognitoEventsRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "Events": {
                    "$ref": "#/$defs/Events"
                }
            }
        },
        "SetIdentityPoolConfigurationResponse": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "PushSync": {
                    "$ref": "#/$defs/PushSync"
                },
                "CognitoStreams": {
                    "$ref": "#/$defs/CognitoStreams"
                }
            }
        },
        "SetIdentityPoolConfigurationRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "PushSync": {
                    "$ref": "#/$defs/PushSync"
                },
                "CognitoStreams": {
                    "$ref": "#/$defs/CognitoStreams"
                }
            }
        },
        "SubscribeToDatasetResponse": {
            "type": "object",
            "properties": {}
        },
        "SubscribeToDatasetRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                }
            }
        },
        "UnsubscribeFromDatasetResponse": {
            "type": "object",
            "properties": {}
        },
        "UnsubscribeFromDatasetRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                }
            }
        },
        "UpdateRecordsResponse": {
            "type": "object",
            "properties": {
                "Records": {
                    "$ref": "#/$defs/RecordList"
                }
            }
        },
        "UpdateRecordsRequest": {
            "type": "object",
            "properties": {
                "IdentityPoolId": {
                    "$ref": "#/$defs/IdentityPoolId"
                },
                "IdentityId": {
                    "$ref": "#/$defs/IdentityId"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "RecordPatches": {
                    "$ref": "#/$defs/RecordPatchList"
                },
                "SyncSessionToken": {
                    "$ref": "#/$defs/SyncSessionToken"
                },
                "ClientContext": {
                    "$ref": "#/$defs/ClientContext"
                }
            }
        },
        "RecordPatchList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecordPatch"
            }
        },
        "RecordPatch": {
            "type": "object",
            "properties": {
                "Op": {
                    "$ref": "#/$defs/Operation"
                },
                "Key": {
                    "$ref": "#/$defs/RecordKey"
                },
                "Value": {
                    "$ref": "#/$defs/RecordValue"
                },
                "SyncCount": {
                    "$ref": "#/$defs/Long"
                },
                "DeviceLastModifiedDate": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "Operation": {
            "enum": [
                "replace",
                "remove"
            ]
        },
        "ClientContext": {
            "type": "string"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://cognito-sync-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://cognito-sync-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://cognito-sync.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://cognito-sync.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}