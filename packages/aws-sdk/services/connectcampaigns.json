{
    "name": "connect-campaigns",
    "commands": [
        {
            "name": "CreateCampaign",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/campaigns"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCampaignResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCampaignRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCampaign",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/campaigns/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCampaignRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteConnectInstanceConfig",
            "config": {
                "http": {
                    "inject": [
                        {
                            "connectInstanceId": "route.connectInstanceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/connect-instance/{connectInstanceId}/config"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.connectInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteConnectInstanceConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteInstanceOnboardingJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "connectInstanceId": "route.connectInstanceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/connect-instance/{connectInstanceId}/onboarding"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.connectInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInstanceOnboardingJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeCampaign",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/campaigns/{id}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCampaignResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCampaignRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCampaignState",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/campaigns/{id}/state"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCampaignStateResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCampaignStateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetCampaignStateBatch",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/campaigns-state"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCampaignStateBatchResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCampaignStateBatchRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetConnectInstanceConfig",
            "config": {
                "http": {
                    "inject": [
                        {
                            "connectInstanceId": "route.connectInstanceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/connect-instance/{connectInstanceId}/config"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConnectInstanceConfigResponse"
                    },
                    "inject": [
                        "param.0.connectInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConnectInstanceConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetInstanceOnboardingJobStatus",
            "config": {
                "http": {
                    "inject": [
                        {
                            "connectInstanceId": "route.connectInstanceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/connect-instance/{connectInstanceId}/onboarding"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceOnboardingJobStatusResponse"
                    },
                    "inject": [
                        "param.0.connectInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceOnboardingJobStatusRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCampaigns",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/campaigns-summary"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCampaignsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCampaignsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "arn": "route.arn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{arn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PauseCampaign",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/campaigns/{id}/pause"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PauseCampaignRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutDialRequestBatch",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/campaigns/{id}/dial-requests"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDialRequestBatchResponse"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutDialRequestBatchRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ResumeCampaign",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/campaigns/{id}/resume"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResumeCampaignRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartCampaign",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/campaigns/{id}/start"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartCampaignRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartInstanceOnboardingJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "connectInstanceId": "route.connectInstanceId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/connect-instance/{connectInstanceId}/onboarding"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartInstanceOnboardingJobResponse"
                    },
                    "inject": [
                        "param.0.connectInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartInstanceOnboardingJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StopCampaign",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/campaigns/{id}/stop"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopCampaignRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "arn": "route.arn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{arn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "arn": "route.arn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{arn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateCampaignDialerConfig",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/campaigns/{id}/dialer-config"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCampaignDialerConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateCampaignName",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/campaigns/{id}/name"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCampaignNameRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateCampaignOutboundCallConfig",
            "config": {
                "http": {
                    "inject": [
                        {
                            "id": "route.id",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/campaigns/{id}/outbound-call-config"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.id",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCampaignOutboundCallConfigRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateCampaignResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                },
                "arn": {
                    "$ref": "#/$defs/CampaignArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CampaignId": {
            "type": "string"
        },
        "CampaignArn": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "CreateCampaignRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/CampaignName"
                },
                "connectInstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "dialerConfig": {
                    "$ref": "#/$defs/DialerConfig"
                },
                "outboundCallConfig": {
                    "$ref": "#/$defs/OutboundCallConfig"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CampaignName": {
            "type": "string"
        },
        "InstanceId": {
            "type": "string"
        },
        "DialerConfig": {
            "type": "object",
            "properties": {
                "progressiveDialerConfig": {
                    "$ref": "#/$defs/ProgressiveDialerConfig"
                },
                "predictiveDialerConfig": {
                    "$ref": "#/$defs/PredictiveDialerConfig"
                },
                "agentlessDialerConfig": {
                    "$ref": "#/$defs/AgentlessDialerConfig"
                }
            }
        },
        "ProgressiveDialerConfig": {
            "type": "object",
            "properties": {
                "bandwidthAllocation": {
                    "$ref": "#/$defs/BandwidthAllocation"
                },
                "dialingCapacity": {
                    "$ref": "#/$defs/DialingCapacity"
                }
            }
        },
        "BandwidthAllocation": {
            "type": "number",
            "format": "double"
        },
        "DialingCapacity": {
            "type": "number",
            "format": "double"
        },
        "PredictiveDialerConfig": {
            "type": "object",
            "properties": {
                "bandwidthAllocation": {
                    "$ref": "#/$defs/BandwidthAllocation"
                },
                "dialingCapacity": {
                    "$ref": "#/$defs/DialingCapacity"
                }
            }
        },
        "AgentlessDialerConfig": {
            "type": "object",
            "properties": {
                "dialingCapacity": {
                    "$ref": "#/$defs/DialingCapacity"
                }
            }
        },
        "OutboundCallConfig": {
            "type": "object",
            "properties": {
                "connectContactFlowId": {
                    "$ref": "#/$defs/ContactFlowId"
                },
                "connectSourcePhoneNumber": {
                    "$ref": "#/$defs/SourcePhoneNumber"
                },
                "connectQueueId": {
                    "$ref": "#/$defs/QueueId"
                },
                "answerMachineDetectionConfig": {
                    "$ref": "#/$defs/AnswerMachineDetectionConfig"
                }
            }
        },
        "ContactFlowId": {
            "type": "string"
        },
        "SourcePhoneNumber": {
            "type": "string"
        },
        "QueueId": {
            "type": "string"
        },
        "AnswerMachineDetectionConfig": {
            "type": "object",
            "properties": {
                "enableAnswerMachineDetection": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                },
                "awaitAnswerMachinePrompt": {
                    "$ref": "#/$defs/smithy.api#Boolean"
                }
            }
        },
        "DeleteCampaignRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                }
            }
        },
        "DeleteConnectInstanceConfigRequest": {
            "type": "object",
            "properties": {
                "connectInstanceId": {
                    "$ref": "#/$defs/InstanceId"
                }
            }
        },
        "DeleteInstanceOnboardingJobRequest": {
            "type": "object",
            "properties": {
                "connectInstanceId": {
                    "$ref": "#/$defs/InstanceId"
                }
            }
        },
        "DescribeCampaignResponse": {
            "type": "object",
            "properties": {
                "campaign": {
                    "$ref": "#/$defs/Campaign"
                }
            }
        },
        "Campaign": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                },
                "arn": {
                    "$ref": "#/$defs/CampaignArn"
                },
                "name": {
                    "$ref": "#/$defs/CampaignName"
                },
                "connectInstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "dialerConfig": {
                    "$ref": "#/$defs/DialerConfig"
                },
                "outboundCallConfig": {
                    "$ref": "#/$defs/OutboundCallConfig"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DescribeCampaignRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                }
            }
        },
        "GetCampaignStateResponse": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/CampaignState"
                }
            }
        },
        "CampaignState": {
            "type": "string"
        },
        "GetCampaignStateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                }
            }
        },
        "GetCampaignStateBatchResponse": {
            "type": "object",
            "properties": {
                "successfulRequests": {
                    "$ref": "#/$defs/SuccessfulCampaignStateResponseList"
                },
                "failedRequests": {
                    "$ref": "#/$defs/FailedCampaignStateResponseList"
                }
            }
        },
        "SuccessfulCampaignStateResponseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SuccessfulCampaignStateResponse"
            }
        },
        "SuccessfulCampaignStateResponse": {
            "type": "object",
            "properties": {
                "campaignId": {
                    "$ref": "#/$defs/CampaignId"
                },
                "state": {
                    "$ref": "#/$defs/CampaignState"
                }
            }
        },
        "FailedCampaignStateResponseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FailedCampaignStateResponse"
            }
        },
        "FailedCampaignStateResponse": {
            "type": "object",
            "properties": {
                "campaignId": {
                    "$ref": "#/$defs/CampaignId"
                },
                "failureCode": {
                    "$ref": "#/$defs/GetCampaignStateBatchFailureCode"
                }
            }
        },
        "GetCampaignStateBatchFailureCode": {
            "type": "string"
        },
        "GetCampaignStateBatchRequest": {
            "type": "object",
            "properties": {
                "campaignIds": {
                    "$ref": "#/$defs/CampaignIdList"
                }
            }
        },
        "CampaignIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CampaignId"
            }
        },
        "GetConnectInstanceConfigResponse": {
            "type": "object",
            "properties": {
                "connectInstanceConfig": {
                    "$ref": "#/$defs/InstanceConfig"
                }
            }
        },
        "InstanceConfig": {
            "type": "object",
            "properties": {
                "connectInstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "serviceLinkedRoleArn": {
                    "$ref": "#/$defs/ServiceLinkedRoleArn"
                },
                "encryptionConfig": {
                    "$ref": "#/$defs/EncryptionConfig"
                }
            }
        },
        "ServiceLinkedRoleArn": {
            "type": "string"
        },
        "EncryptionConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "encryptionType": {
                    "$ref": "#/$defs/EncryptionType"
                },
                "keyArn": {
                    "$ref": "#/$defs/EncryptionKey"
                }
            }
        },
        "Enabled": {
            "type": "boolean"
        },
        "EncryptionType": {
            "type": "string"
        },
        "EncryptionKey": {
            "type": "string"
        },
        "GetConnectInstanceConfigRequest": {
            "type": "object",
            "properties": {
                "connectInstanceId": {
                    "$ref": "#/$defs/InstanceId"
                }
            }
        },
        "GetInstanceOnboardingJobStatusResponse": {
            "type": "object",
            "properties": {
                "connectInstanceOnboardingJobStatus": {
                    "$ref": "#/$defs/InstanceOnboardingJobStatus"
                }
            }
        },
        "InstanceOnboardingJobStatus": {
            "type": "object",
            "properties": {
                "connectInstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "status": {
                    "$ref": "#/$defs/InstanceOnboardingJobStatusCode"
                },
                "failureCode": {
                    "$ref": "#/$defs/InstanceOnboardingJobFailureCode"
                }
            }
        },
        "InstanceOnboardingJobStatusCode": {
            "type": "string"
        },
        "InstanceOnboardingJobFailureCode": {
            "type": "string"
        },
        "GetInstanceOnboardingJobStatusRequest": {
            "type": "object",
            "properties": {
                "connectInstanceId": {
                    "$ref": "#/$defs/InstanceId"
                }
            }
        },
        "ListCampaignsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "campaignSummaryList": {
                    "$ref": "#/$defs/CampaignSummaryList"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "CampaignSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CampaignSummary"
            }
        },
        "CampaignSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                },
                "arn": {
                    "$ref": "#/$defs/CampaignArn"
                },
                "name": {
                    "$ref": "#/$defs/CampaignName"
                },
                "connectInstanceId": {
                    "$ref": "#/$defs/InstanceId"
                }
            }
        },
        "ListCampaignsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "filters": {
                    "$ref": "#/$defs/CampaignFilters"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "CampaignFilters": {
            "type": "object",
            "properties": {
                "instanceIdFilter": {
                    "$ref": "#/$defs/InstanceIdFilter"
                }
            }
        },
        "InstanceIdFilter": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/InstanceId"
                },
                "operator": {
                    "$ref": "#/$defs/InstanceIdFilterOperator"
                }
            }
        },
        "InstanceIdFilterOperator": {
            "type": "string"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "PauseCampaignRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                }
            }
        },
        "PutDialRequestBatchResponse": {
            "type": "object",
            "properties": {
                "successfulRequests": {
                    "$ref": "#/$defs/SuccessfulRequestList"
                },
                "failedRequests": {
                    "$ref": "#/$defs/FailedRequestList"
                }
            }
        },
        "SuccessfulRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SuccessfulRequest"
            }
        },
        "SuccessfulRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "id": {
                    "$ref": "#/$defs/DialRequestId"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "DialRequestId": {
            "type": "string"
        },
        "FailedRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FailedRequest"
            }
        },
        "FailedRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "id": {
                    "$ref": "#/$defs/DialRequestId"
                },
                "failureCode": {
                    "$ref": "#/$defs/FailureCode"
                }
            }
        },
        "FailureCode": {
            "type": "string"
        },
        "PutDialRequestBatchRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                },
                "dialRequests": {
                    "$ref": "#/$defs/DialRequestList"
                }
            }
        },
        "DialRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DialRequest"
            }
        },
        "DialRequest": {
            "type": "object",
            "properties": {
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "phoneNumber": {
                    "$ref": "#/$defs/DestinationPhoneNumber"
                },
                "expirationTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                }
            }
        },
        "DestinationPhoneNumber": {
            "type": "string"
        },
        "TimeStamp": {
            "type": "string",
            "format": "date-time"
        },
        "Attributes": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "AttributeValue": {
            "type": "string"
        },
        "ResumeCampaignRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                }
            }
        },
        "StartCampaignRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                }
            }
        },
        "StartInstanceOnboardingJobResponse": {
            "type": "object",
            "properties": {
                "connectInstanceOnboardingJobStatus": {
                    "$ref": "#/$defs/InstanceOnboardingJobStatus"
                }
            }
        },
        "StartInstanceOnboardingJobRequest": {
            "type": "object",
            "properties": {
                "connectInstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "encryptionConfig": {
                    "$ref": "#/$defs/EncryptionConfig"
                }
            }
        },
        "StopCampaignRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateCampaignDialerConfigRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                },
                "dialerConfig": {
                    "$ref": "#/$defs/DialerConfig"
                }
            }
        },
        "UpdateCampaignNameRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                },
                "name": {
                    "$ref": "#/$defs/CampaignName"
                }
            }
        },
        "UpdateCampaignOutboundCallConfigRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/CampaignId"
                },
                "connectContactFlowId": {
                    "$ref": "#/$defs/ContactFlowId"
                },
                "connectSourcePhoneNumber": {
                    "$ref": "#/$defs/SourcePhoneNumber"
                },
                "answerMachineDetectionConfig": {
                    "$ref": "#/$defs/AnswerMachineDetectionConfig"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://connect-campaigns-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://connect-campaigns-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://connect-campaigns.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://connect-campaigns.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}