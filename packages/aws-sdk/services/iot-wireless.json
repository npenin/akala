{
    "name": "iotwireless",
    "commands": [
        {
            "name": "AssociateAwsAccountWithPartnerAccount",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateAwsAccountWithPartnerAccount"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateAwsAccountWithPartnerAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateAwsAccountWithPartnerAccountRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateMulticastGroupWithFuotaTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateMulticastGroupWithFuotaTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateMulticastGroupWithFuotaTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateMulticastGroupWithFuotaTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateWirelessDeviceWithFuotaTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateWirelessDeviceWithFuotaTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateWirelessDeviceWithFuotaTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateWirelessDeviceWithFuotaTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateWirelessDeviceWithMulticastGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateWirelessDeviceWithMulticastGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateWirelessDeviceWithMulticastGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateWirelessDeviceWithMulticastGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateWirelessDeviceWithThing",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateWirelessDeviceWithThing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateWirelessDeviceWithThingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateWirelessDeviceWithThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateWirelessGatewayWithCertificate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateWirelessGatewayWithCertificate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateWirelessGatewayWithCertificateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateWirelessGatewayWithCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateWirelessGatewayWithThing",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateWirelessGatewayWithThing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateWirelessGatewayWithThingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateWirelessGatewayWithThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelMulticastGroupSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelMulticastGroupSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelMulticastGroupSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelMulticastGroupSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDestination",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDestination"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDestinationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDestinationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDeviceProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDeviceProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDeviceProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDeviceProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFuotaTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateFuotaTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFuotaTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFuotaTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateMulticastGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateMulticastGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMulticastGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMulticastGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateNetworkAnalyzerConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateNetworkAnalyzerConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNetworkAnalyzerConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNetworkAnalyzerConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateServiceProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateServiceProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateServiceProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateServiceProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateWirelessDevice",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateWirelessDevice"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateWirelessDeviceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateWirelessDeviceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateWirelessGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateWirelessGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateWirelessGatewayResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateWirelessGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateWirelessGatewayTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateWirelessGatewayTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateWirelessGatewayTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateWirelessGatewayTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateWirelessGatewayTaskDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateWirelessGatewayTaskDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateWirelessGatewayTaskDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateWirelessGatewayTaskDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDestination",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDestination"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDestinationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDestinationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDeviceProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDeviceProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDeviceProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDeviceProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFuotaTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteFuotaTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFuotaTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFuotaTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteMulticastGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteMulticastGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMulticastGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMulticastGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNetworkAnalyzerConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteNetworkAnalyzerConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNetworkAnalyzerConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNetworkAnalyzerConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteQueuedMessages",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteQueuedMessages"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteQueuedMessagesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteQueuedMessagesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteServiceProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteServiceProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteServiceProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteServiceProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteWirelessDevice",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteWirelessDevice"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWirelessDeviceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteWirelessDeviceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteWirelessDeviceImportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteWirelessDeviceImportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWirelessDeviceImportTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteWirelessDeviceImportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteWirelessGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteWirelessGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWirelessGatewayResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteWirelessGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteWirelessGatewayTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteWirelessGatewayTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWirelessGatewayTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteWirelessGatewayTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteWirelessGatewayTaskDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteWirelessGatewayTaskDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWirelessGatewayTaskDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteWirelessGatewayTaskDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterWirelessDevice",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeregisterWirelessDevice"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterWirelessDeviceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterWirelessDeviceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateAwsAccountFromPartnerAccount",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateAwsAccountFromPartnerAccount"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateAwsAccountFromPartnerAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateAwsAccountFromPartnerAccountRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateMulticastGroupFromFuotaTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateMulticastGroupFromFuotaTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateMulticastGroupFromFuotaTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateMulticastGroupFromFuotaTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateWirelessDeviceFromFuotaTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateWirelessDeviceFromFuotaTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateWirelessDeviceFromFuotaTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateWirelessDeviceFromFuotaTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateWirelessDeviceFromMulticastGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateWirelessDeviceFromMulticastGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateWirelessDeviceFromMulticastGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateWirelessDeviceFromMulticastGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateWirelessDeviceFromThing",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateWirelessDeviceFromThing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateWirelessDeviceFromThingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateWirelessDeviceFromThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateWirelessGatewayFromCertificate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateWirelessGatewayFromCertificate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateWirelessGatewayFromCertificateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateWirelessGatewayFromCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateWirelessGatewayFromThing",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateWirelessGatewayFromThing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateWirelessGatewayFromThingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateWirelessGatewayFromThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDestination",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDestination"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDestinationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDestinationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDeviceProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDeviceProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDeviceProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDeviceProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEventConfigurationByResourceTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetEventConfigurationByResourceTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEventConfigurationByResourceTypesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEventConfigurationByResourceTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFuotaTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFuotaTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFuotaTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFuotaTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLogLevelsByResourceTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetLogLevelsByResourceTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLogLevelsByResourceTypesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLogLevelsByResourceTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMetricConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMetricConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMetricConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMetricConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMetrics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMetrics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMetricsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMulticastGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMulticastGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMulticastGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMulticastGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMulticastGroupSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMulticastGroupSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMulticastGroupSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMulticastGroupSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetNetworkAnalyzerConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetNetworkAnalyzerConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetNetworkAnalyzerConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetNetworkAnalyzerConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPartnerAccount",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPartnerAccount"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPartnerAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPartnerAccountRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPosition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPosition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPositionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPositionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPositionConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPositionConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPositionConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPositionConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPositionEstimate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPositionEstimate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPositionEstimateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPositionEstimateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourceEventConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourceEventConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourceEventConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourceEventConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourceLogLevel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourceLogLevel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourceLogLevelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourceLogLevelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourcePosition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourcePosition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcePositionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcePositionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetServiceEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetServiceEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetServiceEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetServiceEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetServiceProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetServiceProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetServiceProfileResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetServiceProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWirelessDevice",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWirelessDevice"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWirelessDeviceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWirelessDeviceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWirelessDeviceImportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWirelessDeviceImportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWirelessDeviceImportTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWirelessDeviceImportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWirelessDeviceStatistics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWirelessDeviceStatistics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWirelessDeviceStatisticsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWirelessDeviceStatisticsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWirelessGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWirelessGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWirelessGatewayResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWirelessGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWirelessGatewayCertificate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWirelessGatewayCertificate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWirelessGatewayCertificateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWirelessGatewayCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWirelessGatewayFirmwareInformation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWirelessGatewayFirmwareInformation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWirelessGatewayFirmwareInformationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWirelessGatewayFirmwareInformationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWirelessGatewayStatistics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWirelessGatewayStatistics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWirelessGatewayStatisticsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWirelessGatewayStatisticsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWirelessGatewayTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWirelessGatewayTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWirelessGatewayTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWirelessGatewayTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetWirelessGatewayTaskDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetWirelessGatewayTaskDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWirelessGatewayTaskDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetWirelessGatewayTaskDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDestinations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDestinations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDestinationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDestinationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDeviceProfiles",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDeviceProfiles"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDeviceProfilesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDeviceProfilesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDevicesForWirelessDeviceImportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDevicesForWirelessDeviceImportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDevicesForWirelessDeviceImportTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDevicesForWirelessDeviceImportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListEventConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListEventConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEventConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEventConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFuotaTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFuotaTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFuotaTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFuotaTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMulticastGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMulticastGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMulticastGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMulticastGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMulticastGroupsByFuotaTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMulticastGroupsByFuotaTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMulticastGroupsByFuotaTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMulticastGroupsByFuotaTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListNetworkAnalyzerConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListNetworkAnalyzerConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNetworkAnalyzerConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNetworkAnalyzerConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPartnerAccounts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListPartnerAccounts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPartnerAccountsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPartnerAccountsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPositionConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListPositionConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPositionConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPositionConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListQueuedMessages",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListQueuedMessages"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListQueuedMessagesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListQueuedMessagesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServiceProfiles",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListServiceProfiles"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServiceProfilesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListServiceProfilesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListWirelessDeviceImportTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListWirelessDeviceImportTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListWirelessDeviceImportTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListWirelessDeviceImportTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListWirelessDevices",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListWirelessDevices"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListWirelessDevicesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListWirelessDevicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListWirelessGateways",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListWirelessGateways"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListWirelessGatewaysResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListWirelessGatewaysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListWirelessGatewayTaskDefinitions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListWirelessGatewayTaskDefinitions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListWirelessGatewayTaskDefinitionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListWirelessGatewayTaskDefinitionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutPositionConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutPositionConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutPositionConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutPositionConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutResourceLogLevel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutResourceLogLevel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutResourceLogLevelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutResourceLogLevelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetAllResourceLogLevels",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResetAllResourceLogLevels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetAllResourceLogLevelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetAllResourceLogLevelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetResourceLogLevel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ResetResourceLogLevel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetResourceLogLevelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetResourceLogLevelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SendDataToMulticastGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SendDataToMulticastGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendDataToMulticastGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendDataToMulticastGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SendDataToWirelessDevice",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SendDataToWirelessDevice"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendDataToWirelessDeviceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendDataToWirelessDeviceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartBulkAssociateWirelessDeviceWithMulticastGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartBulkAssociateWirelessDeviceWithMulticastGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartBulkAssociateWirelessDeviceWithMulticastGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartBulkAssociateWirelessDeviceWithMulticastGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartBulkDisassociateWirelessDeviceFromMulticastGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartBulkDisassociateWirelessDeviceFromMulticastGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartBulkDisassociateWirelessDeviceFromMulticastGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartBulkDisassociateWirelessDeviceFromMulticastGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartFuotaTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartFuotaTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartFuotaTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartFuotaTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartMulticastGroupSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartMulticastGroupSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMulticastGroupSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartMulticastGroupSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartSingleWirelessDeviceImportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartSingleWirelessDeviceImportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartSingleWirelessDeviceImportTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartSingleWirelessDeviceImportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartWirelessDeviceImportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartWirelessDeviceImportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartWirelessDeviceImportTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartWirelessDeviceImportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TestWirelessDevice",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TestWirelessDevice"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestWirelessDeviceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestWirelessDeviceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDestination",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDestination"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDestinationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDestinationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateEventConfigurationByResourceTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateEventConfigurationByResourceTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEventConfigurationByResourceTypesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEventConfigurationByResourceTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFuotaTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateFuotaTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFuotaTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFuotaTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateLogLevelsByResourceTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateLogLevelsByResourceTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateLogLevelsByResourceTypesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateLogLevelsByResourceTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateMetricConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateMetricConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMetricConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMetricConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateMulticastGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateMulticastGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMulticastGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMulticastGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateNetworkAnalyzerConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateNetworkAnalyzerConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateNetworkAnalyzerConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateNetworkAnalyzerConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePartnerAccount",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdatePartnerAccount"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePartnerAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePartnerAccountRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePosition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdatePosition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePositionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePositionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateResourceEventConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateResourceEventConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResourceEventConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResourceEventConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateResourcePosition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateResourcePosition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResourcePositionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResourcePositionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateWirelessDevice",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateWirelessDevice"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateWirelessDeviceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateWirelessDeviceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateWirelessDeviceImportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateWirelessDeviceImportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateWirelessDeviceImportTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateWirelessDeviceImportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateWirelessGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateWirelessGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateWirelessGatewayResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateWirelessGatewayRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateAwsAccountWithPartnerAccountResponse": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkAccountInfo"
                },
                "Arn": {
                    "$ref": "#/$defs/PartnerAccountArn"
                }
            }
        },
        "SidewalkAccountInfo": {
            "type": "object",
            "properties": {
                "AmazonId": {
                    "$ref": "#/$defs/AmazonId"
                },
                "AppServerPrivateKey": {
                    "$ref": "#/$defs/AppServerPrivateKey"
                }
            }
        },
        "AmazonId": {
            "type": "string"
        },
        "AppServerPrivateKey": {
            "type": "string"
        },
        "PartnerAccountArn": {
            "type": "string"
        },
        "AssociateAwsAccountWithPartnerAccountRequest": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkAccountInfo"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ClientRequestToken": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "AssociateMulticastGroupWithFuotaTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateMulticastGroupWithFuotaTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                },
                "MulticastGroupId": {
                    "$ref": "#/$defs/MulticastGroupId"
                }
            }
        },
        "FuotaTaskId": {
            "type": "string"
        },
        "MulticastGroupId": {
            "type": "string"
        },
        "AssociateWirelessDeviceWithFuotaTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateWirelessDeviceWithFuotaTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                },
                "WirelessDeviceId": {
                    "$ref": "#/$defs/WirelessDeviceId"
                }
            }
        },
        "WirelessDeviceId": {
            "type": "string"
        },
        "AssociateWirelessDeviceWithMulticastGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateWirelessDeviceWithMulticastGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                },
                "WirelessDeviceId": {
                    "$ref": "#/$defs/WirelessDeviceId"
                }
            }
        },
        "AssociateWirelessDeviceWithThingResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateWirelessDeviceWithThingRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                },
                "ThingArn": {
                    "$ref": "#/$defs/ThingArn"
                }
            }
        },
        "ThingArn": {
            "type": "string"
        },
        "AssociateWirelessGatewayWithCertificateResponse": {
            "type": "object",
            "properties": {
                "IotCertificateId": {
                    "$ref": "#/$defs/IotCertificateId"
                }
            }
        },
        "IotCertificateId": {
            "type": "string"
        },
        "AssociateWirelessGatewayWithCertificateRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                },
                "IotCertificateId": {
                    "$ref": "#/$defs/IotCertificateId"
                }
            }
        },
        "WirelessGatewayId": {
            "type": "string"
        },
        "AssociateWirelessGatewayWithThingResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateWirelessGatewayWithThingRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                },
                "ThingArn": {
                    "$ref": "#/$defs/ThingArn"
                }
            }
        },
        "CancelMulticastGroupSessionResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelMulticastGroupSessionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                }
            }
        },
        "CreateDestinationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/DestinationArn"
                },
                "Name": {
                    "$ref": "#/$defs/DestinationName"
                }
            }
        },
        "DestinationArn": {
            "type": "string"
        },
        "DestinationName": {
            "type": "string"
        },
        "CreateDestinationRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DestinationName"
                },
                "ExpressionType": {
                    "$ref": "#/$defs/ExpressionType"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "ExpressionType": {
            "enum": [
                "RuleName",
                "MqttTopic"
            ]
        },
        "Expression": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "CreateDeviceProfileResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/DeviceProfileArn"
                },
                "Id": {
                    "$ref": "#/$defs/DeviceProfileId"
                }
            }
        },
        "DeviceProfileArn": {
            "type": "string"
        },
        "DeviceProfileId": {
            "type": "string"
        },
        "CreateDeviceProfileRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DeviceProfileName"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANDeviceProfile"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkCreateDeviceProfile"
                }
            }
        },
        "DeviceProfileName": {
            "type": "string"
        },
        "LoRaWANDeviceProfile": {
            "type": "object",
            "properties": {
                "SupportsClassB": {
                    "$ref": "#/$defs/SupportsClassB"
                },
                "ClassBTimeout": {
                    "$ref": "#/$defs/ClassBTimeout"
                },
                "PingSlotPeriod": {
                    "$ref": "#/$defs/PingSlotPeriod"
                },
                "PingSlotDr": {
                    "$ref": "#/$defs/PingSlotDr"
                },
                "PingSlotFreq": {
                    "$ref": "#/$defs/PingSlotFreq"
                },
                "SupportsClassC": {
                    "$ref": "#/$defs/SupportsClassC"
                },
                "ClassCTimeout": {
                    "$ref": "#/$defs/ClassCTimeout"
                },
                "MacVersion": {
                    "$ref": "#/$defs/MacVersion"
                },
                "RegParamsRevision": {
                    "$ref": "#/$defs/RegParamsRevision"
                },
                "RxDelay1": {
                    "$ref": "#/$defs/RxDelay1"
                },
                "RxDrOffset1": {
                    "$ref": "#/$defs/RxDrOffset1"
                },
                "RxDataRate2": {
                    "$ref": "#/$defs/RxDataRate2"
                },
                "RxFreq2": {
                    "$ref": "#/$defs/RxFreq2"
                },
                "FactoryPresetFreqsList": {
                    "$ref": "#/$defs/FactoryPresetFreqsList"
                },
                "MaxEirp": {
                    "$ref": "#/$defs/MaxEirp"
                },
                "MaxDutyCycle": {
                    "$ref": "#/$defs/MaxDutyCycle"
                },
                "RfRegion": {
                    "$ref": "#/$defs/RfRegion"
                },
                "SupportsJoin": {
                    "$ref": "#/$defs/SupportsJoin"
                },
                "Supports32BitFCnt": {
                    "$ref": "#/$defs/Supports32BitFCnt"
                }
            }
        },
        "SupportsClassB": {
            "type": "boolean"
        },
        "ClassBTimeout": {
            "type": "integer",
            "format": "int32"
        },
        "PingSlotPeriod": {
            "type": "integer",
            "format": "int32"
        },
        "PingSlotDr": {
            "type": "integer",
            "format": "int32"
        },
        "PingSlotFreq": {
            "type": "integer",
            "format": "int32"
        },
        "SupportsClassC": {
            "type": "boolean"
        },
        "ClassCTimeout": {
            "type": "integer",
            "format": "int32"
        },
        "MacVersion": {
            "type": "string"
        },
        "RegParamsRevision": {
            "type": "string"
        },
        "RxDelay1": {
            "type": "integer",
            "format": "int32"
        },
        "RxDrOffset1": {
            "type": "integer",
            "format": "int32"
        },
        "RxDataRate2": {
            "type": "integer",
            "format": "int32"
        },
        "RxFreq2": {
            "type": "integer",
            "format": "int32"
        },
        "FactoryPresetFreqsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PresetFreq"
            }
        },
        "PresetFreq": {
            "type": "integer",
            "format": "int32"
        },
        "MaxEirp": {
            "type": "integer",
            "format": "int32"
        },
        "MaxDutyCycle": {
            "type": "integer",
            "format": "int32"
        },
        "RfRegion": {
            "type": "string"
        },
        "SupportsJoin": {
            "type": "boolean"
        },
        "Supports32BitFCnt": {
            "type": "boolean"
        },
        "SidewalkCreateDeviceProfile": {
            "type": "object",
            "properties": {}
        },
        "CreateFuotaTaskResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/FuotaTaskArn"
                },
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                }
            }
        },
        "FuotaTaskArn": {
            "type": "string"
        },
        "CreateFuotaTaskRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FuotaTaskName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANFuotaTask"
                },
                "FirmwareUpdateImage": {
                    "$ref": "#/$defs/FirmwareUpdateImage"
                },
                "FirmwareUpdateRole": {
                    "$ref": "#/$defs/FirmwareUpdateRole"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "RedundancyPercent": {
                    "$ref": "#/$defs/RedundancyPercent"
                },
                "FragmentSizeBytes": {
                    "$ref": "#/$defs/FragmentSizeBytes"
                },
                "FragmentIntervalMS": {
                    "$ref": "#/$defs/FragmentIntervalMS"
                }
            }
        },
        "FuotaTaskName": {
            "type": "string"
        },
        "LoRaWANFuotaTask": {
            "type": "object",
            "properties": {
                "RfRegion": {
                    "$ref": "#/$defs/SupportedRfRegion"
                }
            }
        },
        "SupportedRfRegion": {
            "enum": [
                "EU868",
                "US915",
                "AU915",
                "AS923_1",
                "AS923_2",
                "AS923_3",
                "AS923_4",
                "EU433",
                "CN470",
                "CN779",
                "RU864",
                "KR920",
                "IN865"
            ]
        },
        "FirmwareUpdateImage": {
            "type": "string"
        },
        "FirmwareUpdateRole": {
            "type": "string"
        },
        "RedundancyPercent": {
            "type": "integer",
            "format": "int32"
        },
        "FragmentSizeBytes": {
            "type": "integer",
            "format": "int32"
        },
        "FragmentIntervalMS": {
            "type": "integer",
            "format": "int32"
        },
        "CreateMulticastGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/MulticastGroupArn"
                },
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                }
            }
        },
        "MulticastGroupArn": {
            "type": "string"
        },
        "CreateMulticastGroupRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/MulticastGroupName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANMulticast"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "MulticastGroupName": {
            "type": "string"
        },
        "LoRaWANMulticast": {
            "type": "object",
            "properties": {
                "RfRegion": {
                    "$ref": "#/$defs/SupportedRfRegion"
                },
                "DlClass": {
                    "$ref": "#/$defs/DlClass"
                }
            }
        },
        "DlClass": {
            "enum": [
                "ClassB",
                "ClassC"
            ]
        },
        "CreateNetworkAnalyzerConfigurationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationArn"
                },
                "Name": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationName"
                }
            }
        },
        "NetworkAnalyzerConfigurationArn": {
            "type": "string"
        },
        "NetworkAnalyzerConfigurationName": {
            "type": "string"
        },
        "CreateNetworkAnalyzerConfigurationRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationName"
                },
                "TraceContent": {
                    "$ref": "#/$defs/TraceContent"
                },
                "WirelessDevices": {
                    "$ref": "#/$defs/WirelessDeviceList"
                },
                "WirelessGateways": {
                    "$ref": "#/$defs/WirelessGatewayList"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "MulticastGroups": {
                    "$ref": "#/$defs/NetworkAnalyzerMulticastGroupList"
                }
            }
        },
        "TraceContent": {
            "type": "object",
            "properties": {
                "WirelessDeviceFrameInfo": {
                    "$ref": "#/$defs/WirelessDeviceFrameInfo"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "MulticastFrameInfo": {
                    "$ref": "#/$defs/MulticastFrameInfo"
                }
            }
        },
        "WirelessDeviceFrameInfo": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "LogLevel": {
            "enum": [
                "INFO",
                "ERROR",
                "DISABLED"
            ]
        },
        "MulticastFrameInfo": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "WirelessDeviceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WirelessDeviceId"
            }
        },
        "WirelessGatewayList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WirelessGatewayId"
            }
        },
        "NetworkAnalyzerMulticastGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MulticastGroupId"
            }
        },
        "CreateServiceProfileResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/ServiceProfileArn"
                },
                "Id": {
                    "$ref": "#/$defs/ServiceProfileId"
                }
            }
        },
        "ServiceProfileArn": {
            "type": "string"
        },
        "ServiceProfileId": {
            "type": "string"
        },
        "CreateServiceProfileRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ServiceProfileName"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANServiceProfile"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "ServiceProfileName": {
            "type": "string"
        },
        "LoRaWANServiceProfile": {
            "type": "object",
            "properties": {
                "AddGwMetadata": {
                    "$ref": "#/$defs/AddGwMetadata"
                },
                "DrMin": {
                    "$ref": "#/$defs/DrMinBox"
                },
                "DrMax": {
                    "$ref": "#/$defs/DrMaxBox"
                },
                "PrAllowed": {
                    "$ref": "#/$defs/PrAllowed"
                },
                "RaAllowed": {
                    "$ref": "#/$defs/RaAllowed"
                }
            }
        },
        "AddGwMetadata": {
            "type": "boolean"
        },
        "DrMinBox": {
            "type": "integer",
            "format": "int32"
        },
        "DrMaxBox": {
            "type": "integer",
            "format": "int32"
        },
        "PrAllowed": {
            "type": "boolean"
        },
        "RaAllowed": {
            "type": "boolean"
        },
        "CreateWirelessDeviceResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/WirelessDeviceArn"
                },
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                }
            }
        },
        "WirelessDeviceArn": {
            "type": "string"
        },
        "CreateWirelessDeviceRequest": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/WirelessDeviceType"
                },
                "Name": {
                    "$ref": "#/$defs/WirelessDeviceName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANDevice"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "Positioning": {
                    "$ref": "#/$defs/PositioningConfigStatus"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkCreateWirelessDevice"
                }
            }
        },
        "WirelessDeviceType": {
            "enum": [
                "Sidewalk",
                "LoRaWAN"
            ]
        },
        "WirelessDeviceName": {
            "type": "string"
        },
        "LoRaWANDevice": {
            "type": "object",
            "properties": {
                "DevEui": {
                    "$ref": "#/$defs/DevEui"
                },
                "DeviceProfileId": {
                    "$ref": "#/$defs/DeviceProfileId"
                },
                "ServiceProfileId": {
                    "$ref": "#/$defs/ServiceProfileId"
                },
                "OtaaV1_1": {
                    "$ref": "#/$defs/OtaaV1_1"
                },
                "OtaaV1_0_x": {
                    "$ref": "#/$defs/OtaaV1_0_x"
                },
                "AbpV1_1": {
                    "$ref": "#/$defs/AbpV1_1"
                },
                "AbpV1_0_x": {
                    "$ref": "#/$defs/AbpV1_0_x"
                },
                "FPorts": {
                    "$ref": "#/$defs/FPorts"
                }
            }
        },
        "DevEui": {
            "type": "string"
        },
        "OtaaV1_1": {
            "type": "object",
            "properties": {
                "AppKey": {
                    "$ref": "#/$defs/AppKey"
                },
                "NwkKey": {
                    "$ref": "#/$defs/NwkKey"
                },
                "JoinEui": {
                    "$ref": "#/$defs/JoinEui"
                }
            }
        },
        "AppKey": {
            "type": "string"
        },
        "NwkKey": {
            "type": "string"
        },
        "JoinEui": {
            "type": "string"
        },
        "OtaaV1_0_x": {
            "type": "object",
            "properties": {
                "AppKey": {
                    "$ref": "#/$defs/AppKey"
                },
                "AppEui": {
                    "$ref": "#/$defs/AppEui"
                },
                "JoinEui": {
                    "$ref": "#/$defs/JoinEui"
                },
                "GenAppKey": {
                    "$ref": "#/$defs/GenAppKey"
                }
            }
        },
        "AppEui": {
            "type": "string"
        },
        "GenAppKey": {
            "type": "string"
        },
        "AbpV1_1": {
            "type": "object",
            "properties": {
                "DevAddr": {
                    "$ref": "#/$defs/DevAddr"
                },
                "SessionKeys": {
                    "$ref": "#/$defs/SessionKeysAbpV1_1"
                },
                "FCntStart": {
                    "$ref": "#/$defs/FCntStart"
                }
            }
        },
        "DevAddr": {
            "type": "string"
        },
        "SessionKeysAbpV1_1": {
            "type": "object",
            "properties": {
                "FNwkSIntKey": {
                    "$ref": "#/$defs/FNwkSIntKey"
                },
                "SNwkSIntKey": {
                    "$ref": "#/$defs/SNwkSIntKey"
                },
                "NwkSEncKey": {
                    "$ref": "#/$defs/NwkSEncKey"
                },
                "AppSKey": {
                    "$ref": "#/$defs/AppSKey"
                }
            }
        },
        "FNwkSIntKey": {
            "type": "string"
        },
        "SNwkSIntKey": {
            "type": "string"
        },
        "NwkSEncKey": {
            "type": "string"
        },
        "AppSKey": {
            "type": "string"
        },
        "FCntStart": {
            "type": "integer",
            "format": "int32"
        },
        "AbpV1_0_x": {
            "type": "object",
            "properties": {
                "DevAddr": {
                    "$ref": "#/$defs/DevAddr"
                },
                "SessionKeys": {
                    "$ref": "#/$defs/SessionKeysAbpV1_0_x"
                },
                "FCntStart": {
                    "$ref": "#/$defs/FCntStart"
                }
            }
        },
        "SessionKeysAbpV1_0_x": {
            "type": "object",
            "properties": {
                "NwkSKey": {
                    "$ref": "#/$defs/NwkSKey"
                },
                "AppSKey": {
                    "$ref": "#/$defs/AppSKey"
                }
            }
        },
        "NwkSKey": {
            "type": "string"
        },
        "FPorts": {
            "type": "object",
            "properties": {
                "Fuota": {
                    "$ref": "#/$defs/FPort"
                },
                "Multicast": {
                    "$ref": "#/$defs/FPort"
                },
                "ClockSync": {
                    "$ref": "#/$defs/FPort"
                },
                "Positioning": {
                    "$ref": "#/$defs/Positioning"
                },
                "Applications": {
                    "$ref": "#/$defs/Applications"
                }
            }
        },
        "FPort": {
            "type": "integer",
            "format": "int32"
        },
        "Positioning": {
            "type": "object",
            "properties": {
                "ClockSync": {
                    "$ref": "#/$defs/FPort"
                },
                "Stream": {
                    "$ref": "#/$defs/FPort"
                },
                "Gnss": {
                    "$ref": "#/$defs/FPort"
                }
            }
        },
        "Applications": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationConfig"
            }
        },
        "ApplicationConfig": {
            "type": "object",
            "properties": {
                "FPort": {
                    "$ref": "#/$defs/FPort"
                },
                "Type": {
                    "$ref": "#/$defs/ApplicationConfigType"
                },
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                }
            }
        },
        "ApplicationConfigType": {
            "enum": [
                "SemtechGeoLocation"
            ]
        },
        "PositioningConfigStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "SidewalkCreateWirelessDevice": {
            "type": "object",
            "properties": {
                "DeviceProfileId": {
                    "$ref": "#/$defs/DeviceProfileId"
                }
            }
        },
        "CreateWirelessGatewayResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/WirelessGatewayArn"
                },
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                }
            }
        },
        "WirelessGatewayArn": {
            "type": "string"
        },
        "CreateWirelessGatewayRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/WirelessGatewayName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANGateway"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "WirelessGatewayName": {
            "type": "string"
        },
        "LoRaWANGateway": {
            "type": "object",
            "properties": {
                "GatewayEui": {
                    "$ref": "#/$defs/GatewayEui"
                },
                "RfRegion": {
                    "$ref": "#/$defs/RfRegion"
                },
                "JoinEuiFilters": {
                    "$ref": "#/$defs/JoinEuiFilters"
                },
                "NetIdFilters": {
                    "$ref": "#/$defs/NetIdFilters"
                },
                "SubBands": {
                    "$ref": "#/$defs/SubBands"
                },
                "Beaconing": {
                    "$ref": "#/$defs/Beaconing"
                },
                "MaxEirp": {
                    "$ref": "#/$defs/GatewayMaxEirp"
                }
            }
        },
        "GatewayEui": {
            "type": "string"
        },
        "JoinEuiFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JoinEuiRange"
            }
        },
        "JoinEuiRange": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JoinEui"
            }
        },
        "NetIdFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetId"
            }
        },
        "NetId": {
            "type": "string"
        },
        "SubBands": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubBand"
            }
        },
        "SubBand": {
            "type": "integer",
            "format": "int32"
        },
        "Beaconing": {
            "type": "object",
            "properties": {
                "DataRate": {
                    "$ref": "#/$defs/BeaconingDataRate"
                },
                "Frequencies": {
                    "$ref": "#/$defs/BeaconingFrequencies"
                }
            }
        },
        "BeaconingDataRate": {
            "type": "integer",
            "format": "int32"
        },
        "BeaconingFrequencies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BeaconingFrequency"
            }
        },
        "BeaconingFrequency": {
            "type": "integer",
            "format": "int32"
        },
        "GatewayMaxEirp": {
            "type": "number",
            "format": "float"
        },
        "CreateWirelessGatewayTaskResponse": {
            "type": "object",
            "properties": {
                "WirelessGatewayTaskDefinitionId": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionId"
                },
                "Status": {
                    "$ref": "#/$defs/WirelessGatewayTaskStatus"
                }
            }
        },
        "WirelessGatewayTaskDefinitionId": {
            "type": "string"
        },
        "WirelessGatewayTaskStatus": {
            "enum": [
                "PENDING",
                "IN_PROGRESS",
                "FIRST_RETRY",
                "SECOND_RETRY",
                "COMPLETED",
                "FAILED"
            ]
        },
        "CreateWirelessGatewayTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                },
                "WirelessGatewayTaskDefinitionId": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionId"
                }
            }
        },
        "CreateWirelessGatewayTaskDefinitionResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionId"
                },
                "Arn": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionArn"
                }
            }
        },
        "WirelessGatewayTaskDefinitionArn": {
            "type": "string"
        },
        "CreateWirelessGatewayTaskDefinitionRequest": {
            "type": "object",
            "properties": {
                "AutoCreateTasks": {
                    "$ref": "#/$defs/AutoCreateTasks"
                },
                "Name": {
                    "$ref": "#/$defs/WirelessGatewayTaskName"
                },
                "Update": {
                    "$ref": "#/$defs/UpdateWirelessGatewayTaskCreate"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "AutoCreateTasks": {
            "type": "boolean"
        },
        "WirelessGatewayTaskName": {
            "type": "string"
        },
        "UpdateWirelessGatewayTaskCreate": {
            "type": "object",
            "properties": {
                "UpdateDataSource": {
                    "$ref": "#/$defs/UpdateDataSource"
                },
                "UpdateDataRole": {
                    "$ref": "#/$defs/UpdateDataSource"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANUpdateGatewayTaskCreate"
                }
            }
        },
        "UpdateDataSource": {
            "type": "string"
        },
        "LoRaWANUpdateGatewayTaskCreate": {
            "type": "object",
            "properties": {
                "UpdateSignature": {
                    "$ref": "#/$defs/UpdateSignature"
                },
                "SigKeyCrc": {
                    "$ref": "#/$defs/Crc"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/LoRaWANGatewayVersion"
                },
                "UpdateVersion": {
                    "$ref": "#/$defs/LoRaWANGatewayVersion"
                }
            }
        },
        "UpdateSignature": {
            "type": "string"
        },
        "Crc": {
            "type": "integer",
            "format": "int64"
        },
        "LoRaWANGatewayVersion": {
            "type": "object",
            "properties": {
                "PackageVersion": {
                    "$ref": "#/$defs/PackageVersion"
                },
                "Model": {
                    "$ref": "#/$defs/Model"
                },
                "Station": {
                    "$ref": "#/$defs/Station"
                }
            }
        },
        "PackageVersion": {
            "type": "string"
        },
        "Model": {
            "type": "string"
        },
        "Station": {
            "type": "string"
        },
        "DeleteDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDestinationRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DestinationName"
                }
            }
        },
        "DeleteDeviceProfileResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDeviceProfileRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/DeviceProfileId"
                }
            }
        },
        "DeleteFuotaTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteFuotaTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                }
            }
        },
        "DeleteMulticastGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteMulticastGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                }
            }
        },
        "DeleteNetworkAnalyzerConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteNetworkAnalyzerConfigurationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationName": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationName"
                }
            }
        },
        "DeleteQueuedMessagesResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteQueuedMessagesRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                },
                "MessageId": {
                    "$ref": "#/$defs/MessageId"
                },
                "WirelessDeviceType": {
                    "$ref": "#/$defs/WirelessDeviceType"
                }
            }
        },
        "MessageId": {
            "type": "string"
        },
        "DeleteServiceProfileResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteServiceProfileRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ServiceProfileId"
                }
            }
        },
        "DeleteWirelessDeviceResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteWirelessDeviceRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                }
            }
        },
        "DeleteWirelessDeviceImportTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteWirelessDeviceImportTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ImportTaskId"
                }
            }
        },
        "ImportTaskId": {
            "type": "string"
        },
        "DeleteWirelessGatewayResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteWirelessGatewayRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                }
            }
        },
        "DeleteWirelessGatewayTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteWirelessGatewayTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                }
            }
        },
        "DeleteWirelessGatewayTaskDefinitionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteWirelessGatewayTaskDefinitionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionId"
                }
            }
        },
        "DeregisterWirelessDeviceResponse": {
            "type": "object",
            "properties": {}
        },
        "DeregisterWirelessDeviceRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "WirelessDeviceType": {
                    "$ref": "#/$defs/WirelessDeviceType"
                }
            }
        },
        "Identifier": {
            "type": "string"
        },
        "DisassociateAwsAccountFromPartnerAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateAwsAccountFromPartnerAccountRequest": {
            "type": "object",
            "properties": {
                "PartnerAccountId": {
                    "$ref": "#/$defs/PartnerAccountId"
                },
                "PartnerType": {
                    "$ref": "#/$defs/PartnerType"
                }
            }
        },
        "PartnerAccountId": {
            "type": "string"
        },
        "PartnerType": {
            "enum": [
                "Sidewalk"
            ]
        },
        "DisassociateMulticastGroupFromFuotaTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateMulticastGroupFromFuotaTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                },
                "MulticastGroupId": {
                    "$ref": "#/$defs/MulticastGroupId"
                }
            }
        },
        "DisassociateWirelessDeviceFromFuotaTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateWirelessDeviceFromFuotaTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                },
                "WirelessDeviceId": {
                    "$ref": "#/$defs/WirelessDeviceId"
                }
            }
        },
        "DisassociateWirelessDeviceFromMulticastGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateWirelessDeviceFromMulticastGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                },
                "WirelessDeviceId": {
                    "$ref": "#/$defs/WirelessDeviceId"
                }
            }
        },
        "DisassociateWirelessDeviceFromThingResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateWirelessDeviceFromThingRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                }
            }
        },
        "DisassociateWirelessGatewayFromCertificateResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateWirelessGatewayFromCertificateRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                }
            }
        },
        "DisassociateWirelessGatewayFromThingResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateWirelessGatewayFromThingRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                }
            }
        },
        "GetDestinationResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/DestinationArn"
                },
                "Name": {
                    "$ref": "#/$defs/DestinationName"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                },
                "ExpressionType": {
                    "$ref": "#/$defs/ExpressionType"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "GetDestinationRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DestinationName"
                }
            }
        },
        "GetDeviceProfileResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/DeviceProfileArn"
                },
                "Name": {
                    "$ref": "#/$defs/DeviceProfileName"
                },
                "Id": {
                    "$ref": "#/$defs/DeviceProfileId"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANDeviceProfile"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkGetDeviceProfile"
                }
            }
        },
        "SidewalkGetDeviceProfile": {
            "type": "object",
            "properties": {
                "ApplicationServerPublicKey": {
                    "$ref": "#/$defs/ApplicationServerPublicKey"
                },
                "QualificationStatus": {
                    "$ref": "#/$defs/QualificationStatus"
                },
                "DakCertificateMetadata": {
                    "$ref": "#/$defs/DakCertificateMetadataList"
                }
            }
        },
        "ApplicationServerPublicKey": {
            "type": "string"
        },
        "QualificationStatus": {
            "type": "boolean"
        },
        "DakCertificateMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DakCertificateMetadata"
            }
        },
        "DakCertificateMetadata": {
            "type": "object",
            "properties": {
                "CertificateId": {
                    "$ref": "#/$defs/DakCertificateId"
                },
                "MaxAllowedSignature": {
                    "$ref": "#/$defs/MaxAllowedSignature"
                },
                "FactorySupport": {
                    "$ref": "#/$defs/FactorySupport"
                },
                "ApId": {
                    "$ref": "#/$defs/ApId"
                },
                "DeviceTypeId": {
                    "$ref": "#/$defs/DeviceTypeId"
                }
            }
        },
        "DakCertificateId": {
            "type": "string"
        },
        "MaxAllowedSignature": {
            "type": "integer",
            "format": "int32"
        },
        "FactorySupport": {
            "type": "boolean"
        },
        "ApId": {
            "type": "string"
        },
        "DeviceTypeId": {
            "type": "string"
        },
        "GetDeviceProfileRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/DeviceProfileId"
                }
            }
        },
        "GetEventConfigurationByResourceTypesResponse": {
            "type": "object",
            "properties": {
                "DeviceRegistrationState": {
                    "$ref": "#/$defs/DeviceRegistrationStateResourceTypeEventConfiguration"
                },
                "Proximity": {
                    "$ref": "#/$defs/ProximityResourceTypeEventConfiguration"
                },
                "Join": {
                    "$ref": "#/$defs/JoinResourceTypeEventConfiguration"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/ConnectionStatusResourceTypeEventConfiguration"
                },
                "MessageDeliveryStatus": {
                    "$ref": "#/$defs/MessageDeliveryStatusResourceTypeEventConfiguration"
                }
            }
        },
        "DeviceRegistrationStateResourceTypeEventConfiguration": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkResourceTypeEventConfiguration"
                }
            }
        },
        "SidewalkResourceTypeEventConfiguration": {
            "type": "object",
            "properties": {
                "WirelessDeviceEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "EventNotificationTopicStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "ProximityResourceTypeEventConfiguration": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkResourceTypeEventConfiguration"
                }
            }
        },
        "JoinResourceTypeEventConfiguration": {
            "type": "object",
            "properties": {
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANJoinResourceTypeEventConfiguration"
                }
            }
        },
        "LoRaWANJoinResourceTypeEventConfiguration": {
            "type": "object",
            "properties": {
                "WirelessDeviceEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "ConnectionStatusResourceTypeEventConfiguration": {
            "type": "object",
            "properties": {
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANConnectionStatusResourceTypeEventConfiguration"
                }
            }
        },
        "LoRaWANConnectionStatusResourceTypeEventConfiguration": {
            "type": "object",
            "properties": {
                "WirelessGatewayEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "MessageDeliveryStatusResourceTypeEventConfiguration": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkResourceTypeEventConfiguration"
                }
            }
        },
        "GetEventConfigurationByResourceTypesRequest": {
            "type": "object",
            "properties": {}
        },
        "GetFuotaTaskResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/FuotaTaskArn"
                },
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                },
                "Status": {
                    "$ref": "#/$defs/FuotaTaskStatus"
                },
                "Name": {
                    "$ref": "#/$defs/FuotaTaskName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANFuotaTaskGetInfo"
                },
                "FirmwareUpdateImage": {
                    "$ref": "#/$defs/FirmwareUpdateImage"
                },
                "FirmwareUpdateRole": {
                    "$ref": "#/$defs/FirmwareUpdateRole"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/CreatedAt"
                },
                "RedundancyPercent": {
                    "$ref": "#/$defs/RedundancyPercent"
                },
                "FragmentSizeBytes": {
                    "$ref": "#/$defs/FragmentSizeBytes"
                },
                "FragmentIntervalMS": {
                    "$ref": "#/$defs/FragmentIntervalMS"
                }
            }
        },
        "FuotaTaskStatus": {
            "enum": [
                "Pending",
                "FuotaSession_Waiting",
                "In_FuotaSession",
                "FuotaDone",
                "Delete_Waiting"
            ]
        },
        "LoRaWANFuotaTaskGetInfo": {
            "type": "object",
            "properties": {
                "RfRegion": {
                    "$ref": "#/$defs/RfRegion"
                },
                "StartTime": {
                    "$ref": "#/$defs/StartTime"
                }
            }
        },
        "StartTime": {
            "type": "string",
            "format": "date-time"
        },
        "CreatedAt": {
            "type": "string",
            "format": "date-time"
        },
        "GetFuotaTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                }
            }
        },
        "GetLogLevelsByResourceTypesResponse": {
            "type": "object",
            "properties": {
                "DefaultLogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "WirelessGatewayLogOptions": {
                    "$ref": "#/$defs/WirelessGatewayLogOptionList"
                },
                "WirelessDeviceLogOptions": {
                    "$ref": "#/$defs/WirelessDeviceLogOptionList"
                }
            }
        },
        "WirelessGatewayLogOptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WirelessGatewayLogOption"
            }
        },
        "WirelessGatewayLogOption": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/WirelessGatewayType"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Events": {
                    "$ref": "#/$defs/WirelessGatewayEventLogOptionList"
                }
            }
        },
        "WirelessGatewayType": {
            "enum": [
                "LoRaWAN"
            ]
        },
        "WirelessGatewayEventLogOptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WirelessGatewayEventLogOption"
            }
        },
        "WirelessGatewayEventLogOption": {
            "type": "object",
            "properties": {
                "Event": {
                    "$ref": "#/$defs/WirelessGatewayEvent"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                }
            }
        },
        "WirelessGatewayEvent": {
            "enum": [
                "CUPS_Request",
                "Certificate"
            ]
        },
        "WirelessDeviceLogOptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WirelessDeviceLogOption"
            }
        },
        "WirelessDeviceLogOption": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/WirelessDeviceType"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "Events": {
                    "$ref": "#/$defs/WirelessDeviceEventLogOptionList"
                }
            }
        },
        "WirelessDeviceEventLogOptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WirelessDeviceEventLogOption"
            }
        },
        "WirelessDeviceEventLogOption": {
            "type": "object",
            "properties": {
                "Event": {
                    "$ref": "#/$defs/WirelessDeviceEvent"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                }
            }
        },
        "WirelessDeviceEvent": {
            "enum": [
                "Join",
                "Rejoin",
                "Uplink_Data",
                "Downlink_Data",
                "Registration"
            ]
        },
        "GetLogLevelsByResourceTypesRequest": {
            "type": "object",
            "properties": {}
        },
        "GetMetricConfigurationResponse": {
            "type": "object",
            "properties": {
                "SummaryMetric": {
                    "$ref": "#/$defs/SummaryMetricConfiguration"
                }
            }
        },
        "SummaryMetricConfiguration": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/SummaryMetricConfigurationStatus"
                }
            }
        },
        "SummaryMetricConfigurationStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "GetMetricConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetMetricsResponse": {
            "type": "object",
            "properties": {
                "SummaryMetricQueryResults": {
                    "$ref": "#/$defs/SummaryMetricQueryResults"
                }
            }
        },
        "SummaryMetricQueryResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SummaryMetricQueryResult"
            }
        },
        "SummaryMetricQueryResult": {
            "type": "object",
            "properties": {
                "QueryId": {
                    "$ref": "#/$defs/MetricQueryId"
                },
                "QueryStatus": {
                    "$ref": "#/$defs/MetricQueryStatus"
                },
                "Error": {
                    "$ref": "#/$defs/MetricQueryError"
                },
                "MetricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "Dimensions": {
                    "$ref": "#/$defs/Dimensions"
                },
                "AggregationPeriod": {
                    "$ref": "#/$defs/AggregationPeriod"
                },
                "StartTimestamp": {
                    "$ref": "#/$defs/MetricQueryStartTimestamp"
                },
                "EndTimestamp": {
                    "$ref": "#/$defs/MetricQueryEndTimestamp"
                },
                "Timestamps": {
                    "$ref": "#/$defs/MetricQueryTimestamps"
                },
                "Values": {
                    "$ref": "#/$defs/MetricQueryValues"
                },
                "Unit": {
                    "$ref": "#/$defs/MetricUnit"
                }
            }
        },
        "MetricQueryId": {
            "type": "string"
        },
        "MetricQueryStatus": {
            "enum": [
                "Succeeded",
                "Failed"
            ]
        },
        "MetricQueryError": {
            "type": "string"
        },
        "MetricName": {
            "enum": [
                "DeviceRSSI",
                "DeviceSNR",
                "DeviceRoamingRSSI",
                "DeviceRoamingSNR",
                "DeviceUplinkCount",
                "DeviceDownlinkCount",
                "DeviceUplinkLostCount",
                "DeviceUplinkLostRate",
                "DeviceJoinRequestCount",
                "DeviceJoinAcceptCount",
                "DeviceRoamingUplinkCount",
                "DeviceRoamingDownlinkCount",
                "GatewayUpTime",
                "GatewayDownTime",
                "GatewayRSSI",
                "GatewaySNR",
                "GatewayUplinkCount",
                "GatewayDownlinkCount",
                "GatewayJoinRequestCount",
                "GatewayJoinAcceptCount",
                "AwsAccountUplinkCount",
                "AwsAccountDownlinkCount",
                "AwsAccountUplinkLostCount",
                "AwsAccountUplinkLostRate",
                "AwsAccountJoinRequestCount",
                "AwsAccountJoinAcceptCount",
                "AwsAccountRoamingUplinkCount",
                "AwsAccountRoamingDownlinkCount",
                "AwsAccountDeviceCount",
                "AwsAccountGatewayCount",
                "AwsAccountActiveDeviceCount",
                "AwsAccountActiveGatewayCount"
            ]
        },
        "Dimensions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Dimension"
            }
        },
        "Dimension": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DimensionName"
                },
                "value": {
                    "$ref": "#/$defs/DimensionValue"
                }
            }
        },
        "DimensionName": {
            "enum": [
                "DeviceId",
                "GatewayId"
            ]
        },
        "DimensionValue": {
            "type": "string"
        },
        "AggregationPeriod": {
            "enum": [
                "OneHour",
                "OneDay",
                "OneWeek"
            ]
        },
        "MetricQueryStartTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "MetricQueryEndTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "MetricQueryTimestamps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricQueryTimestamp"
            }
        },
        "MetricQueryTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "MetricQueryValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricQueryValue"
            }
        },
        "MetricQueryValue": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Min"
                },
                "Max": {
                    "$ref": "#/$defs/Max"
                },
                "Sum": {
                    "$ref": "#/$defs/Sum"
                },
                "Avg": {
                    "$ref": "#/$defs/Avg"
                },
                "Std": {
                    "$ref": "#/$defs/Std"
                },
                "P90": {
                    "$ref": "#/$defs/P90"
                }
            }
        },
        "Min": {
            "type": "number",
            "format": "double"
        },
        "Max": {
            "type": "number",
            "format": "double"
        },
        "Sum": {
            "type": "number",
            "format": "double"
        },
        "Avg": {
            "type": "number",
            "format": "double"
        },
        "Std": {
            "type": "number",
            "format": "double"
        },
        "P90": {
            "type": "number",
            "format": "double"
        },
        "MetricUnit": {
            "type": "string"
        },
        "GetMetricsRequest": {
            "type": "object",
            "properties": {
                "SummaryMetricQueries": {
                    "$ref": "#/$defs/SummaryMetricQueries"
                }
            }
        },
        "SummaryMetricQueries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SummaryMetricQuery"
            }
        },
        "SummaryMetricQuery": {
            "type": "object",
            "properties": {
                "QueryId": {
                    "$ref": "#/$defs/MetricQueryId"
                },
                "MetricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "Dimensions": {
                    "$ref": "#/$defs/Dimensions"
                },
                "AggregationPeriod": {
                    "$ref": "#/$defs/AggregationPeriod"
                },
                "StartTimestamp": {
                    "$ref": "#/$defs/MetricQueryStartTimestamp"
                },
                "EndTimestamp": {
                    "$ref": "#/$defs/MetricQueryEndTimestamp"
                }
            }
        },
        "GetMulticastGroupResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/MulticastGroupArn"
                },
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                },
                "Name": {
                    "$ref": "#/$defs/MulticastGroupName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Status": {
                    "$ref": "#/$defs/MulticastGroupStatus"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANMulticastGet"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/CreatedAt"
                }
            }
        },
        "MulticastGroupStatus": {
            "type": "string"
        },
        "LoRaWANMulticastGet": {
            "type": "object",
            "properties": {
                "RfRegion": {
                    "$ref": "#/$defs/SupportedRfRegion"
                },
                "DlClass": {
                    "$ref": "#/$defs/DlClass"
                },
                "NumberOfDevicesRequested": {
                    "$ref": "#/$defs/NumberOfDevicesRequested"
                },
                "NumberOfDevicesInGroup": {
                    "$ref": "#/$defs/NumberOfDevicesInGroup"
                }
            }
        },
        "NumberOfDevicesRequested": {
            "type": "integer",
            "format": "int32"
        },
        "NumberOfDevicesInGroup": {
            "type": "integer",
            "format": "int32"
        },
        "GetMulticastGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                }
            }
        },
        "GetMulticastGroupSessionResponse": {
            "type": "object",
            "properties": {
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANMulticastSession"
                }
            }
        },
        "LoRaWANMulticastSession": {
            "type": "object",
            "properties": {
                "DlDr": {
                    "$ref": "#/$defs/DlDr"
                },
                "DlFreq": {
                    "$ref": "#/$defs/DlFreq"
                },
                "SessionStartTime": {
                    "$ref": "#/$defs/SessionStartTimeTimestamp"
                },
                "SessionTimeout": {
                    "$ref": "#/$defs/SessionTimeout"
                },
                "PingSlotPeriod": {
                    "$ref": "#/$defs/PingSlotPeriod"
                }
            }
        },
        "DlDr": {
            "type": "integer",
            "format": "int32"
        },
        "DlFreq": {
            "type": "integer",
            "format": "int32"
        },
        "SessionStartTimeTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "SessionTimeout": {
            "type": "integer",
            "format": "int32"
        },
        "GetMulticastGroupSessionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                }
            }
        },
        "GetNetworkAnalyzerConfigurationResponse": {
            "type": "object",
            "properties": {
                "TraceContent": {
                    "$ref": "#/$defs/TraceContent"
                },
                "WirelessDevices": {
                    "$ref": "#/$defs/WirelessDeviceList"
                },
                "WirelessGateways": {
                    "$ref": "#/$defs/WirelessGatewayList"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Arn": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationArn"
                },
                "Name": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationName"
                },
                "MulticastGroups": {
                    "$ref": "#/$defs/NetworkAnalyzerMulticastGroupList"
                }
            }
        },
        "GetNetworkAnalyzerConfigurationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationName": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationName"
                }
            }
        },
        "GetPartnerAccountResponse": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkAccountInfoWithFingerprint"
                },
                "AccountLinked": {
                    "$ref": "#/$defs/AccountLinked"
                }
            }
        },
        "SidewalkAccountInfoWithFingerprint": {
            "type": "object",
            "properties": {
                "AmazonId": {
                    "$ref": "#/$defs/AmazonId"
                },
                "Fingerprint": {
                    "$ref": "#/$defs/Fingerprint"
                },
                "Arn": {
                    "$ref": "#/$defs/PartnerAccountArn"
                }
            }
        },
        "Fingerprint": {
            "type": "string"
        },
        "AccountLinked": {
            "type": "boolean"
        },
        "GetPartnerAccountRequest": {
            "type": "object",
            "properties": {
                "PartnerAccountId": {
                    "$ref": "#/$defs/PartnerAccountId"
                },
                "PartnerType": {
                    "$ref": "#/$defs/PartnerType"
                }
            }
        },
        "GetPositionResponse": {
            "type": "object",
            "properties": {
                "Position": {
                    "$ref": "#/$defs/PositionCoordinate"
                },
                "Accuracy": {
                    "$ref": "#/$defs/Accuracy"
                },
                "SolverType": {
                    "$ref": "#/$defs/PositionSolverType"
                },
                "SolverProvider": {
                    "$ref": "#/$defs/PositionSolverProvider"
                },
                "SolverVersion": {
                    "$ref": "#/$defs/PositionSolverVersion"
                },
                "Timestamp": {
                    "$ref": "#/$defs/ISODateTimeString"
                }
            }
        },
        "PositionCoordinate": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PositionCoordinateValue"
            }
        },
        "PositionCoordinateValue": {
            "type": "number",
            "format": "float"
        },
        "Accuracy": {
            "type": "object",
            "properties": {
                "HorizontalAccuracy": {
                    "$ref": "#/$defs/HorizontalAccuracy"
                },
                "VerticalAccuracy": {
                    "$ref": "#/$defs/VerticalAccuracy"
                }
            }
        },
        "HorizontalAccuracy": {
            "type": "number",
            "format": "float"
        },
        "VerticalAccuracy": {
            "type": "number",
            "format": "float"
        },
        "PositionSolverType": {
            "enum": [
                "GNSS"
            ]
        },
        "PositionSolverProvider": {
            "enum": [
                "SEMTECH"
            ]
        },
        "PositionSolverVersion": {
            "type": "string"
        },
        "ISODateTimeString": {
            "type": "string"
        },
        "GetPositionRequest": {
            "type": "object",
            "properties": {
                "ResourceIdentifier": {
                    "$ref": "#/$defs/PositionResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/PositionResourceType"
                }
            }
        },
        "PositionResourceIdentifier": {
            "type": "string"
        },
        "PositionResourceType": {
            "enum": [
                "WirelessDevice",
                "WirelessGateway"
            ]
        },
        "GetPositionConfigurationResponse": {
            "type": "object",
            "properties": {
                "Solvers": {
                    "$ref": "#/$defs/PositionSolverDetails"
                },
                "Destination": {
                    "$ref": "#/$defs/DestinationName"
                }
            }
        },
        "PositionSolverDetails": {
            "type": "object",
            "properties": {
                "SemtechGnss": {
                    "$ref": "#/$defs/SemtechGnssDetail"
                }
            }
        },
        "SemtechGnssDetail": {
            "type": "object",
            "properties": {
                "Provider": {
                    "$ref": "#/$defs/PositionSolverProvider"
                },
                "Type": {
                    "$ref": "#/$defs/PositionSolverType"
                },
                "Status": {
                    "$ref": "#/$defs/PositionConfigurationStatus"
                },
                "Fec": {
                    "$ref": "#/$defs/PositionConfigurationFec"
                }
            }
        },
        "PositionConfigurationStatus": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "PositionConfigurationFec": {
            "enum": [
                "ROSE",
                "NONE"
            ]
        },
        "GetPositionConfigurationRequest": {
            "type": "object",
            "properties": {
                "ResourceIdentifier": {
                    "$ref": "#/$defs/PositionResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/PositionResourceType"
                }
            }
        },
        "GetPositionEstimateResponse": {
            "type": "object",
            "properties": {
                "GeoJsonPayload": {
                    "$ref": "#/$defs/GeoJsonPayload"
                }
            }
        },
        "GeoJsonPayload": {
            "type": "string",
            "format": "binary"
        },
        "GetPositionEstimateRequest": {
            "type": "object",
            "properties": {
                "WiFiAccessPoints": {
                    "$ref": "#/$defs/WiFiAccessPoints"
                },
                "CellTowers": {
                    "$ref": "#/$defs/CellTowers"
                },
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "Gnss": {
                    "$ref": "#/$defs/Gnss"
                },
                "Timestamp": {
                    "$ref": "#/$defs/CreationDate"
                }
            }
        },
        "WiFiAccessPoints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WiFiAccessPoint"
            }
        },
        "WiFiAccessPoint": {
            "type": "object",
            "properties": {
                "MacAddress": {
                    "$ref": "#/$defs/MacAddress"
                },
                "Rss": {
                    "$ref": "#/$defs/RSS"
                }
            }
        },
        "MacAddress": {
            "type": "string"
        },
        "RSS": {
            "type": "integer",
            "format": "int32"
        },
        "CellTowers": {
            "type": "object",
            "properties": {
                "Gsm": {
                    "$ref": "#/$defs/GsmList"
                },
                "Wcdma": {
                    "$ref": "#/$defs/WcdmaList"
                },
                "Tdscdma": {
                    "$ref": "#/$defs/TdscdmaList"
                },
                "Lte": {
                    "$ref": "#/$defs/LteList"
                },
                "Cdma": {
                    "$ref": "#/$defs/CdmaList"
                }
            }
        },
        "GsmList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GsmObj"
            }
        },
        "GsmObj": {
            "type": "object",
            "properties": {
                "Mcc": {
                    "$ref": "#/$defs/MCC"
                },
                "Mnc": {
                    "$ref": "#/$defs/MNC"
                },
                "Lac": {
                    "$ref": "#/$defs/LAC"
                },
                "GeranCid": {
                    "$ref": "#/$defs/GeranCid"
                },
                "GsmLocalId": {
                    "$ref": "#/$defs/GsmLocalId"
                },
                "GsmTimingAdvance": {
                    "$ref": "#/$defs/GsmTimingAdvance"
                },
                "RxLevel": {
                    "$ref": "#/$defs/RxLevel"
                },
                "GsmNmr": {
                    "$ref": "#/$defs/GsmNmrList"
                }
            }
        },
        "MCC": {
            "type": "integer",
            "format": "int32"
        },
        "MNC": {
            "type": "integer",
            "format": "int32"
        },
        "LAC": {
            "type": "integer",
            "format": "int32"
        },
        "GeranCid": {
            "type": "integer",
            "format": "int32"
        },
        "GsmLocalId": {
            "type": "object",
            "properties": {
                "Bsic": {
                    "$ref": "#/$defs/BSIC"
                },
                "Bcch": {
                    "$ref": "#/$defs/BCCH"
                }
            }
        },
        "BSIC": {
            "type": "integer",
            "format": "int32"
        },
        "BCCH": {
            "type": "integer",
            "format": "int32"
        },
        "GsmTimingAdvance": {
            "type": "integer",
            "format": "int32"
        },
        "RxLevel": {
            "type": "integer",
            "format": "int32"
        },
        "GsmNmrList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GsmNmrObj"
            }
        },
        "GsmNmrObj": {
            "type": "object",
            "properties": {
                "Bsic": {
                    "$ref": "#/$defs/BSIC"
                },
                "Bcch": {
                    "$ref": "#/$defs/BCCH"
                },
                "RxLevel": {
                    "$ref": "#/$defs/RxLevel"
                },
                "GlobalIdentity": {
                    "$ref": "#/$defs/GlobalIdentity"
                }
            }
        },
        "GlobalIdentity": {
            "type": "object",
            "properties": {
                "Lac": {
                    "$ref": "#/$defs/LAC"
                },
                "GeranCid": {
                    "$ref": "#/$defs/GeranCid"
                }
            }
        },
        "WcdmaList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WcdmaObj"
            }
        },
        "WcdmaObj": {
            "type": "object",
            "properties": {
                "Mcc": {
                    "$ref": "#/$defs/MCC"
                },
                "Mnc": {
                    "$ref": "#/$defs/MNC"
                },
                "Lac": {
                    "$ref": "#/$defs/LAC"
                },
                "UtranCid": {
                    "$ref": "#/$defs/UtranCid"
                },
                "WcdmaLocalId": {
                    "$ref": "#/$defs/WcdmaLocalId"
                },
                "Rscp": {
                    "$ref": "#/$defs/RSCP"
                },
                "PathLoss": {
                    "$ref": "#/$defs/PathLoss"
                },
                "WcdmaNmr": {
                    "$ref": "#/$defs/WcdmaNmrList"
                }
            }
        },
        "UtranCid": {
            "type": "integer",
            "format": "int32"
        },
        "WcdmaLocalId": {
            "type": "object",
            "properties": {
                "Uarfcndl": {
                    "$ref": "#/$defs/UARFCNDL"
                },
                "Psc": {
                    "$ref": "#/$defs/PSC"
                }
            }
        },
        "UARFCNDL": {
            "type": "integer",
            "format": "int32"
        },
        "PSC": {
            "type": "integer",
            "format": "int32"
        },
        "RSCP": {
            "type": "integer",
            "format": "int32"
        },
        "PathLoss": {
            "type": "integer",
            "format": "int32"
        },
        "WcdmaNmrList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WcdmaNmrObj"
            }
        },
        "WcdmaNmrObj": {
            "type": "object",
            "properties": {
                "Uarfcndl": {
                    "$ref": "#/$defs/UARFCNDL"
                },
                "Psc": {
                    "$ref": "#/$defs/PSC"
                },
                "UtranCid": {
                    "$ref": "#/$defs/UtranCid"
                },
                "Rscp": {
                    "$ref": "#/$defs/RSCP"
                },
                "PathLoss": {
                    "$ref": "#/$defs/PathLoss"
                }
            }
        },
        "TdscdmaList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TdscdmaObj"
            }
        },
        "TdscdmaObj": {
            "type": "object",
            "properties": {
                "Mcc": {
                    "$ref": "#/$defs/MCC"
                },
                "Mnc": {
                    "$ref": "#/$defs/MNC"
                },
                "Lac": {
                    "$ref": "#/$defs/LAC"
                },
                "UtranCid": {
                    "$ref": "#/$defs/UtranCid"
                },
                "TdscdmaLocalId": {
                    "$ref": "#/$defs/TdscdmaLocalId"
                },
                "TdscdmaTimingAdvance": {
                    "$ref": "#/$defs/TdscdmaTimingAdvance"
                },
                "Rscp": {
                    "$ref": "#/$defs/RSCP"
                },
                "PathLoss": {
                    "$ref": "#/$defs/PathLoss"
                },
                "TdscdmaNmr": {
                    "$ref": "#/$defs/TdscdmaNmrList"
                }
            }
        },
        "TdscdmaLocalId": {
            "type": "object",
            "properties": {
                "Uarfcn": {
                    "$ref": "#/$defs/UARFCN"
                },
                "CellParams": {
                    "$ref": "#/$defs/CellParams"
                }
            }
        },
        "UARFCN": {
            "type": "integer",
            "format": "int32"
        },
        "CellParams": {
            "type": "integer",
            "format": "int32"
        },
        "TdscdmaTimingAdvance": {
            "type": "integer",
            "format": "int32"
        },
        "TdscdmaNmrList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TdscdmaNmrObj"
            }
        },
        "TdscdmaNmrObj": {
            "type": "object",
            "properties": {
                "Uarfcn": {
                    "$ref": "#/$defs/UARFCN"
                },
                "CellParams": {
                    "$ref": "#/$defs/CellParams"
                },
                "UtranCid": {
                    "$ref": "#/$defs/UtranCid"
                },
                "Rscp": {
                    "$ref": "#/$defs/RSCP"
                },
                "PathLoss": {
                    "$ref": "#/$defs/PathLoss"
                }
            }
        },
        "LteList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LteObj"
            }
        },
        "LteObj": {
            "type": "object",
            "properties": {
                "Mcc": {
                    "$ref": "#/$defs/MCC"
                },
                "Mnc": {
                    "$ref": "#/$defs/MNC"
                },
                "EutranCid": {
                    "$ref": "#/$defs/EutranCid"
                },
                "Tac": {
                    "$ref": "#/$defs/TAC"
                },
                "LteLocalId": {
                    "$ref": "#/$defs/LteLocalId"
                },
                "LteTimingAdvance": {
                    "$ref": "#/$defs/LteTimingAdvance"
                },
                "Rsrp": {
                    "$ref": "#/$defs/RSRP"
                },
                "Rsrq": {
                    "$ref": "#/$defs/RSRQ"
                },
                "NrCapable": {
                    "$ref": "#/$defs/NRCapable"
                },
                "LteNmr": {
                    "$ref": "#/$defs/LteNmrList"
                }
            }
        },
        "EutranCid": {
            "type": "integer",
            "format": "int32"
        },
        "TAC": {
            "type": "integer",
            "format": "int32"
        },
        "LteLocalId": {
            "type": "object",
            "properties": {
                "Pci": {
                    "$ref": "#/$defs/PCI"
                },
                "Earfcn": {
                    "$ref": "#/$defs/EARFCN"
                }
            }
        },
        "PCI": {
            "type": "integer",
            "format": "int32"
        },
        "EARFCN": {
            "type": "integer",
            "format": "int32"
        },
        "LteTimingAdvance": {
            "type": "integer",
            "format": "int32"
        },
        "RSRP": {
            "type": "integer",
            "format": "int32"
        },
        "RSRQ": {
            "type": "number",
            "format": "float"
        },
        "NRCapable": {
            "type": "boolean"
        },
        "LteNmrList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LteNmrObj"
            }
        },
        "LteNmrObj": {
            "type": "object",
            "properties": {
                "Pci": {
                    "$ref": "#/$defs/PCI"
                },
                "Earfcn": {
                    "$ref": "#/$defs/EARFCN"
                },
                "EutranCid": {
                    "$ref": "#/$defs/EutranCid"
                },
                "Rsrp": {
                    "$ref": "#/$defs/RSRP"
                },
                "Rsrq": {
                    "$ref": "#/$defs/RSRQ"
                }
            }
        },
        "CdmaList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CdmaObj"
            }
        },
        "CdmaObj": {
            "type": "object",
            "properties": {
                "SystemId": {
                    "$ref": "#/$defs/SystemId"
                },
                "NetworkId": {
                    "$ref": "#/$defs/NetworkId"
                },
                "BaseStationId": {
                    "$ref": "#/$defs/BaseStationId"
                },
                "RegistrationZone": {
                    "$ref": "#/$defs/RegistrationZone"
                },
                "CdmaLocalId": {
                    "$ref": "#/$defs/CdmaLocalId"
                },
                "PilotPower": {
                    "$ref": "#/$defs/PilotPower"
                },
                "BaseLat": {
                    "$ref": "#/$defs/BaseLat"
                },
                "BaseLng": {
                    "$ref": "#/$defs/BaseLng"
                },
                "CdmaNmr": {
                    "$ref": "#/$defs/CdmaNmrList"
                }
            }
        },
        "SystemId": {
            "type": "integer",
            "format": "int32"
        },
        "NetworkId": {
            "type": "integer",
            "format": "int32"
        },
        "BaseStationId": {
            "type": "integer",
            "format": "int32"
        },
        "RegistrationZone": {
            "type": "integer",
            "format": "int32"
        },
        "CdmaLocalId": {
            "type": "object",
            "properties": {
                "PnOffset": {
                    "$ref": "#/$defs/PnOffset"
                },
                "CdmaChannel": {
                    "$ref": "#/$defs/CdmaChannel"
                }
            }
        },
        "PnOffset": {
            "type": "integer",
            "format": "int32"
        },
        "CdmaChannel": {
            "type": "integer",
            "format": "int32"
        },
        "PilotPower": {
            "type": "integer",
            "format": "int32"
        },
        "BaseLat": {
            "type": "number",
            "format": "float"
        },
        "BaseLng": {
            "type": "number",
            "format": "float"
        },
        "CdmaNmrList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CdmaNmrObj"
            }
        },
        "CdmaNmrObj": {
            "type": "object",
            "properties": {
                "PnOffset": {
                    "$ref": "#/$defs/PnOffset"
                },
                "CdmaChannel": {
                    "$ref": "#/$defs/CdmaChannel"
                },
                "PilotPower": {
                    "$ref": "#/$defs/PilotPower"
                },
                "BaseStationId": {
                    "$ref": "#/$defs/BaseStationId"
                }
            }
        },
        "Ip": {
            "type": "object",
            "properties": {
                "IpAddress": {
                    "$ref": "#/$defs/IPAddress"
                }
            }
        },
        "IPAddress": {
            "type": "string"
        },
        "Gnss": {
            "type": "object",
            "properties": {
                "Payload": {
                    "$ref": "#/$defs/GnssNav"
                },
                "CaptureTime": {
                    "$ref": "#/$defs/GPST"
                },
                "CaptureTimeAccuracy": {
                    "$ref": "#/$defs/CaptureTimeAccuracy"
                },
                "AssistPosition": {
                    "$ref": "#/$defs/AssistPosition"
                },
                "AssistAltitude": {
                    "$ref": "#/$defs/Coordinate"
                },
                "Use2DSolver": {
                    "$ref": "#/$defs/Use2DSolver"
                }
            }
        },
        "GnssNav": {
            "type": "string"
        },
        "GPST": {
            "type": "number",
            "format": "float"
        },
        "CaptureTimeAccuracy": {
            "type": "number",
            "format": "float"
        },
        "AssistPosition": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Coordinate"
            }
        },
        "Coordinate": {
            "type": "number",
            "format": "float"
        },
        "Use2DSolver": {
            "type": "boolean"
        },
        "CreationDate": {
            "type": "string",
            "format": "date-time"
        },
        "GetResourceEventConfigurationResponse": {
            "type": "object",
            "properties": {
                "DeviceRegistrationState": {
                    "$ref": "#/$defs/DeviceRegistrationStateEventConfiguration"
                },
                "Proximity": {
                    "$ref": "#/$defs/ProximityEventConfiguration"
                },
                "Join": {
                    "$ref": "#/$defs/JoinEventConfiguration"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/ConnectionStatusEventConfiguration"
                },
                "MessageDeliveryStatus": {
                    "$ref": "#/$defs/MessageDeliveryStatusEventConfiguration"
                }
            }
        },
        "DeviceRegistrationStateEventConfiguration": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkEventNotificationConfigurations"
                },
                "WirelessDeviceIdEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "SidewalkEventNotificationConfigurations": {
            "type": "object",
            "properties": {
                "AmazonIdEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "ProximityEventConfiguration": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkEventNotificationConfigurations"
                },
                "WirelessDeviceIdEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "JoinEventConfiguration": {
            "type": "object",
            "properties": {
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANJoinEventNotificationConfigurations"
                },
                "WirelessDeviceIdEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "LoRaWANJoinEventNotificationConfigurations": {
            "type": "object",
            "properties": {
                "DevEuiEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "ConnectionStatusEventConfiguration": {
            "type": "object",
            "properties": {
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANConnectionStatusEventNotificationConfigurations"
                },
                "WirelessGatewayIdEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "LoRaWANConnectionStatusEventNotificationConfigurations": {
            "type": "object",
            "properties": {
                "GatewayEuiEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "MessageDeliveryStatusEventConfiguration": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkEventNotificationConfigurations"
                },
                "WirelessDeviceIdEventTopic": {
                    "$ref": "#/$defs/EventNotificationTopicStatus"
                }
            }
        },
        "GetResourceEventConfigurationRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "IdentifierType": {
                    "$ref": "#/$defs/IdentifierType"
                },
                "PartnerType": {
                    "$ref": "#/$defs/EventNotificationPartnerType"
                }
            }
        },
        "IdentifierType": {
            "enum": [
                "PartnerAccountId",
                "DevEui",
                "GatewayEui",
                "WirelessDeviceId",
                "WirelessGatewayId"
            ]
        },
        "EventNotificationPartnerType": {
            "enum": [
                "Sidewalk"
            ]
        },
        "GetResourceLogLevelResponse": {
            "type": "object",
            "properties": {
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                }
            }
        },
        "GetResourceLogLevelRequest": {
            "type": "object",
            "properties": {
                "ResourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "ResourceIdentifier": {
            "type": "string"
        },
        "ResourceType": {
            "type": "string"
        },
        "GetResourcePositionResponse": {
            "type": "object",
            "properties": {
                "GeoJsonPayload": {
                    "$ref": "#/$defs/GeoJsonPayload"
                }
            }
        },
        "GetResourcePositionRequest": {
            "type": "object",
            "properties": {
                "ResourceIdentifier": {
                    "$ref": "#/$defs/PositionResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/PositionResourceType"
                }
            }
        },
        "GetServiceEndpointResponse": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/WirelessGatewayServiceType"
                },
                "ServiceEndpoint": {
                    "$ref": "#/$defs/EndPoint"
                },
                "ServerTrust": {
                    "$ref": "#/$defs/CertificatePEM"
                }
            }
        },
        "WirelessGatewayServiceType": {
            "enum": [
                "CUPS",
                "LNS"
            ]
        },
        "EndPoint": {
            "type": "string"
        },
        "CertificatePEM": {
            "type": "string"
        },
        "GetServiceEndpointRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/WirelessGatewayServiceType"
                }
            }
        },
        "GetServiceProfileResponse": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/ServiceProfileArn"
                },
                "Name": {
                    "$ref": "#/$defs/ServiceProfileName"
                },
                "Id": {
                    "$ref": "#/$defs/ServiceProfileId"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANGetServiceProfileInfo"
                }
            }
        },
        "LoRaWANGetServiceProfileInfo": {
            "type": "object",
            "properties": {
                "UlRate": {
                    "$ref": "#/$defs/UlRate"
                },
                "UlBucketSize": {
                    "$ref": "#/$defs/UlBucketSize"
                },
                "UlRatePolicy": {
                    "$ref": "#/$defs/UlRatePolicy"
                },
                "DlRate": {
                    "$ref": "#/$defs/DlRate"
                },
                "DlBucketSize": {
                    "$ref": "#/$defs/DlBucketSize"
                },
                "DlRatePolicy": {
                    "$ref": "#/$defs/DlRatePolicy"
                },
                "AddGwMetadata": {
                    "$ref": "#/$defs/AddGwMetadata"
                },
                "DevStatusReqFreq": {
                    "$ref": "#/$defs/DevStatusReqFreq"
                },
                "ReportDevStatusBattery": {
                    "$ref": "#/$defs/ReportDevStatusBattery"
                },
                "ReportDevStatusMargin": {
                    "$ref": "#/$defs/ReportDevStatusMargin"
                },
                "DrMin": {
                    "$ref": "#/$defs/DrMin"
                },
                "DrMax": {
                    "$ref": "#/$defs/DrMax"
                },
                "ChannelMask": {
                    "$ref": "#/$defs/ChannelMask"
                },
                "PrAllowed": {
                    "$ref": "#/$defs/PrAllowed"
                },
                "HrAllowed": {
                    "$ref": "#/$defs/HrAllowed"
                },
                "RaAllowed": {
                    "$ref": "#/$defs/RaAllowed"
                },
                "NwkGeoLoc": {
                    "$ref": "#/$defs/NwkGeoLoc"
                },
                "TargetPer": {
                    "$ref": "#/$defs/TargetPer"
                },
                "MinGwDiversity": {
                    "$ref": "#/$defs/MinGwDiversity"
                }
            }
        },
        "UlRate": {
            "type": "integer",
            "format": "int32"
        },
        "UlBucketSize": {
            "type": "integer",
            "format": "int32"
        },
        "UlRatePolicy": {
            "type": "string"
        },
        "DlRate": {
            "type": "integer",
            "format": "int32"
        },
        "DlBucketSize": {
            "type": "integer",
            "format": "int32"
        },
        "DlRatePolicy": {
            "type": "string"
        },
        "DevStatusReqFreq": {
            "type": "integer",
            "format": "int32"
        },
        "ReportDevStatusBattery": {
            "type": "boolean"
        },
        "ReportDevStatusMargin": {
            "type": "boolean"
        },
        "DrMin": {
            "type": "integer",
            "format": "int32"
        },
        "DrMax": {
            "type": "integer",
            "format": "int32"
        },
        "ChannelMask": {
            "type": "string"
        },
        "HrAllowed": {
            "type": "boolean"
        },
        "NwkGeoLoc": {
            "type": "boolean"
        },
        "TargetPer": {
            "type": "integer",
            "format": "int32"
        },
        "MinGwDiversity": {
            "type": "integer",
            "format": "int32"
        },
        "GetServiceProfileRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ServiceProfileId"
                }
            }
        },
        "GetWirelessDeviceResponse": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/WirelessDeviceType"
                },
                "Name": {
                    "$ref": "#/$defs/WirelessDeviceName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                },
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                },
                "Arn": {
                    "$ref": "#/$defs/WirelessDeviceArn"
                },
                "ThingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "ThingArn": {
                    "$ref": "#/$defs/ThingArn"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANDevice"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkDevice"
                },
                "Positioning": {
                    "$ref": "#/$defs/PositioningConfigStatus"
                }
            }
        },
        "ThingName": {
            "type": "string"
        },
        "SidewalkDevice": {
            "type": "object",
            "properties": {
                "AmazonId": {
                    "$ref": "#/$defs/AmazonId"
                },
                "SidewalkId": {
                    "$ref": "#/$defs/SidewalkId"
                },
                "SidewalkManufacturingSn": {
                    "$ref": "#/$defs/SidewalkManufacturingSn"
                },
                "DeviceCertificates": {
                    "$ref": "#/$defs/DeviceCertificateList"
                },
                "PrivateKeys": {
                    "$ref": "#/$defs/PrivateKeysList"
                },
                "DeviceProfileId": {
                    "$ref": "#/$defs/DeviceProfileId"
                },
                "CertificateId": {
                    "$ref": "#/$defs/DakCertificateId"
                },
                "Status": {
                    "$ref": "#/$defs/WirelessDeviceSidewalkStatus"
                }
            }
        },
        "SidewalkId": {
            "type": "string"
        },
        "SidewalkManufacturingSn": {
            "type": "string"
        },
        "DeviceCertificateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CertificateList"
            }
        },
        "CertificateList": {
            "type": "object",
            "properties": {
                "SigningAlg": {
                    "$ref": "#/$defs/SigningAlg"
                },
                "Value": {
                    "$ref": "#/$defs/CertificateValue"
                }
            }
        },
        "SigningAlg": {
            "enum": [
                "Ed25519",
                "P256r1"
            ]
        },
        "CertificateValue": {
            "type": "string"
        },
        "PrivateKeysList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CertificateList"
            }
        },
        "WirelessDeviceSidewalkStatus": {
            "enum": [
                "PROVISIONED",
                "REGISTERED",
                "ACTIVATED",
                "UNKNOWN"
            ]
        },
        "GetWirelessDeviceRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "IdentifierType": {
                    "$ref": "#/$defs/WirelessDeviceIdType"
                }
            }
        },
        "WirelessDeviceIdType": {
            "enum": [
                "WirelessDeviceId",
                "DevEui",
                "ThingName",
                "SidewalkManufacturingSn"
            ]
        },
        "GetWirelessDeviceImportTaskResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ImportTaskId"
                },
                "Arn": {
                    "$ref": "#/$defs/ImportTaskArn"
                },
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkGetStartImportInfo"
                },
                "CreationTime": {
                    "$ref": "#/$defs/CreationTime"
                },
                "Status": {
                    "$ref": "#/$defs/ImportTaskStatus"
                },
                "StatusReason": {
                    "$ref": "#/$defs/StatusReason"
                },
                "InitializedImportedDeviceCount": {
                    "$ref": "#/$defs/ImportedWirelessDeviceCount"
                },
                "PendingImportedDeviceCount": {
                    "$ref": "#/$defs/ImportedWirelessDeviceCount"
                },
                "OnboardedImportedDeviceCount": {
                    "$ref": "#/$defs/ImportedWirelessDeviceCount"
                },
                "FailedImportedDeviceCount": {
                    "$ref": "#/$defs/ImportedWirelessDeviceCount"
                }
            }
        },
        "ImportTaskArn": {
            "type": "string"
        },
        "SidewalkGetStartImportInfo": {
            "type": "object",
            "properties": {
                "DeviceCreationFileList": {
                    "$ref": "#/$defs/DeviceCreationFileList"
                },
                "Role": {
                    "$ref": "#/$defs/Role"
                }
            }
        },
        "DeviceCreationFileList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceCreationFile"
            }
        },
        "DeviceCreationFile": {
            "type": "string"
        },
        "Role": {
            "type": "string"
        },
        "CreationTime": {
            "type": "string",
            "format": "date-time"
        },
        "ImportTaskStatus": {
            "enum": [
                "INITIALIZING",
                "INITIALIZED",
                "PENDING",
                "COMPLETE",
                "FAILED",
                "DELETING"
            ]
        },
        "StatusReason": {
            "type": "string"
        },
        "ImportedWirelessDeviceCount": {
            "type": "integer",
            "format": "int64"
        },
        "GetWirelessDeviceImportTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ImportTaskId"
                }
            }
        },
        "GetWirelessDeviceStatisticsResponse": {
            "type": "object",
            "properties": {
                "WirelessDeviceId": {
                    "$ref": "#/$defs/WirelessDeviceId"
                },
                "LastUplinkReceivedAt": {
                    "$ref": "#/$defs/ISODateTimeString"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANDeviceMetadata"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkDeviceMetadata"
                }
            }
        },
        "LoRaWANDeviceMetadata": {
            "type": "object",
            "properties": {
                "DevEui": {
                    "$ref": "#/$defs/DevEui"
                },
                "FPort": {
                    "$ref": "#/$defs/Integer"
                },
                "DataRate": {
                    "$ref": "#/$defs/Integer"
                },
                "Frequency": {
                    "$ref": "#/$defs/Integer"
                },
                "Timestamp": {
                    "$ref": "#/$defs/ISODateTimeString"
                },
                "Gateways": {
                    "$ref": "#/$defs/LoRaWANGatewayMetadataList"
                },
                "PublicGateways": {
                    "$ref": "#/$defs/LoRaWANPublicGatewayMetadataList"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "LoRaWANGatewayMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoRaWANGatewayMetadata"
            }
        },
        "LoRaWANGatewayMetadata": {
            "type": "object",
            "properties": {
                "GatewayEui": {
                    "$ref": "#/$defs/GatewayEui"
                },
                "Snr": {
                    "$ref": "#/$defs/Double"
                },
                "Rssi": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "LoRaWANPublicGatewayMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoRaWANPublicGatewayMetadata"
            }
        },
        "LoRaWANPublicGatewayMetadata": {
            "type": "object",
            "properties": {
                "ProviderNetId": {
                    "$ref": "#/$defs/ProviderNetId"
                },
                "Id": {
                    "$ref": "#/$defs/Id"
                },
                "Rssi": {
                    "$ref": "#/$defs/Double"
                },
                "Snr": {
                    "$ref": "#/$defs/Double"
                },
                "RfRegion": {
                    "$ref": "#/$defs/RfRegion"
                },
                "DlAllowed": {
                    "$ref": "#/$defs/DlAllowed"
                }
            }
        },
        "ProviderNetId": {
            "type": "string"
        },
        "Id": {
            "type": "string"
        },
        "DlAllowed": {
            "type": "boolean"
        },
        "SidewalkDeviceMetadata": {
            "type": "object",
            "properties": {
                "Rssi": {
                    "$ref": "#/$defs/Integer"
                },
                "BatteryLevel": {
                    "$ref": "#/$defs/BatteryLevel"
                },
                "Event": {
                    "$ref": "#/$defs/Event"
                },
                "DeviceState": {
                    "$ref": "#/$defs/DeviceState"
                }
            }
        },
        "BatteryLevel": {
            "enum": [
                "NORMAL",
                "LOW",
                "CRITICAL"
            ]
        },
        "Event": {
            "enum": [
                "DISCOVERED",
                "LOST",
                "ACK",
                "NACK",
                "PASSTHROUGH"
            ]
        },
        "DeviceState": {
            "enum": [
                "PROVISIONED",
                "REGISTEREDNOTSEEN",
                "REGISTEREDREACHABLE",
                "REGISTEREDUNREACHABLE"
            ]
        },
        "GetWirelessDeviceStatisticsRequest": {
            "type": "object",
            "properties": {
                "WirelessDeviceId": {
                    "$ref": "#/$defs/WirelessDeviceId"
                }
            }
        },
        "GetWirelessGatewayResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/WirelessGatewayName"
                },
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANGateway"
                },
                "Arn": {
                    "$ref": "#/$defs/WirelessGatewayArn"
                },
                "ThingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "ThingArn": {
                    "$ref": "#/$defs/ThingArn"
                }
            }
        },
        "GetWirelessGatewayRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "IdentifierType": {
                    "$ref": "#/$defs/WirelessGatewayIdType"
                }
            }
        },
        "WirelessGatewayIdType": {
            "enum": [
                "GatewayEui",
                "WirelessGatewayId",
                "ThingName"
            ]
        },
        "GetWirelessGatewayCertificateResponse": {
            "type": "object",
            "properties": {
                "IotCertificateId": {
                    "$ref": "#/$defs/IotCertificateId"
                },
                "LoRaWANNetworkServerCertificateId": {
                    "$ref": "#/$defs/IotCertificateId"
                }
            }
        },
        "GetWirelessGatewayCertificateRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                }
            }
        },
        "GetWirelessGatewayFirmwareInformationResponse": {
            "type": "object",
            "properties": {
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANGatewayCurrentVersion"
                }
            }
        },
        "LoRaWANGatewayCurrentVersion": {
            "type": "object",
            "properties": {
                "CurrentVersion": {
                    "$ref": "#/$defs/LoRaWANGatewayVersion"
                }
            }
        },
        "GetWirelessGatewayFirmwareInformationRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                }
            }
        },
        "GetWirelessGatewayStatisticsResponse": {
            "type": "object",
            "properties": {
                "WirelessGatewayId": {
                    "$ref": "#/$defs/WirelessGatewayId"
                },
                "LastUplinkReceivedAt": {
                    "$ref": "#/$defs/ISODateTimeString"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/ConnectionStatus"
                }
            }
        },
        "ConnectionStatus": {
            "enum": [
                "CONNECTED",
                "DISCONNECTED"
            ]
        },
        "GetWirelessGatewayStatisticsRequest": {
            "type": "object",
            "properties": {
                "WirelessGatewayId": {
                    "$ref": "#/$defs/WirelessGatewayId"
                }
            }
        },
        "GetWirelessGatewayTaskResponse": {
            "type": "object",
            "properties": {
                "WirelessGatewayId": {
                    "$ref": "#/$defs/WirelessGatewayId"
                },
                "WirelessGatewayTaskDefinitionId": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionId"
                },
                "LastUplinkReceivedAt": {
                    "$ref": "#/$defs/ISODateTimeString"
                },
                "TaskCreatedAt": {
                    "$ref": "#/$defs/ISODateTimeString"
                },
                "Status": {
                    "$ref": "#/$defs/WirelessGatewayTaskStatus"
                }
            }
        },
        "GetWirelessGatewayTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                }
            }
        },
        "GetWirelessGatewayTaskDefinitionResponse": {
            "type": "object",
            "properties": {
                "AutoCreateTasks": {
                    "$ref": "#/$defs/AutoCreateTasks"
                },
                "Name": {
                    "$ref": "#/$defs/WirelessGatewayTaskName"
                },
                "Update": {
                    "$ref": "#/$defs/UpdateWirelessGatewayTaskCreate"
                },
                "Arn": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionArn"
                }
            }
        },
        "GetWirelessGatewayTaskDefinitionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionId"
                }
            }
        },
        "ListDestinationsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DestinationList": {
                    "$ref": "#/$defs/DestinationList"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "DestinationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Destinations"
            }
        },
        "Destinations": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/DestinationArn"
                },
                "Name": {
                    "$ref": "#/$defs/DestinationName"
                },
                "ExpressionType": {
                    "$ref": "#/$defs/ExpressionType"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "ListDestinationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListDeviceProfilesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DeviceProfileList": {
                    "$ref": "#/$defs/DeviceProfileList"
                }
            }
        },
        "DeviceProfileList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceProfile"
            }
        },
        "DeviceProfile": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/DeviceProfileArn"
                },
                "Name": {
                    "$ref": "#/$defs/DeviceProfileName"
                },
                "Id": {
                    "$ref": "#/$defs/DeviceProfileId"
                }
            }
        },
        "ListDeviceProfilesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "DeviceProfileType": {
                    "$ref": "#/$defs/DeviceProfileType"
                }
            }
        },
        "DeviceProfileType": {
            "enum": [
                "Sidewalk",
                "LoRaWAN"
            ]
        },
        "ListDevicesForWirelessDeviceImportTaskResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                },
                "ImportedWirelessDeviceList": {
                    "$ref": "#/$defs/ImportedWirelessDeviceList"
                }
            }
        },
        "ImportedWirelessDeviceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportedWirelessDevice"
            }
        },
        "ImportedWirelessDevice": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/ImportedSidewalkDevice"
                }
            }
        },
        "ImportedSidewalkDevice": {
            "type": "object",
            "properties": {
                "SidewalkManufacturingSn": {
                    "$ref": "#/$defs/SidewalkManufacturingSn"
                },
                "OnboardingStatus": {
                    "$ref": "#/$defs/OnboardStatus"
                },
                "OnboardingStatusReason": {
                    "$ref": "#/$defs/OnboardStatusReason"
                },
                "LastUpdateTime": {
                    "$ref": "#/$defs/LastUpdateTime"
                }
            }
        },
        "OnboardStatus": {
            "enum": [
                "INITIALIZED",
                "PENDING",
                "ONBOARDED",
                "FAILED"
            ]
        },
        "OnboardStatusReason": {
            "type": "string"
        },
        "LastUpdateTime": {
            "type": "string",
            "format": "date-time"
        },
        "ListDevicesForWirelessDeviceImportTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ImportTaskId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Status": {
                    "$ref": "#/$defs/OnboardStatus"
                }
            }
        },
        "ListEventConfigurationsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "EventConfigurationsList": {
                    "$ref": "#/$defs/EventConfigurationsList"
                }
            }
        },
        "EventConfigurationsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventConfigurationItem"
            }
        },
        "EventConfigurationItem": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "IdentifierType": {
                    "$ref": "#/$defs/IdentifierType"
                },
                "PartnerType": {
                    "$ref": "#/$defs/EventNotificationPartnerType"
                },
                "Events": {
                    "$ref": "#/$defs/EventNotificationItemConfigurations"
                }
            }
        },
        "EventNotificationItemConfigurations": {
            "type": "object",
            "properties": {
                "DeviceRegistrationState": {
                    "$ref": "#/$defs/DeviceRegistrationStateEventConfiguration"
                },
                "Proximity": {
                    "$ref": "#/$defs/ProximityEventConfiguration"
                },
                "Join": {
                    "$ref": "#/$defs/JoinEventConfiguration"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/ConnectionStatusEventConfiguration"
                },
                "MessageDeliveryStatus": {
                    "$ref": "#/$defs/MessageDeliveryStatusEventConfiguration"
                }
            }
        },
        "ListEventConfigurationsRequest": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "$ref": "#/$defs/EventNotificationResourceType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "EventNotificationResourceType": {
            "enum": [
                "SidewalkAccount",
                "WirelessDevice",
                "WirelessGateway"
            ]
        },
        "ListFuotaTasksResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "FuotaTaskList": {
                    "$ref": "#/$defs/FuotaTaskList"
                }
            }
        },
        "FuotaTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FuotaTask"
            }
        },
        "FuotaTask": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                },
                "Arn": {
                    "$ref": "#/$defs/FuotaTaskArn"
                },
                "Name": {
                    "$ref": "#/$defs/FuotaTaskName"
                }
            }
        },
        "ListFuotaTasksRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListMulticastGroupsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MulticastGroupList": {
                    "$ref": "#/$defs/MulticastGroupList"
                }
            }
        },
        "MulticastGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MulticastGroup"
            }
        },
        "MulticastGroup": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                },
                "Arn": {
                    "$ref": "#/$defs/MulticastGroupArn"
                },
                "Name": {
                    "$ref": "#/$defs/MulticastGroupName"
                }
            }
        },
        "ListMulticastGroupsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListMulticastGroupsByFuotaTaskResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MulticastGroupList": {
                    "$ref": "#/$defs/MulticastGroupListByFuotaTask"
                }
            }
        },
        "MulticastGroupListByFuotaTask": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MulticastGroupByFuotaTask"
            }
        },
        "MulticastGroupByFuotaTask": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                }
            }
        },
        "ListMulticastGroupsByFuotaTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListNetworkAnalyzerConfigurationsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "NetworkAnalyzerConfigurationList": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationList"
                }
            }
        },
        "NetworkAnalyzerConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkAnalyzerConfigurations"
            }
        },
        "NetworkAnalyzerConfigurations": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationArn"
                },
                "Name": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationName"
                }
            }
        },
        "ListNetworkAnalyzerConfigurationsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListPartnerAccountsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkAccountList"
                }
            }
        },
        "SidewalkAccountList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SidewalkAccountInfoWithFingerprint"
            }
        },
        "ListPartnerAccountsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListPositionConfigurationsResponse": {
            "type": "object",
            "properties": {
                "PositionConfigurationList": {
                    "$ref": "#/$defs/PositionConfigurationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PositionConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PositionConfigurationItem"
            }
        },
        "PositionConfigurationItem": {
            "type": "object",
            "properties": {
                "ResourceIdentifier": {
                    "$ref": "#/$defs/PositionResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/PositionResourceType"
                },
                "Solvers": {
                    "$ref": "#/$defs/PositionSolverDetails"
                },
                "Destination": {
                    "$ref": "#/$defs/DestinationName"
                }
            }
        },
        "ListPositionConfigurationsRequest": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "$ref": "#/$defs/PositionResourceType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListQueuedMessagesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DownlinkQueueMessagesList": {
                    "$ref": "#/$defs/DownlinkQueueMessagesList"
                }
            }
        },
        "DownlinkQueueMessagesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DownlinkQueueMessage"
            }
        },
        "DownlinkQueueMessage": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/MessageId"
                },
                "TransmitMode": {
                    "$ref": "#/$defs/TransmitMode"
                },
                "ReceivedAt": {
                    "$ref": "#/$defs/ISODateTimeString"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANSendDataToDevice"
                }
            }
        },
        "TransmitMode": {
            "type": "integer",
            "format": "int32"
        },
        "LoRaWANSendDataToDevice": {
            "type": "object",
            "properties": {
                "FPort": {
                    "$ref": "#/$defs/FPort"
                },
                "ParticipatingGateways": {
                    "$ref": "#/$defs/ParticipatingGateways"
                }
            }
        },
        "ParticipatingGateways": {
            "type": "object",
            "properties": {
                "DownlinkMode": {
                    "$ref": "#/$defs/DownlinkMode"
                },
                "GatewayList": {
                    "$ref": "#/$defs/GatewayList"
                },
                "TransmissionInterval": {
                    "$ref": "#/$defs/TransmissionInterval"
                }
            }
        },
        "DownlinkMode": {
            "enum": [
                "SEQUENTIAL",
                "CONCURRENT",
                "USING_UPLINK_GATEWAY"
            ]
        },
        "GatewayList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GatewayListItem"
            }
        },
        "GatewayListItem": {
            "type": "object",
            "properties": {
                "GatewayId": {
                    "$ref": "#/$defs/WirelessGatewayId"
                },
                "DownlinkFrequency": {
                    "$ref": "#/$defs/DownlinkFrequency"
                }
            }
        },
        "DownlinkFrequency": {
            "type": "integer",
            "format": "int32"
        },
        "TransmissionInterval": {
            "type": "integer",
            "format": "int32"
        },
        "ListQueuedMessagesRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "WirelessDeviceType": {
                    "$ref": "#/$defs/WirelessDeviceType"
                }
            }
        },
        "ListServiceProfilesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ServiceProfileList": {
                    "$ref": "#/$defs/ServiceProfileList"
                }
            }
        },
        "ServiceProfileList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceProfile"
            }
        },
        "ServiceProfile": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/ServiceProfileArn"
                },
                "Name": {
                    "$ref": "#/$defs/ServiceProfileName"
                },
                "Id": {
                    "$ref": "#/$defs/ServiceProfileId"
                }
            }
        },
        "ListServiceProfilesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "ListWirelessDeviceImportTasksResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "WirelessDeviceImportTaskList": {
                    "$ref": "#/$defs/WirelessDeviceImportTaskList"
                }
            }
        },
        "WirelessDeviceImportTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WirelessDeviceImportTask"
            }
        },
        "WirelessDeviceImportTask": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ImportTaskId"
                },
                "Arn": {
                    "$ref": "#/$defs/ImportTaskArn"
                },
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkGetStartImportInfo"
                },
                "CreationTime": {
                    "$ref": "#/$defs/CreationTime"
                },
                "Status": {
                    "$ref": "#/$defs/ImportTaskStatus"
                },
                "StatusReason": {
                    "$ref": "#/$defs/StatusReason"
                },
                "InitializedImportedDeviceCount": {
                    "$ref": "#/$defs/ImportedWirelessDeviceCount"
                },
                "PendingImportedDeviceCount": {
                    "$ref": "#/$defs/ImportedWirelessDeviceCount"
                },
                "OnboardedImportedDeviceCount": {
                    "$ref": "#/$defs/ImportedWirelessDeviceCount"
                },
                "FailedImportedDeviceCount": {
                    "$ref": "#/$defs/ImportedWirelessDeviceCount"
                }
            }
        },
        "ListWirelessDeviceImportTasksRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListWirelessDevicesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "WirelessDeviceList": {
                    "$ref": "#/$defs/WirelessDeviceStatisticsList"
                }
            }
        },
        "WirelessDeviceStatisticsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WirelessDeviceStatistics"
            }
        },
        "WirelessDeviceStatistics": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/WirelessDeviceArn"
                },
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                },
                "Type": {
                    "$ref": "#/$defs/WirelessDeviceType"
                },
                "Name": {
                    "$ref": "#/$defs/WirelessDeviceName"
                },
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                },
                "LastUplinkReceivedAt": {
                    "$ref": "#/$defs/ISODateTimeString"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANListDevice"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkListDevice"
                },
                "FuotaDeviceStatus": {
                    "$ref": "#/$defs/FuotaDeviceStatus"
                },
                "MulticastDeviceStatus": {
                    "$ref": "#/$defs/MulticastDeviceStatus"
                },
                "McGroupId": {
                    "$ref": "#/$defs/McGroupId"
                }
            }
        },
        "LoRaWANListDevice": {
            "type": "object",
            "properties": {
                "DevEui": {
                    "$ref": "#/$defs/DevEui"
                }
            }
        },
        "SidewalkListDevice": {
            "type": "object",
            "properties": {
                "AmazonId": {
                    "$ref": "#/$defs/AmazonId"
                },
                "SidewalkId": {
                    "$ref": "#/$defs/SidewalkId"
                },
                "SidewalkManufacturingSn": {
                    "$ref": "#/$defs/SidewalkManufacturingSn"
                },
                "DeviceCertificates": {
                    "$ref": "#/$defs/DeviceCertificateList"
                },
                "DeviceProfileId": {
                    "$ref": "#/$defs/DeviceProfileId"
                },
                "Status": {
                    "$ref": "#/$defs/WirelessDeviceSidewalkStatus"
                }
            }
        },
        "FuotaDeviceStatus": {
            "enum": [
                "Initial",
                "Package_Not_Supported",
                "FragAlgo_unsupported",
                "Not_enough_memory",
                "FragIndex_unsupported",
                "Wrong_descriptor",
                "SessionCnt_replay",
                "MissingFrag",
                "MemoryError",
                "MICError",
                "Successful",
                "Device_exist_in_conflict_fuota_task"
            ]
        },
        "MulticastDeviceStatus": {
            "type": "string"
        },
        "McGroupId": {
            "type": "integer",
            "format": "int32"
        },
        "ListWirelessDevicesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                },
                "DeviceProfileId": {
                    "$ref": "#/$defs/DeviceProfileId"
                },
                "ServiceProfileId": {
                    "$ref": "#/$defs/ServiceProfileId"
                },
                "WirelessDeviceType": {
                    "$ref": "#/$defs/WirelessDeviceType"
                },
                "FuotaTaskId": {
                    "$ref": "#/$defs/FuotaTaskId"
                },
                "MulticastGroupId": {
                    "$ref": "#/$defs/MulticastGroupId"
                }
            }
        },
        "ListWirelessGatewaysResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "WirelessGatewayList": {
                    "$ref": "#/$defs/WirelessGatewayStatisticsList"
                }
            }
        },
        "WirelessGatewayStatisticsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WirelessGatewayStatistics"
            }
        },
        "WirelessGatewayStatistics": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/WirelessGatewayArn"
                },
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                },
                "Name": {
                    "$ref": "#/$defs/WirelessGatewayName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANGateway"
                },
                "LastUplinkReceivedAt": {
                    "$ref": "#/$defs/ISODateTimeString"
                }
            }
        },
        "ListWirelessGatewaysRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListWirelessGatewayTaskDefinitionsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "TaskDefinitions": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionList"
                }
            }
        },
        "WirelessGatewayTaskDefinitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UpdateWirelessGatewayTaskEntry"
            }
        },
        "UpdateWirelessGatewayTaskEntry": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionId"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANUpdateGatewayTaskEntry"
                },
                "Arn": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionArn"
                }
            }
        },
        "LoRaWANUpdateGatewayTaskEntry": {
            "type": "object",
            "properties": {
                "CurrentVersion": {
                    "$ref": "#/$defs/LoRaWANGatewayVersion"
                },
                "UpdateVersion": {
                    "$ref": "#/$defs/LoRaWANGatewayVersion"
                }
            }
        },
        "ListWirelessGatewayTaskDefinitionsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "TaskDefinitionType": {
                    "$ref": "#/$defs/WirelessGatewayTaskDefinitionType"
                }
            }
        },
        "WirelessGatewayTaskDefinitionType": {
            "enum": [
                "UPDATE"
            ]
        },
        "PutPositionConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "PutPositionConfigurationRequest": {
            "type": "object",
            "properties": {
                "ResourceIdentifier": {
                    "$ref": "#/$defs/PositionResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/PositionResourceType"
                },
                "Solvers": {
                    "$ref": "#/$defs/PositionSolverConfigurations"
                },
                "Destination": {
                    "$ref": "#/$defs/DestinationName"
                }
            }
        },
        "PositionSolverConfigurations": {
            "type": "object",
            "properties": {
                "SemtechGnss": {
                    "$ref": "#/$defs/SemtechGnssConfiguration"
                }
            }
        },
        "SemtechGnssConfiguration": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/PositionConfigurationStatus"
                },
                "Fec": {
                    "$ref": "#/$defs/PositionConfigurationFec"
                }
            }
        },
        "PutResourceLogLevelResponse": {
            "type": "object",
            "properties": {}
        },
        "PutResourceLogLevelRequest": {
            "type": "object",
            "properties": {
                "ResourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "LogLevel": {
                    "$ref": "#/$defs/LogLevel"
                }
            }
        },
        "ResetAllResourceLogLevelsResponse": {
            "type": "object",
            "properties": {}
        },
        "ResetAllResourceLogLevelsRequest": {
            "type": "object",
            "properties": {}
        },
        "ResetResourceLogLevelResponse": {
            "type": "object",
            "properties": {}
        },
        "ResetResourceLogLevelRequest": {
            "type": "object",
            "properties": {
                "ResourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "SendDataToMulticastGroupResponse": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/MulticastGroupMessageId"
                }
            }
        },
        "MulticastGroupMessageId": {
            "type": "string"
        },
        "SendDataToMulticastGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                },
                "PayloadData": {
                    "$ref": "#/$defs/PayloadData"
                },
                "WirelessMetadata": {
                    "$ref": "#/$defs/MulticastWirelessMetadata"
                }
            }
        },
        "PayloadData": {
            "type": "string"
        },
        "MulticastWirelessMetadata": {
            "type": "object",
            "properties": {
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANMulticastMetadata"
                }
            }
        },
        "LoRaWANMulticastMetadata": {
            "type": "object",
            "properties": {
                "FPort": {
                    "$ref": "#/$defs/FPort"
                }
            }
        },
        "SendDataToWirelessDeviceResponse": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/MessageId"
                }
            }
        },
        "SendDataToWirelessDeviceRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                },
                "TransmitMode": {
                    "$ref": "#/$defs/TransmitMode"
                },
                "PayloadData": {
                    "$ref": "#/$defs/PayloadData"
                },
                "WirelessMetadata": {
                    "$ref": "#/$defs/WirelessMetadata"
                }
            }
        },
        "WirelessMetadata": {
            "type": "object",
            "properties": {
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANSendDataToDevice"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkSendDataToDevice"
                }
            }
        },
        "SidewalkSendDataToDevice": {
            "type": "object",
            "properties": {
                "Seq": {
                    "$ref": "#/$defs/Seq"
                },
                "MessageType": {
                    "$ref": "#/$defs/MessageType"
                },
                "AckModeRetryDurationSecs": {
                    "$ref": "#/$defs/AckModeRetryDurationSecs"
                }
            }
        },
        "Seq": {
            "type": "integer",
            "format": "int32"
        },
        "MessageType": {
            "enum": [
                "CUSTOM_COMMAND_ID_NOTIFY",
                "CUSTOM_COMMAND_ID_GET",
                "CUSTOM_COMMAND_ID_SET",
                "CUSTOM_COMMAND_ID_RESP"
            ]
        },
        "AckModeRetryDurationSecs": {
            "type": "integer",
            "format": "int32"
        },
        "StartBulkAssociateWirelessDeviceWithMulticastGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "StartBulkAssociateWirelessDeviceWithMulticastGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                },
                "QueryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "QueryString": {
            "type": "string"
        },
        "StartBulkDisassociateWirelessDeviceFromMulticastGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "StartBulkDisassociateWirelessDeviceFromMulticastGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                },
                "QueryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "StartFuotaTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "StartFuotaTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANStartFuotaTask"
                }
            }
        },
        "LoRaWANStartFuotaTask": {
            "type": "object",
            "properties": {
                "StartTime": {
                    "$ref": "#/$defs/StartTime"
                }
            }
        },
        "StartMulticastGroupSessionResponse": {
            "type": "object",
            "properties": {}
        },
        "StartMulticastGroupSessionRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANMulticastSession"
                }
            }
        },
        "StartSingleWirelessDeviceImportTaskResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ImportTaskId"
                },
                "Arn": {
                    "$ref": "#/$defs/ImportTaskArn"
                }
            }
        },
        "StartSingleWirelessDeviceImportTaskRequest": {
            "type": "object",
            "properties": {
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "DeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkSingleStartImportInfo"
                }
            }
        },
        "DeviceName": {
            "type": "string"
        },
        "SidewalkSingleStartImportInfo": {
            "type": "object",
            "properties": {
                "SidewalkManufacturingSn": {
                    "$ref": "#/$defs/SidewalkManufacturingSn"
                }
            }
        },
        "StartWirelessDeviceImportTaskResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ImportTaskId"
                },
                "Arn": {
                    "$ref": "#/$defs/ImportTaskArn"
                }
            }
        },
        "StartWirelessDeviceImportTaskRequest": {
            "type": "object",
            "properties": {
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkStartImportInfo"
                }
            }
        },
        "SidewalkStartImportInfo": {
            "type": "object",
            "properties": {
                "DeviceCreationFile": {
                    "$ref": "#/$defs/DeviceCreationFile"
                },
                "Role": {
                    "$ref": "#/$defs/Role"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TestWirelessDeviceResponse": {
            "type": "object",
            "properties": {
                "Result": {
                    "$ref": "#/$defs/Result"
                }
            }
        },
        "Result": {
            "type": "string"
        },
        "TestWirelessDeviceRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateDestinationRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DestinationName"
                },
                "ExpressionType": {
                    "$ref": "#/$defs/ExpressionType"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "UpdateEventConfigurationByResourceTypesResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateEventConfigurationByResourceTypesRequest": {
            "type": "object",
            "properties": {
                "DeviceRegistrationState": {
                    "$ref": "#/$defs/DeviceRegistrationStateResourceTypeEventConfiguration"
                },
                "Proximity": {
                    "$ref": "#/$defs/ProximityResourceTypeEventConfiguration"
                },
                "Join": {
                    "$ref": "#/$defs/JoinResourceTypeEventConfiguration"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/ConnectionStatusResourceTypeEventConfiguration"
                },
                "MessageDeliveryStatus": {
                    "$ref": "#/$defs/MessageDeliveryStatusResourceTypeEventConfiguration"
                }
            }
        },
        "UpdateFuotaTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateFuotaTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/FuotaTaskId"
                },
                "Name": {
                    "$ref": "#/$defs/FuotaTaskName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANFuotaTask"
                },
                "FirmwareUpdateImage": {
                    "$ref": "#/$defs/FirmwareUpdateImage"
                },
                "FirmwareUpdateRole": {
                    "$ref": "#/$defs/FirmwareUpdateRole"
                },
                "RedundancyPercent": {
                    "$ref": "#/$defs/RedundancyPercent"
                },
                "FragmentSizeBytes": {
                    "$ref": "#/$defs/FragmentSizeBytes"
                },
                "FragmentIntervalMS": {
                    "$ref": "#/$defs/FragmentIntervalMS"
                }
            }
        },
        "UpdateLogLevelsByResourceTypesResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateLogLevelsByResourceTypesRequest": {
            "type": "object",
            "properties": {
                "DefaultLogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "WirelessDeviceLogOptions": {
                    "$ref": "#/$defs/WirelessDeviceLogOptionList"
                },
                "WirelessGatewayLogOptions": {
                    "$ref": "#/$defs/WirelessGatewayLogOptionList"
                }
            }
        },
        "UpdateMetricConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateMetricConfigurationRequest": {
            "type": "object",
            "properties": {
                "SummaryMetric": {
                    "$ref": "#/$defs/SummaryMetricConfiguration"
                }
            }
        },
        "UpdateMulticastGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateMulticastGroupRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/MulticastGroupId"
                },
                "Name": {
                    "$ref": "#/$defs/MulticastGroupName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANMulticast"
                }
            }
        },
        "UpdateNetworkAnalyzerConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateNetworkAnalyzerConfigurationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationName": {
                    "$ref": "#/$defs/NetworkAnalyzerConfigurationName"
                },
                "TraceContent": {
                    "$ref": "#/$defs/TraceContent"
                },
                "WirelessDevicesToAdd": {
                    "$ref": "#/$defs/WirelessDeviceList"
                },
                "WirelessDevicesToRemove": {
                    "$ref": "#/$defs/WirelessDeviceList"
                },
                "WirelessGatewaysToAdd": {
                    "$ref": "#/$defs/WirelessGatewayList"
                },
                "WirelessGatewaysToRemove": {
                    "$ref": "#/$defs/WirelessGatewayList"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "MulticastGroupsToAdd": {
                    "$ref": "#/$defs/NetworkAnalyzerMulticastGroupList"
                },
                "MulticastGroupsToRemove": {
                    "$ref": "#/$defs/NetworkAnalyzerMulticastGroupList"
                }
            }
        },
        "UpdatePartnerAccountResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdatePartnerAccountRequest": {
            "type": "object",
            "properties": {
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkUpdateAccount"
                },
                "PartnerAccountId": {
                    "$ref": "#/$defs/PartnerAccountId"
                },
                "PartnerType": {
                    "$ref": "#/$defs/PartnerType"
                }
            }
        },
        "SidewalkUpdateAccount": {
            "type": "object",
            "properties": {
                "AppServerPrivateKey": {
                    "$ref": "#/$defs/AppServerPrivateKey"
                }
            }
        },
        "UpdatePositionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdatePositionRequest": {
            "type": "object",
            "properties": {
                "ResourceIdentifier": {
                    "$ref": "#/$defs/PositionResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/PositionResourceType"
                },
                "Position": {
                    "$ref": "#/$defs/PositionCoordinate"
                }
            }
        },
        "UpdateResourceEventConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateResourceEventConfigurationRequest": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "IdentifierType": {
                    "$ref": "#/$defs/IdentifierType"
                },
                "PartnerType": {
                    "$ref": "#/$defs/EventNotificationPartnerType"
                },
                "DeviceRegistrationState": {
                    "$ref": "#/$defs/DeviceRegistrationStateEventConfiguration"
                },
                "Proximity": {
                    "$ref": "#/$defs/ProximityEventConfiguration"
                },
                "Join": {
                    "$ref": "#/$defs/JoinEventConfiguration"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/ConnectionStatusEventConfiguration"
                },
                "MessageDeliveryStatus": {
                    "$ref": "#/$defs/MessageDeliveryStatusEventConfiguration"
                }
            }
        },
        "UpdateResourcePositionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateResourcePositionRequest": {
            "type": "object",
            "properties": {
                "ResourceIdentifier": {
                    "$ref": "#/$defs/PositionResourceIdentifier"
                },
                "ResourceType": {
                    "$ref": "#/$defs/PositionResourceType"
                },
                "GeoJsonPayload": {
                    "$ref": "#/$defs/GeoJsonPayload"
                }
            }
        },
        "UpdateWirelessDeviceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateWirelessDeviceRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessDeviceId"
                },
                "DestinationName": {
                    "$ref": "#/$defs/DestinationName"
                },
                "Name": {
                    "$ref": "#/$defs/WirelessDeviceName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "LoRaWAN": {
                    "$ref": "#/$defs/LoRaWANUpdateDevice"
                },
                "Positioning": {
                    "$ref": "#/$defs/PositioningConfigStatus"
                }
            }
        },
        "LoRaWANUpdateDevice": {
            "type": "object",
            "properties": {
                "DeviceProfileId": {
                    "$ref": "#/$defs/DeviceProfileId"
                },
                "ServiceProfileId": {
                    "$ref": "#/$defs/ServiceProfileId"
                },
                "AbpV1_1": {
                    "$ref": "#/$defs/UpdateAbpV1_1"
                },
                "AbpV1_0_x": {
                    "$ref": "#/$defs/UpdateAbpV1_0_x"
                },
                "FPorts": {
                    "$ref": "#/$defs/UpdateFPorts"
                }
            }
        },
        "UpdateAbpV1_1": {
            "type": "object",
            "properties": {
                "FCntStart": {
                    "$ref": "#/$defs/FCntStart"
                }
            }
        },
        "UpdateAbpV1_0_x": {
            "type": "object",
            "properties": {
                "FCntStart": {
                    "$ref": "#/$defs/FCntStart"
                }
            }
        },
        "UpdateFPorts": {
            "type": "object",
            "properties": {
                "Positioning": {
                    "$ref": "#/$defs/Positioning"
                },
                "Applications": {
                    "$ref": "#/$defs/Applications"
                }
            }
        },
        "UpdateWirelessDeviceImportTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateWirelessDeviceImportTaskRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ImportTaskId"
                },
                "Sidewalk": {
                    "$ref": "#/$defs/SidewalkUpdateImportInfo"
                }
            }
        },
        "SidewalkUpdateImportInfo": {
            "type": "object",
            "properties": {
                "DeviceCreationFile": {
                    "$ref": "#/$defs/DeviceCreationFile"
                }
            }
        },
        "UpdateWirelessGatewayResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateWirelessGatewayRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/WirelessGatewayId"
                },
                "Name": {
                    "$ref": "#/$defs/WirelessGatewayName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "JoinEuiFilters": {
                    "$ref": "#/$defs/JoinEuiFilters"
                },
                "NetIdFilters": {
                    "$ref": "#/$defs/NetIdFilters"
                },
                "MaxEirp": {
                    "$ref": "#/$defs/GatewayMaxEirp"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://api.iotwireless-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://api.iotwireless-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://api.iotwireless.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://api.iotwireless.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}