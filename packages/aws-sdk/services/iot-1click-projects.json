{
    "name": "iot1click",
    "commands": [
        {
            "name": "AssociateDeviceWithPlacement",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "placementName": "route.placementName",
                            "deviceTemplateName": "route.deviceTemplateName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/projects/{projectName}/placements/{placementName}/devices/{deviceTemplateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateDeviceWithPlacementResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0.placementName",
                        "param.0.deviceTemplateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateDeviceWithPlacementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePlacement",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/projects/{projectName}/placements"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePlacementResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePlacementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateProject",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/projects"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProjectResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateProjectRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePlacement",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "placementName": "route.placementName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/projects/{projectName}/placements/{placementName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePlacementResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0.placementName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePlacementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteProject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/projects/{projectName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProjectResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProjectRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribePlacement",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "placementName": "route.placementName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/projects/{projectName}/placements/{placementName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePlacementResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0.placementName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePlacementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeProject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/projects/{projectName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeProjectResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeProjectRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateDeviceFromPlacement",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "placementName": "route.placementName",
                            "deviceTemplateName": "route.deviceTemplateName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/projects/{projectName}/placements/{placementName}/devices/{deviceTemplateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateDeviceFromPlacementResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0.placementName",
                        "param.0.deviceTemplateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateDeviceFromPlacementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDevicesInPlacement",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "placementName": "route.placementName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/projects/{projectName}/placements/{placementName}/devices"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDevicesInPlacementResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0.placementName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDevicesInPlacementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPlacements",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/projects/{projectName}/placements"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPlacementsResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPlacementsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListProjects",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/projects"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProjectsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProjectsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0.resourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePlacement",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "placementName": "route.placementName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/projects/{projectName}/placements/{placementName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePlacementResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0.placementName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePlacementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateProject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "projectName": "route.projectName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/projects/{projectName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateProjectResponse"
                    },
                    "inject": [
                        "param.0.projectName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateProjectRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateDeviceWithPlacementResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateDeviceWithPlacementRequest": {
            "type": "object",
            "properties": {
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "placementName": {
                    "$ref": "#/$defs/PlacementName"
                },
                "deviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "deviceTemplateName": {
                    "$ref": "#/$defs/DeviceTemplateName"
                }
            }
        },
        "ProjectName": {
            "type": "string"
        },
        "PlacementName": {
            "type": "string"
        },
        "DeviceId": {
            "type": "string"
        },
        "DeviceTemplateName": {
            "type": "string"
        },
        "CreatePlacementResponse": {
            "type": "object",
            "properties": {}
        },
        "CreatePlacementRequest": {
            "type": "object",
            "properties": {
                "placementName": {
                    "$ref": "#/$defs/PlacementName"
                },
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "attributes": {
                    "$ref": "#/$defs/PlacementAttributeMap"
                }
            }
        },
        "PlacementAttributeMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "AttributeValue": {
            "type": "string"
        },
        "CreateProjectResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateProjectRequest": {
            "type": "object",
            "properties": {
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "placementTemplate": {
                    "$ref": "#/$defs/PlacementTemplate"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "Description": {
            "type": "string"
        },
        "PlacementTemplate": {
            "type": "object",
            "properties": {
                "defaultAttributes": {
                    "$ref": "#/$defs/DefaultPlacementAttributeMap"
                },
                "deviceTemplates": {
                    "$ref": "#/$defs/DeviceTemplateMap"
                }
            }
        },
        "DefaultPlacementAttributeMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeDefaultValue"
            }
        },
        "AttributeDefaultValue": {
            "type": "string"
        },
        "DeviceTemplateMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DeviceTemplate"
            }
        },
        "DeviceTemplate": {
            "type": "object",
            "properties": {
                "deviceType": {
                    "$ref": "#/$defs/DeviceType"
                },
                "callbackOverrides": {
                    "$ref": "#/$defs/DeviceCallbackOverrideMap"
                }
            }
        },
        "DeviceType": {
            "type": "string"
        },
        "DeviceCallbackOverrideMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DeviceCallbackValue"
            }
        },
        "DeviceCallbackValue": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "DeletePlacementResponse": {
            "type": "object",
            "properties": {}
        },
        "DeletePlacementRequest": {
            "type": "object",
            "properties": {
                "placementName": {
                    "$ref": "#/$defs/PlacementName"
                },
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "DeleteProjectResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteProjectRequest": {
            "type": "object",
            "properties": {
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "DescribePlacementResponse": {
            "type": "object",
            "properties": {
                "placement": {
                    "$ref": "#/$defs/PlacementDescription"
                }
            }
        },
        "PlacementDescription": {
            "type": "object",
            "properties": {
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "placementName": {
                    "$ref": "#/$defs/PlacementName"
                },
                "attributes": {
                    "$ref": "#/$defs/PlacementAttributeMap"
                },
                "createdDate": {
                    "$ref": "#/$defs/Time"
                },
                "updatedDate": {
                    "$ref": "#/$defs/Time"
                }
            }
        },
        "Time": {
            "type": "string",
            "format": "date-time"
        },
        "DescribePlacementRequest": {
            "type": "object",
            "properties": {
                "placementName": {
                    "$ref": "#/$defs/PlacementName"
                },
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "DescribeProjectResponse": {
            "type": "object",
            "properties": {
                "project": {
                    "$ref": "#/$defs/ProjectDescription"
                }
            }
        },
        "ProjectDescription": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "createdDate": {
                    "$ref": "#/$defs/Time"
                },
                "updatedDate": {
                    "$ref": "#/$defs/Time"
                },
                "placementTemplate": {
                    "$ref": "#/$defs/PlacementTemplate"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ProjectArn": {
            "type": "string"
        },
        "DescribeProjectRequest": {
            "type": "object",
            "properties": {
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "DisassociateDeviceFromPlacementResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateDeviceFromPlacementRequest": {
            "type": "object",
            "properties": {
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "placementName": {
                    "$ref": "#/$defs/PlacementName"
                },
                "deviceTemplateName": {
                    "$ref": "#/$defs/DeviceTemplateName"
                }
            }
        },
        "GetDevicesInPlacementResponse": {
            "type": "object",
            "properties": {
                "devices": {
                    "$ref": "#/$defs/DeviceMap"
                }
            }
        },
        "DeviceMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DeviceId"
            }
        },
        "GetDevicesInPlacementRequest": {
            "type": "object",
            "properties": {
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "placementName": {
                    "$ref": "#/$defs/PlacementName"
                }
            }
        },
        "ListPlacementsResponse": {
            "type": "object",
            "properties": {
                "placements": {
                    "$ref": "#/$defs/PlacementSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PlacementSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlacementSummary"
            }
        },
        "PlacementSummary": {
            "type": "object",
            "properties": {
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "placementName": {
                    "$ref": "#/$defs/PlacementName"
                },
                "createdDate": {
                    "$ref": "#/$defs/Time"
                },
                "updatedDate": {
                    "$ref": "#/$defs/Time"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListPlacementsRequest": {
            "type": "object",
            "properties": {
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListProjectsResponse": {
            "type": "object",
            "properties": {
                "projects": {
                    "$ref": "#/$defs/ProjectSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ProjectSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProjectSummary"
            }
        },
        "ProjectSummary": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "createdDate": {
                    "$ref": "#/$defs/Time"
                },
                "updatedDate": {
                    "$ref": "#/$defs/Time"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListProjectsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ProjectArn"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdatePlacementResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdatePlacementRequest": {
            "type": "object",
            "properties": {
                "placementName": {
                    "$ref": "#/$defs/PlacementName"
                },
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "attributes": {
                    "$ref": "#/$defs/PlacementAttributeMap"
                }
            }
        },
        "UpdateProjectResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateProjectRequest": {
            "type": "object",
            "properties": {
                "projectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "placementTemplate": {
                    "$ref": "#/$defs/PlacementTemplate"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://projects.iot1click-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://projects.iot1click-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://projects.iot1click.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://projects.iot1click.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}