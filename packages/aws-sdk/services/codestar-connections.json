{
    "name": "codestar-connections",
    "commands": [
        {
            "name": "CreateConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConnectionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateConnectionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateHost",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateHost"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateHostOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateHostInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRepositoryLink",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateRepositoryLink"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRepositoryLinkOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRepositoryLinkInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSyncConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateSyncConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSyncConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSyncConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConnectionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteConnectionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteHost",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteHost"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteHostOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteHostInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRepositoryLink",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteRepositoryLink"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRepositoryLinkOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRepositoryLinkInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSyncConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteSyncConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSyncConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSyncConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConnectionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConnectionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetHost",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetHost"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetHostOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetHostInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRepositoryLink",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetRepositoryLink"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRepositoryLinkOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRepositoryLinkInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRepositorySyncStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetRepositorySyncStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRepositorySyncStatusOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRepositorySyncStatusInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourceSyncStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourceSyncStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourceSyncStatusOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourceSyncStatusInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSyncBlockerSummary",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSyncBlockerSummary"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSyncBlockerSummaryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSyncBlockerSummaryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSyncConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSyncConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSyncConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSyncConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListConnectionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListConnectionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListHosts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListHosts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListHostsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListHostsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRepositoryLinks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListRepositoryLinks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRepositoryLinksOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRepositoryLinksInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRepositorySyncDefinitions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListRepositorySyncDefinitions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRepositorySyncDefinitionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRepositorySyncDefinitionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSyncConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListSyncConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSyncConfigurationsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSyncConfigurationsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateHost",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateHost"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateHostOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateHostInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRepositoryLink",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateRepositoryLink"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRepositoryLinkOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRepositoryLinkInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSyncBlocker",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateSyncBlocker"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSyncBlockerOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSyncBlockerInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSyncConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateSyncConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSyncConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSyncConfigurationInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateConnectionOutput": {
            "type": "object",
            "properties": {
                "ConnectionArn": {
                    "$ref": "#/$defs/ConnectionArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ConnectionArn": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateConnectionInput": {
            "type": "object",
            "properties": {
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "HostArn": {
                    "$ref": "#/$defs/HostArn"
                }
            }
        },
        "ProviderType": {
            "enum": [
                "BITBUCKET",
                "GITHUB",
                "GITHUB_ENTERPRISE_SERVER",
                "GITLAB",
                "GITLAB_SELF_MANAGED"
            ]
        },
        "ConnectionName": {
            "type": "string"
        },
        "HostArn": {
            "type": "string"
        },
        "CreateHostOutput": {
            "type": "object",
            "properties": {
                "HostArn": {
                    "$ref": "#/$defs/HostArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateHostInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/HostName"
                },
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "ProviderEndpoint": {
                    "$ref": "#/$defs/Url"
                },
                "VpcConfiguration": {
                    "$ref": "#/$defs/VpcConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "HostName": {
            "type": "string"
        },
        "Url": {
            "type": "string"
        },
        "VpcConfiguration": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIds"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIds"
                },
                "TlsCertificate": {
                    "$ref": "#/$defs/TlsCertificate"
                }
            }
        },
        "VpcId": {
            "type": "string"
        },
        "SubnetIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "SecurityGroupIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "TlsCertificate": {
            "type": "string"
        },
        "CreateRepositoryLinkOutput": {
            "type": "object",
            "properties": {
                "RepositoryLinkInfo": {
                    "$ref": "#/$defs/RepositoryLinkInfo"
                }
            }
        },
        "RepositoryLinkInfo": {
            "type": "object",
            "properties": {
                "ConnectionArn": {
                    "$ref": "#/$defs/ConnectionArn"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "OwnerId": {
                    "$ref": "#/$defs/OwnerId"
                },
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "RepositoryLinkArn": {
                    "$ref": "#/$defs/RepositoryLinkArn"
                },
                "RepositoryLinkId": {
                    "$ref": "#/$defs/RepositoryLinkId"
                },
                "RepositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                }
            }
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "OwnerId": {
            "type": "string"
        },
        "RepositoryLinkArn": {
            "type": "string"
        },
        "RepositoryLinkId": {
            "type": "string"
        },
        "RepositoryName": {
            "type": "string"
        },
        "CreateRepositoryLinkInput": {
            "type": "object",
            "properties": {
                "ConnectionArn": {
                    "$ref": "#/$defs/ConnectionArn"
                },
                "OwnerId": {
                    "$ref": "#/$defs/OwnerId"
                },
                "RepositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateSyncConfigurationOutput": {
            "type": "object",
            "properties": {
                "SyncConfiguration": {
                    "$ref": "#/$defs/SyncConfiguration"
                }
            }
        },
        "SyncConfiguration": {
            "type": "object",
            "properties": {
                "Branch": {
                    "$ref": "#/$defs/BranchName"
                },
                "ConfigFile": {
                    "$ref": "#/$defs/DeploymentFilePath"
                },
                "OwnerId": {
                    "$ref": "#/$defs/OwnerId"
                },
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "RepositoryLinkId": {
                    "$ref": "#/$defs/RepositoryLinkId"
                },
                "RepositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "RoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                },
                "PublishDeploymentStatus": {
                    "$ref": "#/$defs/PublishDeploymentStatus"
                },
                "TriggerResourceUpdateOn": {
                    "$ref": "#/$defs/TriggerResourceUpdateOn"
                }
            }
        },
        "BranchName": {
            "type": "string"
        },
        "DeploymentFilePath": {
            "type": "string"
        },
        "ResourceName": {
            "type": "string"
        },
        "IamRoleArn": {
            "type": "string"
        },
        "SyncConfigurationType": {
            "enum": [
                "CFN_STACK_SYNC"
            ]
        },
        "PublishDeploymentStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "TriggerResourceUpdateOn": {
            "enum": [
                "ANY_CHANGE",
                "FILE_CHANGE"
            ]
        },
        "CreateSyncConfigurationInput": {
            "type": "object",
            "properties": {
                "Branch": {
                    "$ref": "#/$defs/BranchName"
                },
                "ConfigFile": {
                    "$ref": "#/$defs/DeploymentFilePath"
                },
                "RepositoryLinkId": {
                    "$ref": "#/$defs/RepositoryLinkId"
                },
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "RoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                },
                "PublishDeploymentStatus": {
                    "$ref": "#/$defs/PublishDeploymentStatus"
                },
                "TriggerResourceUpdateOn": {
                    "$ref": "#/$defs/TriggerResourceUpdateOn"
                }
            }
        },
        "DeleteConnectionOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteConnectionInput": {
            "type": "object",
            "properties": {
                "ConnectionArn": {
                    "$ref": "#/$defs/ConnectionArn"
                }
            }
        },
        "DeleteHostOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteHostInput": {
            "type": "object",
            "properties": {
                "HostArn": {
                    "$ref": "#/$defs/HostArn"
                }
            }
        },
        "DeleteRepositoryLinkOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteRepositoryLinkInput": {
            "type": "object",
            "properties": {
                "RepositoryLinkId": {
                    "$ref": "#/$defs/RepositoryLinkId"
                }
            }
        },
        "DeleteSyncConfigurationOutput": {
            "type": "object",
            "properties": {}
        },
        "DeleteSyncConfigurationInput": {
            "type": "object",
            "properties": {
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                },
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetConnectionOutput": {
            "type": "object",
            "properties": {
                "Connection": {
                    "$ref": "#/$defs/Connection"
                }
            }
        },
        "Connection": {
            "type": "object",
            "properties": {
                "ConnectionName": {
                    "$ref": "#/$defs/ConnectionName"
                },
                "ConnectionArn": {
                    "$ref": "#/$defs/ConnectionArn"
                },
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "OwnerAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/ConnectionStatus"
                },
                "HostArn": {
                    "$ref": "#/$defs/HostArn"
                }
            }
        },
        "AccountId": {
            "type": "string"
        },
        "ConnectionStatus": {
            "enum": [
                "PENDING",
                "AVAILABLE",
                "ERROR"
            ]
        },
        "GetConnectionInput": {
            "type": "object",
            "properties": {
                "ConnectionArn": {
                    "$ref": "#/$defs/ConnectionArn"
                }
            }
        },
        "GetHostOutput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/HostName"
                },
                "Status": {
                    "$ref": "#/$defs/HostStatus"
                },
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "ProviderEndpoint": {
                    "$ref": "#/$defs/Url"
                },
                "VpcConfiguration": {
                    "$ref": "#/$defs/VpcConfiguration"
                }
            }
        },
        "HostStatus": {
            "type": "string"
        },
        "GetHostInput": {
            "type": "object",
            "properties": {
                "HostArn": {
                    "$ref": "#/$defs/HostArn"
                }
            }
        },
        "GetRepositoryLinkOutput": {
            "type": "object",
            "properties": {
                "RepositoryLinkInfo": {
                    "$ref": "#/$defs/RepositoryLinkInfo"
                }
            }
        },
        "GetRepositoryLinkInput": {
            "type": "object",
            "properties": {
                "RepositoryLinkId": {
                    "$ref": "#/$defs/RepositoryLinkId"
                }
            }
        },
        "GetRepositorySyncStatusOutput": {
            "type": "object",
            "properties": {
                "LatestSync": {
                    "$ref": "#/$defs/RepositorySyncAttempt"
                }
            }
        },
        "RepositorySyncAttempt": {
            "type": "object",
            "properties": {
                "StartedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/RepositorySyncStatus"
                },
                "Events": {
                    "$ref": "#/$defs/RepositorySyncEventList"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "RepositorySyncStatus": {
            "enum": [
                "FAILED",
                "INITIATED",
                "IN_PROGRESS",
                "SUCCEEDED",
                "QUEUED"
            ]
        },
        "RepositorySyncEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositorySyncEvent"
            }
        },
        "RepositorySyncEvent": {
            "type": "object",
            "properties": {
                "Event": {
                    "$ref": "#/$defs/Event"
                },
                "ExternalId": {
                    "$ref": "#/$defs/ExternalId"
                },
                "Time": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Type": {
                    "$ref": "#/$defs/Type"
                }
            }
        },
        "Event": {
            "type": "string"
        },
        "ExternalId": {
            "type": "string"
        },
        "Type": {
            "type": "string"
        },
        "GetRepositorySyncStatusInput": {
            "type": "object",
            "properties": {
                "Branch": {
                    "$ref": "#/$defs/BranchName"
                },
                "RepositoryLinkId": {
                    "$ref": "#/$defs/RepositoryLinkId"
                },
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                }
            }
        },
        "GetResourceSyncStatusOutput": {
            "type": "object",
            "properties": {
                "DesiredState": {
                    "$ref": "#/$defs/Revision"
                },
                "LatestSuccessfulSync": {
                    "$ref": "#/$defs/ResourceSyncAttempt"
                },
                "LatestSync": {
                    "$ref": "#/$defs/ResourceSyncAttempt"
                }
            }
        },
        "Revision": {
            "type": "object",
            "properties": {
                "Branch": {
                    "$ref": "#/$defs/BranchName"
                },
                "Directory": {
                    "$ref": "#/$defs/Directory"
                },
                "OwnerId": {
                    "$ref": "#/$defs/OwnerId"
                },
                "RepositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "Sha": {
                    "$ref": "#/$defs/SHA"
                }
            }
        },
        "Directory": {
            "type": "string"
        },
        "SHA": {
            "type": "string"
        },
        "ResourceSyncAttempt": {
            "type": "object",
            "properties": {
                "Events": {
                    "$ref": "#/$defs/ResourceSyncEventList"
                },
                "InitialRevision": {
                    "$ref": "#/$defs/Revision"
                },
                "StartedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/ResourceSyncStatus"
                },
                "TargetRevision": {
                    "$ref": "#/$defs/Revision"
                },
                "Target": {
                    "$ref": "#/$defs/Target"
                }
            }
        },
        "ResourceSyncEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceSyncEvent"
            }
        },
        "ResourceSyncEvent": {
            "type": "object",
            "properties": {
                "Event": {
                    "$ref": "#/$defs/Event"
                },
                "ExternalId": {
                    "$ref": "#/$defs/ExternalId"
                },
                "Time": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Type": {
                    "$ref": "#/$defs/Type"
                }
            }
        },
        "ResourceSyncStatus": {
            "enum": [
                "FAILED",
                "INITIATED",
                "IN_PROGRESS",
                "SUCCEEDED"
            ]
        },
        "Target": {
            "type": "string"
        },
        "GetResourceSyncStatusInput": {
            "type": "object",
            "properties": {
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                }
            }
        },
        "GetSyncBlockerSummaryOutput": {
            "type": "object",
            "properties": {
                "SyncBlockerSummary": {
                    "$ref": "#/$defs/SyncBlockerSummary"
                }
            }
        },
        "SyncBlockerSummary": {
            "type": "object",
            "properties": {
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "ParentResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "LatestBlockers": {
                    "$ref": "#/$defs/LatestSyncBlockerList"
                }
            }
        },
        "LatestSyncBlockerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SyncBlocker"
            }
        },
        "SyncBlocker": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Id"
                },
                "Type": {
                    "$ref": "#/$defs/BlockerType"
                },
                "Status": {
                    "$ref": "#/$defs/BlockerStatus"
                },
                "CreatedReason": {
                    "$ref": "#/$defs/CreatedReason"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Contexts": {
                    "$ref": "#/$defs/SyncBlockerContextList"
                },
                "ResolvedReason": {
                    "$ref": "#/$defs/ResolvedReason"
                },
                "ResolvedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Id": {
            "type": "string"
        },
        "BlockerType": {
            "enum": [
                "AUTOMATED"
            ]
        },
        "BlockerStatus": {
            "enum": [
                "ACTIVE",
                "RESOLVED"
            ]
        },
        "CreatedReason": {
            "type": "string"
        },
        "SyncBlockerContextList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SyncBlockerContext"
            }
        },
        "SyncBlockerContext": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/SyncBlockerContextKey"
                },
                "Value": {
                    "$ref": "#/$defs/SyncBlockerContextValue"
                }
            }
        },
        "SyncBlockerContextKey": {
            "type": "string"
        },
        "SyncBlockerContextValue": {
            "type": "string"
        },
        "ResolvedReason": {
            "type": "string"
        },
        "GetSyncBlockerSummaryInput": {
            "type": "object",
            "properties": {
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                },
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetSyncConfigurationOutput": {
            "type": "object",
            "properties": {
                "SyncConfiguration": {
                    "$ref": "#/$defs/SyncConfiguration"
                }
            }
        },
        "GetSyncConfigurationInput": {
            "type": "object",
            "properties": {
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                },
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "ListConnectionsOutput": {
            "type": "object",
            "properties": {
                "Connections": {
                    "$ref": "#/$defs/ConnectionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ConnectionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Connection"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListConnectionsInput": {
            "type": "object",
            "properties": {
                "ProviderTypeFilter": {
                    "$ref": "#/$defs/ProviderType"
                },
                "HostArnFilter": {
                    "$ref": "#/$defs/HostArn"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListHostsOutput": {
            "type": "object",
            "properties": {
                "Hosts": {
                    "$ref": "#/$defs/HostList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "HostList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Host"
            }
        },
        "Host": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/HostName"
                },
                "HostArn": {
                    "$ref": "#/$defs/HostArn"
                },
                "ProviderType": {
                    "$ref": "#/$defs/ProviderType"
                },
                "ProviderEndpoint": {
                    "$ref": "#/$defs/Url"
                },
                "VpcConfiguration": {
                    "$ref": "#/$defs/VpcConfiguration"
                },
                "Status": {
                    "$ref": "#/$defs/HostStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/HostStatusMessage"
                }
            }
        },
        "HostStatusMessage": {
            "type": "string"
        },
        "ListHostsInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListRepositoryLinksOutput": {
            "type": "object",
            "properties": {
                "RepositoryLinks": {
                    "$ref": "#/$defs/RepositoryLinkList"
                },
                "NextToken": {
                    "$ref": "#/$defs/SharpNextToken"
                }
            }
        },
        "RepositoryLinkList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositoryLinkInfo"
            }
        },
        "SharpNextToken": {
            "type": "string"
        },
        "ListRepositoryLinksInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/SharpNextToken"
                }
            }
        },
        "ListRepositorySyncDefinitionsOutput": {
            "type": "object",
            "properties": {
                "RepositorySyncDefinitions": {
                    "$ref": "#/$defs/RepositorySyncDefinitionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/SharpNextToken"
                }
            }
        },
        "RepositorySyncDefinitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositorySyncDefinition"
            }
        },
        "RepositorySyncDefinition": {
            "type": "object",
            "properties": {
                "Branch": {
                    "$ref": "#/$defs/BranchName"
                },
                "Directory": {
                    "$ref": "#/$defs/Directory"
                },
                "Parent": {
                    "$ref": "#/$defs/Parent"
                },
                "Target": {
                    "$ref": "#/$defs/Target"
                }
            }
        },
        "Parent": {
            "type": "string"
        },
        "ListRepositorySyncDefinitionsInput": {
            "type": "object",
            "properties": {
                "RepositoryLinkId": {
                    "$ref": "#/$defs/RepositoryLinkId"
                },
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                }
            }
        },
        "ListSyncConfigurationsOutput": {
            "type": "object",
            "properties": {
                "SyncConfigurations": {
                    "$ref": "#/$defs/SyncConfigurationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/SharpNextToken"
                }
            }
        },
        "SyncConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SyncConfiguration"
            }
        },
        "ListSyncConfigurationsInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/SharpNextToken"
                },
                "RepositoryLinkId": {
                    "$ref": "#/$defs/RepositoryLinkId"
                },
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                }
            }
        },
        "ListTagsForResourceOutput": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsForResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "TagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateHostOutput": {
            "type": "object",
            "properties": {}
        },
        "UpdateHostInput": {
            "type": "object",
            "properties": {
                "HostArn": {
                    "$ref": "#/$defs/HostArn"
                },
                "ProviderEndpoint": {
                    "$ref": "#/$defs/Url"
                },
                "VpcConfiguration": {
                    "$ref": "#/$defs/VpcConfiguration"
                }
            }
        },
        "UpdateRepositoryLinkOutput": {
            "type": "object",
            "properties": {
                "RepositoryLinkInfo": {
                    "$ref": "#/$defs/RepositoryLinkInfo"
                }
            }
        },
        "UpdateRepositoryLinkInput": {
            "type": "object",
            "properties": {
                "ConnectionArn": {
                    "$ref": "#/$defs/ConnectionArn"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                },
                "RepositoryLinkId": {
                    "$ref": "#/$defs/RepositoryLinkId"
                }
            }
        },
        "UpdateSyncBlockerOutput": {
            "type": "object",
            "properties": {
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "ParentResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "SyncBlocker": {
                    "$ref": "#/$defs/SyncBlocker"
                }
            }
        },
        "UpdateSyncBlockerInput": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Id"
                },
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                },
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "ResolvedReason": {
                    "$ref": "#/$defs/ResolvedReason"
                }
            }
        },
        "UpdateSyncConfigurationOutput": {
            "type": "object",
            "properties": {
                "SyncConfiguration": {
                    "$ref": "#/$defs/SyncConfiguration"
                }
            }
        },
        "UpdateSyncConfigurationInput": {
            "type": "object",
            "properties": {
                "Branch": {
                    "$ref": "#/$defs/BranchName"
                },
                "ConfigFile": {
                    "$ref": "#/$defs/DeploymentFilePath"
                },
                "RepositoryLinkId": {
                    "$ref": "#/$defs/RepositoryLinkId"
                },
                "ResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "RoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "SyncType": {
                    "$ref": "#/$defs/SyncConfigurationType"
                },
                "PublishDeploymentStatus": {
                    "$ref": "#/$defs/PublishDeploymentStatus"
                },
                "TriggerResourceUpdateOn": {
                    "$ref": "#/$defs/TriggerResourceUpdateOn"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://codestar-connections-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://codestar-connections-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://codestar-connections.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://codestar-connections.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}