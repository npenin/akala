{
    "name": "databrew",
    "commands": [
        {
            "name": "BatchDeleteRecipeVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/recipes/{Name}/batchDeleteRecipeVersion"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeleteRecipeVersionResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/BatchDeleteRecipeVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "RecipeVersions": {}
                    }
                }
            }
        },
        {
            "name": "CreateDataset",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/datasets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDatasetResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateDatasetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Format": {},
                        "FormatOptions": {},
                        "Input": {},
                        "PathOptions": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateProfileJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/profileJobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProfileJobResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateProfileJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DatasetName": {},
                        "EncryptionKeyArn": {},
                        "EncryptionMode": {},
                        "Name": {},
                        "LogSubscription": {},
                        "MaxCapacity": {},
                        "MaxRetries": {},
                        "OutputLocation": {},
                        "Configuration": {},
                        "ValidationConfigurations": {},
                        "RoleArn": {},
                        "Tags": {},
                        "Timeout": {},
                        "JobSample": {}
                    }
                }
            }
        },
        {
            "name": "CreateProject",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/projects"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProjectResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateProjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DatasetName": {},
                        "Name": {},
                        "RecipeName": {},
                        "Sample": {},
                        "RoleArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateRecipe",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/recipes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRecipeResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateRecipeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Description": {},
                        "Name": {},
                        "Steps": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateRecipeJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/recipeJobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRecipeJobResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateRecipeJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DatasetName": {},
                        "EncryptionKeyArn": {},
                        "EncryptionMode": {},
                        "Name": {},
                        "LogSubscription": {},
                        "MaxCapacity": {},
                        "MaxRetries": {},
                        "Outputs": {},
                        "DataCatalogOutputs": {},
                        "DatabaseOutputs": {},
                        "ProjectName": {},
                        "RecipeReference": {},
                        "RoleArn": {},
                        "Tags": {},
                        "Timeout": {}
                    }
                }
            }
        },
        {
            "name": "CreateRuleset",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/rulesets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRulesetResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateRulesetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Description": {},
                        "TargetArn": {},
                        "Rules": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateSchedule",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/schedules"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateScheduleResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateScheduleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "JobNames": {},
                        "CronExpression": {},
                        "Tags": {},
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDataset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/datasets/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDatasetResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteDatasetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DeleteJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/jobs/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteJobResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DeleteProject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/projects/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProjectResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteProjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRecipeVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "RecipeVersion": "route.RecipeVersion",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/recipes/{Name}/recipeVersion/{RecipeVersion}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRecipeVersionResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0.RecipeVersion",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteRecipeVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "RecipeVersion": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRuleset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/rulesets/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRulesetResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteRulesetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSchedule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/schedules/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteScheduleResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteScheduleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DescribeDataset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/datasets/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDatasetResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeDatasetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DescribeJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/jobs/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeJobResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DescribeJobRun",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "RunId": "route.RunId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/jobs/{Name}/jobRun/{RunId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeJobRunResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0.RunId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeJobRunRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "RunId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeProject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/projects/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeProjectResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeProjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DescribeRecipe",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/recipes/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRecipeResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeRecipeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "RecipeVersion": {}
                    }
                }
            }
        },
        {
            "name": "DescribeRuleset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/rulesets/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRulesetResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeRulesetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DescribeSchedule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/schedules/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeScheduleResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeScheduleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "ListDatasets",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/datasets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDatasetsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListDatasetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListJobRuns",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/jobs/{Name}/jobRuns"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobRunsResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListJobRunsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListJobs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DatasetName": {},
                        "MaxResults": {},
                        "NextToken": {},
                        "ProjectName": {}
                    }
                }
            }
        },
        {
            "name": "ListProjects",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/projects"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProjectsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListProjectsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListRecipes",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/recipes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRecipesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListRecipesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {},
                        "RecipeVersion": {}
                    }
                }
            }
        },
        {
            "name": "ListRecipeVersions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/recipeVersions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRecipeVersionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListRecipeVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {},
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "ListRulesets",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/rulesets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRulesetsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListRulesetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TargetArn": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSchedules",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/schedules"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSchedulesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSchedulesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "JobName": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "PublishRecipe",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/recipes/{Name}/publishRecipe"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PublishRecipeResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PublishRecipeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Description": {},
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "SendProjectSessionAction",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/projects/{Name}/sendProjectSessionAction"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendProjectSessionActionResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SendProjectSessionActionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Preview": {},
                        "Name": {},
                        "RecipeStep": {},
                        "StepIndex": {},
                        "ClientSessionId": {},
                        "ViewFrame": {}
                    }
                }
            }
        },
        {
            "name": "StartJobRun",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/jobs/{Name}/startJobRun"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartJobRunResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartJobRunRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "StartProjectSession",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/projects/{Name}/startProjectSession"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartProjectSessionResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartProjectSessionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "AssumeControl": {}
                    }
                }
            }
        },
        {
            "name": "StopJobRun",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "RunId": "route.RunId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/jobs/{Name}/jobRun/{RunId}/stopJobRun"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopJobRunResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0.RunId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StopJobRunRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "RunId": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0.ResourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDataset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/datasets/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDatasetResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateDatasetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Format": {},
                        "FormatOptions": {},
                        "Input": {},
                        "PathOptions": {}
                    }
                }
            }
        },
        {
            "name": "UpdateProfileJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/profileJobs/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateProfileJobResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateProfileJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Configuration": {},
                        "EncryptionKeyArn": {},
                        "EncryptionMode": {},
                        "Name": {},
                        "LogSubscription": {},
                        "MaxCapacity": {},
                        "MaxRetries": {},
                        "OutputLocation": {},
                        "ValidationConfigurations": {},
                        "RoleArn": {},
                        "Timeout": {},
                        "JobSample": {}
                    }
                }
            }
        },
        {
            "name": "UpdateProject",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/projects/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateProjectResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateProjectRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Sample": {},
                        "RoleArn": {},
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRecipe",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/recipes/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRecipeResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateRecipeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Description": {},
                        "Name": {},
                        "Steps": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRecipeJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/recipeJobs/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRecipeJobResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateRecipeJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "EncryptionKeyArn": {},
                        "EncryptionMode": {},
                        "Name": {},
                        "LogSubscription": {},
                        "MaxCapacity": {},
                        "MaxRetries": {},
                        "Outputs": {},
                        "DataCatalogOutputs": {},
                        "DatabaseOutputs": {},
                        "RoleArn": {},
                        "Timeout": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRuleset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/rulesets/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRulesetResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateRulesetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Description": {},
                        "Rules": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSchedule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Name": "route.Name",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/schedules/{Name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateScheduleResponse"
                    },
                    "inject": [
                        "params.0.Name",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateScheduleRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "JobNames": {},
                        "CronExpression": {},
                        "Name": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchDeleteRecipeVersionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                },
                "RecipeVersions": {
                    "$ref": "#/$defs/RecipeVersionList"
                }
            }
        },
        "RecipeName": {
            "type": "string"
        },
        "RecipeVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecipeVersion"
            }
        },
        "RecipeVersion": {
            "type": "string"
        },
        "BatchDeleteRecipeVersionResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                },
                "Errors": {
                    "$ref": "#/$defs/RecipeErrorList"
                }
            }
        },
        "RecipeErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecipeVersionErrorDetail"
            }
        },
        "RecipeVersionErrorDetail": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/RecipeErrorMessage"
                },
                "RecipeVersion": {
                    "$ref": "#/$defs/RecipeVersion"
                }
            }
        },
        "ErrorCode": {
            "type": "string"
        },
        "RecipeErrorMessage": {
            "type": "string"
        },
        "CreateDatasetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DatasetName"
                },
                "Format": {
                    "$ref": "#/$defs/InputFormat"
                },
                "FormatOptions": {
                    "$ref": "#/$defs/FormatOptions"
                },
                "Input": {
                    "$ref": "#/$defs/Input"
                },
                "PathOptions": {
                    "$ref": "#/$defs/PathOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DatasetName": {
            "type": "string"
        },
        "InputFormat": {
            "enum": [
                "CSV",
                "JSON",
                "PARQUET",
                "EXCEL",
                "ORC"
            ]
        },
        "FormatOptions": {
            "type": "object",
            "properties": {
                "Json": {
                    "$ref": "#/$defs/JsonOptions"
                },
                "Excel": {
                    "$ref": "#/$defs/ExcelOptions"
                },
                "Csv": {
                    "$ref": "#/$defs/CsvOptions"
                }
            }
        },
        "JsonOptions": {
            "type": "object",
            "properties": {
                "MultiLine": {
                    "$ref": "#/$defs/MultiLine"
                }
            }
        },
        "MultiLine": {
            "type": "boolean"
        },
        "ExcelOptions": {
            "type": "object",
            "properties": {
                "SheetNames": {
                    "$ref": "#/$defs/SheetNameList"
                },
                "SheetIndexes": {
                    "$ref": "#/$defs/SheetIndexList"
                },
                "HeaderRow": {
                    "$ref": "#/$defs/HeaderRow"
                }
            }
        },
        "SheetNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SheetName"
            }
        },
        "SheetName": {
            "type": "string"
        },
        "SheetIndexList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SheetIndex"
            }
        },
        "SheetIndex": {
            "type": "integer",
            "format": "int32"
        },
        "HeaderRow": {
            "type": "boolean"
        },
        "CsvOptions": {
            "type": "object",
            "properties": {
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                },
                "HeaderRow": {
                    "$ref": "#/$defs/HeaderRow"
                }
            }
        },
        "Delimiter": {
            "type": "string"
        },
        "Input": {
            "type": "object",
            "properties": {
                "S3InputDefinition": {
                    "$ref": "#/$defs/S3Location"
                },
                "DataCatalogInputDefinition": {
                    "$ref": "#/$defs/DataCatalogInputDefinition"
                },
                "DatabaseInputDefinition": {
                    "$ref": "#/$defs/DatabaseInputDefinition"
                },
                "Metadata": {
                    "$ref": "#/$defs/Metadata"
                }
            }
        },
        "S3Location": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/Bucket"
                },
                "Key": {
                    "$ref": "#/$defs/Key"
                },
                "BucketOwner": {
                    "$ref": "#/$defs/BucketOwner"
                }
            }
        },
        "Bucket": {
            "type": "string"
        },
        "Key": {
            "type": "string"
        },
        "BucketOwner": {
            "type": "string"
        },
        "DataCatalogInputDefinition": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogId"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "TempDirectory": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "CatalogId": {
            "type": "string"
        },
        "DatabaseName": {
            "type": "string"
        },
        "TableName": {
            "type": "string"
        },
        "DatabaseInputDefinition": {
            "type": "object",
            "properties": {
                "GlueConnectionName": {
                    "$ref": "#/$defs/GlueConnectionName"
                },
                "DatabaseTableName": {
                    "$ref": "#/$defs/DatabaseTableName"
                },
                "TempDirectory": {
                    "$ref": "#/$defs/S3Location"
                },
                "QueryString": {
                    "$ref": "#/$defs/QueryString"
                }
            }
        },
        "GlueConnectionName": {
            "type": "string"
        },
        "DatabaseTableName": {
            "type": "string"
        },
        "QueryString": {
            "type": "string"
        },
        "Metadata": {
            "type": "object",
            "properties": {
                "SourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "PathOptions": {
            "type": "object",
            "properties": {
                "LastModifiedDateCondition": {
                    "$ref": "#/$defs/FilterExpression"
                },
                "FilesLimit": {
                    "$ref": "#/$defs/FilesLimit"
                },
                "Parameters": {
                    "$ref": "#/$defs/PathParametersMap"
                }
            }
        },
        "FilterExpression": {
            "type": "object",
            "properties": {
                "Expression": {
                    "$ref": "#/$defs/Expression"
                },
                "ValuesMap": {
                    "$ref": "#/$defs/ValuesMap"
                }
            }
        },
        "Expression": {
            "type": "string"
        },
        "ValuesMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ConditionValue"
            }
        },
        "ConditionValue": {
            "type": "string"
        },
        "FilesLimit": {
            "type": "object",
            "properties": {
                "MaxFiles": {
                    "$ref": "#/$defs/MaxFiles"
                },
                "OrderedBy": {
                    "$ref": "#/$defs/OrderedBy"
                },
                "Order": {
                    "$ref": "#/$defs/Order"
                }
            }
        },
        "MaxFiles": {
            "type": "integer",
            "format": "int32"
        },
        "OrderedBy": {
            "enum": [
                "LAST_MODIFIED_DATE"
            ]
        },
        "Order": {
            "enum": [
                "DESCENDING",
                "ASCENDING"
            ]
        },
        "PathParametersMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DatasetParameter"
            }
        },
        "DatasetParameter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/PathParameterName"
                },
                "Type": {
                    "$ref": "#/$defs/ParameterType"
                },
                "DatetimeOptions": {
                    "$ref": "#/$defs/DatetimeOptions"
                },
                "CreateColumn": {
                    "$ref": "#/$defs/CreateColumn"
                },
                "Filter": {
                    "$ref": "#/$defs/FilterExpression"
                }
            }
        },
        "PathParameterName": {
            "type": "string"
        },
        "ParameterType": {
            "enum": [
                "Datetime",
                "Number",
                "String"
            ]
        },
        "DatetimeOptions": {
            "type": "object",
            "properties": {
                "Format": {
                    "$ref": "#/$defs/DatetimeFormat"
                },
                "TimezoneOffset": {
                    "$ref": "#/$defs/TimezoneOffset"
                },
                "LocaleCode": {
                    "$ref": "#/$defs/LocaleCode"
                }
            }
        },
        "DatetimeFormat": {
            "type": "string"
        },
        "TimezoneOffset": {
            "type": "string"
        },
        "LocaleCode": {
            "type": "string"
        },
        "CreateColumn": {
            "type": "boolean"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "CreateDatasetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "CreateProfileJobRequest": {
            "type": "object",
            "properties": {
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/EncryptionKeyArn"
                },
                "EncryptionMode": {
                    "$ref": "#/$defs/EncryptionMode"
                },
                "Name": {
                    "$ref": "#/$defs/JobName"
                },
                "LogSubscription": {
                    "$ref": "#/$defs/LogSubscription"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/MaxCapacity"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/MaxRetries"
                },
                "OutputLocation": {
                    "$ref": "#/$defs/S3Location"
                },
                "Configuration": {
                    "$ref": "#/$defs/ProfileConfiguration"
                },
                "ValidationConfigurations": {
                    "$ref": "#/$defs/ValidationConfigurationList"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "JobSample": {
                    "$ref": "#/$defs/JobSample"
                }
            }
        },
        "EncryptionKeyArn": {
            "type": "string"
        },
        "EncryptionMode": {
            "enum": [
                "SSEKMS",
                "SSES3"
            ]
        },
        "JobName": {
            "type": "string"
        },
        "LogSubscription": {
            "enum": [
                "ENABLE",
                "DISABLE"
            ]
        },
        "MaxCapacity": {
            "type": "integer",
            "format": "int32"
        },
        "MaxRetries": {
            "type": "integer",
            "format": "int32"
        },
        "ProfileConfiguration": {
            "type": "object",
            "properties": {
                "DatasetStatisticsConfiguration": {
                    "$ref": "#/$defs/StatisticsConfiguration"
                },
                "ProfileColumns": {
                    "$ref": "#/$defs/ColumnSelectorList"
                },
                "ColumnStatisticsConfigurations": {
                    "$ref": "#/$defs/ColumnStatisticsConfigurationList"
                },
                "EntityDetectorConfiguration": {
                    "$ref": "#/$defs/EntityDetectorConfiguration"
                }
            }
        },
        "StatisticsConfiguration": {
            "type": "object",
            "properties": {
                "IncludedStatistics": {
                    "$ref": "#/$defs/StatisticList"
                },
                "Overrides": {
                    "$ref": "#/$defs/StatisticOverrideList"
                }
            }
        },
        "StatisticList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Statistic"
            }
        },
        "Statistic": {
            "type": "string"
        },
        "StatisticOverrideList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StatisticOverride"
            }
        },
        "StatisticOverride": {
            "type": "object",
            "properties": {
                "Statistic": {
                    "$ref": "#/$defs/Statistic"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParameterMap"
                }
            }
        },
        "ParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ParameterValue"
            }
        },
        "ParameterValue": {
            "type": "string"
        },
        "ColumnSelectorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnSelector"
            }
        },
        "ColumnSelector": {
            "type": "object",
            "properties": {
                "Regex": {
                    "$ref": "#/$defs/ColumnName"
                },
                "Name": {
                    "$ref": "#/$defs/ColumnName"
                }
            }
        },
        "ColumnName": {
            "type": "string"
        },
        "ColumnStatisticsConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnStatisticsConfiguration"
            }
        },
        "ColumnStatisticsConfiguration": {
            "type": "object",
            "properties": {
                "Selectors": {
                    "$ref": "#/$defs/ColumnSelectorList"
                },
                "Statistics": {
                    "$ref": "#/$defs/StatisticsConfiguration"
                }
            }
        },
        "EntityDetectorConfiguration": {
            "type": "object",
            "properties": {
                "EntityTypes": {
                    "$ref": "#/$defs/EntityTypeList"
                },
                "AllowedStatistics": {
                    "$ref": "#/$defs/AllowedStatisticList"
                }
            }
        },
        "EntityTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntityType"
            }
        },
        "EntityType": {
            "type": "string"
        },
        "AllowedStatisticList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowedStatistics"
            }
        },
        "AllowedStatistics": {
            "type": "object",
            "properties": {
                "Statistics": {
                    "$ref": "#/$defs/StatisticList"
                }
            }
        },
        "ValidationConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValidationConfiguration"
            }
        },
        "ValidationConfiguration": {
            "type": "object",
            "properties": {
                "RulesetArn": {
                    "$ref": "#/$defs/Arn"
                },
                "ValidationMode": {
                    "$ref": "#/$defs/ValidationMode"
                }
            }
        },
        "ValidationMode": {
            "enum": [
                "CHECK_ALL"
            ]
        },
        "Timeout": {
            "type": "integer",
            "format": "int32"
        },
        "JobSample": {
            "type": "object",
            "properties": {
                "Mode": {
                    "$ref": "#/$defs/SampleMode"
                },
                "Size": {
                    "$ref": "#/$defs/JobSize"
                }
            }
        },
        "SampleMode": {
            "enum": [
                "FULL_DATASET",
                "CUSTOM_ROWS"
            ]
        },
        "JobSize": {
            "type": "integer",
            "format": "int64"
        },
        "CreateProfileJobResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                }
            }
        },
        "CreateProjectRequest": {
            "type": "object",
            "properties": {
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                },
                "RecipeName": {
                    "$ref": "#/$defs/RecipeName"
                },
                "Sample": {
                    "$ref": "#/$defs/Sample"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ProjectName": {
            "type": "string"
        },
        "Sample": {
            "type": "object",
            "properties": {
                "Size": {
                    "$ref": "#/$defs/SampleSize"
                },
                "Type": {
                    "$ref": "#/$defs/SampleType"
                }
            }
        },
        "SampleSize": {
            "type": "integer",
            "format": "int32"
        },
        "SampleType": {
            "enum": [
                "FIRST_N",
                "LAST_N",
                "RANDOM"
            ]
        },
        "CreateProjectResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "CreateRecipeRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/RecipeDescription"
                },
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                },
                "Steps": {
                    "$ref": "#/$defs/RecipeStepList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "RecipeDescription": {
            "type": "string"
        },
        "RecipeStepList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecipeStep"
            }
        },
        "RecipeStep": {
            "type": "object",
            "properties": {
                "Action": {
                    "$ref": "#/$defs/RecipeAction"
                },
                "ConditionExpressions": {
                    "$ref": "#/$defs/ConditionExpressionList"
                }
            }
        },
        "RecipeAction": {
            "type": "object",
            "properties": {
                "Operation": {
                    "$ref": "#/$defs/Operation"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParameterMap"
                }
            }
        },
        "Operation": {
            "type": "string"
        },
        "ConditionExpressionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConditionExpression"
            }
        },
        "ConditionExpression": {
            "type": "object",
            "properties": {
                "Condition": {
                    "$ref": "#/$defs/Condition"
                },
                "Value": {
                    "$ref": "#/$defs/ConditionValue"
                },
                "TargetColumn": {
                    "$ref": "#/$defs/TargetColumn"
                }
            }
        },
        "Condition": {
            "type": "string"
        },
        "TargetColumn": {
            "type": "string"
        },
        "CreateRecipeResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                }
            }
        },
        "CreateRecipeJobRequest": {
            "type": "object",
            "properties": {
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/EncryptionKeyArn"
                },
                "EncryptionMode": {
                    "$ref": "#/$defs/EncryptionMode"
                },
                "Name": {
                    "$ref": "#/$defs/JobName"
                },
                "LogSubscription": {
                    "$ref": "#/$defs/LogSubscription"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/MaxCapacity"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/MaxRetries"
                },
                "Outputs": {
                    "$ref": "#/$defs/OutputList"
                },
                "DataCatalogOutputs": {
                    "$ref": "#/$defs/DataCatalogOutputList"
                },
                "DatabaseOutputs": {
                    "$ref": "#/$defs/DatabaseOutputList"
                },
                "ProjectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "RecipeReference": {
                    "$ref": "#/$defs/RecipeReference"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                }
            }
        },
        "OutputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Output"
            }
        },
        "Output": {
            "type": "object",
            "properties": {
                "CompressionFormat": {
                    "$ref": "#/$defs/CompressionFormat"
                },
                "Format": {
                    "$ref": "#/$defs/OutputFormat"
                },
                "PartitionColumns": {
                    "$ref": "#/$defs/ColumnNameList"
                },
                "Location": {
                    "$ref": "#/$defs/S3Location"
                },
                "Overwrite": {
                    "$ref": "#/$defs/OverwriteOutput"
                },
                "FormatOptions": {
                    "$ref": "#/$defs/OutputFormatOptions"
                },
                "MaxOutputFiles": {
                    "$ref": "#/$defs/MaxOutputFiles"
                }
            }
        },
        "CompressionFormat": {
            "enum": [
                "GZIP",
                "LZ4",
                "SNAPPY",
                "BZIP2",
                "DEFLATE",
                "LZO",
                "BROTLI",
                "ZSTD",
                "ZLIB"
            ]
        },
        "OutputFormat": {
            "enum": [
                "CSV",
                "JSON",
                "PARQUET",
                "GLUEPARQUET",
                "AVRO",
                "ORC",
                "XML",
                "TABLEAUHYPER"
            ]
        },
        "ColumnNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnName"
            }
        },
        "OverwriteOutput": {
            "type": "boolean"
        },
        "OutputFormatOptions": {
            "type": "object",
            "properties": {
                "Csv": {
                    "$ref": "#/$defs/CsvOutputOptions"
                }
            }
        },
        "CsvOutputOptions": {
            "type": "object",
            "properties": {
                "Delimiter": {
                    "$ref": "#/$defs/Delimiter"
                }
            }
        },
        "MaxOutputFiles": {
            "type": "integer",
            "format": "int32"
        },
        "DataCatalogOutputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataCatalogOutput"
            }
        },
        "DataCatalogOutput": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogId"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/DatabaseName"
                },
                "TableName": {
                    "$ref": "#/$defs/TableName"
                },
                "S3Options": {
                    "$ref": "#/$defs/S3TableOutputOptions"
                },
                "DatabaseOptions": {
                    "$ref": "#/$defs/DatabaseTableOutputOptions"
                },
                "Overwrite": {
                    "$ref": "#/$defs/OverwriteOutput"
                }
            }
        },
        "S3TableOutputOptions": {
            "type": "object",
            "properties": {
                "Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "DatabaseTableOutputOptions": {
            "type": "object",
            "properties": {
                "TempDirectory": {
                    "$ref": "#/$defs/S3Location"
                },
                "TableName": {
                    "$ref": "#/$defs/DatabaseTableName"
                }
            }
        },
        "DatabaseOutputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatabaseOutput"
            }
        },
        "DatabaseOutput": {
            "type": "object",
            "properties": {
                "GlueConnectionName": {
                    "$ref": "#/$defs/GlueConnectionName"
                },
                "DatabaseOptions": {
                    "$ref": "#/$defs/DatabaseTableOutputOptions"
                },
                "DatabaseOutputMode": {
                    "$ref": "#/$defs/DatabaseOutputMode"
                }
            }
        },
        "DatabaseOutputMode": {
            "enum": [
                "NEW_TABLE"
            ]
        },
        "RecipeReference": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                },
                "RecipeVersion": {
                    "$ref": "#/$defs/RecipeVersion"
                }
            }
        },
        "CreateRecipeJobResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                }
            }
        },
        "CreateRulesetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RulesetName"
                },
                "Description": {
                    "$ref": "#/$defs/RulesetDescription"
                },
                "TargetArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Rules": {
                    "$ref": "#/$defs/RuleList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "RulesetName": {
            "type": "string"
        },
        "RulesetDescription": {
            "type": "string"
        },
        "RuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Rule"
            }
        },
        "Rule": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RuleName"
                },
                "Disabled": {
                    "$ref": "#/$defs/Disabled"
                },
                "CheckExpression": {
                    "$ref": "#/$defs/Expression"
                },
                "SubstitutionMap": {
                    "$ref": "#/$defs/ValuesMap"
                },
                "Threshold": {
                    "$ref": "#/$defs/Threshold"
                },
                "ColumnSelectors": {
                    "$ref": "#/$defs/ColumnSelectorList"
                }
            }
        },
        "RuleName": {
            "type": "string"
        },
        "Disabled": {
            "type": "boolean"
        },
        "Threshold": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/ThresholdValue"
                },
                "Type": {
                    "$ref": "#/$defs/ThresholdType"
                },
                "Unit": {
                    "$ref": "#/$defs/ThresholdUnit"
                }
            }
        },
        "ThresholdValue": {
            "type": "number",
            "format": "double"
        },
        "ThresholdType": {
            "enum": [
                "GREATER_THAN_OR_EQUAL",
                "LESS_THAN_OR_EQUAL",
                "GREATER_THAN",
                "LESS_THAN"
            ]
        },
        "ThresholdUnit": {
            "enum": [
                "COUNT",
                "PERCENTAGE"
            ]
        },
        "CreateRulesetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RulesetName"
                }
            }
        },
        "CreateScheduleRequest": {
            "type": "object",
            "properties": {
                "JobNames": {
                    "$ref": "#/$defs/JobNameList"
                },
                "CronExpression": {
                    "$ref": "#/$defs/CronExpression"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Name": {
                    "$ref": "#/$defs/ScheduleName"
                }
            }
        },
        "JobNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobName"
            }
        },
        "CronExpression": {
            "type": "string"
        },
        "ScheduleName": {
            "type": "string"
        },
        "CreateScheduleResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ScheduleName"
                }
            }
        },
        "DeleteDatasetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "DeleteDatasetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "DeleteJobRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                }
            }
        },
        "DeleteJobResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                }
            }
        },
        "DeleteProjectRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "DeleteProjectResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "DeleteRecipeVersionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                },
                "RecipeVersion": {
                    "$ref": "#/$defs/RecipeVersion"
                }
            }
        },
        "DeleteRecipeVersionResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                },
                "RecipeVersion": {
                    "$ref": "#/$defs/RecipeVersion"
                }
            }
        },
        "DeleteRulesetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RulesetName"
                }
            }
        },
        "DeleteRulesetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RulesetName"
                }
            }
        },
        "DeleteScheduleRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ScheduleName"
                }
            }
        },
        "DeleteScheduleResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ScheduleName"
                }
            }
        },
        "DescribeDatasetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "DescribeDatasetResponse": {
            "type": "object",
            "properties": {
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "Name": {
                    "$ref": "#/$defs/DatasetName"
                },
                "Format": {
                    "$ref": "#/$defs/InputFormat"
                },
                "FormatOptions": {
                    "$ref": "#/$defs/FormatOptions"
                },
                "Input": {
                    "$ref": "#/$defs/Input"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "Source": {
                    "$ref": "#/$defs/Source"
                },
                "PathOptions": {
                    "$ref": "#/$defs/PathOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "CreatedBy": {
            "type": "string"
        },
        "Date": {
            "type": "string",
            "format": "date-time"
        },
        "LastModifiedBy": {
            "type": "string"
        },
        "Source": {
            "enum": [
                "S3",
                "DATACATALOG",
                "DATABASE"
            ]
        },
        "DescribeJobRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                }
            }
        },
        "DescribeJobResponse": {
            "type": "object",
            "properties": {
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/EncryptionKeyArn"
                },
                "EncryptionMode": {
                    "$ref": "#/$defs/EncryptionMode"
                },
                "Name": {
                    "$ref": "#/$defs/JobName"
                },
                "Type": {
                    "$ref": "#/$defs/JobType"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "LogSubscription": {
                    "$ref": "#/$defs/LogSubscription"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/MaxCapacity"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/MaxRetries"
                },
                "Outputs": {
                    "$ref": "#/$defs/OutputList"
                },
                "DataCatalogOutputs": {
                    "$ref": "#/$defs/DataCatalogOutputList"
                },
                "DatabaseOutputs": {
                    "$ref": "#/$defs/DatabaseOutputList"
                },
                "ProjectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "ProfileConfiguration": {
                    "$ref": "#/$defs/ProfileConfiguration"
                },
                "ValidationConfigurations": {
                    "$ref": "#/$defs/ValidationConfigurationList"
                },
                "RecipeReference": {
                    "$ref": "#/$defs/RecipeReference"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "JobSample": {
                    "$ref": "#/$defs/JobSample"
                }
            }
        },
        "JobType": {
            "enum": [
                "PROFILE",
                "RECIPE"
            ]
        },
        "DescribeJobRunRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                },
                "RunId": {
                    "$ref": "#/$defs/JobRunId"
                }
            }
        },
        "JobRunId": {
            "type": "string"
        },
        "DescribeJobRunResponse": {
            "type": "object",
            "properties": {
                "Attempt": {
                    "$ref": "#/$defs/Attempt"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/Date"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/JobRunErrorMessage"
                },
                "ExecutionTime": {
                    "$ref": "#/$defs/ExecutionTime"
                },
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "ProfileConfiguration": {
                    "$ref": "#/$defs/ProfileConfiguration"
                },
                "ValidationConfigurations": {
                    "$ref": "#/$defs/ValidationConfigurationList"
                },
                "RunId": {
                    "$ref": "#/$defs/JobRunId"
                },
                "State": {
                    "$ref": "#/$defs/JobRunState"
                },
                "LogSubscription": {
                    "$ref": "#/$defs/LogSubscription"
                },
                "LogGroupName": {
                    "$ref": "#/$defs/LogGroupName"
                },
                "Outputs": {
                    "$ref": "#/$defs/OutputList"
                },
                "DataCatalogOutputs": {
                    "$ref": "#/$defs/DataCatalogOutputList"
                },
                "DatabaseOutputs": {
                    "$ref": "#/$defs/DatabaseOutputList"
                },
                "RecipeReference": {
                    "$ref": "#/$defs/RecipeReference"
                },
                "StartedBy": {
                    "$ref": "#/$defs/StartedBy"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Date"
                },
                "JobSample": {
                    "$ref": "#/$defs/JobSample"
                }
            }
        },
        "Attempt": {
            "type": "integer",
            "format": "int32"
        },
        "JobRunErrorMessage": {
            "type": "string"
        },
        "ExecutionTime": {
            "type": "integer",
            "format": "int32"
        },
        "JobRunState": {
            "enum": [
                "STARTING",
                "RUNNING",
                "STOPPING",
                "STOPPED",
                "SUCCEEDED",
                "FAILED",
                "TIMEOUT"
            ]
        },
        "LogGroupName": {
            "type": "string"
        },
        "StartedBy": {
            "type": "string"
        },
        "DescribeProjectRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "DescribeProjectResponse": {
            "type": "object",
            "properties": {
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                },
                "RecipeName": {
                    "$ref": "#/$defs/RecipeName"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Sample": {
                    "$ref": "#/$defs/Sample"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "SessionStatus": {
                    "$ref": "#/$defs/SessionStatus"
                },
                "OpenedBy": {
                    "$ref": "#/$defs/OpenedBy"
                },
                "OpenDate": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "SessionStatus": {
            "enum": [
                "ASSIGNED",
                "FAILED",
                "INITIALIZING",
                "PROVISIONING",
                "READY",
                "RECYCLING",
                "ROTATING",
                "TERMINATED",
                "TERMINATING",
                "UPDATING"
            ]
        },
        "OpenedBy": {
            "type": "string"
        },
        "DescribeRecipeRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                },
                "RecipeVersion": {
                    "$ref": "#/$defs/RecipeVersion"
                }
            }
        },
        "DescribeRecipeResponse": {
            "type": "object",
            "properties": {
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "ProjectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "PublishedBy": {
                    "$ref": "#/$defs/PublishedBy"
                },
                "PublishedDate": {
                    "$ref": "#/$defs/Date"
                },
                "Description": {
                    "$ref": "#/$defs/RecipeDescription"
                },
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                },
                "Steps": {
                    "$ref": "#/$defs/RecipeStepList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "RecipeVersion": {
                    "$ref": "#/$defs/RecipeVersion"
                }
            }
        },
        "PublishedBy": {
            "type": "string"
        },
        "DescribeRulesetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RulesetName"
                }
            }
        },
        "DescribeRulesetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RulesetName"
                },
                "Description": {
                    "$ref": "#/$defs/RulesetDescription"
                },
                "TargetArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Rules": {
                    "$ref": "#/$defs/RuleList"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DescribeScheduleRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ScheduleName"
                }
            }
        },
        "DescribeScheduleResponse": {
            "type": "object",
            "properties": {
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "JobNames": {
                    "$ref": "#/$defs/JobNameList"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "CronExpression": {
                    "$ref": "#/$defs/CronExpression"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Name": {
                    "$ref": "#/$defs/ScheduleName"
                }
            }
        },
        "ListDatasetsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults100"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxResults100": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "ListDatasetsResponse": {
            "type": "object",
            "properties": {
                "Datasets": {
                    "$ref": "#/$defs/DatasetList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DatasetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Dataset"
            }
        },
        "Dataset": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "Name": {
                    "$ref": "#/$defs/DatasetName"
                },
                "Format": {
                    "$ref": "#/$defs/InputFormat"
                },
                "FormatOptions": {
                    "$ref": "#/$defs/FormatOptions"
                },
                "Input": {
                    "$ref": "#/$defs/Input"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "Source": {
                    "$ref": "#/$defs/Source"
                },
                "PathOptions": {
                    "$ref": "#/$defs/PathOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "AccountId": {
            "type": "string"
        },
        "ListJobRunsRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults100"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListJobRunsResponse": {
            "type": "object",
            "properties": {
                "JobRuns": {
                    "$ref": "#/$defs/JobRunList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobRunList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobRun"
            }
        },
        "JobRun": {
            "type": "object",
            "properties": {
                "Attempt": {
                    "$ref": "#/$defs/Attempt"
                },
                "CompletedOn": {
                    "$ref": "#/$defs/Date"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/JobRunErrorMessage"
                },
                "ExecutionTime": {
                    "$ref": "#/$defs/ExecutionTime"
                },
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "RunId": {
                    "$ref": "#/$defs/JobRunId"
                },
                "State": {
                    "$ref": "#/$defs/JobRunState"
                },
                "LogSubscription": {
                    "$ref": "#/$defs/LogSubscription"
                },
                "LogGroupName": {
                    "$ref": "#/$defs/LogGroupName"
                },
                "Outputs": {
                    "$ref": "#/$defs/OutputList"
                },
                "DataCatalogOutputs": {
                    "$ref": "#/$defs/DataCatalogOutputList"
                },
                "DatabaseOutputs": {
                    "$ref": "#/$defs/DatabaseOutputList"
                },
                "RecipeReference": {
                    "$ref": "#/$defs/RecipeReference"
                },
                "StartedBy": {
                    "$ref": "#/$defs/StartedBy"
                },
                "StartedOn": {
                    "$ref": "#/$defs/Date"
                },
                "JobSample": {
                    "$ref": "#/$defs/JobSample"
                },
                "ValidationConfigurations": {
                    "$ref": "#/$defs/ValidationConfigurationList"
                }
            }
        },
        "ListJobsRequest": {
            "type": "object",
            "properties": {
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults100"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ProjectName": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "ListJobsResponse": {
            "type": "object",
            "properties": {
                "Jobs": {
                    "$ref": "#/$defs/JobList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Job"
            }
        },
        "Job": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/EncryptionKeyArn"
                },
                "EncryptionMode": {
                    "$ref": "#/$defs/EncryptionMode"
                },
                "Name": {
                    "$ref": "#/$defs/JobName"
                },
                "Type": {
                    "$ref": "#/$defs/JobType"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "LogSubscription": {
                    "$ref": "#/$defs/LogSubscription"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/MaxCapacity"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/MaxRetries"
                },
                "Outputs": {
                    "$ref": "#/$defs/OutputList"
                },
                "DataCatalogOutputs": {
                    "$ref": "#/$defs/DataCatalogOutputList"
                },
                "DatabaseOutputs": {
                    "$ref": "#/$defs/DatabaseOutputList"
                },
                "ProjectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "RecipeReference": {
                    "$ref": "#/$defs/RecipeReference"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "JobSample": {
                    "$ref": "#/$defs/JobSample"
                },
                "ValidationConfigurations": {
                    "$ref": "#/$defs/ValidationConfigurationList"
                }
            }
        },
        "ListProjectsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults100"
                }
            }
        },
        "ListProjectsResponse": {
            "type": "object",
            "properties": {
                "Projects": {
                    "$ref": "#/$defs/ProjectList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ProjectList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Project"
            }
        },
        "Project": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "DatasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                },
                "RecipeName": {
                    "$ref": "#/$defs/RecipeName"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Sample": {
                    "$ref": "#/$defs/Sample"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "OpenedBy": {
                    "$ref": "#/$defs/OpenedBy"
                },
                "OpenDate": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "ListRecipesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults100"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "RecipeVersion": {
                    "$ref": "#/$defs/RecipeVersion"
                }
            }
        },
        "ListRecipesResponse": {
            "type": "object",
            "properties": {
                "Recipes": {
                    "$ref": "#/$defs/RecipeList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RecipeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Recipe"
            }
        },
        "Recipe": {
            "type": "object",
            "properties": {
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "ProjectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "PublishedBy": {
                    "$ref": "#/$defs/PublishedBy"
                },
                "PublishedDate": {
                    "$ref": "#/$defs/Date"
                },
                "Description": {
                    "$ref": "#/$defs/RecipeDescription"
                },
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Steps": {
                    "$ref": "#/$defs/RecipeStepList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "RecipeVersion": {
                    "$ref": "#/$defs/RecipeVersion"
                }
            }
        },
        "ListRecipeVersionsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults100"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                }
            }
        },
        "ListRecipeVersionsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Recipes": {
                    "$ref": "#/$defs/RecipeList"
                }
            }
        },
        "ListRulesetsRequest": {
            "type": "object",
            "properties": {
                "TargetArn": {
                    "$ref": "#/$defs/Arn"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults100"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListRulesetsResponse": {
            "type": "object",
            "properties": {
                "Rulesets": {
                    "$ref": "#/$defs/RulesetItemList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RulesetItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RulesetItem"
            }
        },
        "RulesetItem": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "Description": {
                    "$ref": "#/$defs/RulesetDescription"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "Name": {
                    "$ref": "#/$defs/RulesetName"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "RuleCount": {
                    "$ref": "#/$defs/RuleCount"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "TargetArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "RuleCount": {
            "type": "integer",
            "format": "int32"
        },
        "ListSchedulesRequest": {
            "type": "object",
            "properties": {
                "JobName": {
                    "$ref": "#/$defs/JobName"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults100"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListSchedulesResponse": {
            "type": "object",
            "properties": {
                "Schedules": {
                    "$ref": "#/$defs/ScheduleList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ScheduleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Schedule"
            }
        },
        "Schedule": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/CreatedBy"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Date"
                },
                "JobNames": {
                    "$ref": "#/$defs/JobNameList"
                },
                "LastModifiedBy": {
                    "$ref": "#/$defs/LastModifiedBy"
                },
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "CronExpression": {
                    "$ref": "#/$defs/CronExpression"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Name": {
                    "$ref": "#/$defs/ScheduleName"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "PublishRecipeRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/RecipeDescription"
                },
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                }
            }
        },
        "PublishRecipeResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                }
            }
        },
        "SendProjectSessionActionRequest": {
            "type": "object",
            "properties": {
                "Preview": {
                    "$ref": "#/$defs/Preview"
                },
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                },
                "RecipeStep": {
                    "$ref": "#/$defs/RecipeStep"
                },
                "StepIndex": {
                    "$ref": "#/$defs/StepIndex"
                },
                "ClientSessionId": {
                    "$ref": "#/$defs/ClientSessionId"
                },
                "ViewFrame": {
                    "$ref": "#/$defs/ViewFrame"
                }
            }
        },
        "Preview": {
            "type": "boolean"
        },
        "StepIndex": {
            "type": "integer",
            "format": "int32"
        },
        "ClientSessionId": {
            "type": "string"
        },
        "ViewFrame": {
            "type": "object",
            "properties": {
                "StartColumnIndex": {
                    "$ref": "#/$defs/StartColumnIndex"
                },
                "ColumnRange": {
                    "$ref": "#/$defs/ColumnRange"
                },
                "HiddenColumns": {
                    "$ref": "#/$defs/HiddenColumnList"
                },
                "StartRowIndex": {
                    "$ref": "#/$defs/StartRowIndex"
                },
                "RowRange": {
                    "$ref": "#/$defs/RowRange"
                },
                "Analytics": {
                    "$ref": "#/$defs/AnalyticsMode"
                }
            }
        },
        "StartColumnIndex": {
            "type": "integer",
            "format": "int32"
        },
        "ColumnRange": {
            "type": "integer",
            "format": "int32"
        },
        "HiddenColumnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnName"
            }
        },
        "StartRowIndex": {
            "type": "integer",
            "format": "int32"
        },
        "RowRange": {
            "type": "integer",
            "format": "int32"
        },
        "AnalyticsMode": {
            "enum": [
                "ENABLE",
                "DISABLE"
            ]
        },
        "SendProjectSessionActionResponse": {
            "type": "object",
            "properties": {
                "Result": {
                    "$ref": "#/$defs/Result"
                },
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                },
                "ActionId": {
                    "$ref": "#/$defs/ActionId"
                }
            }
        },
        "Result": {
            "type": "string"
        },
        "ActionId": {
            "type": "integer",
            "format": "int32"
        },
        "StartJobRunRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                }
            }
        },
        "StartJobRunResponse": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/JobRunId"
                }
            }
        },
        "StartProjectSessionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                },
                "AssumeControl": {
                    "$ref": "#/$defs/AssumeControl"
                }
            }
        },
        "AssumeControl": {
            "type": "boolean"
        },
        "StartProjectSessionResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                },
                "ClientSessionId": {
                    "$ref": "#/$defs/ClientSessionId"
                }
            }
        },
        "StopJobRunRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                },
                "RunId": {
                    "$ref": "#/$defs/JobRunId"
                }
            }
        },
        "StopJobRunResponse": {
            "type": "object",
            "properties": {
                "RunId": {
                    "$ref": "#/$defs/JobRunId"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateDatasetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DatasetName"
                },
                "Format": {
                    "$ref": "#/$defs/InputFormat"
                },
                "FormatOptions": {
                    "$ref": "#/$defs/FormatOptions"
                },
                "Input": {
                    "$ref": "#/$defs/Input"
                },
                "PathOptions": {
                    "$ref": "#/$defs/PathOptions"
                }
            }
        },
        "UpdateDatasetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "UpdateProfileJobRequest": {
            "type": "object",
            "properties": {
                "Configuration": {
                    "$ref": "#/$defs/ProfileConfiguration"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/EncryptionKeyArn"
                },
                "EncryptionMode": {
                    "$ref": "#/$defs/EncryptionMode"
                },
                "Name": {
                    "$ref": "#/$defs/JobName"
                },
                "LogSubscription": {
                    "$ref": "#/$defs/LogSubscription"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/MaxCapacity"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/MaxRetries"
                },
                "OutputLocation": {
                    "$ref": "#/$defs/S3Location"
                },
                "ValidationConfigurations": {
                    "$ref": "#/$defs/ValidationConfigurationList"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                },
                "JobSample": {
                    "$ref": "#/$defs/JobSample"
                }
            }
        },
        "UpdateProfileJobResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                }
            }
        },
        "UpdateProjectRequest": {
            "type": "object",
            "properties": {
                "Sample": {
                    "$ref": "#/$defs/Sample"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "UpdateProjectResponse": {
            "type": "object",
            "properties": {
                "LastModifiedDate": {
                    "$ref": "#/$defs/Date"
                },
                "Name": {
                    "$ref": "#/$defs/ProjectName"
                }
            }
        },
        "UpdateRecipeRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/RecipeDescription"
                },
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                },
                "Steps": {
                    "$ref": "#/$defs/RecipeStepList"
                }
            }
        },
        "UpdateRecipeResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RecipeName"
                }
            }
        },
        "UpdateRecipeJobRequest": {
            "type": "object",
            "properties": {
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/EncryptionKeyArn"
                },
                "EncryptionMode": {
                    "$ref": "#/$defs/EncryptionMode"
                },
                "Name": {
                    "$ref": "#/$defs/JobName"
                },
                "LogSubscription": {
                    "$ref": "#/$defs/LogSubscription"
                },
                "MaxCapacity": {
                    "$ref": "#/$defs/MaxCapacity"
                },
                "MaxRetries": {
                    "$ref": "#/$defs/MaxRetries"
                },
                "Outputs": {
                    "$ref": "#/$defs/OutputList"
                },
                "DataCatalogOutputs": {
                    "$ref": "#/$defs/DataCatalogOutputList"
                },
                "DatabaseOutputs": {
                    "$ref": "#/$defs/DatabaseOutputList"
                },
                "RoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "Timeout": {
                    "$ref": "#/$defs/Timeout"
                }
            }
        },
        "UpdateRecipeJobResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/JobName"
                }
            }
        },
        "UpdateRulesetRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RulesetName"
                },
                "Description": {
                    "$ref": "#/$defs/RulesetDescription"
                },
                "Rules": {
                    "$ref": "#/$defs/RuleList"
                }
            }
        },
        "UpdateRulesetResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/RulesetName"
                }
            }
        },
        "UpdateScheduleRequest": {
            "type": "object",
            "properties": {
                "JobNames": {
                    "$ref": "#/$defs/JobNameList"
                },
                "CronExpression": {
                    "$ref": "#/$defs/CronExpression"
                },
                "Name": {
                    "$ref": "#/$defs/ScheduleName"
                }
            }
        },
        "UpdateScheduleResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ScheduleName"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://databrew-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "ref": "Region"
                                                                },
                                                                "us-gov-west-1"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://databrew.us-gov-west-1.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://databrew-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://databrew.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://databrew.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
