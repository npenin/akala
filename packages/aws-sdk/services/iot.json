{
    "name": "iot",
    "commands": [
        {
            "name": "AcceptCertificateTransfer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateId": "route.certificateId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/accept-certificate-transfer/{certificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.certificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptCertificateTransferRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddThingToBillingGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/billing-groups/addThingToBillingGroup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddThingToBillingGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddThingToBillingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AddThingToThingGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/thing-groups/addThingToThingGroup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddThingToThingGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddThingToThingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateSbomWithPackageVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "versionName": "route.versionName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/packages/{packageName}/versions/{versionName}/sbom"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateSbomWithPackageVersionResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0.versionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateSbomWithPackageVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateTargetsWithJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobId": "route.jobId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/jobs/{jobId}/targets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateTargetsWithJobResponse"
                    },
                    "inject": [
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateTargetsWithJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/target-policies/{policyName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachPrincipalPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/principal-policies/{policyName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachPrincipalPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachSecurityProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "securityProfileName": "route.securityProfileName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/security-profiles/{securityProfileName}/targets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachSecurityProfileResponse"
                    },
                    "inject": [
                        "param.0.securityProfileName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachSecurityProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachThingPrincipal",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/things/{thingName}/principals"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachThingPrincipalResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachThingPrincipalRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelAuditMitigationActionsTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/audit/mitigationactions/tasks/{taskId}/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelAuditMitigationActionsTaskResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelAuditMitigationActionsTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelAuditTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/audit/tasks/{taskId}/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelAuditTaskResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelAuditTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelCertificateTransfer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateId": "route.certificateId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/cancel-certificate-transfer/{certificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.certificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelCertificateTransferRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelDetectMitigationActionsTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/detect/mitigationactions/tasks/{taskId}/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelDetectMitigationActionsTaskResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelDetectMitigationActionsTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobId": "route.jobId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/jobs/{jobId}/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelJobResponse"
                    },
                    "inject": [
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelJobExecution",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "jobId": "route.jobId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/things/{thingName}/jobs/{jobId}/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelJobExecutionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ClearDefaultAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/default-authorizer"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ClearDefaultAuthorizerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ClearDefaultAuthorizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ConfirmTopicRuleDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "confirmationToken": "route.confirmationToken",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/confirmdestination{/confirmationToken*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ConfirmTopicRuleDestinationResponse"
                    },
                    "inject": [
                        "param.0.confirmationToken",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ConfirmTopicRuleDestinationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateAuditSuppression",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/audit/suppressions/create"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAuditSuppressionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAuditSuppressionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "authorizerName": "route.authorizerName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/authorizer/{authorizerName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAuthorizerResponse"
                    },
                    "inject": [
                        "param.0.authorizerName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAuthorizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBillingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "billingGroupName": "route.billingGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/billing-groups/{billingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBillingGroupResponse"
                    },
                    "inject": [
                        "param.0.billingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBillingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCertificateFromCsr",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/certificates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCertificateFromCsrResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCertificateFromCsrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCertificateProvider",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateProviderName": "route.certificateProviderName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/certificate-providers/{certificateProviderName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCertificateProviderResponse"
                    },
                    "inject": [
                        "param.0.certificateProviderName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCertificateProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCustomMetric",
            "config": {
                "http": {
                    "inject": [
                        {
                            "metricName": "route.metricName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/custom-metric/{metricName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCustomMetricResponse"
                    },
                    "inject": [
                        "param.0.metricName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCustomMetricRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDimension",
            "config": {
                "http": {
                    "inject": [
                        {
                            "name": "route.name",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/dimensions/{name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDimensionResponse"
                    },
                    "inject": [
                        "param.0.name",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDimensionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDomainConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainConfigurationName": "route.domainConfigurationName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/domainConfigurations/{domainConfigurationName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDomainConfigurationResponse"
                    },
                    "inject": [
                        "param.0.domainConfigurationName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDomainConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDynamicThingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingGroupName": "route.thingGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/dynamic-thing-groups/{thingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDynamicThingGroupResponse"
                    },
                    "inject": [
                        "param.0.thingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDynamicThingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFleetMetric",
            "config": {
                "http": {
                    "inject": [
                        {
                            "metricName": "route.metricName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/fleet-metric/{metricName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFleetMetricResponse"
                    },
                    "inject": [
                        "param.0.metricName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFleetMetricRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobId": "route.jobId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateJobResponse"
                    },
                    "inject": [
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateJobTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobTemplateId": "route.jobTemplateId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/job-templates/{jobTemplateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateJobTemplateResponse"
                    },
                    "inject": [
                        "param.0.jobTemplateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateJobTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKeysAndCertificate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/keys-and-certificate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKeysAndCertificateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKeysAndCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateMitigationAction",
            "config": {
                "http": {
                    "inject": [
                        {
                            "actionName": "route.actionName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/mitigationactions/actions/{actionName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMitigationActionResponse"
                    },
                    "inject": [
                        "param.0.actionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMitigationActionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateOTAUpdate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "otaUpdateId": "route.otaUpdateId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/otaUpdates/{otaUpdateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateOTAUpdateResponse"
                    },
                    "inject": [
                        "param.0.otaUpdateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateOTAUpdateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePackage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/packages/{packageName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePackageResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePackageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePackageVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "versionName": "route.versionName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/packages/{packageName}/versions/{versionName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePackageVersionResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0.versionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePackageVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/policies/{policyName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePolicyResponse"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePolicyVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/policies/{policyName}/version"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePolicyVersionResponse"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePolicyVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateProvisioningClaim",
            "config": {
                "http": {
                    "inject": [
                        {
                            "templateName": "route.templateName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/provisioning-templates/{templateName}/provisioning-claim"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProvisioningClaimResponse"
                    },
                    "inject": [
                        "param.0.templateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateProvisioningClaimRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateProvisioningTemplate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/provisioning-templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProvisioningTemplateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateProvisioningTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateProvisioningTemplateVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "templateName": "route.templateName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/provisioning-templates/{templateName}/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProvisioningTemplateVersionResponse"
                    },
                    "inject": [
                        "param.0.templateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateProvisioningTemplateVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRoleAlias",
            "config": {
                "http": {
                    "inject": [
                        {
                            "roleAlias": "route.roleAlias",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/role-aliases/{roleAlias}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRoleAliasResponse"
                    },
                    "inject": [
                        "param.0.roleAlias",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRoleAliasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateScheduledAudit",
            "config": {
                "http": {
                    "inject": [
                        {
                            "scheduledAuditName": "route.scheduledAuditName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/audit/scheduledaudits/{scheduledAuditName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateScheduledAuditResponse"
                    },
                    "inject": [
                        "param.0.scheduledAuditName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateScheduledAuditRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSecurityProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "securityProfileName": "route.securityProfileName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/security-profiles/{securityProfileName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSecurityProfileResponse"
                    },
                    "inject": [
                        "param.0.securityProfileName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSecurityProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateStream",
            "config": {
                "http": {
                    "inject": [
                        {
                            "streamId": "route.streamId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/streams/{streamId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateStreamResponse"
                    },
                    "inject": [
                        "param.0.streamId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateStreamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateThing",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/things/{thingName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateThingResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateThingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingGroupName": "route.thingGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/thing-groups/{thingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateThingGroupResponse"
                    },
                    "inject": [
                        "param.0.thingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateThingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateThingType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingTypeName": "route.thingTypeName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/thing-types/{thingTypeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateThingTypeResponse"
                    },
                    "inject": [
                        "param.0.thingTypeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateThingTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTopicRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ruleName": "route.ruleName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/rules/{ruleName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ruleName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTopicRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTopicRuleDestination",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/destinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTopicRuleDestinationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTopicRuleDestinationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAccountAuditConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/audit/configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAccountAuditConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAccountAuditConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAuditSuppression",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/audit/suppressions/delete"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAuditSuppressionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAuditSuppressionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "authorizerName": "route.authorizerName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/authorizer/{authorizerName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAuthorizerResponse"
                    },
                    "inject": [
                        "param.0.authorizerName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAuthorizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBillingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "billingGroupName": "route.billingGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/billing-groups/{billingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBillingGroupResponse"
                    },
                    "inject": [
                        "param.0.billingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBillingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCACertificate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateId": "route.certificateId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/cacertificate/{certificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCACertificateResponse"
                    },
                    "inject": [
                        "param.0.certificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCACertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCertificate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateId": "route.certificateId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/certificates/{certificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.certificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCertificateProvider",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateProviderName": "route.certificateProviderName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/certificate-providers/{certificateProviderName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCertificateProviderResponse"
                    },
                    "inject": [
                        "param.0.certificateProviderName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCertificateProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCustomMetric",
            "config": {
                "http": {
                    "inject": [
                        {
                            "metricName": "route.metricName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/custom-metric/{metricName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCustomMetricResponse"
                    },
                    "inject": [
                        "param.0.metricName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCustomMetricRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDimension",
            "config": {
                "http": {
                    "inject": [
                        {
                            "name": "route.name",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/dimensions/{name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDimensionResponse"
                    },
                    "inject": [
                        "param.0.name",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDimensionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDomainConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainConfigurationName": "route.domainConfigurationName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/domainConfigurations/{domainConfigurationName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDomainConfigurationResponse"
                    },
                    "inject": [
                        "param.0.domainConfigurationName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDomainConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDynamicThingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingGroupName": "route.thingGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/dynamic-thing-groups/{thingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDynamicThingGroupResponse"
                    },
                    "inject": [
                        "param.0.thingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDynamicThingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFleetMetric",
            "config": {
                "http": {
                    "inject": [
                        {
                            "metricName": "route.metricName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/fleet-metric/{metricName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.metricName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFleetMetricRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobId": "route.jobId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteJobExecution",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "jobId": "route.jobId",
                            "executionNumber": "route.executionNumber",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/things/{thingName}/jobs/{jobId}/executionNumber/{executionNumber}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0.jobId",
                        "param.0.executionNumber",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteJobExecutionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteJobTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobTemplateId": "route.jobTemplateId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/job-templates/{jobTemplateId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.jobTemplateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteJobTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteMitigationAction",
            "config": {
                "http": {
                    "inject": [
                        {
                            "actionName": "route.actionName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/mitigationactions/actions/{actionName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMitigationActionResponse"
                    },
                    "inject": [
                        "param.0.actionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMitigationActionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteOTAUpdate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "otaUpdateId": "route.otaUpdateId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/otaUpdates/{otaUpdateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteOTAUpdateResponse"
                    },
                    "inject": [
                        "param.0.otaUpdateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteOTAUpdateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePackage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/packages/{packageName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePackageResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePackageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePackageVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "versionName": "route.versionName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/packages/{packageName}/versions/{versionName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePackageVersionResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0.versionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePackageVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/policies/{policyName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePolicyVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "policyVersionId": "route.policyVersionId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/policies/{policyName}/version/{policyVersionId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0.policyVersionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePolicyVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteProvisioningTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "templateName": "route.templateName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/provisioning-templates/{templateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProvisioningTemplateResponse"
                    },
                    "inject": [
                        "param.0.templateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProvisioningTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteProvisioningTemplateVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "templateName": "route.templateName",
                            "versionId": "route.versionId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/provisioning-templates/{templateName}/versions/{versionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProvisioningTemplateVersionResponse"
                    },
                    "inject": [
                        "param.0.templateName",
                        "param.0.versionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProvisioningTemplateVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRegistrationCode",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/registrationcode"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRegistrationCodeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRegistrationCodeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRoleAlias",
            "config": {
                "http": {
                    "inject": [
                        {
                            "roleAlias": "route.roleAlias",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/role-aliases/{roleAlias}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRoleAliasResponse"
                    },
                    "inject": [
                        "param.0.roleAlias",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRoleAliasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteScheduledAudit",
            "config": {
                "http": {
                    "inject": [
                        {
                            "scheduledAuditName": "route.scheduledAuditName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/audit/scheduledaudits/{scheduledAuditName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteScheduledAuditResponse"
                    },
                    "inject": [
                        "param.0.scheduledAuditName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteScheduledAuditRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSecurityProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "securityProfileName": "route.securityProfileName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/security-profiles/{securityProfileName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSecurityProfileResponse"
                    },
                    "inject": [
                        "param.0.securityProfileName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSecurityProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteStream",
            "config": {
                "http": {
                    "inject": [
                        {
                            "streamId": "route.streamId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/streams/{streamId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteStreamResponse"
                    },
                    "inject": [
                        "param.0.streamId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteStreamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteThing",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/things/{thingName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteThingResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteThingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingGroupName": "route.thingGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/thing-groups/{thingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteThingGroupResponse"
                    },
                    "inject": [
                        "param.0.thingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteThingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteThingType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingTypeName": "route.thingTypeName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/thing-types/{thingTypeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteThingTypeResponse"
                    },
                    "inject": [
                        "param.0.thingTypeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteThingTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTopicRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ruleName": "route.ruleName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/rules/{ruleName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ruleName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTopicRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTopicRuleDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "arn": "route.arn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/destinations{/arn*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTopicRuleDestinationResponse"
                    },
                    "inject": [
                        "param.0.arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTopicRuleDestinationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteV2LoggingLevel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/v2LoggingLevel"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteV2LoggingLevelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeprecateThingType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingTypeName": "route.thingTypeName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/thing-types/{thingTypeName}/deprecate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeprecateThingTypeResponse"
                    },
                    "inject": [
                        "param.0.thingTypeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeprecateThingTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAccountAuditConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAccountAuditConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAccountAuditConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAuditFinding",
            "config": {
                "http": {
                    "inject": [
                        {
                            "findingId": "route.findingId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/audit/findings/{findingId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAuditFindingResponse"
                    },
                    "inject": [
                        "param.0.findingId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAuditFindingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAuditMitigationActionsTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/audit/mitigationactions/tasks/{taskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAuditMitigationActionsTaskResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAuditMitigationActionsTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAuditSuppression",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/audit/suppressions/describe"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAuditSuppressionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAuditSuppressionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAuditTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/audit/tasks/{taskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAuditTaskResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAuditTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "authorizerName": "route.authorizerName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/authorizer/{authorizerName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAuthorizerResponse"
                    },
                    "inject": [
                        "param.0.authorizerName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAuthorizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeBillingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "billingGroupName": "route.billingGroupName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/billing-groups/{billingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeBillingGroupResponse"
                    },
                    "inject": [
                        "param.0.billingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeBillingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCACertificate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateId": "route.certificateId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/cacertificate/{certificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCACertificateResponse"
                    },
                    "inject": [
                        "param.0.certificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCACertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCertificate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateId": "route.certificateId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/certificates/{certificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCertificateResponse"
                    },
                    "inject": [
                        "param.0.certificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCertificateProvider",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateProviderName": "route.certificateProviderName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/certificate-providers/{certificateProviderName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCertificateProviderResponse"
                    },
                    "inject": [
                        "param.0.certificateProviderName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCertificateProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCustomMetric",
            "config": {
                "http": {
                    "inject": [
                        {
                            "metricName": "route.metricName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/custom-metric/{metricName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCustomMetricResponse"
                    },
                    "inject": [
                        "param.0.metricName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCustomMetricRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDefaultAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/default-authorizer"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDefaultAuthorizerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDefaultAuthorizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDetectMitigationActionsTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/detect/mitigationactions/tasks/{taskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDetectMitigationActionsTaskResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDetectMitigationActionsTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDimension",
            "config": {
                "http": {
                    "inject": [
                        {
                            "name": "route.name",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/dimensions/{name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDimensionResponse"
                    },
                    "inject": [
                        "param.0.name",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDimensionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDomainConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainConfigurationName": "route.domainConfigurationName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/domainConfigurations/{domainConfigurationName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDomainConfigurationResponse"
                    },
                    "inject": [
                        "param.0.domainConfigurationName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDomainConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/endpoint"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEndpointResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEventConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/event-configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFleetMetric",
            "config": {
                "http": {
                    "inject": [
                        {
                            "metricName": "route.metricName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/fleet-metric/{metricName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFleetMetricResponse"
                    },
                    "inject": [
                        "param.0.metricName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFleetMetricRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIndex",
            "config": {
                "http": {
                    "inject": [
                        {
                            "indexName": "route.indexName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/indices/{indexName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIndexResponse"
                    },
                    "inject": [
                        "param.0.indexName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIndexRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobId": "route.jobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeJobResponse"
                    },
                    "inject": [
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeJobExecution",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "jobId": "route.jobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/things/{thingName}/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeJobExecutionResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeJobExecutionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeJobTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobTemplateId": "route.jobTemplateId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/job-templates/{jobTemplateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeJobTemplateResponse"
                    },
                    "inject": [
                        "param.0.jobTemplateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeJobTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeManagedJobTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "templateName": "route.templateName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/managed-job-templates/{templateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeManagedJobTemplateResponse"
                    },
                    "inject": [
                        "param.0.templateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeManagedJobTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeMitigationAction",
            "config": {
                "http": {
                    "inject": [
                        {
                            "actionName": "route.actionName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/mitigationactions/actions/{actionName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMitigationActionResponse"
                    },
                    "inject": [
                        "param.0.actionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMitigationActionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeProvisioningTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "templateName": "route.templateName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/provisioning-templates/{templateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeProvisioningTemplateResponse"
                    },
                    "inject": [
                        "param.0.templateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeProvisioningTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeProvisioningTemplateVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "templateName": "route.templateName",
                            "versionId": "route.versionId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/provisioning-templates/{templateName}/versions/{versionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeProvisioningTemplateVersionResponse"
                    },
                    "inject": [
                        "param.0.templateName",
                        "param.0.versionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeProvisioningTemplateVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeRoleAlias",
            "config": {
                "http": {
                    "inject": [
                        {
                            "roleAlias": "route.roleAlias",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/role-aliases/{roleAlias}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRoleAliasResponse"
                    },
                    "inject": [
                        "param.0.roleAlias",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRoleAliasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeScheduledAudit",
            "config": {
                "http": {
                    "inject": [
                        {
                            "scheduledAuditName": "route.scheduledAuditName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/audit/scheduledaudits/{scheduledAuditName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeScheduledAuditResponse"
                    },
                    "inject": [
                        "param.0.scheduledAuditName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeScheduledAuditRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSecurityProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "securityProfileName": "route.securityProfileName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/security-profiles/{securityProfileName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSecurityProfileResponse"
                    },
                    "inject": [
                        "param.0.securityProfileName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSecurityProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStream",
            "config": {
                "http": {
                    "inject": [
                        {
                            "streamId": "route.streamId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/streams/{streamId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStreamResponse"
                    },
                    "inject": [
                        "param.0.streamId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeStreamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeThing",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/things/{thingName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeThingResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeThingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingGroupName": "route.thingGroupName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/thing-groups/{thingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeThingGroupResponse"
                    },
                    "inject": [
                        "param.0.thingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeThingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeThingRegistrationTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/thing-registration-tasks/{taskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeThingRegistrationTaskResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeThingRegistrationTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeThingType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingTypeName": "route.thingTypeName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/thing-types/{thingTypeName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeThingTypeResponse"
                    },
                    "inject": [
                        "param.0.thingTypeName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeThingTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/target-policies/{policyName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachPrincipalPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/principal-policies/{policyName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachPrincipalPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachSecurityProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "securityProfileName": "route.securityProfileName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/security-profiles/{securityProfileName}/targets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachSecurityProfileResponse"
                    },
                    "inject": [
                        "param.0.securityProfileName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachSecurityProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachThingPrincipal",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/things/{thingName}/principals"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachThingPrincipalResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachThingPrincipalRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableTopicRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ruleName": "route.ruleName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/rules/{ruleName}/disable"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ruleName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableTopicRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateSbomFromPackageVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "versionName": "route.versionName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/packages/{packageName}/versions/{versionName}/sbom"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateSbomFromPackageVersionResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0.versionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateSbomFromPackageVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableTopicRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ruleName": "route.ruleName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/rules/{ruleName}/enable"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ruleName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableTopicRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBehaviorModelTrainingSummaries",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/behavior-model-training/summaries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBehaviorModelTrainingSummariesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBehaviorModelTrainingSummariesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBucketsAggregation",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/indices/buckets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketsAggregationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBucketsAggregationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCardinality",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/indices/cardinality"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCardinalityResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCardinalityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEffectivePolicies",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/effective-policies"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEffectivePoliciesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEffectivePoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIndexingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/indexing/config"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIndexingConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIndexingConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetJobDocument",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobId": "route.jobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/jobs/{jobId}/job-document"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetJobDocumentResponse"
                    },
                    "inject": [
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetJobDocumentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLoggingOptions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/loggingOptions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLoggingOptionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLoggingOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetOTAUpdate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "otaUpdateId": "route.otaUpdateId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/otaUpdates/{otaUpdateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOTAUpdateResponse"
                    },
                    "inject": [
                        "param.0.otaUpdateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOTAUpdateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPackage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/packages/{packageName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPackageResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPackageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPackageConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/package-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPackageConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPackageConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPackageVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "versionName": "route.versionName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/packages/{packageName}/versions/{versionName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPackageVersionResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0.versionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPackageVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPercentiles",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/indices/percentiles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPercentilesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPercentilesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/policies/{policyName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPolicyResponse"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPolicyVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "policyVersionId": "route.policyVersionId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/policies/{policyName}/version/{policyVersionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPolicyVersionResponse"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0.policyVersionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPolicyVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRegistrationCode",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/registrationcode"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRegistrationCodeResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRegistrationCodeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetStatistics",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/indices/statistics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetStatisticsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetStatisticsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTopicRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ruleName": "route.ruleName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/rules/{ruleName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTopicRuleResponse"
                    },
                    "inject": [
                        "param.0.ruleName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTopicRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTopicRuleDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "arn": "route.arn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/destinations{/arn*}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTopicRuleDestinationResponse"
                    },
                    "inject": [
                        "param.0.arn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTopicRuleDestinationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetV2LoggingOptions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2LoggingOptions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetV2LoggingOptionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetV2LoggingOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListActiveViolations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/active-violations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListActiveViolationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListActiveViolationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAttachedPolicies",
            "config": {
                "http": {
                    "inject": [
                        {
                            "target": "route.target",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/attached-policies/{target}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAttachedPoliciesResponse"
                    },
                    "inject": [
                        "param.0.target",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAttachedPoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAuditFindings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/audit/findings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAuditFindingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAuditFindingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAuditMitigationActionsExecutions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/mitigationactions/executions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAuditMitigationActionsExecutionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAuditMitigationActionsExecutionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAuditMitigationActionsTasks",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/mitigationactions/tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAuditMitigationActionsTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAuditMitigationActionsTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAuditSuppressions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/audit/suppressions/list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAuditSuppressionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAuditSuppressionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAuditTasks",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAuditTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAuditTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAuthorizers",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/authorizers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAuthorizersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAuthorizersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListBillingGroups",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/billing-groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBillingGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBillingGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCACertificates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/cacertificates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCACertificatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCACertificatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCertificateProviders",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/certificate-providers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCertificateProvidersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCertificateProvidersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCertificates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/certificates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCertificatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCertificatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCertificatesByCA",
            "config": {
                "http": {
                    "inject": [
                        {
                            "caCertificateId": "route.caCertificateId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/certificates-by-ca/{caCertificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCertificatesByCAResponse"
                    },
                    "inject": [
                        "param.0.caCertificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCertificatesByCARequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCustomMetrics",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/custom-metrics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCustomMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCustomMetricsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDetectMitigationActionsExecutions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/detect/mitigationactions/executions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDetectMitigationActionsExecutionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDetectMitigationActionsExecutionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDetectMitigationActionsTasks",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/detect/mitigationactions/tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDetectMitigationActionsTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDetectMitigationActionsTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDimensions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/dimensions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDimensionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDimensionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDomainConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/domainConfigurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDomainConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDomainConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFleetMetrics",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/fleet-metrics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFleetMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFleetMetricsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListIndices",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/indices"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListIndicesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListIndicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListJobExecutionsForJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobId": "route.jobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/jobs/{jobId}/things"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobExecutionsForJobResponse"
                    },
                    "inject": [
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListJobExecutionsForJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListJobExecutionsForThing",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/things/{thingName}/jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobExecutionsForThingResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListJobExecutionsForThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListJobs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListJobTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/job-templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListJobTemplatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListJobTemplatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListManagedJobTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/managed-job-templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListManagedJobTemplatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListManagedJobTemplatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMetricValues",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/metric-values"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMetricValuesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMetricValuesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMitigationActions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/mitigationactions/actions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMitigationActionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMitigationActionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListOTAUpdates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/otaUpdates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOTAUpdatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOTAUpdatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListOutgoingCertificates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/certificates-out-going"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOutgoingCertificatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOutgoingCertificatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPackages",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/packages"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPackagesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPackagesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPackageVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/packages/{packageName}/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPackageVersionsResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPackageVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPolicies",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/policies"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPoliciesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPolicyPrincipals",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/policy-principals"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPolicyPrincipalsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPolicyPrincipalsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPolicyVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/policies/{policyName}/version"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPolicyVersionsResponse"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPolicyVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPrincipalPolicies",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/principal-policies"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPrincipalPoliciesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPrincipalPoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPrincipalThings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/principals/things"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPrincipalThingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPrincipalThingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListProvisioningTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/provisioning-templates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProvisioningTemplatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProvisioningTemplatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListProvisioningTemplateVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "templateName": "route.templateName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/provisioning-templates/{templateName}/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProvisioningTemplateVersionsResponse"
                    },
                    "inject": [
                        "param.0.templateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProvisioningTemplateVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRelatedResourcesForAuditFinding",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/relatedResources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRelatedResourcesForAuditFindingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRelatedResourcesForAuditFindingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRoleAliases",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/role-aliases"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRoleAliasesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRoleAliasesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSbomValidationResults",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "versionName": "route.versionName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/packages/{packageName}/versions/{versionName}/sbom-validation-results"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSbomValidationResultsResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0.versionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSbomValidationResultsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListScheduledAudits",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/scheduledaudits"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListScheduledAuditsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListScheduledAuditsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSecurityProfiles",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/security-profiles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSecurityProfilesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSecurityProfilesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSecurityProfilesForTarget",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/security-profiles-for-target"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSecurityProfilesForTargetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSecurityProfilesForTargetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStreams",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/streams"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStreamsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStreamsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTargetsForPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/policy-targets/{policyName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTargetsForPolicyResponse"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTargetsForPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTargetsForSecurityProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "securityProfileName": "route.securityProfileName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/security-profiles/{securityProfileName}/targets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTargetsForSecurityProfileResponse"
                    },
                    "inject": [
                        "param.0.securityProfileName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTargetsForSecurityProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListThingGroups",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/thing-groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListThingGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListThingGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListThingGroupsForThing",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/things/{thingName}/thing-groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListThingGroupsForThingResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListThingGroupsForThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListThingPrincipals",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/things/{thingName}/principals"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListThingPrincipalsResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListThingPrincipalsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListThingRegistrationTaskReports",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/thing-registration-tasks/{taskId}/reports"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListThingRegistrationTaskReportsResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListThingRegistrationTaskReportsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListThingRegistrationTasks",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/thing-registration-tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListThingRegistrationTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListThingRegistrationTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListThings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/things"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListThingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListThingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListThingsInBillingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "billingGroupName": "route.billingGroupName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/billing-groups/{billingGroupName}/things"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListThingsInBillingGroupResponse"
                    },
                    "inject": [
                        "param.0.billingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListThingsInBillingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListThingsInThingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingGroupName": "route.thingGroupName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/thing-groups/{thingGroupName}/things"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListThingsInThingGroupResponse"
                    },
                    "inject": [
                        "param.0.thingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListThingsInThingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListThingTypes",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/thing-types"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListThingTypesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListThingTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTopicRuleDestinations",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/destinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTopicRuleDestinationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTopicRuleDestinationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTopicRules",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/rules"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTopicRulesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTopicRulesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListV2LoggingLevels",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v2LoggingLevel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListV2LoggingLevelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListV2LoggingLevelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListViolationEvents",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/violation-events"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListViolationEventsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListViolationEventsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutVerificationStateOnViolation",
            "config": {
                "http": {
                    "inject": [
                        {
                            "violationId": "route.violationId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/violations/verification-state/{violationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutVerificationStateOnViolationResponse"
                    },
                    "inject": [
                        "param.0.violationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutVerificationStateOnViolationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterCACertificate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/cacertificate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterCACertificateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterCACertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterCertificate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/certificate/register"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterCertificateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterCertificateWithoutCA",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/certificate/register-no-ca"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterCertificateWithoutCAResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterCertificateWithoutCARequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterThing",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/things"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterThingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RejectCertificateTransfer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateId": "route.certificateId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/reject-certificate-transfer/{certificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.certificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RejectCertificateTransferRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveThingFromBillingGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/billing-groups/removeThingFromBillingGroup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveThingFromBillingGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveThingFromBillingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveThingFromThingGroup",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/thing-groups/removeThingFromThingGroup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveThingFromThingGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveThingFromThingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplaceTopicRule",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ruleName": "route.ruleName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/rules/{ruleName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ruleName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReplaceTopicRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchIndex",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/indices/search"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchIndexResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchIndexRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SetDefaultAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/default-authorizer"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SetDefaultAuthorizerResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetDefaultAuthorizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SetDefaultPolicyVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "policyName": "route.policyName",
                            "policyVersionId": "route.policyVersionId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/policies/{policyName}/version/{policyVersionId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.policyName",
                        "param.0.policyVersionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetDefaultPolicyVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SetLoggingOptions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/loggingOptions"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetLoggingOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SetV2LoggingLevel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2LoggingLevel"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetV2LoggingLevelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SetV2LoggingOptions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v2LoggingOptions"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetV2LoggingOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartAuditMitigationActionsTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/audit/mitigationactions/tasks/{taskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartAuditMitigationActionsTaskResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartAuditMitigationActionsTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartDetectMitigationActionsTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/detect/mitigationactions/tasks/{taskId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDetectMitigationActionsTaskResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDetectMitigationActionsTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartOnDemandAuditTask",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/audit/tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartOnDemandAuditTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartOnDemandAuditTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartThingRegistrationTask",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/thing-registration-tasks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartThingRegistrationTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartThingRegistrationTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopThingRegistrationTask",
            "config": {
                "http": {
                    "inject": [
                        {
                            "taskId": "route.taskId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/thing-registration-tasks/{taskId}/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopThingRegistrationTaskResponse"
                    },
                    "inject": [
                        "param.0.taskId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopThingRegistrationTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TestAuthorization",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/test-authorization"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestAuthorizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestAuthorizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TestInvokeAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "authorizerName": "route.authorizerName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/authorizer/{authorizerName}/test"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestInvokeAuthorizerResponse"
                    },
                    "inject": [
                        "param.0.authorizerName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestInvokeAuthorizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TransferCertificate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateId": "route.certificateId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/transfer-certificate/{certificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TransferCertificateResponse"
                    },
                    "inject": [
                        "param.0.certificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TransferCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/untag"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateAccountAuditConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/audit/configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAccountAuditConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAccountAuditConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateAuditSuppression",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/audit/suppressions/update"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAuditSuppressionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAuditSuppressionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateAuthorizer",
            "config": {
                "http": {
                    "inject": [
                        {
                            "authorizerName": "route.authorizerName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/authorizer/{authorizerName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAuthorizerResponse"
                    },
                    "inject": [
                        "param.0.authorizerName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAuthorizerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateBillingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "billingGroupName": "route.billingGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/billing-groups/{billingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBillingGroupResponse"
                    },
                    "inject": [
                        "param.0.billingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBillingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCACertificate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateId": "route.certificateId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/cacertificate/{certificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.certificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCACertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCertificate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateId": "route.certificateId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/certificates/{certificateId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.certificateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCertificateProvider",
            "config": {
                "http": {
                    "inject": [
                        {
                            "certificateProviderName": "route.certificateProviderName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/certificate-providers/{certificateProviderName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCertificateProviderResponse"
                    },
                    "inject": [
                        "param.0.certificateProviderName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCertificateProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCustomMetric",
            "config": {
                "http": {
                    "inject": [
                        {
                            "metricName": "route.metricName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/custom-metric/{metricName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCustomMetricResponse"
                    },
                    "inject": [
                        "param.0.metricName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCustomMetricRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDimension",
            "config": {
                "http": {
                    "inject": [
                        {
                            "name": "route.name",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/dimensions/{name}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDimensionResponse"
                    },
                    "inject": [
                        "param.0.name",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDimensionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDomainConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "domainConfigurationName": "route.domainConfigurationName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/domainConfigurations/{domainConfigurationName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDomainConfigurationResponse"
                    },
                    "inject": [
                        "param.0.domainConfigurationName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDomainConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDynamicThingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingGroupName": "route.thingGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/dynamic-thing-groups/{thingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDynamicThingGroupResponse"
                    },
                    "inject": [
                        "param.0.thingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDynamicThingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateEventConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/event-configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEventConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEventConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFleetMetric",
            "config": {
                "http": {
                    "inject": [
                        {
                            "metricName": "route.metricName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/fleet-metric/{metricName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.metricName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFleetMetricRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateIndexingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/indexing/config"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateIndexingConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateIndexingConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "jobId": "route.jobId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/jobs/{jobId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.jobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateMitigationAction",
            "config": {
                "http": {
                    "inject": [
                        {
                            "actionName": "route.actionName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/mitigationactions/actions/{actionName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMitigationActionResponse"
                    },
                    "inject": [
                        "param.0.actionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMitigationActionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePackage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/packages/{packageName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePackageResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePackageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePackageConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/package-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePackageConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePackageConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePackageVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "packageName": "route.packageName",
                            "versionName": "route.versionName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/packages/{packageName}/versions/{versionName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePackageVersionResponse"
                    },
                    "inject": [
                        "param.0.packageName",
                        "param.0.versionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePackageVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateProvisioningTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "templateName": "route.templateName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/provisioning-templates/{templateName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateProvisioningTemplateResponse"
                    },
                    "inject": [
                        "param.0.templateName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateProvisioningTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRoleAlias",
            "config": {
                "http": {
                    "inject": [
                        {
                            "roleAlias": "route.roleAlias",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/role-aliases/{roleAlias}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRoleAliasResponse"
                    },
                    "inject": [
                        "param.0.roleAlias",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRoleAliasRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateScheduledAudit",
            "config": {
                "http": {
                    "inject": [
                        {
                            "scheduledAuditName": "route.scheduledAuditName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/audit/scheduledaudits/{scheduledAuditName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateScheduledAuditResponse"
                    },
                    "inject": [
                        "param.0.scheduledAuditName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateScheduledAuditRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSecurityProfile",
            "config": {
                "http": {
                    "inject": [
                        {
                            "securityProfileName": "route.securityProfileName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/security-profiles/{securityProfileName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSecurityProfileResponse"
                    },
                    "inject": [
                        "param.0.securityProfileName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSecurityProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateStream",
            "config": {
                "http": {
                    "inject": [
                        {
                            "streamId": "route.streamId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/streams/{streamId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateStreamResponse"
                    },
                    "inject": [
                        "param.0.streamId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateStreamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateThing",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingName": "route.thingName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/things/{thingName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateThingResponse"
                    },
                    "inject": [
                        "param.0.thingName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateThingGroup",
            "config": {
                "http": {
                    "inject": [
                        {
                            "thingGroupName": "route.thingGroupName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/thing-groups/{thingGroupName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateThingGroupResponse"
                    },
                    "inject": [
                        "param.0.thingGroupName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateThingGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateThingGroupsForThing",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/thing-groups/updateThingGroupsForThing"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateThingGroupsForThingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateThingGroupsForThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateTopicRuleDestination",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PATCH",
                    "route": "/destinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTopicRuleDestinationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateTopicRuleDestinationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ValidateSecurityProfileBehaviors",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/security-profile-behaviors/validate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ValidateSecurityProfileBehaviorsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ValidateSecurityProfileBehaviorsRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AcceptCertificateTransferRequest": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "setAsActive": {
                    "$ref": "#/$defs/SetAsActive"
                }
            }
        },
        "CertificateId": {
            "type": "string"
        },
        "SetAsActive": {
            "type": "boolean"
        },
        "AddThingToBillingGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "AddThingToBillingGroupRequest": {
            "type": "object",
            "properties": {
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                },
                "billingGroupArn": {
                    "$ref": "#/$defs/BillingGroupArn"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingArn": {
                    "$ref": "#/$defs/ThingArn"
                }
            }
        },
        "BillingGroupName": {
            "type": "string"
        },
        "BillingGroupArn": {
            "type": "string"
        },
        "ThingName": {
            "type": "string"
        },
        "ThingArn": {
            "type": "string"
        },
        "AddThingToThingGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "AddThingToThingGroupRequest": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupArn": {
                    "$ref": "#/$defs/ThingGroupArn"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingArn": {
                    "$ref": "#/$defs/ThingArn"
                },
                "overrideDynamicGroups": {
                    "$ref": "#/$defs/OverrideDynamicGroups"
                }
            }
        },
        "ThingGroupName": {
            "type": "string"
        },
        "ThingGroupArn": {
            "type": "string"
        },
        "OverrideDynamicGroups": {
            "type": "boolean"
        },
        "AssociateSbomWithPackageVersionResponse": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "sbom": {
                    "$ref": "#/$defs/Sbom"
                },
                "sbomValidationStatus": {
                    "$ref": "#/$defs/SbomValidationStatus"
                }
            }
        },
        "PackageName": {
            "type": "string"
        },
        "VersionName": {
            "type": "string"
        },
        "Sbom": {
            "type": "object",
            "properties": {
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "S3Location": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "key": {
                    "$ref": "#/$defs/S3Key"
                },
                "version": {
                    "$ref": "#/$defs/S3Version"
                }
            }
        },
        "S3Bucket": {
            "type": "string"
        },
        "S3Key": {
            "type": "string"
        },
        "S3Version": {
            "type": "string"
        },
        "SbomValidationStatus": {
            "enum": [
                "IN_PROGRESS",
                "FAILED",
                "SUCCEEDED"
            ]
        },
        "AssociateSbomWithPackageVersionRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "sbom": {
                    "$ref": "#/$defs/Sbom"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "AssociateTargetsWithJobResponse": {
            "type": "object",
            "properties": {
                "jobArn": {
                    "$ref": "#/$defs/JobArn"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                }
            }
        },
        "JobArn": {
            "type": "string"
        },
        "JobId": {
            "type": "string"
        },
        "JobDescription": {
            "type": "string"
        },
        "AssociateTargetsWithJobRequest": {
            "type": "object",
            "properties": {
                "targets": {
                    "$ref": "#/$defs/JobTargets"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "comment": {
                    "$ref": "#/$defs/Comment"
                },
                "namespaceId": {
                    "$ref": "#/$defs/NamespaceId"
                }
            }
        },
        "JobTargets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetArn"
            }
        },
        "TargetArn": {
            "type": "string"
        },
        "Comment": {
            "type": "string"
        },
        "NamespaceId": {
            "type": "string"
        },
        "AttachPolicyRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "target": {
                    "$ref": "#/$defs/PolicyTarget"
                }
            }
        },
        "PolicyName": {
            "type": "string"
        },
        "PolicyTarget": {
            "type": "string"
        },
        "AttachPrincipalPolicyRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "principal": {
                    "$ref": "#/$defs/Principal"
                }
            }
        },
        "Principal": {
            "type": "string"
        },
        "AttachSecurityProfileResponse": {
            "type": "object",
            "properties": {}
        },
        "AttachSecurityProfileRequest": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "securityProfileTargetArn": {
                    "$ref": "#/$defs/SecurityProfileTargetArn"
                }
            }
        },
        "SecurityProfileName": {
            "type": "string"
        },
        "SecurityProfileTargetArn": {
            "type": "string"
        },
        "AttachThingPrincipalResponse": {
            "type": "object",
            "properties": {}
        },
        "AttachThingPrincipalRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "principal": {
                    "$ref": "#/$defs/Principal"
                }
            }
        },
        "CancelAuditMitigationActionsTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelAuditMitigationActionsTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                }
            }
        },
        "MitigationActionsTaskId": {
            "type": "string"
        },
        "CancelAuditTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelAuditTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/AuditTaskId"
                }
            }
        },
        "AuditTaskId": {
            "type": "string"
        },
        "CancelCertificateTransferRequest": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                }
            }
        },
        "CancelDetectMitigationActionsTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelDetectMitigationActionsTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                }
            }
        },
        "CancelJobResponse": {
            "type": "object",
            "properties": {
                "jobArn": {
                    "$ref": "#/$defs/JobArn"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                }
            }
        },
        "CancelJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "reasonCode": {
                    "$ref": "#/$defs/ReasonCode"
                },
                "comment": {
                    "$ref": "#/$defs/Comment"
                },
                "force": {
                    "$ref": "#/$defs/ForceFlag"
                }
            }
        },
        "ReasonCode": {
            "type": "string"
        },
        "ForceFlag": {
            "type": "boolean"
        },
        "CancelJobExecutionRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "force": {
                    "$ref": "#/$defs/ForceFlag"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/ExpectedVersion"
                },
                "statusDetails": {
                    "$ref": "#/$defs/DetailsMap"
                }
            }
        },
        "ExpectedVersion": {
            "type": "integer",
            "format": "int64"
        },
        "DetailsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DetailsValue"
            }
        },
        "DetailsValue": {
            "type": "string"
        },
        "ClearDefaultAuthorizerResponse": {
            "type": "object",
            "properties": {}
        },
        "ClearDefaultAuthorizerRequest": {
            "type": "object",
            "properties": {}
        },
        "ConfirmTopicRuleDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "ConfirmTopicRuleDestinationRequest": {
            "type": "object",
            "properties": {
                "confirmationToken": {
                    "$ref": "#/$defs/ConfirmationToken"
                }
            }
        },
        "ConfirmationToken": {
            "type": "string"
        },
        "CreateAuditSuppressionResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateAuditSuppressionRequest": {
            "type": "object",
            "properties": {
                "checkName": {
                    "$ref": "#/$defs/AuditCheckName"
                },
                "resourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "expirationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "suppressIndefinitely": {
                    "$ref": "#/$defs/SuppressIndefinitely"
                },
                "description": {
                    "$ref": "#/$defs/AuditDescription"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "AuditCheckName": {
            "type": "string"
        },
        "ResourceIdentifier": {
            "type": "object",
            "properties": {
                "deviceCertificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "caCertificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "cognitoIdentityPoolId": {
                    "$ref": "#/$defs/CognitoIdentityPoolId"
                },
                "clientId": {
                    "$ref": "#/$defs/ClientId"
                },
                "policyVersionIdentifier": {
                    "$ref": "#/$defs/PolicyVersionIdentifier"
                },
                "account": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "iamRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "roleAliasArn": {
                    "$ref": "#/$defs/RoleAliasArn"
                },
                "issuerCertificateIdentifier": {
                    "$ref": "#/$defs/IssuerCertificateIdentifier"
                },
                "deviceCertificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                }
            }
        },
        "CognitoIdentityPoolId": {
            "type": "string"
        },
        "ClientId": {
            "type": "string"
        },
        "PolicyVersionIdentifier": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyVersionId": {
                    "$ref": "#/$defs/PolicyVersionId"
                }
            }
        },
        "PolicyVersionId": {
            "type": "string"
        },
        "AwsAccountId": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "RoleAliasArn": {
            "type": "string"
        },
        "IssuerCertificateIdentifier": {
            "type": "object",
            "properties": {
                "issuerCertificateSubject": {
                    "$ref": "#/$defs/IssuerCertificateSubject"
                },
                "issuerId": {
                    "$ref": "#/$defs/IssuerId"
                },
                "issuerCertificateSerialNumber": {
                    "$ref": "#/$defs/IssuerCertificateSerialNumber"
                }
            }
        },
        "IssuerCertificateSubject": {
            "type": "string"
        },
        "IssuerId": {
            "type": "string"
        },
        "IssuerCertificateSerialNumber": {
            "type": "string"
        },
        "CertificateArn": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "SuppressIndefinitely": {
            "type": "boolean"
        },
        "AuditDescription": {
            "type": "string"
        },
        "ClientRequestToken": {
            "type": "string"
        },
        "CreateAuthorizerResponse": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                },
                "authorizerArn": {
                    "$ref": "#/$defs/AuthorizerArn"
                }
            }
        },
        "AuthorizerName": {
            "type": "string"
        },
        "AuthorizerArn": {
            "type": "string"
        },
        "CreateAuthorizerRequest": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                },
                "authorizerFunctionArn": {
                    "$ref": "#/$defs/AuthorizerFunctionArn"
                },
                "tokenKeyName": {
                    "$ref": "#/$defs/TokenKeyName"
                },
                "tokenSigningPublicKeys": {
                    "$ref": "#/$defs/PublicKeyMap"
                },
                "status": {
                    "$ref": "#/$defs/AuthorizerStatus"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "signingDisabled": {
                    "$ref": "#/$defs/BooleanKey"
                },
                "enableCachingForHttp": {
                    "$ref": "#/$defs/EnableCachingForHttp"
                }
            }
        },
        "AuthorizerFunctionArn": {
            "type": "string"
        },
        "TokenKeyName": {
            "type": "string"
        },
        "PublicKeyMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/KeyValue"
            }
        },
        "KeyValue": {
            "type": "string"
        },
        "AuthorizerStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "BooleanKey": {
            "type": "boolean"
        },
        "EnableCachingForHttp": {
            "type": "boolean"
        },
        "CreateBillingGroupResponse": {
            "type": "object",
            "properties": {
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                },
                "billingGroupArn": {
                    "$ref": "#/$defs/BillingGroupArn"
                },
                "billingGroupId": {
                    "$ref": "#/$defs/BillingGroupId"
                }
            }
        },
        "BillingGroupId": {
            "type": "string"
        },
        "CreateBillingGroupRequest": {
            "type": "object",
            "properties": {
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                },
                "billingGroupProperties": {
                    "$ref": "#/$defs/BillingGroupProperties"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "BillingGroupProperties": {
            "type": "object",
            "properties": {
                "billingGroupDescription": {
                    "$ref": "#/$defs/BillingGroupDescription"
                }
            }
        },
        "BillingGroupDescription": {
            "type": "string"
        },
        "CreateCertificateFromCsrResponse": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "certificatePem": {
                    "$ref": "#/$defs/CertificatePem"
                }
            }
        },
        "CertificatePem": {
            "type": "string"
        },
        "CreateCertificateFromCsrRequest": {
            "type": "object",
            "properties": {
                "certificateSigningRequest": {
                    "$ref": "#/$defs/CertificateSigningRequest"
                },
                "setAsActive": {
                    "$ref": "#/$defs/SetAsActive"
                }
            }
        },
        "CertificateSigningRequest": {
            "type": "string"
        },
        "CreateCertificateProviderResponse": {
            "type": "object",
            "properties": {
                "certificateProviderName": {
                    "$ref": "#/$defs/CertificateProviderName"
                },
                "certificateProviderArn": {
                    "$ref": "#/$defs/CertificateProviderArn"
                }
            }
        },
        "CertificateProviderName": {
            "type": "string"
        },
        "CertificateProviderArn": {
            "type": "string"
        },
        "CreateCertificateProviderRequest": {
            "type": "object",
            "properties": {
                "certificateProviderName": {
                    "$ref": "#/$defs/CertificateProviderName"
                },
                "lambdaFunctionArn": {
                    "$ref": "#/$defs/CertificateProviderFunctionArn"
                },
                "accountDefaultForOperations": {
                    "$ref": "#/$defs/CertificateProviderAccountDefaultForOperations"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CertificateProviderFunctionArn": {
            "type": "string"
        },
        "CertificateProviderAccountDefaultForOperations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CertificateProviderOperation"
            }
        },
        "CertificateProviderOperation": {
            "enum": [
                "CreateCertificateFromCsr"
            ]
        },
        "CreateCustomMetricResponse": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "metricArn": {
                    "$ref": "#/$defs/CustomMetricArn"
                }
            }
        },
        "MetricName": {
            "type": "string"
        },
        "CustomMetricArn": {
            "type": "string"
        },
        "CreateCustomMetricRequest": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "displayName": {
                    "$ref": "#/$defs/CustomMetricDisplayName"
                },
                "metricType": {
                    "$ref": "#/$defs/CustomMetricType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "CustomMetricDisplayName": {
            "type": "string"
        },
        "CustomMetricType": {
            "enum": [
                "STRING_LIST",
                "IP_ADDRESS_LIST",
                "NUMBER_LIST",
                "NUMBER"
            ]
        },
        "CreateDimensionResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DimensionName"
                },
                "arn": {
                    "$ref": "#/$defs/DimensionArn"
                }
            }
        },
        "DimensionName": {
            "type": "string"
        },
        "DimensionArn": {
            "type": "string"
        },
        "CreateDimensionRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DimensionName"
                },
                "type": {
                    "$ref": "#/$defs/DimensionType"
                },
                "stringValues": {
                    "$ref": "#/$defs/DimensionStringValues"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "DimensionType": {
            "enum": [
                "TOPIC_FILTER"
            ]
        },
        "DimensionStringValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionStringValue"
            }
        },
        "DimensionStringValue": {
            "type": "string"
        },
        "CreateDomainConfigurationResponse": {
            "type": "object",
            "properties": {
                "domainConfigurationName": {
                    "$ref": "#/$defs/DomainConfigurationName"
                },
                "domainConfigurationArn": {
                    "$ref": "#/$defs/DomainConfigurationArn"
                }
            }
        },
        "DomainConfigurationName": {
            "type": "string"
        },
        "DomainConfigurationArn": {
            "type": "string"
        },
        "CreateDomainConfigurationRequest": {
            "type": "object",
            "properties": {
                "domainConfigurationName": {
                    "$ref": "#/$defs/DomainConfigurationName"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "serverCertificateArns": {
                    "$ref": "#/$defs/ServerCertificateArns"
                },
                "validationCertificateArn": {
                    "$ref": "#/$defs/AcmCertificateArn"
                },
                "authorizerConfig": {
                    "$ref": "#/$defs/AuthorizerConfig"
                },
                "serviceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "tlsConfig": {
                    "$ref": "#/$defs/TlsConfig"
                },
                "serverCertificateConfig": {
                    "$ref": "#/$defs/ServerCertificateConfig"
                },
                "authenticationType": {
                    "$ref": "#/$defs/AuthenticationType"
                },
                "applicationProtocol": {
                    "$ref": "#/$defs/ApplicationProtocol"
                },
                "clientCertificateConfig": {
                    "$ref": "#/$defs/ClientCertificateConfig"
                }
            }
        },
        "DomainName": {
            "type": "string"
        },
        "ServerCertificateArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AcmCertificateArn"
            }
        },
        "AcmCertificateArn": {
            "type": "string"
        },
        "AuthorizerConfig": {
            "type": "object",
            "properties": {
                "defaultAuthorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                },
                "allowAuthorizerOverride": {
                    "$ref": "#/$defs/AllowAuthorizerOverride"
                }
            }
        },
        "AllowAuthorizerOverride": {
            "type": "boolean"
        },
        "ServiceType": {
            "enum": [
                "DATA",
                "CREDENTIAL_PROVIDER",
                "JOBS"
            ]
        },
        "TlsConfig": {
            "type": "object",
            "properties": {
                "securityPolicy": {
                    "$ref": "#/$defs/SecurityPolicy"
                }
            }
        },
        "SecurityPolicy": {
            "type": "string"
        },
        "ServerCertificateConfig": {
            "type": "object",
            "properties": {
                "enableOCSPCheck": {
                    "$ref": "#/$defs/EnableOCSPCheck"
                }
            }
        },
        "EnableOCSPCheck": {
            "type": "boolean"
        },
        "AuthenticationType": {
            "enum": [
                "CUSTOM_AUTH_X509",
                "CUSTOM_AUTH",
                "AWS_X509",
                "AWS_SIGV4",
                "DEFAULT"
            ]
        },
        "ApplicationProtocol": {
            "enum": [
                "SECURE_MQTT",
                "MQTT_WSS",
                "HTTPS",
                "DEFAULT"
            ]
        },
        "ClientCertificateConfig": {
            "type": "object",
            "properties": {
                "clientCertificateCallbackArn": {
                    "$ref": "#/$defs/ClientCertificateCallbackArn"
                }
            }
        },
        "ClientCertificateCallbackArn": {
            "type": "string"
        },
        "CreateDynamicThingGroupResponse": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupArn": {
                    "$ref": "#/$defs/ThingGroupArn"
                },
                "thingGroupId": {
                    "$ref": "#/$defs/ThingGroupId"
                },
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                }
            }
        },
        "ThingGroupId": {
            "type": "string"
        },
        "IndexName": {
            "type": "string"
        },
        "QueryString": {
            "type": "string"
        },
        "QueryVersion": {
            "type": "string"
        },
        "CreateDynamicThingGroupRequest": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupProperties": {
                    "$ref": "#/$defs/ThingGroupProperties"
                },
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ThingGroupProperties": {
            "type": "object",
            "properties": {
                "thingGroupDescription": {
                    "$ref": "#/$defs/ThingGroupDescription"
                },
                "attributePayload": {
                    "$ref": "#/$defs/AttributePayload"
                }
            }
        },
        "ThingGroupDescription": {
            "type": "string"
        },
        "AttributePayload": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "merge": {
                    "$ref": "#/$defs/Flag"
                }
            }
        },
        "Attributes": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "AttributeValue": {
            "type": "string"
        },
        "Flag": {
            "type": "boolean"
        },
        "CreateFleetMetricResponse": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/FleetMetricName"
                },
                "metricArn": {
                    "$ref": "#/$defs/FleetMetricArn"
                }
            }
        },
        "FleetMetricName": {
            "type": "string"
        },
        "FleetMetricArn": {
            "type": "string"
        },
        "CreateFleetMetricRequest": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/FleetMetricName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "aggregationType": {
                    "$ref": "#/$defs/AggregationType"
                },
                "period": {
                    "$ref": "#/$defs/FleetMetricPeriod"
                },
                "aggregationField": {
                    "$ref": "#/$defs/AggregationField"
                },
                "description": {
                    "$ref": "#/$defs/FleetMetricDescription"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                },
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "unit": {
                    "$ref": "#/$defs/FleetMetricUnit"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "AggregationType": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/AggregationTypeName"
                },
                "values": {
                    "$ref": "#/$defs/AggregationTypeValues"
                }
            }
        },
        "AggregationTypeName": {
            "enum": [
                "STATISTICS",
                "PERCENTILES",
                "CARDINALITY"
            ]
        },
        "AggregationTypeValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AggregationTypeValue"
            }
        },
        "AggregationTypeValue": {
            "type": "string"
        },
        "FleetMetricPeriod": {
            "type": "integer",
            "format": "int32"
        },
        "AggregationField": {
            "type": "string"
        },
        "FleetMetricDescription": {
            "type": "string"
        },
        "FleetMetricUnit": {
            "enum": [
                "Seconds",
                "Microseconds",
                "Milliseconds",
                "Bytes",
                "Kilobytes",
                "Megabytes",
                "Gigabytes",
                "Terabytes",
                "Bits",
                "Kilobits",
                "Megabits",
                "Gigabits",
                "Terabits",
                "Percent",
                "Count",
                "BytesSecond",
                "KilobytesSecond",
                "MegabytesSecond",
                "GigabytesSecond",
                "TerabytesSecond",
                "BitsSecond",
                "KilobitsSecond",
                "MegabitsSecond",
                "GigabitsSecond",
                "TerabitsSecond",
                "CountSecond",
                "None"
            ]
        },
        "CreateJobResponse": {
            "type": "object",
            "properties": {
                "jobArn": {
                    "$ref": "#/$defs/JobArn"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                }
            }
        },
        "CreateJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "targets": {
                    "$ref": "#/$defs/JobTargets"
                },
                "documentSource": {
                    "$ref": "#/$defs/JobDocumentSource"
                },
                "document": {
                    "$ref": "#/$defs/JobDocument"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                },
                "presignedUrlConfig": {
                    "$ref": "#/$defs/PresignedUrlConfig"
                },
                "targetSelection": {
                    "$ref": "#/$defs/TargetSelection"
                },
                "jobExecutionsRolloutConfig": {
                    "$ref": "#/$defs/JobExecutionsRolloutConfig"
                },
                "abortConfig": {
                    "$ref": "#/$defs/AbortConfig"
                },
                "timeoutConfig": {
                    "$ref": "#/$defs/TimeoutConfig"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "namespaceId": {
                    "$ref": "#/$defs/NamespaceId"
                },
                "jobTemplateArn": {
                    "$ref": "#/$defs/JobTemplateArn"
                },
                "jobExecutionsRetryConfig": {
                    "$ref": "#/$defs/JobExecutionsRetryConfig"
                },
                "documentParameters": {
                    "$ref": "#/$defs/ParameterMap"
                },
                "schedulingConfig": {
                    "$ref": "#/$defs/SchedulingConfig"
                },
                "destinationPackageVersions": {
                    "$ref": "#/$defs/DestinationPackageVersions"
                }
            }
        },
        "JobDocumentSource": {
            "type": "string"
        },
        "JobDocument": {
            "type": "string"
        },
        "PresignedUrlConfig": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "expiresInSec": {
                    "$ref": "#/$defs/ExpiresInSec"
                }
            }
        },
        "ExpiresInSec": {
            "type": "integer",
            "format": "int64"
        },
        "TargetSelection": {
            "enum": [
                "CONTINUOUS",
                "SNAPSHOT"
            ]
        },
        "JobExecutionsRolloutConfig": {
            "type": "object",
            "properties": {
                "maximumPerMinute": {
                    "$ref": "#/$defs/MaxJobExecutionsPerMin"
                },
                "exponentialRate": {
                    "$ref": "#/$defs/ExponentialRolloutRate"
                }
            }
        },
        "MaxJobExecutionsPerMin": {
            "type": "integer",
            "format": "int32"
        },
        "ExponentialRolloutRate": {
            "type": "object",
            "properties": {
                "baseRatePerMinute": {
                    "$ref": "#/$defs/RolloutRatePerMinute"
                },
                "incrementFactor": {
                    "$ref": "#/$defs/IncrementFactor"
                },
                "rateIncreaseCriteria": {
                    "$ref": "#/$defs/RateIncreaseCriteria"
                }
            }
        },
        "RolloutRatePerMinute": {
            "type": "integer",
            "format": "int32"
        },
        "IncrementFactor": {
            "type": "number",
            "format": "double"
        },
        "RateIncreaseCriteria": {
            "type": "object",
            "properties": {
                "numberOfNotifiedThings": {
                    "$ref": "#/$defs/NumberOfThings"
                },
                "numberOfSucceededThings": {
                    "$ref": "#/$defs/NumberOfThings"
                }
            }
        },
        "NumberOfThings": {
            "type": "integer",
            "format": "int32"
        },
        "AbortConfig": {
            "type": "object",
            "properties": {
                "criteriaList": {
                    "$ref": "#/$defs/AbortCriteriaList"
                }
            }
        },
        "AbortCriteriaList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AbortCriteria"
            }
        },
        "AbortCriteria": {
            "type": "object",
            "properties": {
                "failureType": {
                    "$ref": "#/$defs/JobExecutionFailureType"
                },
                "action": {
                    "$ref": "#/$defs/AbortAction"
                },
                "thresholdPercentage": {
                    "$ref": "#/$defs/AbortThresholdPercentage"
                },
                "minNumberOfExecutedThings": {
                    "$ref": "#/$defs/MinimumNumberOfExecutedThings"
                }
            }
        },
        "JobExecutionFailureType": {
            "enum": [
                "FAILED",
                "REJECTED",
                "TIMED_OUT",
                "ALL"
            ]
        },
        "AbortAction": {
            "enum": [
                "CANCEL"
            ]
        },
        "AbortThresholdPercentage": {
            "type": "number",
            "format": "double"
        },
        "MinimumNumberOfExecutedThings": {
            "type": "integer",
            "format": "int32"
        },
        "TimeoutConfig": {
            "type": "object",
            "properties": {
                "inProgressTimeoutInMinutes": {
                    "$ref": "#/$defs/InProgressTimeoutInMinutes"
                }
            }
        },
        "InProgressTimeoutInMinutes": {
            "type": "integer",
            "format": "int64"
        },
        "JobTemplateArn": {
            "type": "string"
        },
        "JobExecutionsRetryConfig": {
            "type": "object",
            "properties": {
                "criteriaList": {
                    "$ref": "#/$defs/RetryCriteriaList"
                }
            }
        },
        "RetryCriteriaList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RetryCriteria"
            }
        },
        "RetryCriteria": {
            "type": "object",
            "properties": {
                "failureType": {
                    "$ref": "#/$defs/RetryableFailureType"
                },
                "numberOfRetries": {
                    "$ref": "#/$defs/NumberOfRetries"
                }
            }
        },
        "RetryableFailureType": {
            "enum": [
                "FAILED",
                "TIMED_OUT",
                "ALL"
            ]
        },
        "NumberOfRetries": {
            "type": "integer",
            "format": "int32"
        },
        "ParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ParameterValue"
            }
        },
        "ParameterValue": {
            "type": "string"
        },
        "SchedulingConfig": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/StringDateTime"
                },
                "endTime": {
                    "$ref": "#/$defs/StringDateTime"
                },
                "endBehavior": {
                    "$ref": "#/$defs/JobEndBehavior"
                },
                "maintenanceWindows": {
                    "$ref": "#/$defs/MaintenanceWindows"
                }
            }
        },
        "StringDateTime": {
            "type": "string"
        },
        "JobEndBehavior": {
            "enum": [
                "STOP_ROLLOUT",
                "CANCEL",
                "FORCE_CANCEL"
            ]
        },
        "MaintenanceWindows": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MaintenanceWindow"
            }
        },
        "MaintenanceWindow": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/CronExpression"
                },
                "durationInMinutes": {
                    "$ref": "#/$defs/DurationInMinutes"
                }
            }
        },
        "CronExpression": {
            "type": "string"
        },
        "DurationInMinutes": {
            "type": "integer",
            "format": "int32"
        },
        "DestinationPackageVersions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageVersionArn"
            }
        },
        "PackageVersionArn": {
            "type": "string"
        },
        "CreateJobTemplateResponse": {
            "type": "object",
            "properties": {
                "jobTemplateArn": {
                    "$ref": "#/$defs/JobTemplateArn"
                },
                "jobTemplateId": {
                    "$ref": "#/$defs/JobTemplateId"
                }
            }
        },
        "JobTemplateId": {
            "type": "string"
        },
        "CreateJobTemplateRequest": {
            "type": "object",
            "properties": {
                "jobTemplateId": {
                    "$ref": "#/$defs/JobTemplateId"
                },
                "jobArn": {
                    "$ref": "#/$defs/JobArn"
                },
                "documentSource": {
                    "$ref": "#/$defs/JobDocumentSource"
                },
                "document": {
                    "$ref": "#/$defs/JobDocument"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                },
                "presignedUrlConfig": {
                    "$ref": "#/$defs/PresignedUrlConfig"
                },
                "jobExecutionsRolloutConfig": {
                    "$ref": "#/$defs/JobExecutionsRolloutConfig"
                },
                "abortConfig": {
                    "$ref": "#/$defs/AbortConfig"
                },
                "timeoutConfig": {
                    "$ref": "#/$defs/TimeoutConfig"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "jobExecutionsRetryConfig": {
                    "$ref": "#/$defs/JobExecutionsRetryConfig"
                },
                "maintenanceWindows": {
                    "$ref": "#/$defs/MaintenanceWindows"
                },
                "destinationPackageVersions": {
                    "$ref": "#/$defs/DestinationPackageVersions"
                }
            }
        },
        "CreateKeysAndCertificateResponse": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "certificatePem": {
                    "$ref": "#/$defs/CertificatePem"
                },
                "keyPair": {
                    "$ref": "#/$defs/KeyPair"
                }
            }
        },
        "KeyPair": {
            "type": "object",
            "properties": {
                "PublicKey": {
                    "$ref": "#/$defs/PublicKey"
                },
                "PrivateKey": {
                    "$ref": "#/$defs/PrivateKey"
                }
            }
        },
        "PublicKey": {
            "type": "string"
        },
        "PrivateKey": {
            "type": "string"
        },
        "CreateKeysAndCertificateRequest": {
            "type": "object",
            "properties": {
                "setAsActive": {
                    "$ref": "#/$defs/SetAsActive"
                }
            }
        },
        "CreateMitigationActionResponse": {
            "type": "object",
            "properties": {
                "actionArn": {
                    "$ref": "#/$defs/MitigationActionArn"
                },
                "actionId": {
                    "$ref": "#/$defs/MitigationActionId"
                }
            }
        },
        "MitigationActionArn": {
            "type": "string"
        },
        "MitigationActionId": {
            "type": "string"
        },
        "CreateMitigationActionRequest": {
            "type": "object",
            "properties": {
                "actionName": {
                    "$ref": "#/$defs/MitigationActionName"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "actionParams": {
                    "$ref": "#/$defs/MitigationActionParams"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "MitigationActionName": {
            "type": "string"
        },
        "MitigationActionParams": {
            "type": "object",
            "properties": {
                "updateDeviceCertificateParams": {
                    "$ref": "#/$defs/UpdateDeviceCertificateParams"
                },
                "updateCACertificateParams": {
                    "$ref": "#/$defs/UpdateCACertificateParams"
                },
                "addThingsToThingGroupParams": {
                    "$ref": "#/$defs/AddThingsToThingGroupParams"
                },
                "replaceDefaultPolicyVersionParams": {
                    "$ref": "#/$defs/ReplaceDefaultPolicyVersionParams"
                },
                "enableIoTLoggingParams": {
                    "$ref": "#/$defs/EnableIoTLoggingParams"
                },
                "publishFindingToSnsParams": {
                    "$ref": "#/$defs/PublishFindingToSnsParams"
                }
            }
        },
        "UpdateDeviceCertificateParams": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/DeviceCertificateUpdateAction"
                }
            }
        },
        "DeviceCertificateUpdateAction": {
            "enum": [
                "DEACTIVATE"
            ]
        },
        "UpdateCACertificateParams": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/CACertificateUpdateAction"
                }
            }
        },
        "CACertificateUpdateAction": {
            "enum": [
                "DEACTIVATE"
            ]
        },
        "AddThingsToThingGroupParams": {
            "type": "object",
            "properties": {
                "thingGroupNames": {
                    "$ref": "#/$defs/ThingGroupNames"
                },
                "overrideDynamicGroups": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "ThingGroupNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThingGroupName"
            }
        },
        "NullableBoolean": {
            "type": "boolean"
        },
        "ReplaceDefaultPolicyVersionParams": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/PolicyTemplateName"
                }
            }
        },
        "PolicyTemplateName": {
            "enum": [
                "BLANK_POLICY"
            ]
        },
        "EnableIoTLoggingParams": {
            "type": "object",
            "properties": {
                "roleArnForLogging": {
                    "$ref": "#/$defs/RoleArn"
                },
                "logLevel": {
                    "$ref": "#/$defs/LogLevel"
                }
            }
        },
        "LogLevel": {
            "enum": [
                "DEBUG",
                "INFO",
                "ERROR",
                "WARN",
                "DISABLED"
            ]
        },
        "PublishFindingToSnsParams": {
            "type": "object",
            "properties": {
                "topicArn": {
                    "$ref": "#/$defs/SnsTopicArn"
                }
            }
        },
        "SnsTopicArn": {
            "type": "string"
        },
        "CreateOTAUpdateResponse": {
            "type": "object",
            "properties": {
                "otaUpdateId": {
                    "$ref": "#/$defs/OTAUpdateId"
                },
                "awsIotJobId": {
                    "$ref": "#/$defs/AwsIotJobId"
                },
                "otaUpdateArn": {
                    "$ref": "#/$defs/OTAUpdateArn"
                },
                "awsIotJobArn": {
                    "$ref": "#/$defs/AwsIotJobArn"
                },
                "otaUpdateStatus": {
                    "$ref": "#/$defs/OTAUpdateStatus"
                }
            }
        },
        "OTAUpdateId": {
            "type": "string"
        },
        "AwsIotJobId": {
            "type": "string"
        },
        "OTAUpdateArn": {
            "type": "string"
        },
        "AwsIotJobArn": {
            "type": "string"
        },
        "OTAUpdateStatus": {
            "enum": [
                "CREATE_PENDING",
                "CREATE_IN_PROGRESS",
                "CREATE_COMPLETE",
                "CREATE_FAILED",
                "DELETE_IN_PROGRESS",
                "DELETE_FAILED"
            ]
        },
        "CreateOTAUpdateRequest": {
            "type": "object",
            "properties": {
                "otaUpdateId": {
                    "$ref": "#/$defs/OTAUpdateId"
                },
                "description": {
                    "$ref": "#/$defs/OTAUpdateDescription"
                },
                "targets": {
                    "$ref": "#/$defs/Targets"
                },
                "protocols": {
                    "$ref": "#/$defs/Protocols"
                },
                "targetSelection": {
                    "$ref": "#/$defs/TargetSelection"
                },
                "awsJobExecutionsRolloutConfig": {
                    "$ref": "#/$defs/AwsJobExecutionsRolloutConfig"
                },
                "awsJobPresignedUrlConfig": {
                    "$ref": "#/$defs/AwsJobPresignedUrlConfig"
                },
                "awsJobAbortConfig": {
                    "$ref": "#/$defs/AwsJobAbortConfig"
                },
                "awsJobTimeoutConfig": {
                    "$ref": "#/$defs/AwsJobTimeoutConfig"
                },
                "files": {
                    "$ref": "#/$defs/OTAUpdateFiles"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "additionalParameters": {
                    "$ref": "#/$defs/AdditionalParameterMap"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "OTAUpdateDescription": {
            "type": "string"
        },
        "Targets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Target"
            }
        },
        "Target": {
            "type": "string"
        },
        "Protocols": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Protocol"
            }
        },
        "Protocol": {
            "enum": [
                "MQTT",
                "HTTP"
            ]
        },
        "AwsJobExecutionsRolloutConfig": {
            "type": "object",
            "properties": {
                "maximumPerMinute": {
                    "$ref": "#/$defs/MaximumPerMinute"
                },
                "exponentialRate": {
                    "$ref": "#/$defs/AwsJobExponentialRolloutRate"
                }
            }
        },
        "MaximumPerMinute": {
            "type": "integer",
            "format": "int32"
        },
        "AwsJobExponentialRolloutRate": {
            "type": "object",
            "properties": {
                "baseRatePerMinute": {
                    "$ref": "#/$defs/AwsJobRolloutRatePerMinute"
                },
                "incrementFactor": {
                    "$ref": "#/$defs/AwsJobRolloutIncrementFactor"
                },
                "rateIncreaseCriteria": {
                    "$ref": "#/$defs/AwsJobRateIncreaseCriteria"
                }
            }
        },
        "AwsJobRolloutRatePerMinute": {
            "type": "integer",
            "format": "int32"
        },
        "AwsJobRolloutIncrementFactor": {
            "type": "number",
            "format": "double"
        },
        "AwsJobRateIncreaseCriteria": {
            "type": "object",
            "properties": {
                "numberOfNotifiedThings": {
                    "$ref": "#/$defs/AwsJobRateIncreaseCriteriaNumberOfThings"
                },
                "numberOfSucceededThings": {
                    "$ref": "#/$defs/AwsJobRateIncreaseCriteriaNumberOfThings"
                }
            }
        },
        "AwsJobRateIncreaseCriteriaNumberOfThings": {
            "type": "integer",
            "format": "int32"
        },
        "AwsJobPresignedUrlConfig": {
            "type": "object",
            "properties": {
                "expiresInSec": {
                    "$ref": "#/$defs/ExpiresInSeconds"
                }
            }
        },
        "ExpiresInSeconds": {
            "type": "integer",
            "format": "int64"
        },
        "AwsJobAbortConfig": {
            "type": "object",
            "properties": {
                "abortCriteriaList": {
                    "$ref": "#/$defs/AwsJobAbortCriteriaList"
                }
            }
        },
        "AwsJobAbortCriteriaList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AwsJobAbortCriteria"
            }
        },
        "AwsJobAbortCriteria": {
            "type": "object",
            "properties": {
                "failureType": {
                    "$ref": "#/$defs/AwsJobAbortCriteriaFailureType"
                },
                "action": {
                    "$ref": "#/$defs/AwsJobAbortCriteriaAbortAction"
                },
                "thresholdPercentage": {
                    "$ref": "#/$defs/AwsJobAbortCriteriaAbortThresholdPercentage"
                },
                "minNumberOfExecutedThings": {
                    "$ref": "#/$defs/AwsJobAbortCriteriaMinimumNumberOfExecutedThings"
                }
            }
        },
        "AwsJobAbortCriteriaFailureType": {
            "enum": [
                "FAILED",
                "REJECTED",
                "TIMED_OUT",
                "ALL"
            ]
        },
        "AwsJobAbortCriteriaAbortAction": {
            "enum": [
                "CANCEL"
            ]
        },
        "AwsJobAbortCriteriaAbortThresholdPercentage": {
            "type": "number",
            "format": "double"
        },
        "AwsJobAbortCriteriaMinimumNumberOfExecutedThings": {
            "type": "integer",
            "format": "int32"
        },
        "AwsJobTimeoutConfig": {
            "type": "object",
            "properties": {
                "inProgressTimeoutInMinutes": {
                    "$ref": "#/$defs/AwsJobTimeoutInProgressTimeoutInMinutes"
                }
            }
        },
        "AwsJobTimeoutInProgressTimeoutInMinutes": {
            "type": "integer",
            "format": "int64"
        },
        "OTAUpdateFiles": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OTAUpdateFile"
            }
        },
        "OTAUpdateFile": {
            "type": "object",
            "properties": {
                "fileName": {
                    "$ref": "#/$defs/FileName"
                },
                "fileType": {
                    "$ref": "#/$defs/FileType"
                },
                "fileVersion": {
                    "$ref": "#/$defs/OTAUpdateFileVersion"
                },
                "fileLocation": {
                    "$ref": "#/$defs/FileLocation"
                },
                "codeSigning": {
                    "$ref": "#/$defs/CodeSigning"
                },
                "attributes": {
                    "$ref": "#/$defs/AttributesMap"
                }
            }
        },
        "FileName": {
            "type": "string"
        },
        "FileType": {
            "type": "integer",
            "format": "int32"
        },
        "OTAUpdateFileVersion": {
            "type": "string"
        },
        "FileLocation": {
            "type": "object",
            "properties": {
                "stream": {
                    "$ref": "#/$defs/Stream"
                },
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "Stream": {
            "type": "object",
            "properties": {
                "streamId": {
                    "$ref": "#/$defs/StreamId"
                },
                "fileId": {
                    "$ref": "#/$defs/FileId"
                }
            }
        },
        "StreamId": {
            "type": "string"
        },
        "FileId": {
            "type": "integer",
            "format": "int32"
        },
        "CodeSigning": {
            "type": "object",
            "properties": {
                "awsSignerJobId": {
                    "$ref": "#/$defs/SigningJobId"
                },
                "startSigningJobParameter": {
                    "$ref": "#/$defs/StartSigningJobParameter"
                },
                "customCodeSigning": {
                    "$ref": "#/$defs/CustomCodeSigning"
                }
            }
        },
        "SigningJobId": {
            "type": "string"
        },
        "StartSigningJobParameter": {
            "type": "object",
            "properties": {
                "signingProfileParameter": {
                    "$ref": "#/$defs/SigningProfileParameter"
                },
                "signingProfileName": {
                    "$ref": "#/$defs/SigningProfileName"
                },
                "destination": {
                    "$ref": "#/$defs/Destination"
                }
            }
        },
        "SigningProfileParameter": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "platform": {
                    "$ref": "#/$defs/Platform"
                },
                "certificatePathOnDevice": {
                    "$ref": "#/$defs/CertificatePathOnDevice"
                }
            }
        },
        "Platform": {
            "type": "string"
        },
        "CertificatePathOnDevice": {
            "type": "string"
        },
        "SigningProfileName": {
            "type": "string"
        },
        "Destination": {
            "type": "object",
            "properties": {
                "s3Destination": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "S3Destination": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "prefix": {
                    "$ref": "#/$defs/Prefix"
                }
            }
        },
        "Prefix": {
            "type": "string"
        },
        "CustomCodeSigning": {
            "type": "object",
            "properties": {
                "signature": {
                    "$ref": "#/$defs/CodeSigningSignature"
                },
                "certificateChain": {
                    "$ref": "#/$defs/CodeSigningCertificateChain"
                },
                "hashAlgorithm": {
                    "$ref": "#/$defs/HashAlgorithm"
                },
                "signatureAlgorithm": {
                    "$ref": "#/$defs/SignatureAlgorithm"
                }
            }
        },
        "CodeSigningSignature": {
            "type": "object",
            "properties": {
                "inlineDocument": {
                    "$ref": "#/$defs/Signature"
                }
            }
        },
        "Signature": {
            "type": "string",
            "format": "binary"
        },
        "CodeSigningCertificateChain": {
            "type": "object",
            "properties": {
                "certificateName": {
                    "$ref": "#/$defs/CertificateName"
                },
                "inlineDocument": {
                    "$ref": "#/$defs/InlineDocument"
                }
            }
        },
        "CertificateName": {
            "type": "string"
        },
        "InlineDocument": {
            "type": "string"
        },
        "HashAlgorithm": {
            "type": "string"
        },
        "SignatureAlgorithm": {
            "type": "string"
        },
        "AttributesMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Value"
            }
        },
        "Value": {
            "type": "string"
        },
        "AdditionalParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Value"
            }
        },
        "CreatePackageResponse": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "packageArn": {
                    "$ref": "#/$defs/PackageArn"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                }
            }
        },
        "PackageArn": {
            "type": "string"
        },
        "ResourceDescription": {
            "type": "string"
        },
        "CreatePackageRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "CreatePackageVersionResponse": {
            "type": "object",
            "properties": {
                "packageVersionArn": {
                    "$ref": "#/$defs/PackageVersionArn"
                },
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "attributes": {
                    "$ref": "#/$defs/ResourceAttributes"
                },
                "status": {
                    "$ref": "#/$defs/PackageVersionStatus"
                },
                "errorReason": {
                    "$ref": "#/$defs/PackageVersionErrorReason"
                }
            }
        },
        "ResourceAttributes": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ResourceAttributeValue"
            }
        },
        "ResourceAttributeValue": {
            "type": "string"
        },
        "PackageVersionStatus": {
            "enum": [
                "DRAFT",
                "PUBLISHED",
                "DEPRECATED"
            ]
        },
        "PackageVersionErrorReason": {
            "type": "string"
        },
        "CreatePackageVersionRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "attributes": {
                    "$ref": "#/$defs/ResourceAttributes"
                },
                "artifact": {
                    "$ref": "#/$defs/PackageVersionArtifact"
                },
                "recipe": {
                    "$ref": "#/$defs/PackageVersionRecipe"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "PackageVersionArtifact": {
            "type": "object",
            "properties": {
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "PackageVersionRecipe": {
            "type": "string"
        },
        "CreatePolicyResponse": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyArn": {
                    "$ref": "#/$defs/PolicyArn"
                },
                "policyDocument": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "policyVersionId": {
                    "$ref": "#/$defs/PolicyVersionId"
                }
            }
        },
        "PolicyArn": {
            "type": "string"
        },
        "PolicyDocument": {
            "type": "string"
        },
        "CreatePolicyRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyDocument": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreatePolicyVersionResponse": {
            "type": "object",
            "properties": {
                "policyArn": {
                    "$ref": "#/$defs/PolicyArn"
                },
                "policyDocument": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "policyVersionId": {
                    "$ref": "#/$defs/PolicyVersionId"
                },
                "isDefaultVersion": {
                    "$ref": "#/$defs/IsDefaultVersion"
                }
            }
        },
        "IsDefaultVersion": {
            "type": "boolean"
        },
        "CreatePolicyVersionRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyDocument": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "setAsDefault": {
                    "$ref": "#/$defs/SetAsDefault"
                }
            }
        },
        "SetAsDefault": {
            "type": "boolean"
        },
        "CreateProvisioningClaimResponse": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "certificatePem": {
                    "$ref": "#/$defs/CertificatePem"
                },
                "keyPair": {
                    "$ref": "#/$defs/KeyPair"
                },
                "expiration": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "DateType": {
            "type": "string",
            "format": "date-time"
        },
        "CreateProvisioningClaimRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                }
            }
        },
        "TemplateName": {
            "type": "string"
        },
        "CreateProvisioningTemplateResponse": {
            "type": "object",
            "properties": {
                "templateArn": {
                    "$ref": "#/$defs/TemplateArn"
                },
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                },
                "defaultVersionId": {
                    "$ref": "#/$defs/TemplateVersionId"
                }
            }
        },
        "TemplateArn": {
            "type": "string"
        },
        "TemplateVersionId": {
            "type": "integer",
            "format": "int32"
        },
        "CreateProvisioningTemplateRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                },
                "description": {
                    "$ref": "#/$defs/TemplateDescription"
                },
                "templateBody": {
                    "$ref": "#/$defs/TemplateBody"
                },
                "enabled": {
                    "$ref": "#/$defs/Enabled2"
                },
                "provisioningRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "preProvisioningHook": {
                    "$ref": "#/$defs/ProvisioningHook"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "type": {
                    "$ref": "#/$defs/TemplateType"
                }
            }
        },
        "TemplateDescription": {
            "type": "string"
        },
        "TemplateBody": {
            "type": "string"
        },
        "Enabled2": {
            "type": "boolean"
        },
        "ProvisioningHook": {
            "type": "object",
            "properties": {
                "payloadVersion": {
                    "$ref": "#/$defs/PayloadVersion"
                },
                "targetArn": {
                    "$ref": "#/$defs/TargetArn"
                }
            }
        },
        "PayloadVersion": {
            "type": "string"
        },
        "TemplateType": {
            "enum": [
                "FLEET_PROVISIONING",
                "JITP"
            ]
        },
        "CreateProvisioningTemplateVersionResponse": {
            "type": "object",
            "properties": {
                "templateArn": {
                    "$ref": "#/$defs/TemplateArn"
                },
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                },
                "versionId": {
                    "$ref": "#/$defs/TemplateVersionId"
                },
                "isDefaultVersion": {
                    "$ref": "#/$defs/IsDefaultVersion"
                }
            }
        },
        "CreateProvisioningTemplateVersionRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                },
                "templateBody": {
                    "$ref": "#/$defs/TemplateBody"
                },
                "setAsDefault": {
                    "$ref": "#/$defs/SetAsDefault"
                }
            }
        },
        "CreateRoleAliasResponse": {
            "type": "object",
            "properties": {
                "roleAlias": {
                    "$ref": "#/$defs/RoleAlias"
                },
                "roleAliasArn": {
                    "$ref": "#/$defs/RoleAliasArn"
                }
            }
        },
        "RoleAlias": {
            "type": "string"
        },
        "CreateRoleAliasRequest": {
            "type": "object",
            "properties": {
                "roleAlias": {
                    "$ref": "#/$defs/RoleAlias"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "credentialDurationSeconds": {
                    "$ref": "#/$defs/CredentialDurationSeconds"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CredentialDurationSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "CreateScheduledAuditResponse": {
            "type": "object",
            "properties": {
                "scheduledAuditArn": {
                    "$ref": "#/$defs/ScheduledAuditArn"
                }
            }
        },
        "ScheduledAuditArn": {
            "type": "string"
        },
        "CreateScheduledAuditRequest": {
            "type": "object",
            "properties": {
                "frequency": {
                    "$ref": "#/$defs/AuditFrequency"
                },
                "dayOfMonth": {
                    "$ref": "#/$defs/DayOfMonth"
                },
                "dayOfWeek": {
                    "$ref": "#/$defs/DayOfWeek"
                },
                "targetCheckNames": {
                    "$ref": "#/$defs/TargetAuditCheckNames"
                },
                "scheduledAuditName": {
                    "$ref": "#/$defs/ScheduledAuditName"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "AuditFrequency": {
            "enum": [
                "DAILY",
                "WEEKLY",
                "BIWEEKLY",
                "MONTHLY"
            ]
        },
        "DayOfMonth": {
            "type": "string"
        },
        "DayOfWeek": {
            "enum": [
                "SUN",
                "MON",
                "TUE",
                "WED",
                "THU",
                "FRI",
                "SAT"
            ]
        },
        "TargetAuditCheckNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuditCheckName"
            }
        },
        "ScheduledAuditName": {
            "type": "string"
        },
        "CreateSecurityProfileResponse": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "securityProfileArn": {
                    "$ref": "#/$defs/SecurityProfileArn"
                }
            }
        },
        "SecurityProfileArn": {
            "type": "string"
        },
        "CreateSecurityProfileRequest": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "securityProfileDescription": {
                    "$ref": "#/$defs/SecurityProfileDescription"
                },
                "behaviors": {
                    "$ref": "#/$defs/Behaviors"
                },
                "alertTargets": {
                    "$ref": "#/$defs/AlertTargets"
                },
                "additionalMetricsToRetain": {
                    "$ref": "#/$defs/AdditionalMetricsToRetainList"
                },
                "additionalMetricsToRetainV2": {
                    "$ref": "#/$defs/AdditionalMetricsToRetainV2List"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "metricsExportConfig": {
                    "$ref": "#/$defs/MetricsExportConfig"
                }
            }
        },
        "SecurityProfileDescription": {
            "type": "string"
        },
        "Behaviors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Behavior"
            }
        },
        "Behavior": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/BehaviorName"
                },
                "metric": {
                    "$ref": "#/$defs/BehaviorMetric"
                },
                "metricDimension": {
                    "$ref": "#/$defs/MetricDimension"
                },
                "criteria": {
                    "$ref": "#/$defs/BehaviorCriteria"
                },
                "suppressAlerts": {
                    "$ref": "#/$defs/SuppressAlerts"
                },
                "exportMetric": {
                    "$ref": "#/$defs/ExportMetric"
                }
            }
        },
        "BehaviorName": {
            "type": "string"
        },
        "BehaviorMetric": {
            "type": "string"
        },
        "MetricDimension": {
            "type": "object",
            "properties": {
                "dimensionName": {
                    "$ref": "#/$defs/DimensionName"
                },
                "operator": {
                    "$ref": "#/$defs/DimensionValueOperator"
                }
            }
        },
        "DimensionValueOperator": {
            "enum": [
                "IN",
                "NOT_IN"
            ]
        },
        "BehaviorCriteria": {
            "type": "object",
            "properties": {
                "comparisonOperator": {
                    "$ref": "#/$defs/ComparisonOperator"
                },
                "value": {
                    "$ref": "#/$defs/MetricValue"
                },
                "durationSeconds": {
                    "$ref": "#/$defs/DurationSeconds"
                },
                "consecutiveDatapointsToAlarm": {
                    "$ref": "#/$defs/ConsecutiveDatapointsToAlarm"
                },
                "consecutiveDatapointsToClear": {
                    "$ref": "#/$defs/ConsecutiveDatapointsToClear"
                },
                "statisticalThreshold": {
                    "$ref": "#/$defs/StatisticalThreshold"
                },
                "mlDetectionConfig": {
                    "$ref": "#/$defs/MachineLearningDetectionConfig"
                }
            }
        },
        "ComparisonOperator": {
            "enum": [
                "LESS_THAN",
                "LESS_THAN_EQUALS",
                "GREATER_THAN",
                "GREATER_THAN_EQUALS",
                "IN_CIDR_SET",
                "NOT_IN_CIDR_SET",
                "IN_PORT_SET",
                "NOT_IN_PORT_SET",
                "IN_SET",
                "NOT_IN_SET"
            ]
        },
        "MetricValue": {
            "type": "object",
            "properties": {
                "count": {
                    "$ref": "#/$defs/UnsignedLong"
                },
                "cidrs": {
                    "$ref": "#/$defs/Cidrs"
                },
                "ports": {
                    "$ref": "#/$defs/Ports"
                },
                "number": {
                    "$ref": "#/$defs/Number"
                },
                "numbers": {
                    "$ref": "#/$defs/NumberList"
                },
                "strings": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "UnsignedLong": {
            "type": "integer",
            "format": "int64"
        },
        "Cidrs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Cidr"
            }
        },
        "Cidr": {
            "type": "string"
        },
        "Ports": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Port"
            }
        },
        "Port": {
            "type": "integer",
            "format": "int32"
        },
        "Number": {
            "type": "number",
            "format": "double"
        },
        "NumberList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Number"
            }
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/stringValue"
            }
        },
        "stringValue": {
            "type": "string"
        },
        "DurationSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "ConsecutiveDatapointsToAlarm": {
            "type": "integer",
            "format": "int32"
        },
        "ConsecutiveDatapointsToClear": {
            "type": "integer",
            "format": "int32"
        },
        "StatisticalThreshold": {
            "type": "object",
            "properties": {
                "statistic": {
                    "$ref": "#/$defs/EvaluationStatistic"
                }
            }
        },
        "EvaluationStatistic": {
            "type": "string"
        },
        "MachineLearningDetectionConfig": {
            "type": "object",
            "properties": {
                "confidenceLevel": {
                    "$ref": "#/$defs/ConfidenceLevel"
                }
            }
        },
        "ConfidenceLevel": {
            "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
            ]
        },
        "SuppressAlerts": {
            "type": "boolean"
        },
        "ExportMetric": {
            "type": "boolean"
        },
        "AlertTargets": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AlertTarget"
            }
        },
        "AlertTarget": {
            "type": "object",
            "properties": {
                "alertTargetArn": {
                    "$ref": "#/$defs/AlertTargetArn"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "AlertTargetArn": {
            "type": "string"
        },
        "AdditionalMetricsToRetainList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BehaviorMetric"
            }
        },
        "AdditionalMetricsToRetainV2List": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricToRetain"
            }
        },
        "MetricToRetain": {
            "type": "object",
            "properties": {
                "metric": {
                    "$ref": "#/$defs/BehaviorMetric"
                },
                "metricDimension": {
                    "$ref": "#/$defs/MetricDimension"
                },
                "exportMetric": {
                    "$ref": "#/$defs/ExportMetric"
                }
            }
        },
        "MetricsExportConfig": {
            "type": "object",
            "properties": {
                "mqttTopic": {
                    "$ref": "#/$defs/MqttTopic"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "MqttTopic": {
            "type": "string"
        },
        "CreateStreamResponse": {
            "type": "object",
            "properties": {
                "streamId": {
                    "$ref": "#/$defs/StreamId"
                },
                "streamArn": {
                    "$ref": "#/$defs/StreamArn"
                },
                "description": {
                    "$ref": "#/$defs/StreamDescription"
                },
                "streamVersion": {
                    "$ref": "#/$defs/StreamVersion"
                }
            }
        },
        "StreamArn": {
            "type": "string"
        },
        "StreamDescription": {
            "type": "string"
        },
        "StreamVersion": {
            "type": "integer",
            "format": "int32"
        },
        "CreateStreamRequest": {
            "type": "object",
            "properties": {
                "streamId": {
                    "$ref": "#/$defs/StreamId"
                },
                "description": {
                    "$ref": "#/$defs/StreamDescription"
                },
                "files": {
                    "$ref": "#/$defs/StreamFiles"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "StreamFiles": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StreamFile"
            }
        },
        "StreamFile": {
            "type": "object",
            "properties": {
                "fileId": {
                    "$ref": "#/$defs/FileId"
                },
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "CreateThingResponse": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingArn": {
                    "$ref": "#/$defs/ThingArn"
                },
                "thingId": {
                    "$ref": "#/$defs/ThingId"
                }
            }
        },
        "ThingId": {
            "type": "string"
        },
        "CreateThingRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "attributePayload": {
                    "$ref": "#/$defs/AttributePayload"
                },
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                }
            }
        },
        "ThingTypeName": {
            "type": "string"
        },
        "CreateThingGroupResponse": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupArn": {
                    "$ref": "#/$defs/ThingGroupArn"
                },
                "thingGroupId": {
                    "$ref": "#/$defs/ThingGroupId"
                }
            }
        },
        "CreateThingGroupRequest": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "parentGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupProperties": {
                    "$ref": "#/$defs/ThingGroupProperties"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateThingTypeResponse": {
            "type": "object",
            "properties": {
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "thingTypeArn": {
                    "$ref": "#/$defs/ThingTypeArn"
                },
                "thingTypeId": {
                    "$ref": "#/$defs/ThingTypeId"
                }
            }
        },
        "ThingTypeArn": {
            "type": "string"
        },
        "ThingTypeId": {
            "type": "string"
        },
        "CreateThingTypeRequest": {
            "type": "object",
            "properties": {
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "thingTypeProperties": {
                    "$ref": "#/$defs/ThingTypeProperties"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ThingTypeProperties": {
            "type": "object",
            "properties": {
                "thingTypeDescription": {
                    "$ref": "#/$defs/ThingTypeDescription"
                },
                "searchableAttributes": {
                    "$ref": "#/$defs/SearchableAttributes"
                }
            }
        },
        "ThingTypeDescription": {
            "type": "string"
        },
        "SearchableAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeName"
            }
        },
        "AttributeName": {
            "type": "string"
        },
        "CreateTopicRuleRequest": {
            "type": "object",
            "properties": {
                "ruleName": {
                    "$ref": "#/$defs/RuleName"
                },
                "topicRulePayload": {
                    "$ref": "#/$defs/TopicRulePayload"
                },
                "tags": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RuleName": {
            "type": "string"
        },
        "TopicRulePayload": {
            "type": "object",
            "properties": {
                "sql": {
                    "$ref": "#/$defs/SQL"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "actions": {
                    "$ref": "#/$defs/ActionList"
                },
                "ruleDisabled": {
                    "$ref": "#/$defs/IsDisabled"
                },
                "awsIotSqlVersion": {
                    "$ref": "#/$defs/AwsIotSqlVersion"
                },
                "errorAction": {
                    "$ref": "#/$defs/Action"
                }
            }
        },
        "SQL": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "ActionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Action"
            }
        },
        "Action": {
            "type": "object",
            "properties": {
                "dynamoDB": {
                    "$ref": "#/$defs/DynamoDBAction"
                },
                "dynamoDBv2": {
                    "$ref": "#/$defs/DynamoDBv2Action"
                },
                "lambda": {
                    "$ref": "#/$defs/LambdaAction"
                },
                "sns": {
                    "$ref": "#/$defs/SnsAction"
                },
                "sqs": {
                    "$ref": "#/$defs/SqsAction"
                },
                "kinesis": {
                    "$ref": "#/$defs/KinesisAction"
                },
                "republish": {
                    "$ref": "#/$defs/RepublishAction"
                },
                "s3": {
                    "$ref": "#/$defs/S3Action"
                },
                "firehose": {
                    "$ref": "#/$defs/FirehoseAction"
                },
                "cloudwatchMetric": {
                    "$ref": "#/$defs/CloudwatchMetricAction"
                },
                "cloudwatchAlarm": {
                    "$ref": "#/$defs/CloudwatchAlarmAction"
                },
                "cloudwatchLogs": {
                    "$ref": "#/$defs/CloudwatchLogsAction"
                },
                "elasticsearch": {
                    "$ref": "#/$defs/ElasticsearchAction"
                },
                "salesforce": {
                    "$ref": "#/$defs/SalesforceAction"
                },
                "iotAnalytics": {
                    "$ref": "#/$defs/IotAnalyticsAction"
                },
                "iotEvents": {
                    "$ref": "#/$defs/IotEventsAction"
                },
                "iotSiteWise": {
                    "$ref": "#/$defs/IotSiteWiseAction"
                },
                "stepFunctions": {
                    "$ref": "#/$defs/StepFunctionsAction"
                },
                "timestream": {
                    "$ref": "#/$defs/TimestreamAction"
                },
                "http": {
                    "$ref": "#/$defs/HttpAction"
                },
                "kafka": {
                    "$ref": "#/$defs/KafkaAction"
                },
                "openSearch": {
                    "$ref": "#/$defs/OpenSearchAction"
                },
                "location": {
                    "$ref": "#/$defs/LocationAction"
                }
            }
        },
        "DynamoDBAction": {
            "type": "object",
            "properties": {
                "tableName": {
                    "$ref": "#/$defs/TableName"
                },
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "operation": {
                    "$ref": "#/$defs/DynamoOperation"
                },
                "hashKeyField": {
                    "$ref": "#/$defs/HashKeyField"
                },
                "hashKeyValue": {
                    "$ref": "#/$defs/HashKeyValue"
                },
                "hashKeyType": {
                    "$ref": "#/$defs/DynamoKeyType"
                },
                "rangeKeyField": {
                    "$ref": "#/$defs/RangeKeyField"
                },
                "rangeKeyValue": {
                    "$ref": "#/$defs/RangeKeyValue"
                },
                "rangeKeyType": {
                    "$ref": "#/$defs/DynamoKeyType"
                },
                "payloadField": {
                    "$ref": "#/$defs/PayloadField"
                }
            }
        },
        "TableName": {
            "type": "string"
        },
        "AwsArn": {
            "type": "string"
        },
        "DynamoOperation": {
            "type": "string"
        },
        "HashKeyField": {
            "type": "string"
        },
        "HashKeyValue": {
            "type": "string"
        },
        "DynamoKeyType": {
            "enum": [
                "STRING",
                "NUMBER"
            ]
        },
        "RangeKeyField": {
            "type": "string"
        },
        "RangeKeyValue": {
            "type": "string"
        },
        "PayloadField": {
            "type": "string"
        },
        "DynamoDBv2Action": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "putItem": {
                    "$ref": "#/$defs/PutItemInput"
                }
            }
        },
        "PutItemInput": {
            "type": "object",
            "properties": {
                "tableName": {
                    "$ref": "#/$defs/TableName"
                }
            }
        },
        "LambdaAction": {
            "type": "object",
            "properties": {
                "functionArn": {
                    "$ref": "#/$defs/FunctionArn"
                }
            }
        },
        "FunctionArn": {
            "type": "string"
        },
        "SnsAction": {
            "type": "object",
            "properties": {
                "targetArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "messageFormat": {
                    "$ref": "#/$defs/MessageFormat"
                }
            }
        },
        "MessageFormat": {
            "enum": [
                "RAW",
                "JSON"
            ]
        },
        "SqsAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "queueUrl": {
                    "$ref": "#/$defs/QueueUrl"
                },
                "useBase64": {
                    "$ref": "#/$defs/UseBase64"
                }
            }
        },
        "QueueUrl": {
            "type": "string"
        },
        "UseBase64": {
            "type": "boolean"
        },
        "KinesisAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "streamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "partitionKey": {
                    "$ref": "#/$defs/PartitionKey"
                }
            }
        },
        "StreamName": {
            "type": "string"
        },
        "PartitionKey": {
            "type": "string"
        },
        "RepublishAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "topic": {
                    "$ref": "#/$defs/TopicPattern"
                },
                "qos": {
                    "$ref": "#/$defs/Qos"
                },
                "headers": {
                    "$ref": "#/$defs/MqttHeaders"
                }
            }
        },
        "TopicPattern": {
            "type": "string"
        },
        "Qos": {
            "type": "integer",
            "format": "int32"
        },
        "MqttHeaders": {
            "type": "object",
            "properties": {
                "payloadFormatIndicator": {
                    "$ref": "#/$defs/PayloadFormatIndicator"
                },
                "contentType": {
                    "$ref": "#/$defs/ContentType"
                },
                "responseTopic": {
                    "$ref": "#/$defs/ResponseTopic"
                },
                "correlationData": {
                    "$ref": "#/$defs/CorrelationData"
                },
                "messageExpiry": {
                    "$ref": "#/$defs/MessageExpiry"
                },
                "userProperties": {
                    "$ref": "#/$defs/UserProperties"
                }
            }
        },
        "PayloadFormatIndicator": {
            "type": "string"
        },
        "ContentType": {
            "type": "string"
        },
        "ResponseTopic": {
            "type": "string"
        },
        "CorrelationData": {
            "type": "string"
        },
        "MessageExpiry": {
            "type": "string"
        },
        "UserProperties": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserProperty"
            }
        },
        "UserProperty": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/UserPropertyKey"
                },
                "value": {
                    "$ref": "#/$defs/UserPropertyValue"
                }
            }
        },
        "UserPropertyKey": {
            "type": "string"
        },
        "UserPropertyValue": {
            "type": "string"
        },
        "S3Action": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "key": {
                    "$ref": "#/$defs/Key"
                },
                "cannedAcl": {
                    "$ref": "#/$defs/CannedAccessControlList"
                }
            }
        },
        "BucketName": {
            "type": "string"
        },
        "Key": {
            "type": "string"
        },
        "CannedAccessControlList": {
            "enum": [
                "Private",
                "PublicRead",
                "PublicReadWrite",
                "AwsExecRead",
                "AuthenticatedRead",
                "BucketOwnerRead",
                "BucketOwnerFullControl",
                "LogDeliveryWrite"
            ]
        },
        "FirehoseAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "deliveryStreamName": {
                    "$ref": "#/$defs/DeliveryStreamName"
                },
                "separator": {
                    "$ref": "#/$defs/FirehoseSeparator"
                },
                "batchMode": {
                    "$ref": "#/$defs/BatchMode"
                }
            }
        },
        "DeliveryStreamName": {
            "type": "string"
        },
        "FirehoseSeparator": {
            "type": "string"
        },
        "BatchMode": {
            "type": "boolean"
        },
        "CloudwatchMetricAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "metricNamespace": {
                    "$ref": "#/$defs/String"
                },
                "metricName": {
                    "$ref": "#/$defs/String"
                },
                "metricValue": {
                    "$ref": "#/$defs/String"
                },
                "metricUnit": {
                    "$ref": "#/$defs/String"
                },
                "metricTimestamp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "CloudwatchAlarmAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "alarmName": {
                    "$ref": "#/$defs/AlarmName"
                },
                "stateReason": {
                    "$ref": "#/$defs/StateReason"
                },
                "stateValue": {
                    "$ref": "#/$defs/StateValue"
                }
            }
        },
        "AlarmName": {
            "type": "string"
        },
        "StateReason": {
            "type": "string"
        },
        "StateValue": {
            "type": "string"
        },
        "CloudwatchLogsAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "logGroupName": {
                    "$ref": "#/$defs/LogGroupName"
                },
                "batchMode": {
                    "$ref": "#/$defs/BatchMode"
                }
            }
        },
        "LogGroupName": {
            "type": "string"
        },
        "ElasticsearchAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "endpoint": {
                    "$ref": "#/$defs/ElasticsearchEndpoint"
                },
                "index": {
                    "$ref": "#/$defs/ElasticsearchIndex"
                },
                "type": {
                    "$ref": "#/$defs/ElasticsearchType"
                },
                "id": {
                    "$ref": "#/$defs/ElasticsearchId"
                }
            }
        },
        "ElasticsearchEndpoint": {
            "type": "string"
        },
        "ElasticsearchIndex": {
            "type": "string"
        },
        "ElasticsearchType": {
            "type": "string"
        },
        "ElasticsearchId": {
            "type": "string"
        },
        "SalesforceAction": {
            "type": "object",
            "properties": {
                "token": {
                    "$ref": "#/$defs/SalesforceToken"
                },
                "url": {
                    "$ref": "#/$defs/SalesforceEndpoint"
                }
            }
        },
        "SalesforceToken": {
            "type": "string"
        },
        "SalesforceEndpoint": {
            "type": "string"
        },
        "IotAnalyticsAction": {
            "type": "object",
            "properties": {
                "channelArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "channelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "batchMode": {
                    "$ref": "#/$defs/BatchMode"
                },
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                }
            }
        },
        "ChannelName": {
            "type": "string"
        },
        "IotEventsAction": {
            "type": "object",
            "properties": {
                "inputName": {
                    "$ref": "#/$defs/InputName"
                },
                "messageId": {
                    "$ref": "#/$defs/MessageId"
                },
                "batchMode": {
                    "$ref": "#/$defs/BatchMode"
                },
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                }
            }
        },
        "InputName": {
            "type": "string"
        },
        "MessageId": {
            "type": "string"
        },
        "IotSiteWiseAction": {
            "type": "object",
            "properties": {
                "putAssetPropertyValueEntries": {
                    "$ref": "#/$defs/PutAssetPropertyValueEntryList"
                },
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                }
            }
        },
        "PutAssetPropertyValueEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PutAssetPropertyValueEntry"
            }
        },
        "PutAssetPropertyValueEntry": {
            "type": "object",
            "properties": {
                "entryId": {
                    "$ref": "#/$defs/AssetPropertyEntryId"
                },
                "assetId": {
                    "$ref": "#/$defs/AssetId"
                },
                "propertyId": {
                    "$ref": "#/$defs/AssetPropertyId"
                },
                "propertyAlias": {
                    "$ref": "#/$defs/AssetPropertyAlias"
                },
                "propertyValues": {
                    "$ref": "#/$defs/AssetPropertyValueList"
                }
            }
        },
        "AssetPropertyEntryId": {
            "type": "string"
        },
        "AssetId": {
            "type": "string"
        },
        "AssetPropertyId": {
            "type": "string"
        },
        "AssetPropertyAlias": {
            "type": "string"
        },
        "AssetPropertyValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssetPropertyValue"
            }
        },
        "AssetPropertyValue": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/AssetPropertyVariant"
                },
                "timestamp": {
                    "$ref": "#/$defs/AssetPropertyTimestamp"
                },
                "quality": {
                    "$ref": "#/$defs/AssetPropertyQuality"
                }
            }
        },
        "AssetPropertyVariant": {
            "type": "object",
            "properties": {
                "stringValue": {
                    "$ref": "#/$defs/AssetPropertyStringValue"
                },
                "integerValue": {
                    "$ref": "#/$defs/AssetPropertyIntegerValue"
                },
                "doubleValue": {
                    "$ref": "#/$defs/AssetPropertyDoubleValue"
                },
                "booleanValue": {
                    "$ref": "#/$defs/AssetPropertyBooleanValue"
                }
            }
        },
        "AssetPropertyStringValue": {
            "type": "string"
        },
        "AssetPropertyIntegerValue": {
            "type": "string"
        },
        "AssetPropertyDoubleValue": {
            "type": "string"
        },
        "AssetPropertyBooleanValue": {
            "type": "string"
        },
        "AssetPropertyTimestamp": {
            "type": "object",
            "properties": {
                "timeInSeconds": {
                    "$ref": "#/$defs/AssetPropertyTimeInSeconds"
                },
                "offsetInNanos": {
                    "$ref": "#/$defs/AssetPropertyOffsetInNanos"
                }
            }
        },
        "AssetPropertyTimeInSeconds": {
            "type": "string"
        },
        "AssetPropertyOffsetInNanos": {
            "type": "string"
        },
        "AssetPropertyQuality": {
            "type": "string"
        },
        "StepFunctionsAction": {
            "type": "object",
            "properties": {
                "executionNamePrefix": {
                    "$ref": "#/$defs/ExecutionNamePrefix"
                },
                "stateMachineName": {
                    "$ref": "#/$defs/StateMachineName"
                },
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                }
            }
        },
        "ExecutionNamePrefix": {
            "type": "string"
        },
        "StateMachineName": {
            "type": "string"
        },
        "TimestreamAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "databaseName": {
                    "$ref": "#/$defs/TimestreamDatabaseName"
                },
                "tableName": {
                    "$ref": "#/$defs/TimestreamTableName"
                },
                "dimensions": {
                    "$ref": "#/$defs/TimestreamDimensionList"
                },
                "timestamp": {
                    "$ref": "#/$defs/TimestreamTimestamp"
                }
            }
        },
        "TimestreamDatabaseName": {
            "type": "string"
        },
        "TimestreamTableName": {
            "type": "string"
        },
        "TimestreamDimensionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TimestreamDimension"
            }
        },
        "TimestreamDimension": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/TimestreamDimensionName"
                },
                "value": {
                    "$ref": "#/$defs/TimestreamDimensionValue"
                }
            }
        },
        "TimestreamDimensionName": {
            "type": "string"
        },
        "TimestreamDimensionValue": {
            "type": "string"
        },
        "TimestreamTimestamp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/TimestreamTimestampValue"
                },
                "unit": {
                    "$ref": "#/$defs/TimestreamTimestampUnit"
                }
            }
        },
        "TimestreamTimestampValue": {
            "type": "string"
        },
        "TimestreamTimestampUnit": {
            "type": "string"
        },
        "HttpAction": {
            "type": "object",
            "properties": {
                "url": {
                    "$ref": "#/$defs/Url"
                },
                "confirmationUrl": {
                    "$ref": "#/$defs/Url"
                },
                "headers": {
                    "$ref": "#/$defs/HeaderList"
                },
                "auth": {
                    "$ref": "#/$defs/HttpAuthorization"
                }
            }
        },
        "Url": {
            "type": "string"
        },
        "HeaderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HttpActionHeader"
            }
        },
        "HttpActionHeader": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/HeaderKey"
                },
                "value": {
                    "$ref": "#/$defs/HeaderValue"
                }
            }
        },
        "HeaderKey": {
            "type": "string"
        },
        "HeaderValue": {
            "type": "string"
        },
        "HttpAuthorization": {
            "type": "object",
            "properties": {
                "sigv4": {
                    "$ref": "#/$defs/SigV4Authorization"
                }
            }
        },
        "SigV4Authorization": {
            "type": "object",
            "properties": {
                "signingRegion": {
                    "$ref": "#/$defs/SigningRegion"
                },
                "serviceName": {
                    "$ref": "#/$defs/ServiceName"
                },
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                }
            }
        },
        "SigningRegion": {
            "type": "string"
        },
        "ServiceName": {
            "type": "string"
        },
        "KafkaAction": {
            "type": "object",
            "properties": {
                "destinationArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "topic": {
                    "$ref": "#/$defs/String"
                },
                "key": {
                    "$ref": "#/$defs/String"
                },
                "partition": {
                    "$ref": "#/$defs/String"
                },
                "clientProperties": {
                    "$ref": "#/$defs/ClientProperties"
                },
                "headers": {
                    "$ref": "#/$defs/KafkaHeaders"
                }
            }
        },
        "ClientProperties": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "KafkaHeaders": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KafkaActionHeader"
            }
        },
        "KafkaActionHeader": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/KafkaHeaderKey"
                },
                "value": {
                    "$ref": "#/$defs/KafkaHeaderValue"
                }
            }
        },
        "KafkaHeaderKey": {
            "type": "string"
        },
        "KafkaHeaderValue": {
            "type": "string"
        },
        "OpenSearchAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "endpoint": {
                    "$ref": "#/$defs/ElasticsearchEndpoint"
                },
                "index": {
                    "$ref": "#/$defs/ElasticsearchIndex"
                },
                "type": {
                    "$ref": "#/$defs/ElasticsearchType"
                },
                "id": {
                    "$ref": "#/$defs/ElasticsearchId"
                }
            }
        },
        "LocationAction": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "trackerName": {
                    "$ref": "#/$defs/String"
                },
                "deviceId": {
                    "$ref": "#/$defs/String"
                },
                "timestamp": {
                    "$ref": "#/$defs/LocationTimestamp"
                },
                "latitude": {
                    "$ref": "#/$defs/String"
                },
                "longitude": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LocationTimestamp": {
            "type": "object",
            "properties": {
                "value": {
                    "$ref": "#/$defs/String"
                },
                "unit": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IsDisabled": {
            "type": "boolean"
        },
        "AwsIotSqlVersion": {
            "type": "string"
        },
        "CreateTopicRuleDestinationResponse": {
            "type": "object",
            "properties": {
                "topicRuleDestination": {
                    "$ref": "#/$defs/TopicRuleDestination"
                }
            }
        },
        "TopicRuleDestination": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "status": {
                    "$ref": "#/$defs/TopicRuleDestinationStatus"
                },
                "createdAt": {
                    "$ref": "#/$defs/CreatedAtDate"
                },
                "lastUpdatedAt": {
                    "$ref": "#/$defs/LastUpdatedAtDate"
                },
                "statusReason": {
                    "$ref": "#/$defs/String"
                },
                "httpUrlProperties": {
                    "$ref": "#/$defs/HttpUrlDestinationProperties"
                },
                "vpcProperties": {
                    "$ref": "#/$defs/VpcDestinationProperties"
                }
            }
        },
        "TopicRuleDestinationStatus": {
            "enum": [
                "ENABLED",
                "IN_PROGRESS",
                "DISABLED",
                "ERROR",
                "DELETING"
            ]
        },
        "CreatedAtDate": {
            "type": "string",
            "format": "date-time"
        },
        "LastUpdatedAtDate": {
            "type": "string",
            "format": "date-time"
        },
        "HttpUrlDestinationProperties": {
            "type": "object",
            "properties": {
                "confirmationUrl": {
                    "$ref": "#/$defs/Url"
                }
            }
        },
        "VpcDestinationProperties": {
            "type": "object",
            "properties": {
                "subnetIds": {
                    "$ref": "#/$defs/SubnetIdList"
                },
                "securityGroups": {
                    "$ref": "#/$defs/SecurityGroupList"
                },
                "vpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                }
            }
        },
        "SubnetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "SecurityGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "VpcId": {
            "type": "string"
        },
        "CreateTopicRuleDestinationRequest": {
            "type": "object",
            "properties": {
                "destinationConfiguration": {
                    "$ref": "#/$defs/TopicRuleDestinationConfiguration"
                }
            }
        },
        "TopicRuleDestinationConfiguration": {
            "type": "object",
            "properties": {
                "httpUrlConfiguration": {
                    "$ref": "#/$defs/HttpUrlDestinationConfiguration"
                },
                "vpcConfiguration": {
                    "$ref": "#/$defs/VpcDestinationConfiguration"
                }
            }
        },
        "HttpUrlDestinationConfiguration": {
            "type": "object",
            "properties": {
                "confirmationUrl": {
                    "$ref": "#/$defs/Url"
                }
            }
        },
        "VpcDestinationConfiguration": {
            "type": "object",
            "properties": {
                "subnetIds": {
                    "$ref": "#/$defs/SubnetIdList"
                },
                "securityGroups": {
                    "$ref": "#/$defs/SecurityGroupList"
                },
                "vpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                }
            }
        },
        "DeleteAccountAuditConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAccountAuditConfigurationRequest": {
            "type": "object",
            "properties": {
                "deleteScheduledAudits": {
                    "$ref": "#/$defs/DeleteScheduledAudits"
                }
            }
        },
        "DeleteScheduledAudits": {
            "type": "boolean"
        },
        "DeleteAuditSuppressionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAuditSuppressionRequest": {
            "type": "object",
            "properties": {
                "checkName": {
                    "$ref": "#/$defs/AuditCheckName"
                },
                "resourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                }
            }
        },
        "DeleteAuthorizerResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAuthorizerRequest": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                }
            }
        },
        "DeleteBillingGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteBillingGroupRequest": {
            "type": "object",
            "properties": {
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                }
            }
        },
        "OptionalVersion": {
            "type": "integer",
            "format": "int64"
        },
        "DeleteCACertificateResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteCACertificateRequest": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                }
            }
        },
        "DeleteCertificateRequest": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "forceDelete": {
                    "$ref": "#/$defs/ForceDelete"
                }
            }
        },
        "ForceDelete": {
            "type": "boolean"
        },
        "DeleteCertificateProviderResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteCertificateProviderRequest": {
            "type": "object",
            "properties": {
                "certificateProviderName": {
                    "$ref": "#/$defs/CertificateProviderName"
                }
            }
        },
        "DeleteCustomMetricResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteCustomMetricRequest": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/MetricName"
                }
            }
        },
        "DeleteDimensionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDimensionRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DimensionName"
                }
            }
        },
        "DeleteDomainConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDomainConfigurationRequest": {
            "type": "object",
            "properties": {
                "domainConfigurationName": {
                    "$ref": "#/$defs/DomainConfigurationName"
                }
            }
        },
        "DeleteDynamicThingGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDynamicThingGroupRequest": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                }
            }
        },
        "DeleteFleetMetricRequest": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/FleetMetricName"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                }
            }
        },
        "DeleteJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "force": {
                    "$ref": "#/$defs/ForceFlag"
                },
                "namespaceId": {
                    "$ref": "#/$defs/NamespaceId"
                }
            }
        },
        "DeleteJobExecutionRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "executionNumber": {
                    "$ref": "#/$defs/ExecutionNumber"
                },
                "force": {
                    "$ref": "#/$defs/ForceFlag"
                },
                "namespaceId": {
                    "$ref": "#/$defs/NamespaceId"
                }
            }
        },
        "ExecutionNumber": {
            "type": "integer",
            "format": "int64"
        },
        "DeleteJobTemplateRequest": {
            "type": "object",
            "properties": {
                "jobTemplateId": {
                    "$ref": "#/$defs/JobTemplateId"
                }
            }
        },
        "DeleteMitigationActionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteMitigationActionRequest": {
            "type": "object",
            "properties": {
                "actionName": {
                    "$ref": "#/$defs/MitigationActionName"
                }
            }
        },
        "DeleteOTAUpdateResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteOTAUpdateRequest": {
            "type": "object",
            "properties": {
                "otaUpdateId": {
                    "$ref": "#/$defs/OTAUpdateId"
                },
                "deleteStream": {
                    "$ref": "#/$defs/DeleteStream_"
                },
                "forceDeleteAWSJob": {
                    "$ref": "#/$defs/ForceDeleteAWSJob"
                }
            }
        },
        "DeleteStream_": {
            "type": "boolean"
        },
        "ForceDeleteAWSJob": {
            "type": "boolean"
        },
        "DeletePackageResponse": {
            "type": "object",
            "properties": {}
        },
        "DeletePackageRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DeletePackageVersionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeletePackageVersionRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "DeletePolicyRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                }
            }
        },
        "DeletePolicyVersionRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyVersionId": {
                    "$ref": "#/$defs/PolicyVersionId"
                }
            }
        },
        "DeleteProvisioningTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteProvisioningTemplateRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                }
            }
        },
        "DeleteProvisioningTemplateVersionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteProvisioningTemplateVersionRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                },
                "versionId": {
                    "$ref": "#/$defs/TemplateVersionId"
                }
            }
        },
        "DeleteRegistrationCodeResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteRegistrationCodeRequest": {
            "type": "object",
            "properties": {}
        },
        "DeleteRoleAliasResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteRoleAliasRequest": {
            "type": "object",
            "properties": {
                "roleAlias": {
                    "$ref": "#/$defs/RoleAlias"
                }
            }
        },
        "DeleteScheduledAuditResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteScheduledAuditRequest": {
            "type": "object",
            "properties": {
                "scheduledAuditName": {
                    "$ref": "#/$defs/ScheduledAuditName"
                }
            }
        },
        "DeleteSecurityProfileResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteSecurityProfileRequest": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                }
            }
        },
        "DeleteStreamResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteStreamRequest": {
            "type": "object",
            "properties": {
                "streamId": {
                    "$ref": "#/$defs/StreamId"
                }
            }
        },
        "DeleteThingResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteThingRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                }
            }
        },
        "DeleteThingGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteThingGroupRequest": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                }
            }
        },
        "DeleteThingTypeResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteThingTypeRequest": {
            "type": "object",
            "properties": {
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                }
            }
        },
        "DeleteTopicRuleRequest": {
            "type": "object",
            "properties": {
                "ruleName": {
                    "$ref": "#/$defs/RuleName"
                }
            }
        },
        "DeleteTopicRuleDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteTopicRuleDestinationRequest": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/AwsArn"
                }
            }
        },
        "DeleteV2LoggingLevelRequest": {
            "type": "object",
            "properties": {
                "targetType": {
                    "$ref": "#/$defs/LogTargetType"
                },
                "targetName": {
                    "$ref": "#/$defs/LogTargetName"
                }
            }
        },
        "LogTargetType": {
            "enum": [
                "DEFAULT",
                "THING_GROUP",
                "CLIENT_ID",
                "SOURCE_IP",
                "PRINCIPAL_ID"
            ]
        },
        "LogTargetName": {
            "type": "string"
        },
        "DeprecateThingTypeResponse": {
            "type": "object",
            "properties": {}
        },
        "DeprecateThingTypeRequest": {
            "type": "object",
            "properties": {
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "undoDeprecate": {
                    "$ref": "#/$defs/UndoDeprecate"
                }
            }
        },
        "UndoDeprecate": {
            "type": "boolean"
        },
        "DescribeAccountAuditConfigurationResponse": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "auditNotificationTargetConfigurations": {
                    "$ref": "#/$defs/AuditNotificationTargetConfigurations"
                },
                "auditCheckConfigurations": {
                    "$ref": "#/$defs/AuditCheckConfigurations"
                }
            }
        },
        "AuditNotificationTargetConfigurations": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AuditNotificationTarget"
            }
        },
        "AuditNotificationTarget": {
            "type": "object",
            "properties": {
                "targetArn": {
                    "$ref": "#/$defs/TargetArn"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "enabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "Enabled": {
            "type": "boolean"
        },
        "AuditCheckConfigurations": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AuditCheckConfiguration"
            }
        },
        "AuditCheckConfiguration": {
            "type": "object",
            "properties": {
                "enabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "DescribeAccountAuditConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "DescribeAuditFindingResponse": {
            "type": "object",
            "properties": {
                "finding": {
                    "$ref": "#/$defs/AuditFinding"
                }
            }
        },
        "AuditFinding": {
            "type": "object",
            "properties": {
                "findingId": {
                    "$ref": "#/$defs/FindingId"
                },
                "taskId": {
                    "$ref": "#/$defs/AuditTaskId"
                },
                "checkName": {
                    "$ref": "#/$defs/AuditCheckName"
                },
                "taskStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "findingTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "severity": {
                    "$ref": "#/$defs/AuditFindingSeverity"
                },
                "nonCompliantResource": {
                    "$ref": "#/$defs/NonCompliantResource"
                },
                "relatedResources": {
                    "$ref": "#/$defs/RelatedResources"
                },
                "reasonForNonCompliance": {
                    "$ref": "#/$defs/ReasonForNonCompliance"
                },
                "reasonForNonComplianceCode": {
                    "$ref": "#/$defs/ReasonForNonComplianceCode"
                },
                "isSuppressed": {
                    "$ref": "#/$defs/IsSuppressed"
                }
            }
        },
        "FindingId": {
            "type": "string"
        },
        "AuditFindingSeverity": {
            "enum": [
                "CRITICAL",
                "HIGH",
                "MEDIUM",
                "LOW"
            ]
        },
        "NonCompliantResource": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "resourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "additionalInfo": {
                    "$ref": "#/$defs/StringMap"
                }
            }
        },
        "ResourceType": {
            "enum": [
                "DEVICE_CERTIFICATE",
                "CA_CERTIFICATE",
                "IOT_POLICY",
                "COGNITO_IDENTITY_POOL",
                "CLIENT_ID",
                "ACCOUNT_SETTINGS",
                "ROLE_ALIAS",
                "IAM_ROLE",
                "ISSUER_CERTIFICATE"
            ]
        },
        "StringMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "RelatedResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RelatedResource"
            }
        },
        "RelatedResource": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "resourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "additionalInfo": {
                    "$ref": "#/$defs/StringMap"
                }
            }
        },
        "ReasonForNonCompliance": {
            "type": "string"
        },
        "ReasonForNonComplianceCode": {
            "type": "string"
        },
        "IsSuppressed": {
            "type": "boolean"
        },
        "DescribeAuditFindingRequest": {
            "type": "object",
            "properties": {
                "findingId": {
                    "$ref": "#/$defs/FindingId"
                }
            }
        },
        "DescribeAuditMitigationActionsTaskResponse": {
            "type": "object",
            "properties": {
                "taskStatus": {
                    "$ref": "#/$defs/AuditMitigationActionsTaskStatus"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "taskStatistics": {
                    "$ref": "#/$defs/AuditMitigationActionsTaskStatistics"
                },
                "target": {
                    "$ref": "#/$defs/AuditMitigationActionsTaskTarget"
                },
                "auditCheckToActionsMapping": {
                    "$ref": "#/$defs/AuditCheckToActionsMapping"
                },
                "actionsDefinition": {
                    "$ref": "#/$defs/MitigationActionList"
                }
            }
        },
        "AuditMitigationActionsTaskStatus": {
            "enum": [
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "CANCELED"
            ]
        },
        "AuditMitigationActionsTaskStatistics": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TaskStatisticsForAuditCheck"
            }
        },
        "TaskStatisticsForAuditCheck": {
            "type": "object",
            "properties": {
                "totalFindingsCount": {
                    "$ref": "#/$defs/TotalFindingsCount"
                },
                "failedFindingsCount": {
                    "$ref": "#/$defs/FailedFindingsCount"
                },
                "succeededFindingsCount": {
                    "$ref": "#/$defs/SucceededFindingsCount"
                },
                "skippedFindingsCount": {
                    "$ref": "#/$defs/SkippedFindingsCount"
                },
                "canceledFindingsCount": {
                    "$ref": "#/$defs/CanceledFindingsCount"
                }
            }
        },
        "TotalFindingsCount": {
            "type": "integer",
            "format": "int64"
        },
        "FailedFindingsCount": {
            "type": "integer",
            "format": "int64"
        },
        "SucceededFindingsCount": {
            "type": "integer",
            "format": "int64"
        },
        "SkippedFindingsCount": {
            "type": "integer",
            "format": "int64"
        },
        "CanceledFindingsCount": {
            "type": "integer",
            "format": "int64"
        },
        "AuditMitigationActionsTaskTarget": {
            "type": "object",
            "properties": {
                "auditTaskId": {
                    "$ref": "#/$defs/AuditTaskId"
                },
                "findingIds": {
                    "$ref": "#/$defs/FindingIds"
                },
                "auditCheckToReasonCodeFilter": {
                    "$ref": "#/$defs/AuditCheckToReasonCodeFilter"
                }
            }
        },
        "FindingIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FindingId"
            }
        },
        "AuditCheckToReasonCodeFilter": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ReasonForNonComplianceCodes"
            }
        },
        "ReasonForNonComplianceCodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReasonForNonComplianceCode"
            }
        },
        "AuditCheckToActionsMapping": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MitigationActionNameList"
            }
        },
        "MitigationActionNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MitigationActionName"
            }
        },
        "MitigationActionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MitigationAction"
            }
        },
        "MitigationAction": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/MitigationActionName"
                },
                "id": {
                    "$ref": "#/$defs/MitigationActionId"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "actionParams": {
                    "$ref": "#/$defs/MitigationActionParams"
                }
            }
        },
        "DescribeAuditMitigationActionsTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                }
            }
        },
        "DescribeAuditSuppressionResponse": {
            "type": "object",
            "properties": {
                "checkName": {
                    "$ref": "#/$defs/AuditCheckName"
                },
                "resourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "expirationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "suppressIndefinitely": {
                    "$ref": "#/$defs/SuppressIndefinitely"
                },
                "description": {
                    "$ref": "#/$defs/AuditDescription"
                }
            }
        },
        "DescribeAuditSuppressionRequest": {
            "type": "object",
            "properties": {
                "checkName": {
                    "$ref": "#/$defs/AuditCheckName"
                },
                "resourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                }
            }
        },
        "DescribeAuditTaskResponse": {
            "type": "object",
            "properties": {
                "taskStatus": {
                    "$ref": "#/$defs/AuditTaskStatus"
                },
                "taskType": {
                    "$ref": "#/$defs/AuditTaskType"
                },
                "taskStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "taskStatistics": {
                    "$ref": "#/$defs/TaskStatistics"
                },
                "scheduledAuditName": {
                    "$ref": "#/$defs/ScheduledAuditName"
                },
                "auditDetails": {
                    "$ref": "#/$defs/AuditDetails"
                }
            }
        },
        "AuditTaskStatus": {
            "enum": [
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "CANCELED"
            ]
        },
        "AuditTaskType": {
            "enum": [
                "ON_DEMAND_AUDIT_TASK",
                "SCHEDULED_AUDIT_TASK"
            ]
        },
        "TaskStatistics": {
            "type": "object",
            "properties": {
                "totalChecks": {
                    "$ref": "#/$defs/TotalChecksCount"
                },
                "inProgressChecks": {
                    "$ref": "#/$defs/InProgressChecksCount"
                },
                "waitingForDataCollectionChecks": {
                    "$ref": "#/$defs/WaitingForDataCollectionChecksCount"
                },
                "compliantChecks": {
                    "$ref": "#/$defs/CompliantChecksCount"
                },
                "nonCompliantChecks": {
                    "$ref": "#/$defs/NonCompliantChecksCount"
                },
                "failedChecks": {
                    "$ref": "#/$defs/FailedChecksCount"
                },
                "canceledChecks": {
                    "$ref": "#/$defs/CanceledChecksCount"
                }
            }
        },
        "TotalChecksCount": {
            "type": "integer",
            "format": "int32"
        },
        "InProgressChecksCount": {
            "type": "integer",
            "format": "int32"
        },
        "WaitingForDataCollectionChecksCount": {
            "type": "integer",
            "format": "int32"
        },
        "CompliantChecksCount": {
            "type": "integer",
            "format": "int32"
        },
        "NonCompliantChecksCount": {
            "type": "integer",
            "format": "int32"
        },
        "FailedChecksCount": {
            "type": "integer",
            "format": "int32"
        },
        "CanceledChecksCount": {
            "type": "integer",
            "format": "int32"
        },
        "AuditDetails": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AuditCheckDetails"
            }
        },
        "AuditCheckDetails": {
            "type": "object",
            "properties": {
                "checkRunStatus": {
                    "$ref": "#/$defs/AuditCheckRunStatus"
                },
                "checkCompliant": {
                    "$ref": "#/$defs/CheckCompliant"
                },
                "totalResourcesCount": {
                    "$ref": "#/$defs/TotalResourcesCount"
                },
                "nonCompliantResourcesCount": {
                    "$ref": "#/$defs/NonCompliantResourcesCount"
                },
                "suppressedNonCompliantResourcesCount": {
                    "$ref": "#/$defs/SuppressedNonCompliantResourcesCount"
                },
                "errorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "AuditCheckRunStatus": {
            "enum": [
                "IN_PROGRESS",
                "WAITING_FOR_DATA_COLLECTION",
                "CANCELED",
                "COMPLETED_COMPLIANT",
                "COMPLETED_NON_COMPLIANT",
                "FAILED"
            ]
        },
        "CheckCompliant": {
            "type": "boolean"
        },
        "TotalResourcesCount": {
            "type": "integer",
            "format": "int64"
        },
        "NonCompliantResourcesCount": {
            "type": "integer",
            "format": "int64"
        },
        "SuppressedNonCompliantResourcesCount": {
            "type": "integer",
            "format": "int64"
        },
        "ErrorCode": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "DescribeAuditTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/AuditTaskId"
                }
            }
        },
        "DescribeAuthorizerResponse": {
            "type": "object",
            "properties": {
                "authorizerDescription": {
                    "$ref": "#/$defs/AuthorizerDescription"
                }
            }
        },
        "AuthorizerDescription": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                },
                "authorizerArn": {
                    "$ref": "#/$defs/AuthorizerArn"
                },
                "authorizerFunctionArn": {
                    "$ref": "#/$defs/AuthorizerFunctionArn"
                },
                "tokenKeyName": {
                    "$ref": "#/$defs/TokenKeyName"
                },
                "tokenSigningPublicKeys": {
                    "$ref": "#/$defs/PublicKeyMap"
                },
                "status": {
                    "$ref": "#/$defs/AuthorizerStatus"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/DateType"
                },
                "signingDisabled": {
                    "$ref": "#/$defs/BooleanKey"
                },
                "enableCachingForHttp": {
                    "$ref": "#/$defs/EnableCachingForHttp"
                }
            }
        },
        "DescribeAuthorizerRequest": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                }
            }
        },
        "DescribeBillingGroupResponse": {
            "type": "object",
            "properties": {
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                },
                "billingGroupId": {
                    "$ref": "#/$defs/BillingGroupId"
                },
                "billingGroupArn": {
                    "$ref": "#/$defs/BillingGroupArn"
                },
                "version": {
                    "$ref": "#/$defs/Version"
                },
                "billingGroupProperties": {
                    "$ref": "#/$defs/BillingGroupProperties"
                },
                "billingGroupMetadata": {
                    "$ref": "#/$defs/BillingGroupMetadata"
                }
            }
        },
        "Version": {
            "type": "integer",
            "format": "int64"
        },
        "BillingGroupMetadata": {
            "type": "object",
            "properties": {
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                }
            }
        },
        "CreationDate": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeBillingGroupRequest": {
            "type": "object",
            "properties": {
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                }
            }
        },
        "DescribeCACertificateResponse": {
            "type": "object",
            "properties": {
                "certificateDescription": {
                    "$ref": "#/$defs/CACertificateDescription"
                },
                "registrationConfig": {
                    "$ref": "#/$defs/RegistrationConfig"
                }
            }
        },
        "CACertificateDescription": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "status": {
                    "$ref": "#/$defs/CACertificateStatus"
                },
                "certificatePem": {
                    "$ref": "#/$defs/CertificatePem"
                },
                "ownedBy": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "autoRegistrationStatus": {
                    "$ref": "#/$defs/AutoRegistrationStatus"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/DateType"
                },
                "customerVersion": {
                    "$ref": "#/$defs/CustomerVersion"
                },
                "generationId": {
                    "$ref": "#/$defs/GenerationId"
                },
                "validity": {
                    "$ref": "#/$defs/CertificateValidity"
                },
                "certificateMode": {
                    "$ref": "#/$defs/CertificateMode"
                }
            }
        },
        "CACertificateStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "AutoRegistrationStatus": {
            "enum": [
                "ENABLE",
                "DISABLE"
            ]
        },
        "CustomerVersion": {
            "type": "integer",
            "format": "int32"
        },
        "GenerationId": {
            "type": "string"
        },
        "CertificateValidity": {
            "type": "object",
            "properties": {
                "notBefore": {
                    "$ref": "#/$defs/DateType"
                },
                "notAfter": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "CertificateMode": {
            "enum": [
                "DEFAULT",
                "SNI_ONLY"
            ]
        },
        "RegistrationConfig": {
            "type": "object",
            "properties": {
                "templateBody": {
                    "$ref": "#/$defs/TemplateBody"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                }
            }
        },
        "DescribeCACertificateRequest": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                }
            }
        },
        "DescribeCertificateResponse": {
            "type": "object",
            "properties": {
                "certificateDescription": {
                    "$ref": "#/$defs/CertificateDescription"
                }
            }
        },
        "CertificateDescription": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "caCertificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "status": {
                    "$ref": "#/$defs/CertificateStatus"
                },
                "certificatePem": {
                    "$ref": "#/$defs/CertificatePem"
                },
                "ownedBy": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "previousOwnedBy": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/DateType"
                },
                "customerVersion": {
                    "$ref": "#/$defs/CustomerVersion"
                },
                "transferData": {
                    "$ref": "#/$defs/TransferData"
                },
                "generationId": {
                    "$ref": "#/$defs/GenerationId"
                },
                "validity": {
                    "$ref": "#/$defs/CertificateValidity"
                },
                "certificateMode": {
                    "$ref": "#/$defs/CertificateMode"
                }
            }
        },
        "CertificateStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE",
                "REVOKED",
                "PENDING_TRANSFER",
                "REGISTER_INACTIVE",
                "PENDING_ACTIVATION"
            ]
        },
        "TransferData": {
            "type": "object",
            "properties": {
                "transferMessage": {
                    "$ref": "#/$defs/Message"
                },
                "rejectReason": {
                    "$ref": "#/$defs/Message"
                },
                "transferDate": {
                    "$ref": "#/$defs/DateType"
                },
                "acceptDate": {
                    "$ref": "#/$defs/DateType"
                },
                "rejectDate": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "Message": {
            "type": "string"
        },
        "DescribeCertificateRequest": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                }
            }
        },
        "DescribeCertificateProviderResponse": {
            "type": "object",
            "properties": {
                "certificateProviderName": {
                    "$ref": "#/$defs/CertificateProviderName"
                },
                "certificateProviderArn": {
                    "$ref": "#/$defs/CertificateProviderArn"
                },
                "lambdaFunctionArn": {
                    "$ref": "#/$defs/CertificateProviderFunctionArn"
                },
                "accountDefaultForOperations": {
                    "$ref": "#/$defs/CertificateProviderAccountDefaultForOperations"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "DescribeCertificateProviderRequest": {
            "type": "object",
            "properties": {
                "certificateProviderName": {
                    "$ref": "#/$defs/CertificateProviderName"
                }
            }
        },
        "DescribeCustomMetricResponse": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "metricArn": {
                    "$ref": "#/$defs/CustomMetricArn"
                },
                "metricType": {
                    "$ref": "#/$defs/CustomMetricType"
                },
                "displayName": {
                    "$ref": "#/$defs/CustomMetricDisplayName"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DescribeCustomMetricRequest": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/MetricName"
                }
            }
        },
        "DescribeDefaultAuthorizerResponse": {
            "type": "object",
            "properties": {
                "authorizerDescription": {
                    "$ref": "#/$defs/AuthorizerDescription"
                }
            }
        },
        "DescribeDefaultAuthorizerRequest": {
            "type": "object",
            "properties": {}
        },
        "DescribeDetectMitigationActionsTaskResponse": {
            "type": "object",
            "properties": {
                "taskSummary": {
                    "$ref": "#/$defs/DetectMitigationActionsTaskSummary"
                }
            }
        },
        "DetectMitigationActionsTaskSummary": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                },
                "taskStatus": {
                    "$ref": "#/$defs/DetectMitigationActionsTaskStatus"
                },
                "taskStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "taskEndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "target": {
                    "$ref": "#/$defs/DetectMitigationActionsTaskTarget"
                },
                "violationEventOccurrenceRange": {
                    "$ref": "#/$defs/ViolationEventOccurrenceRange"
                },
                "onlyActiveViolationsIncluded": {
                    "$ref": "#/$defs/PrimitiveBoolean"
                },
                "suppressedAlertsIncluded": {
                    "$ref": "#/$defs/PrimitiveBoolean"
                },
                "actionsDefinition": {
                    "$ref": "#/$defs/MitigationActionList"
                },
                "taskStatistics": {
                    "$ref": "#/$defs/DetectMitigationActionsTaskStatistics"
                }
            }
        },
        "DetectMitigationActionsTaskStatus": {
            "enum": [
                "IN_PROGRESS",
                "SUCCESSFUL",
                "FAILED",
                "CANCELED"
            ]
        },
        "DetectMitigationActionsTaskTarget": {
            "type": "object",
            "properties": {
                "violationIds": {
                    "$ref": "#/$defs/TargetViolationIdsForDetectMitigationActions"
                },
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "behaviorName": {
                    "$ref": "#/$defs/BehaviorName"
                }
            }
        },
        "TargetViolationIdsForDetectMitigationActions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ViolationId"
            }
        },
        "ViolationId": {
            "type": "string"
        },
        "ViolationEventOccurrenceRange": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "PrimitiveBoolean": {
            "type": "boolean"
        },
        "DetectMitigationActionsTaskStatistics": {
            "type": "object",
            "properties": {
                "actionsExecuted": {
                    "$ref": "#/$defs/GenericLongValue"
                },
                "actionsSkipped": {
                    "$ref": "#/$defs/GenericLongValue"
                },
                "actionsFailed": {
                    "$ref": "#/$defs/GenericLongValue"
                }
            }
        },
        "GenericLongValue": {
            "type": "integer",
            "format": "int64"
        },
        "DescribeDetectMitigationActionsTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                }
            }
        },
        "DescribeDimensionResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DimensionName"
                },
                "arn": {
                    "$ref": "#/$defs/DimensionArn"
                },
                "type": {
                    "$ref": "#/$defs/DimensionType"
                },
                "stringValues": {
                    "$ref": "#/$defs/DimensionStringValues"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DescribeDimensionRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DimensionName"
                }
            }
        },
        "DescribeDomainConfigurationResponse": {
            "type": "object",
            "properties": {
                "domainConfigurationName": {
                    "$ref": "#/$defs/ReservedDomainConfigurationName"
                },
                "domainConfigurationArn": {
                    "$ref": "#/$defs/DomainConfigurationArn"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "serverCertificates": {
                    "$ref": "#/$defs/ServerCertificates"
                },
                "authorizerConfig": {
                    "$ref": "#/$defs/AuthorizerConfig"
                },
                "domainConfigurationStatus": {
                    "$ref": "#/$defs/DomainConfigurationStatus"
                },
                "serviceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "domainType": {
                    "$ref": "#/$defs/DomainType"
                },
                "lastStatusChangeDate": {
                    "$ref": "#/$defs/DateType"
                },
                "tlsConfig": {
                    "$ref": "#/$defs/TlsConfig"
                },
                "serverCertificateConfig": {
                    "$ref": "#/$defs/ServerCertificateConfig"
                },
                "authenticationType": {
                    "$ref": "#/$defs/AuthenticationType"
                },
                "applicationProtocol": {
                    "$ref": "#/$defs/ApplicationProtocol"
                },
                "clientCertificateConfig": {
                    "$ref": "#/$defs/ClientCertificateConfig"
                }
            }
        },
        "ReservedDomainConfigurationName": {
            "type": "string"
        },
        "ServerCertificates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerCertificateSummary"
            }
        },
        "ServerCertificateSummary": {
            "type": "object",
            "properties": {
                "serverCertificateArn": {
                    "$ref": "#/$defs/AcmCertificateArn"
                },
                "serverCertificateStatus": {
                    "$ref": "#/$defs/ServerCertificateStatus"
                },
                "serverCertificateStatusDetail": {
                    "$ref": "#/$defs/ServerCertificateStatusDetail"
                }
            }
        },
        "ServerCertificateStatus": {
            "enum": [
                "INVALID",
                "VALID"
            ]
        },
        "ServerCertificateStatusDetail": {
            "type": "string"
        },
        "DomainConfigurationStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "DomainType": {
            "enum": [
                "ENDPOINT",
                "AWS_MANAGED",
                "CUSTOMER_MANAGED"
            ]
        },
        "DescribeDomainConfigurationRequest": {
            "type": "object",
            "properties": {
                "domainConfigurationName": {
                    "$ref": "#/$defs/ReservedDomainConfigurationName"
                }
            }
        },
        "DescribeEndpointResponse": {
            "type": "object",
            "properties": {
                "endpointAddress": {
                    "$ref": "#/$defs/EndpointAddress"
                }
            }
        },
        "EndpointAddress": {
            "type": "string"
        },
        "DescribeEndpointRequest": {
            "type": "object",
            "properties": {
                "endpointType": {
                    "$ref": "#/$defs/EndpointType"
                }
            }
        },
        "EndpointType": {
            "type": "string"
        },
        "DescribeEventConfigurationsResponse": {
            "type": "object",
            "properties": {
                "eventConfigurations": {
                    "$ref": "#/$defs/EventConfigurations"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                }
            }
        },
        "EventConfigurations": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Configuration"
            }
        },
        "Configuration": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "LastModifiedDate": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeEventConfigurationsRequest": {
            "type": "object",
            "properties": {}
        },
        "DescribeFleetMetricResponse": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/FleetMetricName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "aggregationType": {
                    "$ref": "#/$defs/AggregationType"
                },
                "period": {
                    "$ref": "#/$defs/FleetMetricPeriod"
                },
                "aggregationField": {
                    "$ref": "#/$defs/AggregationField"
                },
                "description": {
                    "$ref": "#/$defs/FleetMetricDescription"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                },
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                },
                "unit": {
                    "$ref": "#/$defs/FleetMetricUnit"
                },
                "version": {
                    "$ref": "#/$defs/Version"
                },
                "metricArn": {
                    "$ref": "#/$defs/FleetMetricArn"
                }
            }
        },
        "DescribeFleetMetricRequest": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/FleetMetricName"
                }
            }
        },
        "DescribeIndexResponse": {
            "type": "object",
            "properties": {
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "indexStatus": {
                    "$ref": "#/$defs/IndexStatus"
                },
                "schema": {
                    "$ref": "#/$defs/IndexSchema"
                }
            }
        },
        "IndexStatus": {
            "enum": [
                "ACTIVE",
                "BUILDING",
                "REBUILDING"
            ]
        },
        "IndexSchema": {
            "type": "string"
        },
        "DescribeIndexRequest": {
            "type": "object",
            "properties": {
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                }
            }
        },
        "DescribeJobResponse": {
            "type": "object",
            "properties": {
                "documentSource": {
                    "$ref": "#/$defs/JobDocumentSource"
                },
                "job": {
                    "$ref": "#/$defs/Job"
                }
            }
        },
        "Job": {
            "type": "object",
            "properties": {
                "jobArn": {
                    "$ref": "#/$defs/JobArn"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "targetSelection": {
                    "$ref": "#/$defs/TargetSelection"
                },
                "status": {
                    "$ref": "#/$defs/JobStatus"
                },
                "forceCanceled": {
                    "$ref": "#/$defs/Forced"
                },
                "reasonCode": {
                    "$ref": "#/$defs/ReasonCode"
                },
                "comment": {
                    "$ref": "#/$defs/Comment"
                },
                "targets": {
                    "$ref": "#/$defs/JobTargets"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                },
                "presignedUrlConfig": {
                    "$ref": "#/$defs/PresignedUrlConfig"
                },
                "jobExecutionsRolloutConfig": {
                    "$ref": "#/$defs/JobExecutionsRolloutConfig"
                },
                "abortConfig": {
                    "$ref": "#/$defs/AbortConfig"
                },
                "createdAt": {
                    "$ref": "#/$defs/DateType"
                },
                "lastUpdatedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "completedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "jobProcessDetails": {
                    "$ref": "#/$defs/JobProcessDetails"
                },
                "timeoutConfig": {
                    "$ref": "#/$defs/TimeoutConfig"
                },
                "namespaceId": {
                    "$ref": "#/$defs/NamespaceId"
                },
                "jobTemplateArn": {
                    "$ref": "#/$defs/JobTemplateArn"
                },
                "jobExecutionsRetryConfig": {
                    "$ref": "#/$defs/JobExecutionsRetryConfig"
                },
                "documentParameters": {
                    "$ref": "#/$defs/ParameterMap"
                },
                "isConcurrent": {
                    "$ref": "#/$defs/BooleanWrapperObject"
                },
                "schedulingConfig": {
                    "$ref": "#/$defs/SchedulingConfig"
                },
                "scheduledJobRollouts": {
                    "$ref": "#/$defs/ScheduledJobRolloutList"
                },
                "destinationPackageVersions": {
                    "$ref": "#/$defs/DestinationPackageVersions"
                }
            }
        },
        "JobStatus": {
            "enum": [
                "IN_PROGRESS",
                "CANCELED",
                "COMPLETED",
                "DELETION_IN_PROGRESS",
                "SCHEDULED"
            ]
        },
        "Forced": {
            "type": "boolean"
        },
        "JobProcessDetails": {
            "type": "object",
            "properties": {
                "processingTargets": {
                    "$ref": "#/$defs/ProcessingTargetNameList"
                },
                "numberOfCanceledThings": {
                    "$ref": "#/$defs/CanceledThings"
                },
                "numberOfSucceededThings": {
                    "$ref": "#/$defs/SucceededThings"
                },
                "numberOfFailedThings": {
                    "$ref": "#/$defs/FailedThings"
                },
                "numberOfRejectedThings": {
                    "$ref": "#/$defs/RejectedThings"
                },
                "numberOfQueuedThings": {
                    "$ref": "#/$defs/QueuedThings"
                },
                "numberOfInProgressThings": {
                    "$ref": "#/$defs/InProgressThings"
                },
                "numberOfRemovedThings": {
                    "$ref": "#/$defs/RemovedThings"
                },
                "numberOfTimedOutThings": {
                    "$ref": "#/$defs/TimedOutThings"
                }
            }
        },
        "ProcessingTargetNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProcessingTargetName"
            }
        },
        "ProcessingTargetName": {
            "type": "string"
        },
        "CanceledThings": {
            "type": "integer",
            "format": "int32"
        },
        "SucceededThings": {
            "type": "integer",
            "format": "int32"
        },
        "FailedThings": {
            "type": "integer",
            "format": "int32"
        },
        "RejectedThings": {
            "type": "integer",
            "format": "int32"
        },
        "QueuedThings": {
            "type": "integer",
            "format": "int32"
        },
        "InProgressThings": {
            "type": "integer",
            "format": "int32"
        },
        "RemovedThings": {
            "type": "integer",
            "format": "int32"
        },
        "TimedOutThings": {
            "type": "integer",
            "format": "int32"
        },
        "BooleanWrapperObject": {
            "type": "boolean"
        },
        "ScheduledJobRolloutList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledJobRollout"
            }
        },
        "ScheduledJobRollout": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/StringDateTime"
                }
            }
        },
        "DescribeJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "beforeSubstitution": {
                    "$ref": "#/$defs/BeforeSubstitutionFlag"
                }
            }
        },
        "BeforeSubstitutionFlag": {
            "type": "boolean"
        },
        "DescribeJobExecutionResponse": {
            "type": "object",
            "properties": {
                "execution": {
                    "$ref": "#/$defs/JobExecution"
                }
            }
        },
        "JobExecution": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "status": {
                    "$ref": "#/$defs/JobExecutionStatus"
                },
                "forceCanceled": {
                    "$ref": "#/$defs/Forced"
                },
                "statusDetails": {
                    "$ref": "#/$defs/JobExecutionStatusDetails"
                },
                "thingArn": {
                    "$ref": "#/$defs/ThingArn"
                },
                "queuedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "startedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "lastUpdatedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "executionNumber": {
                    "$ref": "#/$defs/ExecutionNumber"
                },
                "versionNumber": {
                    "$ref": "#/$defs/VersionNumber"
                },
                "approximateSecondsBeforeTimedOut": {
                    "$ref": "#/$defs/ApproximateSecondsBeforeTimedOut"
                }
            }
        },
        "JobExecutionStatus": {
            "enum": [
                "QUEUED",
                "IN_PROGRESS",
                "SUCCEEDED",
                "FAILED",
                "TIMED_OUT",
                "REJECTED",
                "REMOVED",
                "CANCELED"
            ]
        },
        "JobExecutionStatusDetails": {
            "type": "object",
            "properties": {
                "detailsMap": {
                    "$ref": "#/$defs/DetailsMap"
                }
            }
        },
        "VersionNumber": {
            "type": "integer",
            "format": "int64"
        },
        "ApproximateSecondsBeforeTimedOut": {
            "type": "integer",
            "format": "int64"
        },
        "DescribeJobExecutionRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "executionNumber": {
                    "$ref": "#/$defs/ExecutionNumber"
                }
            }
        },
        "DescribeJobTemplateResponse": {
            "type": "object",
            "properties": {
                "jobTemplateArn": {
                    "$ref": "#/$defs/JobTemplateArn"
                },
                "jobTemplateId": {
                    "$ref": "#/$defs/JobTemplateId"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                },
                "documentSource": {
                    "$ref": "#/$defs/JobDocumentSource"
                },
                "document": {
                    "$ref": "#/$defs/JobDocument"
                },
                "createdAt": {
                    "$ref": "#/$defs/DateType"
                },
                "presignedUrlConfig": {
                    "$ref": "#/$defs/PresignedUrlConfig"
                },
                "jobExecutionsRolloutConfig": {
                    "$ref": "#/$defs/JobExecutionsRolloutConfig"
                },
                "abortConfig": {
                    "$ref": "#/$defs/AbortConfig"
                },
                "timeoutConfig": {
                    "$ref": "#/$defs/TimeoutConfig"
                },
                "jobExecutionsRetryConfig": {
                    "$ref": "#/$defs/JobExecutionsRetryConfig"
                },
                "maintenanceWindows": {
                    "$ref": "#/$defs/MaintenanceWindows"
                },
                "destinationPackageVersions": {
                    "$ref": "#/$defs/DestinationPackageVersions"
                }
            }
        },
        "DescribeJobTemplateRequest": {
            "type": "object",
            "properties": {
                "jobTemplateId": {
                    "$ref": "#/$defs/JobTemplateId"
                }
            }
        },
        "DescribeManagedJobTemplateResponse": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/ManagedJobTemplateName"
                },
                "templateArn": {
                    "$ref": "#/$defs/JobTemplateArn"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                },
                "templateVersion": {
                    "$ref": "#/$defs/ManagedTemplateVersion"
                },
                "environments": {
                    "$ref": "#/$defs/Environments"
                },
                "documentParameters": {
                    "$ref": "#/$defs/DocumentParameters"
                },
                "document": {
                    "$ref": "#/$defs/JobDocument"
                }
            }
        },
        "ManagedJobTemplateName": {
            "type": "string"
        },
        "ManagedTemplateVersion": {
            "type": "string"
        },
        "Environments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Environment"
            }
        },
        "Environment": {
            "type": "string"
        },
        "DocumentParameters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DocumentParameter"
            }
        },
        "DocumentParameter": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/ParameterKey"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                },
                "regex": {
                    "$ref": "#/$defs/Regex"
                },
                "example": {
                    "$ref": "#/$defs/Example"
                },
                "optional": {
                    "$ref": "#/$defs/Optional"
                }
            }
        },
        "ParameterKey": {
            "type": "string"
        },
        "Regex": {
            "type": "string"
        },
        "Example": {
            "type": "string"
        },
        "Optional": {
            "type": "boolean"
        },
        "DescribeManagedJobTemplateRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/ManagedJobTemplateName"
                },
                "templateVersion": {
                    "$ref": "#/$defs/ManagedTemplateVersion"
                }
            }
        },
        "DescribeMitigationActionResponse": {
            "type": "object",
            "properties": {
                "actionName": {
                    "$ref": "#/$defs/MitigationActionName"
                },
                "actionType": {
                    "$ref": "#/$defs/MitigationActionType"
                },
                "actionArn": {
                    "$ref": "#/$defs/MitigationActionArn"
                },
                "actionId": {
                    "$ref": "#/$defs/MitigationActionId"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "actionParams": {
                    "$ref": "#/$defs/MitigationActionParams"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "MitigationActionType": {
            "enum": [
                "UPDATE_DEVICE_CERTIFICATE",
                "UPDATE_CA_CERTIFICATE",
                "ADD_THINGS_TO_THING_GROUP",
                "REPLACE_DEFAULT_POLICY_VERSION",
                "ENABLE_IOT_LOGGING",
                "PUBLISH_FINDING_TO_SNS"
            ]
        },
        "DescribeMitigationActionRequest": {
            "type": "object",
            "properties": {
                "actionName": {
                    "$ref": "#/$defs/MitigationActionName"
                }
            }
        },
        "DescribeProvisioningTemplateResponse": {
            "type": "object",
            "properties": {
                "templateArn": {
                    "$ref": "#/$defs/TemplateArn"
                },
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                },
                "description": {
                    "$ref": "#/$defs/TemplateDescription"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/DateType"
                },
                "defaultVersionId": {
                    "$ref": "#/$defs/TemplateVersionId"
                },
                "templateBody": {
                    "$ref": "#/$defs/TemplateBody"
                },
                "enabled": {
                    "$ref": "#/$defs/Enabled2"
                },
                "provisioningRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "preProvisioningHook": {
                    "$ref": "#/$defs/ProvisioningHook"
                },
                "type": {
                    "$ref": "#/$defs/TemplateType"
                }
            }
        },
        "DescribeProvisioningTemplateRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                }
            }
        },
        "DescribeProvisioningTemplateVersionResponse": {
            "type": "object",
            "properties": {
                "versionId": {
                    "$ref": "#/$defs/TemplateVersionId"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "templateBody": {
                    "$ref": "#/$defs/TemplateBody"
                },
                "isDefaultVersion": {
                    "$ref": "#/$defs/IsDefaultVersion"
                }
            }
        },
        "DescribeProvisioningTemplateVersionRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                },
                "versionId": {
                    "$ref": "#/$defs/TemplateVersionId"
                }
            }
        },
        "DescribeRoleAliasResponse": {
            "type": "object",
            "properties": {
                "roleAliasDescription": {
                    "$ref": "#/$defs/RoleAliasDescription"
                }
            }
        },
        "RoleAliasDescription": {
            "type": "object",
            "properties": {
                "roleAlias": {
                    "$ref": "#/$defs/RoleAlias"
                },
                "roleAliasArn": {
                    "$ref": "#/$defs/RoleAliasArn"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "owner": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "credentialDurationSeconds": {
                    "$ref": "#/$defs/CredentialDurationSeconds"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "DescribeRoleAliasRequest": {
            "type": "object",
            "properties": {
                "roleAlias": {
                    "$ref": "#/$defs/RoleAlias"
                }
            }
        },
        "DescribeScheduledAuditResponse": {
            "type": "object",
            "properties": {
                "frequency": {
                    "$ref": "#/$defs/AuditFrequency"
                },
                "dayOfMonth": {
                    "$ref": "#/$defs/DayOfMonth"
                },
                "dayOfWeek": {
                    "$ref": "#/$defs/DayOfWeek"
                },
                "targetCheckNames": {
                    "$ref": "#/$defs/TargetAuditCheckNames"
                },
                "scheduledAuditName": {
                    "$ref": "#/$defs/ScheduledAuditName"
                },
                "scheduledAuditArn": {
                    "$ref": "#/$defs/ScheduledAuditArn"
                }
            }
        },
        "DescribeScheduledAuditRequest": {
            "type": "object",
            "properties": {
                "scheduledAuditName": {
                    "$ref": "#/$defs/ScheduledAuditName"
                }
            }
        },
        "DescribeSecurityProfileResponse": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "securityProfileArn": {
                    "$ref": "#/$defs/SecurityProfileArn"
                },
                "securityProfileDescription": {
                    "$ref": "#/$defs/SecurityProfileDescription"
                },
                "behaviors": {
                    "$ref": "#/$defs/Behaviors"
                },
                "alertTargets": {
                    "$ref": "#/$defs/AlertTargets"
                },
                "additionalMetricsToRetain": {
                    "$ref": "#/$defs/AdditionalMetricsToRetainList"
                },
                "additionalMetricsToRetainV2": {
                    "$ref": "#/$defs/AdditionalMetricsToRetainV2List"
                },
                "version": {
                    "$ref": "#/$defs/Version"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "metricsExportConfig": {
                    "$ref": "#/$defs/MetricsExportConfig"
                }
            }
        },
        "DescribeSecurityProfileRequest": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                }
            }
        },
        "DescribeStreamResponse": {
            "type": "object",
            "properties": {
                "streamInfo": {
                    "$ref": "#/$defs/StreamInfo"
                }
            }
        },
        "StreamInfo": {
            "type": "object",
            "properties": {
                "streamId": {
                    "$ref": "#/$defs/StreamId"
                },
                "streamArn": {
                    "$ref": "#/$defs/StreamArn"
                },
                "streamVersion": {
                    "$ref": "#/$defs/StreamVersion"
                },
                "description": {
                    "$ref": "#/$defs/StreamDescription"
                },
                "files": {
                    "$ref": "#/$defs/StreamFiles"
                },
                "createdAt": {
                    "$ref": "#/$defs/DateType"
                },
                "lastUpdatedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "DescribeStreamRequest": {
            "type": "object",
            "properties": {
                "streamId": {
                    "$ref": "#/$defs/StreamId"
                }
            }
        },
        "DescribeThingResponse": {
            "type": "object",
            "properties": {
                "defaultClientId": {
                    "$ref": "#/$defs/ClientId"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingId": {
                    "$ref": "#/$defs/ThingId"
                },
                "thingArn": {
                    "$ref": "#/$defs/ThingArn"
                },
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "version": {
                    "$ref": "#/$defs/Version"
                },
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                }
            }
        },
        "DescribeThingRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                }
            }
        },
        "DescribeThingGroupResponse": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupId": {
                    "$ref": "#/$defs/ThingGroupId"
                },
                "thingGroupArn": {
                    "$ref": "#/$defs/ThingGroupArn"
                },
                "version": {
                    "$ref": "#/$defs/Version"
                },
                "thingGroupProperties": {
                    "$ref": "#/$defs/ThingGroupProperties"
                },
                "thingGroupMetadata": {
                    "$ref": "#/$defs/ThingGroupMetadata"
                },
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                },
                "status": {
                    "$ref": "#/$defs/DynamicGroupStatus"
                }
            }
        },
        "ThingGroupMetadata": {
            "type": "object",
            "properties": {
                "parentGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "rootToParentThingGroups": {
                    "$ref": "#/$defs/ThingGroupNameAndArnList"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                }
            }
        },
        "ThingGroupNameAndArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupNameAndArn"
            }
        },
        "GroupNameAndArn": {
            "type": "object",
            "properties": {
                "groupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "groupArn": {
                    "$ref": "#/$defs/ThingGroupArn"
                }
            }
        },
        "DynamicGroupStatus": {
            "enum": [
                "ACTIVE",
                "BUILDING",
                "REBUILDING"
            ]
        },
        "DescribeThingGroupRequest": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                }
            }
        },
        "DescribeThingRegistrationTaskResponse": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/TaskId"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                },
                "templateBody": {
                    "$ref": "#/$defs/TemplateBody"
                },
                "inputFileBucket": {
                    "$ref": "#/$defs/RegistryS3BucketName"
                },
                "inputFileKey": {
                    "$ref": "#/$defs/RegistryS3KeyName"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "successCount": {
                    "$ref": "#/$defs/Count"
                },
                "failureCount": {
                    "$ref": "#/$defs/Count"
                },
                "percentageProgress": {
                    "$ref": "#/$defs/Percentage"
                }
            }
        },
        "TaskId": {
            "type": "string"
        },
        "RegistryS3BucketName": {
            "type": "string"
        },
        "RegistryS3KeyName": {
            "type": "string"
        },
        "Status": {
            "enum": [
                "InProgress",
                "Completed",
                "Failed",
                "Cancelled",
                "Cancelling"
            ]
        },
        "Count": {
            "type": "integer",
            "format": "int32"
        },
        "Percentage": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeThingRegistrationTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/TaskId"
                }
            }
        },
        "DescribeThingTypeResponse": {
            "type": "object",
            "properties": {
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "thingTypeId": {
                    "$ref": "#/$defs/ThingTypeId"
                },
                "thingTypeArn": {
                    "$ref": "#/$defs/ThingTypeArn"
                },
                "thingTypeProperties": {
                    "$ref": "#/$defs/ThingTypeProperties"
                },
                "thingTypeMetadata": {
                    "$ref": "#/$defs/ThingTypeMetadata"
                }
            }
        },
        "ThingTypeMetadata": {
            "type": "object",
            "properties": {
                "deprecated": {
                    "$ref": "#/$defs/Boolean2"
                },
                "deprecationDate": {
                    "$ref": "#/$defs/DeprecationDate"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                }
            }
        },
        "Boolean2": {
            "type": "boolean"
        },
        "DeprecationDate": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeThingTypeRequest": {
            "type": "object",
            "properties": {
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                }
            }
        },
        "DetachPolicyRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "target": {
                    "$ref": "#/$defs/PolicyTarget"
                }
            }
        },
        "DetachPrincipalPolicyRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "principal": {
                    "$ref": "#/$defs/Principal"
                }
            }
        },
        "DetachSecurityProfileResponse": {
            "type": "object",
            "properties": {}
        },
        "DetachSecurityProfileRequest": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "securityProfileTargetArn": {
                    "$ref": "#/$defs/SecurityProfileTargetArn"
                }
            }
        },
        "DetachThingPrincipalResponse": {
            "type": "object",
            "properties": {}
        },
        "DetachThingPrincipalRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "principal": {
                    "$ref": "#/$defs/Principal"
                }
            }
        },
        "DisableTopicRuleRequest": {
            "type": "object",
            "properties": {
                "ruleName": {
                    "$ref": "#/$defs/RuleName"
                }
            }
        },
        "DisassociateSbomFromPackageVersionResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateSbomFromPackageVersionRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "EnableTopicRuleRequest": {
            "type": "object",
            "properties": {
                "ruleName": {
                    "$ref": "#/$defs/RuleName"
                }
            }
        },
        "GetBehaviorModelTrainingSummariesResponse": {
            "type": "object",
            "properties": {
                "summaries": {
                    "$ref": "#/$defs/BehaviorModelTrainingSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "BehaviorModelTrainingSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BehaviorModelTrainingSummary"
            }
        },
        "BehaviorModelTrainingSummary": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "behaviorName": {
                    "$ref": "#/$defs/BehaviorName"
                },
                "trainingDataCollectionStartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "modelStatus": {
                    "$ref": "#/$defs/ModelStatus"
                },
                "datapointsCollectionPercentage": {
                    "$ref": "#/$defs/DataCollectionPercentage"
                },
                "lastModelRefreshDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ModelStatus": {
            "enum": [
                "PENDING_BUILD",
                "ACTIVE",
                "EXPIRED"
            ]
        },
        "DataCollectionPercentage": {
            "type": "number",
            "format": "double"
        },
        "NextToken": {
            "type": "string"
        },
        "GetBehaviorModelTrainingSummariesRequest": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "maxResults": {
                    "$ref": "#/$defs/TinyMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TinyMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetBucketsAggregationResponse": {
            "type": "object",
            "properties": {
                "totalCount": {
                    "$ref": "#/$defs/Count"
                },
                "buckets": {
                    "$ref": "#/$defs/Buckets"
                }
            }
        },
        "Buckets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Bucket"
            }
        },
        "Bucket": {
            "type": "object",
            "properties": {
                "keyValue": {
                    "$ref": "#/$defs/BucketKeyValue"
                },
                "count": {
                    "$ref": "#/$defs/Count"
                }
            }
        },
        "BucketKeyValue": {
            "type": "string"
        },
        "GetBucketsAggregationRequest": {
            "type": "object",
            "properties": {
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "aggregationField": {
                    "$ref": "#/$defs/AggregationField"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                },
                "bucketsAggregationType": {
                    "$ref": "#/$defs/BucketsAggregationType"
                }
            }
        },
        "BucketsAggregationType": {
            "type": "object",
            "properties": {
                "termsAggregation": {
                    "$ref": "#/$defs/TermsAggregation"
                }
            }
        },
        "TermsAggregation": {
            "type": "object",
            "properties": {
                "maxBuckets": {
                    "$ref": "#/$defs/MaxBuckets"
                }
            }
        },
        "MaxBuckets": {
            "type": "integer",
            "format": "int32"
        },
        "GetCardinalityResponse": {
            "type": "object",
            "properties": {
                "cardinality": {
                    "$ref": "#/$defs/Count"
                }
            }
        },
        "GetCardinalityRequest": {
            "type": "object",
            "properties": {
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "aggregationField": {
                    "$ref": "#/$defs/AggregationField"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                }
            }
        },
        "GetEffectivePoliciesResponse": {
            "type": "object",
            "properties": {
                "effectivePolicies": {
                    "$ref": "#/$defs/EffectivePolicies"
                }
            }
        },
        "EffectivePolicies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EffectivePolicy"
            }
        },
        "EffectivePolicy": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyArn": {
                    "$ref": "#/$defs/PolicyArn"
                },
                "policyDocument": {
                    "$ref": "#/$defs/PolicyDocument"
                }
            }
        },
        "GetEffectivePoliciesRequest": {
            "type": "object",
            "properties": {
                "principal": {
                    "$ref": "#/$defs/Principal"
                },
                "cognitoIdentityPoolId": {
                    "$ref": "#/$defs/CognitoIdentityPoolId"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                }
            }
        },
        "GetIndexingConfigurationResponse": {
            "type": "object",
            "properties": {
                "thingIndexingConfiguration": {
                    "$ref": "#/$defs/ThingIndexingConfiguration"
                },
                "thingGroupIndexingConfiguration": {
                    "$ref": "#/$defs/ThingGroupIndexingConfiguration"
                }
            }
        },
        "ThingIndexingConfiguration": {
            "type": "object",
            "properties": {
                "thingIndexingMode": {
                    "$ref": "#/$defs/ThingIndexingMode"
                },
                "thingConnectivityIndexingMode": {
                    "$ref": "#/$defs/ThingConnectivityIndexingMode"
                },
                "deviceDefenderIndexingMode": {
                    "$ref": "#/$defs/DeviceDefenderIndexingMode"
                },
                "namedShadowIndexingMode": {
                    "$ref": "#/$defs/NamedShadowIndexingMode"
                },
                "managedFields": {
                    "$ref": "#/$defs/Fields"
                },
                "customFields": {
                    "$ref": "#/$defs/Fields"
                },
                "filter": {
                    "$ref": "#/$defs/IndexingFilter"
                }
            }
        },
        "ThingIndexingMode": {
            "enum": [
                "OFF",
                "REGISTRY",
                "REGISTRY_AND_SHADOW"
            ]
        },
        "ThingConnectivityIndexingMode": {
            "enum": [
                "OFF",
                "STATUS"
            ]
        },
        "DeviceDefenderIndexingMode": {
            "enum": [
                "OFF",
                "VIOLATIONS"
            ]
        },
        "NamedShadowIndexingMode": {
            "enum": [
                "OFF",
                "ON"
            ]
        },
        "Fields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Field"
            }
        },
        "Field": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/FieldName"
                },
                "type": {
                    "$ref": "#/$defs/FieldType"
                }
            }
        },
        "FieldName": {
            "type": "string"
        },
        "FieldType": {
            "enum": [
                "NUMBER",
                "STRING",
                "BOOLEAN"
            ]
        },
        "IndexingFilter": {
            "type": "object",
            "properties": {
                "namedShadowNames": {
                    "$ref": "#/$defs/NamedShadowNamesFilter"
                },
                "geoLocations": {
                    "$ref": "#/$defs/GeoLocationsFilter"
                }
            }
        },
        "NamedShadowNamesFilter": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ShadowName"
            }
        },
        "ShadowName": {
            "type": "string"
        },
        "GeoLocationsFilter": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GeoLocationTarget"
            }
        },
        "GeoLocationTarget": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/TargetFieldName"
                },
                "order": {
                    "$ref": "#/$defs/TargetFieldOrder"
                }
            }
        },
        "TargetFieldName": {
            "type": "string"
        },
        "TargetFieldOrder": {
            "enum": [
                "LatLon",
                "LonLat"
            ]
        },
        "ThingGroupIndexingConfiguration": {
            "type": "object",
            "properties": {
                "thingGroupIndexingMode": {
                    "$ref": "#/$defs/ThingGroupIndexingMode"
                },
                "managedFields": {
                    "$ref": "#/$defs/Fields"
                },
                "customFields": {
                    "$ref": "#/$defs/Fields"
                }
            }
        },
        "ThingGroupIndexingMode": {
            "enum": [
                "OFF",
                "ON"
            ]
        },
        "GetIndexingConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetJobDocumentResponse": {
            "type": "object",
            "properties": {
                "document": {
                    "$ref": "#/$defs/JobDocument"
                }
            }
        },
        "GetJobDocumentRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "beforeSubstitution": {
                    "$ref": "#/$defs/BeforeSubstitutionFlag"
                }
            }
        },
        "GetLoggingOptionsResponse": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "logLevel": {
                    "$ref": "#/$defs/LogLevel"
                }
            }
        },
        "GetLoggingOptionsRequest": {
            "type": "object",
            "properties": {}
        },
        "GetOTAUpdateResponse": {
            "type": "object",
            "properties": {
                "otaUpdateInfo": {
                    "$ref": "#/$defs/OTAUpdateInfo"
                }
            }
        },
        "OTAUpdateInfo": {
            "type": "object",
            "properties": {
                "otaUpdateId": {
                    "$ref": "#/$defs/OTAUpdateId"
                },
                "otaUpdateArn": {
                    "$ref": "#/$defs/OTAUpdateArn"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/DateType"
                },
                "description": {
                    "$ref": "#/$defs/OTAUpdateDescription"
                },
                "targets": {
                    "$ref": "#/$defs/Targets"
                },
                "protocols": {
                    "$ref": "#/$defs/Protocols"
                },
                "awsJobExecutionsRolloutConfig": {
                    "$ref": "#/$defs/AwsJobExecutionsRolloutConfig"
                },
                "awsJobPresignedUrlConfig": {
                    "$ref": "#/$defs/AwsJobPresignedUrlConfig"
                },
                "targetSelection": {
                    "$ref": "#/$defs/TargetSelection"
                },
                "otaUpdateFiles": {
                    "$ref": "#/$defs/OTAUpdateFiles"
                },
                "otaUpdateStatus": {
                    "$ref": "#/$defs/OTAUpdateStatus"
                },
                "awsIotJobId": {
                    "$ref": "#/$defs/AwsIotJobId"
                },
                "awsIotJobArn": {
                    "$ref": "#/$defs/AwsIotJobArn"
                },
                "errorInfo": {
                    "$ref": "#/$defs/ErrorInfo"
                },
                "additionalParameters": {
                    "$ref": "#/$defs/AdditionalParameterMap"
                }
            }
        },
        "ErrorInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/Code"
                },
                "message": {
                    "$ref": "#/$defs/OTAUpdateErrorMessage"
                }
            }
        },
        "Code": {
            "type": "string"
        },
        "OTAUpdateErrorMessage": {
            "type": "string"
        },
        "GetOTAUpdateRequest": {
            "type": "object",
            "properties": {
                "otaUpdateId": {
                    "$ref": "#/$defs/OTAUpdateId"
                }
            }
        },
        "GetPackageResponse": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "packageArn": {
                    "$ref": "#/$defs/PackageArn"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "defaultVersionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                }
            }
        },
        "GetPackageRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                }
            }
        },
        "GetPackageConfigurationResponse": {
            "type": "object",
            "properties": {
                "versionUpdateByJobsConfig": {
                    "$ref": "#/$defs/VersionUpdateByJobsConfig"
                }
            }
        },
        "VersionUpdateByJobsConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "$ref": "#/$defs/EnabledBoolean"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "EnabledBoolean": {
            "type": "boolean"
        },
        "GetPackageConfigurationRequest": {
            "type": "object",
            "properties": {}
        },
        "GetPackageVersionResponse": {
            "type": "object",
            "properties": {
                "packageVersionArn": {
                    "$ref": "#/$defs/PackageVersionArn"
                },
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "attributes": {
                    "$ref": "#/$defs/ResourceAttributes"
                },
                "artifact": {
                    "$ref": "#/$defs/PackageVersionArtifact"
                },
                "status": {
                    "$ref": "#/$defs/PackageVersionStatus"
                },
                "errorReason": {
                    "$ref": "#/$defs/PackageVersionErrorReason"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                },
                "sbom": {
                    "$ref": "#/$defs/Sbom"
                },
                "sbomValidationStatus": {
                    "$ref": "#/$defs/SbomValidationStatus"
                },
                "recipe": {
                    "$ref": "#/$defs/PackageVersionRecipe"
                }
            }
        },
        "GetPackageVersionRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                }
            }
        },
        "GetPercentilesResponse": {
            "type": "object",
            "properties": {
                "percentiles": {
                    "$ref": "#/$defs/Percentiles"
                }
            }
        },
        "Percentiles": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PercentPair"
            }
        },
        "PercentPair": {
            "type": "object",
            "properties": {
                "percent": {
                    "$ref": "#/$defs/Percent"
                },
                "value": {
                    "$ref": "#/$defs/PercentValue"
                }
            }
        },
        "Percent": {
            "type": "number",
            "format": "double"
        },
        "PercentValue": {
            "type": "number",
            "format": "double"
        },
        "GetPercentilesRequest": {
            "type": "object",
            "properties": {
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "aggregationField": {
                    "$ref": "#/$defs/AggregationField"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                },
                "percents": {
                    "$ref": "#/$defs/PercentList"
                }
            }
        },
        "PercentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Percent"
            }
        },
        "GetPolicyResponse": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyArn": {
                    "$ref": "#/$defs/PolicyArn"
                },
                "policyDocument": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "defaultVersionId": {
                    "$ref": "#/$defs/PolicyVersionId"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/DateType"
                },
                "generationId": {
                    "$ref": "#/$defs/GenerationId"
                }
            }
        },
        "GetPolicyRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                }
            }
        },
        "GetPolicyVersionResponse": {
            "type": "object",
            "properties": {
                "policyArn": {
                    "$ref": "#/$defs/PolicyArn"
                },
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyDocument": {
                    "$ref": "#/$defs/PolicyDocument"
                },
                "policyVersionId": {
                    "$ref": "#/$defs/PolicyVersionId"
                },
                "isDefaultVersion": {
                    "$ref": "#/$defs/IsDefaultVersion"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/DateType"
                },
                "generationId": {
                    "$ref": "#/$defs/GenerationId"
                }
            }
        },
        "GetPolicyVersionRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyVersionId": {
                    "$ref": "#/$defs/PolicyVersionId"
                }
            }
        },
        "GetRegistrationCodeResponse": {
            "type": "object",
            "properties": {
                "registrationCode": {
                    "$ref": "#/$defs/RegistrationCode"
                }
            }
        },
        "RegistrationCode": {
            "type": "string"
        },
        "GetRegistrationCodeRequest": {
            "type": "object",
            "properties": {}
        },
        "GetStatisticsResponse": {
            "type": "object",
            "properties": {
                "statistics": {
                    "$ref": "#/$defs/Statistics"
                }
            }
        },
        "Statistics": {
            "type": "object",
            "properties": {
                "count": {
                    "$ref": "#/$defs/Count"
                },
                "average": {
                    "$ref": "#/$defs/Average"
                },
                "sum": {
                    "$ref": "#/$defs/Sum"
                },
                "minimum": {
                    "$ref": "#/$defs/Minimum"
                },
                "maximum": {
                    "$ref": "#/$defs/Maximum"
                },
                "sumOfSquares": {
                    "$ref": "#/$defs/SumOfSquares"
                },
                "variance": {
                    "$ref": "#/$defs/Variance"
                },
                "stdDeviation": {
                    "$ref": "#/$defs/StdDeviation"
                }
            }
        },
        "Average": {
            "type": "number",
            "format": "double"
        },
        "Sum": {
            "type": "number",
            "format": "double"
        },
        "Minimum": {
            "type": "number",
            "format": "double"
        },
        "Maximum": {
            "type": "number",
            "format": "double"
        },
        "SumOfSquares": {
            "type": "number",
            "format": "double"
        },
        "Variance": {
            "type": "number",
            "format": "double"
        },
        "StdDeviation": {
            "type": "number",
            "format": "double"
        },
        "GetStatisticsRequest": {
            "type": "object",
            "properties": {
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "aggregationField": {
                    "$ref": "#/$defs/AggregationField"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                }
            }
        },
        "GetTopicRuleResponse": {
            "type": "object",
            "properties": {
                "ruleArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "rule": {
                    "$ref": "#/$defs/TopicRule"
                }
            }
        },
        "RuleArn": {
            "type": "string"
        },
        "TopicRule": {
            "type": "object",
            "properties": {
                "ruleName": {
                    "$ref": "#/$defs/RuleName"
                },
                "sql": {
                    "$ref": "#/$defs/SQL"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "createdAt": {
                    "$ref": "#/$defs/CreatedAtDate"
                },
                "actions": {
                    "$ref": "#/$defs/ActionList"
                },
                "ruleDisabled": {
                    "$ref": "#/$defs/IsDisabled"
                },
                "awsIotSqlVersion": {
                    "$ref": "#/$defs/AwsIotSqlVersion"
                },
                "errorAction": {
                    "$ref": "#/$defs/Action"
                }
            }
        },
        "GetTopicRuleRequest": {
            "type": "object",
            "properties": {
                "ruleName": {
                    "$ref": "#/$defs/RuleName"
                }
            }
        },
        "GetTopicRuleDestinationResponse": {
            "type": "object",
            "properties": {
                "topicRuleDestination": {
                    "$ref": "#/$defs/TopicRuleDestination"
                }
            }
        },
        "GetTopicRuleDestinationRequest": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/AwsArn"
                }
            }
        },
        "GetV2LoggingOptionsResponse": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "defaultLogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "disableAllLogs": {
                    "$ref": "#/$defs/DisableAllLogs"
                }
            }
        },
        "DisableAllLogs": {
            "type": "boolean"
        },
        "GetV2LoggingOptionsRequest": {
            "type": "object",
            "properties": {}
        },
        "ListActiveViolationsResponse": {
            "type": "object",
            "properties": {
                "activeViolations": {
                    "$ref": "#/$defs/ActiveViolations"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ActiveViolations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ActiveViolation"
            }
        },
        "ActiveViolation": {
            "type": "object",
            "properties": {
                "violationId": {
                    "$ref": "#/$defs/ViolationId"
                },
                "thingName": {
                    "$ref": "#/$defs/DeviceDefenderThingName"
                },
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "behavior": {
                    "$ref": "#/$defs/Behavior"
                },
                "lastViolationValue": {
                    "$ref": "#/$defs/MetricValue"
                },
                "violationEventAdditionalInfo": {
                    "$ref": "#/$defs/ViolationEventAdditionalInfo"
                },
                "verificationState": {
                    "$ref": "#/$defs/VerificationState"
                },
                "verificationStateDescription": {
                    "$ref": "#/$defs/VerificationStateDescription"
                },
                "lastViolationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "violationStartTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DeviceDefenderThingName": {
            "type": "string"
        },
        "ViolationEventAdditionalInfo": {
            "type": "object",
            "properties": {
                "confidenceLevel": {
                    "$ref": "#/$defs/ConfidenceLevel"
                }
            }
        },
        "VerificationState": {
            "enum": [
                "FALSE_POSITIVE",
                "BENIGN_POSITIVE",
                "TRUE_POSITIVE",
                "UNKNOWN"
            ]
        },
        "VerificationStateDescription": {
            "type": "string"
        },
        "ListActiveViolationsRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/DeviceDefenderThingName"
                },
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "behaviorCriteriaType": {
                    "$ref": "#/$defs/BehaviorCriteriaType"
                },
                "listSuppressedAlerts": {
                    "$ref": "#/$defs/ListSuppressedAlerts"
                },
                "verificationState": {
                    "$ref": "#/$defs/VerificationState"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "BehaviorCriteriaType": {
            "enum": [
                "STATIC",
                "STATISTICAL",
                "MACHINE_LEARNING"
            ]
        },
        "ListSuppressedAlerts": {
            "type": "boolean"
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListAttachedPoliciesResponse": {
            "type": "object",
            "properties": {
                "policies": {
                    "$ref": "#/$defs/Policies"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "Policies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Policy"
            }
        },
        "Policy": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyArn": {
                    "$ref": "#/$defs/PolicyArn"
                }
            }
        },
        "Marker": {
            "type": "string"
        },
        "ListAttachedPoliciesRequest": {
            "type": "object",
            "properties": {
                "target": {
                    "$ref": "#/$defs/PolicyTarget"
                },
                "recursive": {
                    "$ref": "#/$defs/Recursive"
                },
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "Recursive": {
            "type": "boolean"
        },
        "PageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ListAuditFindingsResponse": {
            "type": "object",
            "properties": {
                "findings": {
                    "$ref": "#/$defs/AuditFindings"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AuditFindings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuditFinding"
            }
        },
        "ListAuditFindingsRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/AuditTaskId"
                },
                "checkName": {
                    "$ref": "#/$defs/AuditCheckName"
                },
                "resourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "listSuppressedFindings": {
                    "$ref": "#/$defs/ListSuppressedFindings"
                }
            }
        },
        "ListSuppressedFindings": {
            "type": "boolean"
        },
        "ListAuditMitigationActionsExecutionsResponse": {
            "type": "object",
            "properties": {
                "actionsExecutions": {
                    "$ref": "#/$defs/AuditMitigationActionExecutionMetadataList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AuditMitigationActionExecutionMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuditMitigationActionExecutionMetadata"
            }
        },
        "AuditMitigationActionExecutionMetadata": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                },
                "findingId": {
                    "$ref": "#/$defs/FindingId"
                },
                "actionName": {
                    "$ref": "#/$defs/MitigationActionName"
                },
                "actionId": {
                    "$ref": "#/$defs/MitigationActionId"
                },
                "status": {
                    "$ref": "#/$defs/AuditMitigationActionsExecutionStatus"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "errorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "AuditMitigationActionsExecutionStatus": {
            "enum": [
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "CANCELED",
                "SKIPPED",
                "PENDING"
            ]
        },
        "ListAuditMitigationActionsExecutionsRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                },
                "actionStatus": {
                    "$ref": "#/$defs/AuditMitigationActionsExecutionStatus"
                },
                "findingId": {
                    "$ref": "#/$defs/FindingId"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListAuditMitigationActionsTasksResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "$ref": "#/$defs/AuditMitigationActionsTaskMetadataList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AuditMitigationActionsTaskMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuditMitigationActionsTaskMetadata"
            }
        },
        "AuditMitigationActionsTaskMetadata": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "taskStatus": {
                    "$ref": "#/$defs/AuditMitigationActionsTaskStatus"
                }
            }
        },
        "ListAuditMitigationActionsTasksRequest": {
            "type": "object",
            "properties": {
                "auditTaskId": {
                    "$ref": "#/$defs/AuditTaskId"
                },
                "findingId": {
                    "$ref": "#/$defs/FindingId"
                },
                "taskStatus": {
                    "$ref": "#/$defs/AuditMitigationActionsTaskStatus"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListAuditSuppressionsResponse": {
            "type": "object",
            "properties": {
                "suppressions": {
                    "$ref": "#/$defs/AuditSuppressionList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AuditSuppressionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuditSuppression"
            }
        },
        "AuditSuppression": {
            "type": "object",
            "properties": {
                "checkName": {
                    "$ref": "#/$defs/AuditCheckName"
                },
                "resourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "expirationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "suppressIndefinitely": {
                    "$ref": "#/$defs/SuppressIndefinitely"
                },
                "description": {
                    "$ref": "#/$defs/AuditDescription"
                }
            }
        },
        "ListAuditSuppressionsRequest": {
            "type": "object",
            "properties": {
                "checkName": {
                    "$ref": "#/$defs/AuditCheckName"
                },
                "resourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "AscendingOrder": {
            "type": "boolean"
        },
        "ListAuditTasksResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "$ref": "#/$defs/AuditTaskMetadataList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AuditTaskMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuditTaskMetadata"
            }
        },
        "AuditTaskMetadata": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/AuditTaskId"
                },
                "taskStatus": {
                    "$ref": "#/$defs/AuditTaskStatus"
                },
                "taskType": {
                    "$ref": "#/$defs/AuditTaskType"
                }
            }
        },
        "ListAuditTasksRequest": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "taskType": {
                    "$ref": "#/$defs/AuditTaskType"
                },
                "taskStatus": {
                    "$ref": "#/$defs/AuditTaskStatus"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListAuthorizersResponse": {
            "type": "object",
            "properties": {
                "authorizers": {
                    "$ref": "#/$defs/Authorizers"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "Authorizers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuthorizerSummary"
            }
        },
        "AuthorizerSummary": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                },
                "authorizerArn": {
                    "$ref": "#/$defs/AuthorizerArn"
                }
            }
        },
        "ListAuthorizersRequest": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                },
                "status": {
                    "$ref": "#/$defs/AuthorizerStatus"
                }
            }
        },
        "ListBillingGroupsResponse": {
            "type": "object",
            "properties": {
                "billingGroups": {
                    "$ref": "#/$defs/BillingGroupNameAndArnList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "BillingGroupNameAndArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupNameAndArn"
            }
        },
        "ListBillingGroupsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                },
                "namePrefixFilter": {
                    "$ref": "#/$defs/BillingGroupName"
                }
            }
        },
        "RegistryMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListCACertificatesResponse": {
            "type": "object",
            "properties": {
                "certificates": {
                    "$ref": "#/$defs/CACertificates"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "CACertificates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CACertificate"
            }
        },
        "CACertificate": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "status": {
                    "$ref": "#/$defs/CACertificateStatus"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "ListCACertificatesRequest": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                },
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                }
            }
        },
        "ListCertificateProvidersResponse": {
            "type": "object",
            "properties": {
                "certificateProviders": {
                    "$ref": "#/$defs/CertificateProviders"
                },
                "nextToken": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "CertificateProviders": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CertificateProviderSummary"
            }
        },
        "CertificateProviderSummary": {
            "type": "object",
            "properties": {
                "certificateProviderName": {
                    "$ref": "#/$defs/CertificateProviderName"
                },
                "certificateProviderArn": {
                    "$ref": "#/$defs/CertificateProviderArn"
                }
            }
        },
        "ListCertificateProvidersRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/Marker"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                }
            }
        },
        "ListCertificatesResponse": {
            "type": "object",
            "properties": {
                "certificates": {
                    "$ref": "#/$defs/Certificates"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "Certificates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Certificate"
            }
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "status": {
                    "$ref": "#/$defs/CertificateStatus"
                },
                "certificateMode": {
                    "$ref": "#/$defs/CertificateMode"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "ListCertificatesRequest": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                }
            }
        },
        "ListCertificatesByCAResponse": {
            "type": "object",
            "properties": {
                "certificates": {
                    "$ref": "#/$defs/Certificates"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ListCertificatesByCARequest": {
            "type": "object",
            "properties": {
                "caCertificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                }
            }
        },
        "ListCustomMetricsResponse": {
            "type": "object",
            "properties": {
                "metricNames": {
                    "$ref": "#/$defs/MetricNames"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MetricNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricName"
            }
        },
        "ListCustomMetricsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListDetectMitigationActionsExecutionsResponse": {
            "type": "object",
            "properties": {
                "actionsExecutions": {
                    "$ref": "#/$defs/DetectMitigationActionExecutionList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DetectMitigationActionExecutionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectMitigationActionExecution"
            }
        },
        "DetectMitigationActionExecution": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                },
                "violationId": {
                    "$ref": "#/$defs/ViolationId"
                },
                "actionName": {
                    "$ref": "#/$defs/MitigationActionName"
                },
                "thingName": {
                    "$ref": "#/$defs/DeviceDefenderThingName"
                },
                "executionStartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "executionEndDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/DetectMitigationActionExecutionStatus"
                },
                "errorCode": {
                    "$ref": "#/$defs/DetectMitigationActionExecutionErrorCode"
                },
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "DetectMitigationActionExecutionStatus": {
            "enum": [
                "IN_PROGRESS",
                "SUCCESSFUL",
                "FAILED",
                "SKIPPED"
            ]
        },
        "DetectMitigationActionExecutionErrorCode": {
            "type": "string"
        },
        "ListDetectMitigationActionsExecutionsRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                },
                "violationId": {
                    "$ref": "#/$defs/ViolationId"
                },
                "thingName": {
                    "$ref": "#/$defs/DeviceDefenderThingName"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListDetectMitigationActionsTasksResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "$ref": "#/$defs/DetectMitigationActionsTaskSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DetectMitigationActionsTaskSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectMitigationActionsTaskSummary"
            }
        },
        "ListDetectMitigationActionsTasksRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListDimensionsResponse": {
            "type": "object",
            "properties": {
                "dimensionNames": {
                    "$ref": "#/$defs/DimensionNames"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DimensionNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionName"
            }
        },
        "ListDimensionsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListDomainConfigurationsResponse": {
            "type": "object",
            "properties": {
                "domainConfigurations": {
                    "$ref": "#/$defs/DomainConfigurations"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "DomainConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainConfigurationSummary"
            }
        },
        "DomainConfigurationSummary": {
            "type": "object",
            "properties": {
                "domainConfigurationName": {
                    "$ref": "#/$defs/ReservedDomainConfigurationName"
                },
                "domainConfigurationArn": {
                    "$ref": "#/$defs/DomainConfigurationArn"
                },
                "serviceType": {
                    "$ref": "#/$defs/ServiceType"
                }
            }
        },
        "ListDomainConfigurationsRequest": {
            "type": "object",
            "properties": {
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "serviceType": {
                    "$ref": "#/$defs/ServiceType"
                }
            }
        },
        "ListFleetMetricsResponse": {
            "type": "object",
            "properties": {
                "fleetMetrics": {
                    "$ref": "#/$defs/FleetMetricNameAndArnList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "FleetMetricNameAndArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FleetMetricNameAndArn"
            }
        },
        "FleetMetricNameAndArn": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/FleetMetricName"
                },
                "metricArn": {
                    "$ref": "#/$defs/FleetMetricArn"
                }
            }
        },
        "ListFleetMetricsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListIndicesResponse": {
            "type": "object",
            "properties": {
                "indexNames": {
                    "$ref": "#/$defs/IndexNamesList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IndexNamesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IndexName"
            }
        },
        "ListIndicesRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/QueryMaxResults"
                }
            }
        },
        "QueryMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListJobExecutionsForJobResponse": {
            "type": "object",
            "properties": {
                "executionSummaries": {
                    "$ref": "#/$defs/JobExecutionSummaryForJobList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobExecutionSummaryForJobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobExecutionSummaryForJob"
            }
        },
        "JobExecutionSummaryForJob": {
            "type": "object",
            "properties": {
                "thingArn": {
                    "$ref": "#/$defs/ThingArn"
                },
                "jobExecutionSummary": {
                    "$ref": "#/$defs/JobExecutionSummary"
                }
            }
        },
        "JobExecutionSummary": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/JobExecutionStatus"
                },
                "queuedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "startedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "lastUpdatedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "executionNumber": {
                    "$ref": "#/$defs/ExecutionNumber"
                },
                "retryAttempt": {
                    "$ref": "#/$defs/RetryAttempt"
                }
            }
        },
        "RetryAttempt": {
            "type": "integer",
            "format": "int32"
        },
        "ListJobExecutionsForJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "status": {
                    "$ref": "#/$defs/JobExecutionStatus"
                },
                "maxResults": {
                    "$ref": "#/$defs/LaserMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "LaserMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListJobExecutionsForThingResponse": {
            "type": "object",
            "properties": {
                "executionSummaries": {
                    "$ref": "#/$defs/JobExecutionSummaryForThingList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobExecutionSummaryForThingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobExecutionSummaryForThing"
            }
        },
        "JobExecutionSummaryForThing": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "jobExecutionSummary": {
                    "$ref": "#/$defs/JobExecutionSummary"
                }
            }
        },
        "ListJobExecutionsForThingRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "status": {
                    "$ref": "#/$defs/JobExecutionStatus"
                },
                "namespaceId": {
                    "$ref": "#/$defs/NamespaceId"
                },
                "maxResults": {
                    "$ref": "#/$defs/LaserMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "ListJobsResponse": {
            "type": "object",
            "properties": {
                "jobs": {
                    "$ref": "#/$defs/JobSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobSummary"
            }
        },
        "JobSummary": {
            "type": "object",
            "properties": {
                "jobArn": {
                    "$ref": "#/$defs/JobArn"
                },
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "thingGroupId": {
                    "$ref": "#/$defs/ThingGroupId"
                },
                "targetSelection": {
                    "$ref": "#/$defs/TargetSelection"
                },
                "status": {
                    "$ref": "#/$defs/JobStatus"
                },
                "createdAt": {
                    "$ref": "#/$defs/DateType"
                },
                "lastUpdatedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "completedAt": {
                    "$ref": "#/$defs/DateType"
                },
                "isConcurrent": {
                    "$ref": "#/$defs/BooleanWrapperObject"
                }
            }
        },
        "ListJobsRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/JobStatus"
                },
                "targetSelection": {
                    "$ref": "#/$defs/TargetSelection"
                },
                "maxResults": {
                    "$ref": "#/$defs/LaserMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupId": {
                    "$ref": "#/$defs/ThingGroupId"
                },
                "namespaceId": {
                    "$ref": "#/$defs/NamespaceId"
                }
            }
        },
        "ListJobTemplatesResponse": {
            "type": "object",
            "properties": {
                "jobTemplates": {
                    "$ref": "#/$defs/JobTemplateSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "JobTemplateSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobTemplateSummary"
            }
        },
        "JobTemplateSummary": {
            "type": "object",
            "properties": {
                "jobTemplateArn": {
                    "$ref": "#/$defs/JobTemplateArn"
                },
                "jobTemplateId": {
                    "$ref": "#/$defs/JobTemplateId"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                },
                "createdAt": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "ListJobTemplatesRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/LaserMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListManagedJobTemplatesResponse": {
            "type": "object",
            "properties": {
                "managedJobTemplates": {
                    "$ref": "#/$defs/ManagedJobTemplatesSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ManagedJobTemplatesSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ManagedJobTemplateSummary"
            }
        },
        "ManagedJobTemplateSummary": {
            "type": "object",
            "properties": {
                "templateArn": {
                    "$ref": "#/$defs/JobTemplateArn"
                },
                "templateName": {
                    "$ref": "#/$defs/ManagedJobTemplateName"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                },
                "environments": {
                    "$ref": "#/$defs/Environments"
                },
                "templateVersion": {
                    "$ref": "#/$defs/ManagedTemplateVersion"
                }
            }
        },
        "ListManagedJobTemplatesRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/ManagedJobTemplateName"
                },
                "maxResults": {
                    "$ref": "#/$defs/LaserMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListMetricValuesResponse": {
            "type": "object",
            "properties": {
                "metricDatumList": {
                    "$ref": "#/$defs/MetricDatumList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MetricDatumList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricDatum"
            }
        },
        "MetricDatum": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "value": {
                    "$ref": "#/$defs/MetricValue"
                }
            }
        },
        "ListMetricValuesRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/DeviceDefenderThingName"
                },
                "metricName": {
                    "$ref": "#/$defs/BehaviorMetric"
                },
                "dimensionName": {
                    "$ref": "#/$defs/DimensionName"
                },
                "dimensionValueOperator": {
                    "$ref": "#/$defs/DimensionValueOperator"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListMitigationActionsResponse": {
            "type": "object",
            "properties": {
                "actionIdentifiers": {
                    "$ref": "#/$defs/MitigationActionIdentifierList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MitigationActionIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MitigationActionIdentifier"
            }
        },
        "MitigationActionIdentifier": {
            "type": "object",
            "properties": {
                "actionName": {
                    "$ref": "#/$defs/MitigationActionName"
                },
                "actionArn": {
                    "$ref": "#/$defs/MitigationActionArn"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListMitigationActionsRequest": {
            "type": "object",
            "properties": {
                "actionType": {
                    "$ref": "#/$defs/MitigationActionType"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListOTAUpdatesResponse": {
            "type": "object",
            "properties": {
                "otaUpdates": {
                    "$ref": "#/$defs/OTAUpdatesSummary"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "OTAUpdatesSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OTAUpdateSummary"
            }
        },
        "OTAUpdateSummary": {
            "type": "object",
            "properties": {
                "otaUpdateId": {
                    "$ref": "#/$defs/OTAUpdateId"
                },
                "otaUpdateArn": {
                    "$ref": "#/$defs/OTAUpdateArn"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "ListOTAUpdatesRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "otaUpdateStatus": {
                    "$ref": "#/$defs/OTAUpdateStatus"
                }
            }
        },
        "ListOutgoingCertificatesResponse": {
            "type": "object",
            "properties": {
                "outgoingCertificates": {
                    "$ref": "#/$defs/OutgoingCertificates"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "OutgoingCertificates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OutgoingCertificate"
            }
        },
        "OutgoingCertificate": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "transferredTo": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "transferDate": {
                    "$ref": "#/$defs/DateType"
                },
                "transferMessage": {
                    "$ref": "#/$defs/Message"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "ListOutgoingCertificatesRequest": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                }
            }
        },
        "ListPackagesResponse": {
            "type": "object",
            "properties": {
                "packageSummaries": {
                    "$ref": "#/$defs/PackageSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PackageSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageSummary"
            }
        },
        "PackageSummary": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "defaultVersionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                }
            }
        },
        "ListPackagesRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/PackageCatalogMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PackageCatalogMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListPackageVersionsResponse": {
            "type": "object",
            "properties": {
                "packageVersionSummaries": {
                    "$ref": "#/$defs/PackageVersionSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PackageVersionSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageVersionSummary"
            }
        },
        "PackageVersionSummary": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "status": {
                    "$ref": "#/$defs/PackageVersionStatus"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                }
            }
        },
        "ListPackageVersionsRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "status": {
                    "$ref": "#/$defs/PackageVersionStatus"
                },
                "maxResults": {
                    "$ref": "#/$defs/PackageCatalogMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListPoliciesResponse": {
            "type": "object",
            "properties": {
                "policies": {
                    "$ref": "#/$defs/Policies"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ListPoliciesRequest": {
            "type": "object",
            "properties": {
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                }
            }
        },
        "ListPolicyPrincipalsResponse": {
            "type": "object",
            "properties": {
                "principals": {
                    "$ref": "#/$defs/Principals"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "Principals": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrincipalArn"
            }
        },
        "PrincipalArn": {
            "type": "string"
        },
        "ListPolicyPrincipalsRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                }
            }
        },
        "ListPolicyVersionsResponse": {
            "type": "object",
            "properties": {
                "policyVersions": {
                    "$ref": "#/$defs/PolicyVersions"
                }
            }
        },
        "PolicyVersions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PolicyVersion"
            }
        },
        "PolicyVersion": {
            "type": "object",
            "properties": {
                "versionId": {
                    "$ref": "#/$defs/PolicyVersionId"
                },
                "isDefaultVersion": {
                    "$ref": "#/$defs/IsDefaultVersion"
                },
                "createDate": {
                    "$ref": "#/$defs/DateType"
                }
            }
        },
        "ListPolicyVersionsRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                }
            }
        },
        "ListPrincipalPoliciesResponse": {
            "type": "object",
            "properties": {
                "policies": {
                    "$ref": "#/$defs/Policies"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "ListPrincipalPoliciesRequest": {
            "type": "object",
            "properties": {
                "principal": {
                    "$ref": "#/$defs/Principal"
                },
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                }
            }
        },
        "ListPrincipalThingsResponse": {
            "type": "object",
            "properties": {
                "things": {
                    "$ref": "#/$defs/ThingNameList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ThingNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThingName"
            }
        },
        "ListPrincipalThingsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                },
                "principal": {
                    "$ref": "#/$defs/Principal"
                }
            }
        },
        "ListProvisioningTemplatesResponse": {
            "type": "object",
            "properties": {
                "templates": {
                    "$ref": "#/$defs/ProvisioningTemplateListing"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ProvisioningTemplateListing": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProvisioningTemplateSummary"
            }
        },
        "ProvisioningTemplateSummary": {
            "type": "object",
            "properties": {
                "templateArn": {
                    "$ref": "#/$defs/TemplateArn"
                },
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                },
                "description": {
                    "$ref": "#/$defs/TemplateDescription"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/DateType"
                },
                "enabled": {
                    "$ref": "#/$defs/Enabled2"
                },
                "type": {
                    "$ref": "#/$defs/TemplateType"
                }
            }
        },
        "ListProvisioningTemplatesRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListProvisioningTemplateVersionsResponse": {
            "type": "object",
            "properties": {
                "versions": {
                    "$ref": "#/$defs/ProvisioningTemplateVersionListing"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ProvisioningTemplateVersionListing": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProvisioningTemplateVersionSummary"
            }
        },
        "ProvisioningTemplateVersionSummary": {
            "type": "object",
            "properties": {
                "versionId": {
                    "$ref": "#/$defs/TemplateVersionId"
                },
                "creationDate": {
                    "$ref": "#/$defs/DateType"
                },
                "isDefaultVersion": {
                    "$ref": "#/$defs/IsDefaultVersion"
                }
            }
        },
        "ListProvisioningTemplateVersionsRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListRelatedResourcesForAuditFindingResponse": {
            "type": "object",
            "properties": {
                "relatedResources": {
                    "$ref": "#/$defs/RelatedResources"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListRelatedResourcesForAuditFindingRequest": {
            "type": "object",
            "properties": {
                "findingId": {
                    "$ref": "#/$defs/FindingId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListRoleAliasesResponse": {
            "type": "object",
            "properties": {
                "roleAliases": {
                    "$ref": "#/$defs/RoleAliases"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "RoleAliases": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RoleAlias"
            }
        },
        "ListRoleAliasesRequest": {
            "type": "object",
            "properties": {
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                },
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                }
            }
        },
        "ListSbomValidationResultsResponse": {
            "type": "object",
            "properties": {
                "validationResultSummaries": {
                    "$ref": "#/$defs/SbomValidationResultSummaryList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SbomValidationResultSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SbomValidationResultSummary"
            }
        },
        "SbomValidationResultSummary": {
            "type": "object",
            "properties": {
                "fileName": {
                    "$ref": "#/$defs/FileName"
                },
                "validationResult": {
                    "$ref": "#/$defs/SbomValidationResult"
                },
                "errorCode": {
                    "$ref": "#/$defs/SbomValidationErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/SbomValidationErrorMessage"
                }
            }
        },
        "SbomValidationResult": {
            "enum": [
                "FAILED",
                "SUCCEEDED"
            ]
        },
        "SbomValidationErrorCode": {
            "enum": [
                "INCOMPATIBLE_FORMAT",
                "FILE_SIZE_LIMIT_EXCEEDED"
            ]
        },
        "SbomValidationErrorMessage": {
            "type": "string"
        },
        "ListSbomValidationResultsRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "validationResult": {
                    "$ref": "#/$defs/SbomValidationResult"
                },
                "maxResults": {
                    "$ref": "#/$defs/PackageCatalogMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListScheduledAuditsResponse": {
            "type": "object",
            "properties": {
                "scheduledAudits": {
                    "$ref": "#/$defs/ScheduledAuditMetadataList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ScheduledAuditMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledAuditMetadata"
            }
        },
        "ScheduledAuditMetadata": {
            "type": "object",
            "properties": {
                "scheduledAuditName": {
                    "$ref": "#/$defs/ScheduledAuditName"
                },
                "scheduledAuditArn": {
                    "$ref": "#/$defs/ScheduledAuditArn"
                },
                "frequency": {
                    "$ref": "#/$defs/AuditFrequency"
                },
                "dayOfMonth": {
                    "$ref": "#/$defs/DayOfMonth"
                },
                "dayOfWeek": {
                    "$ref": "#/$defs/DayOfWeek"
                }
            }
        },
        "ListScheduledAuditsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListSecurityProfilesResponse": {
            "type": "object",
            "properties": {
                "securityProfileIdentifiers": {
                    "$ref": "#/$defs/SecurityProfileIdentifiers"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SecurityProfileIdentifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityProfileIdentifier"
            }
        },
        "SecurityProfileIdentifier": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "arn": {
                    "$ref": "#/$defs/SecurityProfileArn"
                }
            }
        },
        "ListSecurityProfilesRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "dimensionName": {
                    "$ref": "#/$defs/DimensionName"
                },
                "metricName": {
                    "$ref": "#/$defs/MetricName"
                }
            }
        },
        "ListSecurityProfilesForTargetResponse": {
            "type": "object",
            "properties": {
                "securityProfileTargetMappings": {
                    "$ref": "#/$defs/SecurityProfileTargetMappings"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SecurityProfileTargetMappings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityProfileTargetMapping"
            }
        },
        "SecurityProfileTargetMapping": {
            "type": "object",
            "properties": {
                "securityProfileIdentifier": {
                    "$ref": "#/$defs/SecurityProfileIdentifier"
                },
                "target": {
                    "$ref": "#/$defs/SecurityProfileTarget"
                }
            }
        },
        "SecurityProfileTarget": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/SecurityProfileTargetArn"
                }
            }
        },
        "ListSecurityProfilesForTargetRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "recursive": {
                    "$ref": "#/$defs/Recursive"
                },
                "securityProfileTargetArn": {
                    "$ref": "#/$defs/SecurityProfileTargetArn"
                }
            }
        },
        "ListStreamsResponse": {
            "type": "object",
            "properties": {
                "streams": {
                    "$ref": "#/$defs/StreamsSummary"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "StreamsSummary": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StreamSummary"
            }
        },
        "StreamSummary": {
            "type": "object",
            "properties": {
                "streamId": {
                    "$ref": "#/$defs/StreamId"
                },
                "streamArn": {
                    "$ref": "#/$defs/StreamArn"
                },
                "streamVersion": {
                    "$ref": "#/$defs/StreamVersion"
                },
                "description": {
                    "$ref": "#/$defs/StreamDescription"
                }
            }
        },
        "ListStreamsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ascendingOrder": {
                    "$ref": "#/$defs/AscendingOrder"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "ListTargetsForPolicyResponse": {
            "type": "object",
            "properties": {
                "targets": {
                    "$ref": "#/$defs/PolicyTargets"
                },
                "nextMarker": {
                    "$ref": "#/$defs/Marker"
                }
            }
        },
        "PolicyTargets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PolicyTarget"
            }
        },
        "ListTargetsForPolicyRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "marker": {
                    "$ref": "#/$defs/Marker"
                },
                "pageSize": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "ListTargetsForSecurityProfileResponse": {
            "type": "object",
            "properties": {
                "securityProfileTargets": {
                    "$ref": "#/$defs/SecurityProfileTargets"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SecurityProfileTargets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityProfileTarget"
            }
        },
        "ListTargetsForSecurityProfileRequest": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListThingGroupsResponse": {
            "type": "object",
            "properties": {
                "thingGroups": {
                    "$ref": "#/$defs/ThingGroupNameAndArnList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListThingGroupsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                },
                "parentGroup": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "namePrefixFilter": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "recursive": {
                    "$ref": "#/$defs/RecursiveWithoutDefault"
                }
            }
        },
        "RecursiveWithoutDefault": {
            "type": "boolean"
        },
        "ListThingGroupsForThingResponse": {
            "type": "object",
            "properties": {
                "thingGroups": {
                    "$ref": "#/$defs/ThingGroupNameAndArnList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListThingGroupsForThingRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                }
            }
        },
        "ListThingPrincipalsResponse": {
            "type": "object",
            "properties": {
                "principals": {
                    "$ref": "#/$defs/Principals"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListThingPrincipalsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                }
            }
        },
        "ListThingRegistrationTaskReportsResponse": {
            "type": "object",
            "properties": {
                "resourceLinks": {
                    "$ref": "#/$defs/S3FileUrlList"
                },
                "reportType": {
                    "$ref": "#/$defs/ReportType"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "S3FileUrlList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3FileUrl"
            }
        },
        "S3FileUrl": {
            "type": "string"
        },
        "ReportType": {
            "enum": [
                "ERRORS",
                "RESULTS"
            ]
        },
        "ListThingRegistrationTaskReportsRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/TaskId"
                },
                "reportType": {
                    "$ref": "#/$defs/ReportType"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                }
            }
        },
        "ListThingRegistrationTasksResponse": {
            "type": "object",
            "properties": {
                "taskIds": {
                    "$ref": "#/$defs/TaskIdList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TaskIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaskId"
            }
        },
        "ListThingRegistrationTasksRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "ListThingsResponse": {
            "type": "object",
            "properties": {
                "things": {
                    "$ref": "#/$defs/ThingAttributeList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ThingAttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThingAttribute"
            }
        },
        "ThingAttribute": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "thingArn": {
                    "$ref": "#/$defs/ThingArn"
                },
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "version": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "ListThingsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                },
                "attributeName": {
                    "$ref": "#/$defs/AttributeName"
                },
                "attributeValue": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "usePrefixAttributeValue": {
                    "$ref": "#/$defs/usePrefixAttributeValue"
                }
            }
        },
        "usePrefixAttributeValue": {
            "type": "boolean"
        },
        "ListThingsInBillingGroupResponse": {
            "type": "object",
            "properties": {
                "things": {
                    "$ref": "#/$defs/ThingNameList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListThingsInBillingGroupRequest": {
            "type": "object",
            "properties": {
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                }
            }
        },
        "ListThingsInThingGroupResponse": {
            "type": "object",
            "properties": {
                "things": {
                    "$ref": "#/$defs/ThingNameList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListThingsInThingGroupRequest": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "recursive": {
                    "$ref": "#/$defs/Recursive"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                }
            }
        },
        "ListThingTypesResponse": {
            "type": "object",
            "properties": {
                "thingTypes": {
                    "$ref": "#/$defs/ThingTypeList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ThingTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThingTypeDefinition"
            }
        },
        "ThingTypeDefinition": {
            "type": "object",
            "properties": {
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "thingTypeArn": {
                    "$ref": "#/$defs/ThingTypeArn"
                },
                "thingTypeProperties": {
                    "$ref": "#/$defs/ThingTypeProperties"
                },
                "thingTypeMetadata": {
                    "$ref": "#/$defs/ThingTypeMetadata"
                }
            }
        },
        "ListThingTypesRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/RegistryMaxResults"
                },
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                }
            }
        },
        "ListTopicRuleDestinationsResponse": {
            "type": "object",
            "properties": {
                "destinationSummaries": {
                    "$ref": "#/$defs/TopicRuleDestinationSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TopicRuleDestinationSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TopicRuleDestinationSummary"
            }
        },
        "TopicRuleDestinationSummary": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "status": {
                    "$ref": "#/$defs/TopicRuleDestinationStatus"
                },
                "createdAt": {
                    "$ref": "#/$defs/CreatedAtDate"
                },
                "lastUpdatedAt": {
                    "$ref": "#/$defs/LastUpdatedAtDate"
                },
                "statusReason": {
                    "$ref": "#/$defs/String"
                },
                "httpUrlSummary": {
                    "$ref": "#/$defs/HttpUrlDestinationSummary"
                },
                "vpcDestinationSummary": {
                    "$ref": "#/$defs/VpcDestinationSummary"
                }
            }
        },
        "HttpUrlDestinationSummary": {
            "type": "object",
            "properties": {
                "confirmationUrl": {
                    "$ref": "#/$defs/Url"
                }
            }
        },
        "VpcDestinationSummary": {
            "type": "object",
            "properties": {
                "subnetIds": {
                    "$ref": "#/$defs/SubnetIdList"
                },
                "securityGroups": {
                    "$ref": "#/$defs/SecurityGroupList"
                },
                "vpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                }
            }
        },
        "ListTopicRuleDestinationsRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/TopicRuleDestinationMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TopicRuleDestinationMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListTopicRulesResponse": {
            "type": "object",
            "properties": {
                "rules": {
                    "$ref": "#/$defs/TopicRuleList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TopicRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TopicRuleListItem"
            }
        },
        "TopicRuleListItem": {
            "type": "object",
            "properties": {
                "ruleArn": {
                    "$ref": "#/$defs/RuleArn"
                },
                "ruleName": {
                    "$ref": "#/$defs/RuleName"
                },
                "topicPattern": {
                    "$ref": "#/$defs/TopicPattern"
                },
                "createdAt": {
                    "$ref": "#/$defs/CreatedAtDate"
                },
                "ruleDisabled": {
                    "$ref": "#/$defs/IsDisabled"
                }
            }
        },
        "ListTopicRulesRequest": {
            "type": "object",
            "properties": {
                "topic": {
                    "$ref": "#/$defs/Topic"
                },
                "maxResults": {
                    "$ref": "#/$defs/TopicRuleMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ruleDisabled": {
                    "$ref": "#/$defs/IsDisabled"
                }
            }
        },
        "Topic": {
            "type": "string"
        },
        "TopicRuleMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListV2LoggingLevelsResponse": {
            "type": "object",
            "properties": {
                "logTargetConfigurations": {
                    "$ref": "#/$defs/LogTargetConfigurations"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "LogTargetConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LogTargetConfiguration"
            }
        },
        "LogTargetConfiguration": {
            "type": "object",
            "properties": {
                "logTarget": {
                    "$ref": "#/$defs/LogTarget"
                },
                "logLevel": {
                    "$ref": "#/$defs/LogLevel"
                }
            }
        },
        "LogTarget": {
            "type": "object",
            "properties": {
                "targetType": {
                    "$ref": "#/$defs/LogTargetType"
                },
                "targetName": {
                    "$ref": "#/$defs/LogTargetName"
                }
            }
        },
        "ListV2LoggingLevelsRequest": {
            "type": "object",
            "properties": {
                "targetType": {
                    "$ref": "#/$defs/LogTargetType"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/SkyfallMaxResults"
                }
            }
        },
        "SkyfallMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListViolationEventsResponse": {
            "type": "object",
            "properties": {
                "violationEvents": {
                    "$ref": "#/$defs/ViolationEvents"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ViolationEvents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ViolationEvent"
            }
        },
        "ViolationEvent": {
            "type": "object",
            "properties": {
                "violationId": {
                    "$ref": "#/$defs/ViolationId"
                },
                "thingName": {
                    "$ref": "#/$defs/DeviceDefenderThingName"
                },
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "behavior": {
                    "$ref": "#/$defs/Behavior"
                },
                "metricValue": {
                    "$ref": "#/$defs/MetricValue"
                },
                "violationEventAdditionalInfo": {
                    "$ref": "#/$defs/ViolationEventAdditionalInfo"
                },
                "violationEventType": {
                    "$ref": "#/$defs/ViolationEventType"
                },
                "verificationState": {
                    "$ref": "#/$defs/VerificationState"
                },
                "verificationStateDescription": {
                    "$ref": "#/$defs/VerificationStateDescription"
                },
                "violationEventTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ViolationEventType": {
            "enum": [
                "IN_ALARM",
                "ALARM_CLEARED",
                "ALARM_INVALIDATED"
            ]
        },
        "ListViolationEventsRequest": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "thingName": {
                    "$ref": "#/$defs/DeviceDefenderThingName"
                },
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "behaviorCriteriaType": {
                    "$ref": "#/$defs/BehaviorCriteriaType"
                },
                "listSuppressedAlerts": {
                    "$ref": "#/$defs/ListSuppressedAlerts"
                },
                "verificationState": {
                    "$ref": "#/$defs/VerificationState"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "PutVerificationStateOnViolationResponse": {
            "type": "object",
            "properties": {}
        },
        "PutVerificationStateOnViolationRequest": {
            "type": "object",
            "properties": {
                "violationId": {
                    "$ref": "#/$defs/ViolationId"
                },
                "verificationState": {
                    "$ref": "#/$defs/VerificationState"
                },
                "verificationStateDescription": {
                    "$ref": "#/$defs/VerificationStateDescription"
                }
            }
        },
        "RegisterCACertificateResponse": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                }
            }
        },
        "RegisterCACertificateRequest": {
            "type": "object",
            "properties": {
                "caCertificate": {
                    "$ref": "#/$defs/CertificatePem"
                },
                "verificationCertificate": {
                    "$ref": "#/$defs/CertificatePem"
                },
                "setAsActive": {
                    "$ref": "#/$defs/SetAsActive"
                },
                "allowAutoRegistration": {
                    "$ref": "#/$defs/AllowAutoRegistration"
                },
                "registrationConfig": {
                    "$ref": "#/$defs/RegistrationConfig"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "certificateMode": {
                    "$ref": "#/$defs/CertificateMode"
                }
            }
        },
        "AllowAutoRegistration": {
            "type": "boolean"
        },
        "RegisterCertificateResponse": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                }
            }
        },
        "RegisterCertificateRequest": {
            "type": "object",
            "properties": {
                "certificatePem": {
                    "$ref": "#/$defs/CertificatePem"
                },
                "caCertificatePem": {
                    "$ref": "#/$defs/CertificatePem"
                },
                "setAsActive": {
                    "$ref": "#/$defs/SetAsActiveFlag"
                },
                "status": {
                    "$ref": "#/$defs/CertificateStatus"
                }
            }
        },
        "SetAsActiveFlag": {
            "type": "boolean"
        },
        "RegisterCertificateWithoutCAResponse": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                }
            }
        },
        "RegisterCertificateWithoutCARequest": {
            "type": "object",
            "properties": {
                "certificatePem": {
                    "$ref": "#/$defs/CertificatePem"
                },
                "status": {
                    "$ref": "#/$defs/CertificateStatus"
                }
            }
        },
        "RegisterThingResponse": {
            "type": "object",
            "properties": {
                "certificatePem": {
                    "$ref": "#/$defs/CertificatePem"
                },
                "resourceArns": {
                    "$ref": "#/$defs/ResourceArns"
                }
            }
        },
        "ResourceArns": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ResourceArn"
            }
        },
        "RegisterThingRequest": {
            "type": "object",
            "properties": {
                "templateBody": {
                    "$ref": "#/$defs/TemplateBody"
                },
                "parameters": {
                    "$ref": "#/$defs/Parameters"
                }
            }
        },
        "Parameters": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Value"
            }
        },
        "RejectCertificateTransferRequest": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "rejectReason": {
                    "$ref": "#/$defs/Message"
                }
            }
        },
        "RemoveThingFromBillingGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "RemoveThingFromBillingGroupRequest": {
            "type": "object",
            "properties": {
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                },
                "billingGroupArn": {
                    "$ref": "#/$defs/BillingGroupArn"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingArn": {
                    "$ref": "#/$defs/ThingArn"
                }
            }
        },
        "RemoveThingFromThingGroupResponse": {
            "type": "object",
            "properties": {}
        },
        "RemoveThingFromThingGroupRequest": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupArn": {
                    "$ref": "#/$defs/ThingGroupArn"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingArn": {
                    "$ref": "#/$defs/ThingArn"
                }
            }
        },
        "ReplaceTopicRuleRequest": {
            "type": "object",
            "properties": {
                "ruleName": {
                    "$ref": "#/$defs/RuleName"
                },
                "topicRulePayload": {
                    "$ref": "#/$defs/TopicRulePayload"
                }
            }
        },
        "SearchIndexResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "things": {
                    "$ref": "#/$defs/ThingDocumentList"
                },
                "thingGroups": {
                    "$ref": "#/$defs/ThingGroupDocumentList"
                }
            }
        },
        "ThingDocumentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThingDocument"
            }
        },
        "ThingDocument": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingId": {
                    "$ref": "#/$defs/ThingId"
                },
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "thingGroupNames": {
                    "$ref": "#/$defs/ThingGroupNameList"
                },
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "shadow": {
                    "$ref": "#/$defs/JsonDocument"
                },
                "deviceDefender": {
                    "$ref": "#/$defs/JsonDocument"
                },
                "connectivity": {
                    "$ref": "#/$defs/ThingConnectivity"
                }
            }
        },
        "ThingGroupNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThingGroupName"
            }
        },
        "JsonDocument": {
            "type": "string"
        },
        "ThingConnectivity": {
            "type": "object",
            "properties": {
                "connected": {
                    "$ref": "#/$defs/Boolean"
                },
                "timestamp": {
                    "$ref": "#/$defs/ConnectivityTimestamp"
                },
                "disconnectReason": {
                    "$ref": "#/$defs/DisconnectReason"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "ConnectivityTimestamp": {
            "type": "integer",
            "format": "int64"
        },
        "DisconnectReason": {
            "type": "string"
        },
        "ThingGroupDocumentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThingGroupDocument"
            }
        },
        "ThingGroupDocument": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupId": {
                    "$ref": "#/$defs/ThingGroupId"
                },
                "thingGroupDescription": {
                    "$ref": "#/$defs/ThingGroupDescription"
                },
                "attributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "parentGroupNames": {
                    "$ref": "#/$defs/ThingGroupNameList"
                }
            }
        },
        "SearchIndexRequest": {
            "type": "object",
            "properties": {
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/SearchQueryMaxResults"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                }
            }
        },
        "SearchQueryMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "SetDefaultAuthorizerResponse": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                },
                "authorizerArn": {
                    "$ref": "#/$defs/AuthorizerArn"
                }
            }
        },
        "SetDefaultAuthorizerRequest": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                }
            }
        },
        "SetDefaultPolicyVersionRequest": {
            "type": "object",
            "properties": {
                "policyName": {
                    "$ref": "#/$defs/PolicyName"
                },
                "policyVersionId": {
                    "$ref": "#/$defs/PolicyVersionId"
                }
            }
        },
        "SetLoggingOptionsRequest": {
            "type": "object",
            "properties": {
                "loggingOptionsPayload": {
                    "$ref": "#/$defs/LoggingOptionsPayload"
                }
            }
        },
        "LoggingOptionsPayload": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "logLevel": {
                    "$ref": "#/$defs/LogLevel"
                }
            }
        },
        "SetV2LoggingLevelRequest": {
            "type": "object",
            "properties": {
                "logTarget": {
                    "$ref": "#/$defs/LogTarget"
                },
                "logLevel": {
                    "$ref": "#/$defs/LogLevel"
                }
            }
        },
        "SetV2LoggingOptionsRequest": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "defaultLogLevel": {
                    "$ref": "#/$defs/LogLevel"
                },
                "disableAllLogs": {
                    "$ref": "#/$defs/DisableAllLogs"
                }
            }
        },
        "StartAuditMitigationActionsTaskResponse": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                }
            }
        },
        "StartAuditMitigationActionsTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                },
                "target": {
                    "$ref": "#/$defs/AuditMitigationActionsTaskTarget"
                },
                "auditCheckToActionsMapping": {
                    "$ref": "#/$defs/AuditCheckToActionsMapping"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "StartDetectMitigationActionsTaskResponse": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                }
            }
        },
        "StartDetectMitigationActionsTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/MitigationActionsTaskId"
                },
                "target": {
                    "$ref": "#/$defs/DetectMitigationActionsTaskTarget"
                },
                "actions": {
                    "$ref": "#/$defs/DetectMitigationActionsToExecuteList"
                },
                "violationEventOccurrenceRange": {
                    "$ref": "#/$defs/ViolationEventOccurrenceRange"
                },
                "includeOnlyActiveViolations": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "includeSuppressedAlerts": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "DetectMitigationActionsToExecuteList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MitigationActionName"
            }
        },
        "StartOnDemandAuditTaskResponse": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/AuditTaskId"
                }
            }
        },
        "StartOnDemandAuditTaskRequest": {
            "type": "object",
            "properties": {
                "targetCheckNames": {
                    "$ref": "#/$defs/TargetAuditCheckNames"
                }
            }
        },
        "StartThingRegistrationTaskResponse": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/TaskId"
                }
            }
        },
        "StartThingRegistrationTaskRequest": {
            "type": "object",
            "properties": {
                "templateBody": {
                    "$ref": "#/$defs/TemplateBody"
                },
                "inputFileBucket": {
                    "$ref": "#/$defs/RegistryS3BucketName"
                },
                "inputFileKey": {
                    "$ref": "#/$defs/RegistryS3KeyName"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "StopThingRegistrationTaskResponse": {
            "type": "object",
            "properties": {}
        },
        "StopThingRegistrationTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/TaskId"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TestAuthorizationResponse": {
            "type": "object",
            "properties": {
                "authResults": {
                    "$ref": "#/$defs/AuthResults"
                }
            }
        },
        "AuthResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuthResult"
            }
        },
        "AuthResult": {
            "type": "object",
            "properties": {
                "authInfo": {
                    "$ref": "#/$defs/AuthInfo"
                },
                "allowed": {
                    "$ref": "#/$defs/Allowed"
                },
                "denied": {
                    "$ref": "#/$defs/Denied"
                },
                "authDecision": {
                    "$ref": "#/$defs/AuthDecision"
                },
                "missingContextValues": {
                    "$ref": "#/$defs/MissingContextValues"
                }
            }
        },
        "AuthInfo": {
            "type": "object",
            "properties": {
                "actionType": {
                    "$ref": "#/$defs/ActionType"
                },
                "resources": {
                    "$ref": "#/$defs/Resources"
                }
            }
        },
        "ActionType": {
            "enum": [
                "PUBLISH",
                "SUBSCRIBE",
                "RECEIVE",
                "CONNECT"
            ]
        },
        "Resources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Resource"
            }
        },
        "Resource": {
            "type": "string"
        },
        "Allowed": {
            "type": "object",
            "properties": {
                "policies": {
                    "$ref": "#/$defs/Policies"
                }
            }
        },
        "Denied": {
            "type": "object",
            "properties": {
                "implicitDeny": {
                    "$ref": "#/$defs/ImplicitDeny"
                },
                "explicitDeny": {
                    "$ref": "#/$defs/ExplicitDeny"
                }
            }
        },
        "ImplicitDeny": {
            "type": "object",
            "properties": {
                "policies": {
                    "$ref": "#/$defs/Policies"
                }
            }
        },
        "ExplicitDeny": {
            "type": "object",
            "properties": {
                "policies": {
                    "$ref": "#/$defs/Policies"
                }
            }
        },
        "AuthDecision": {
            "enum": [
                "ALLOWED",
                "EXPLICIT_DENY",
                "IMPLICIT_DENY"
            ]
        },
        "MissingContextValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MissingContextValue"
            }
        },
        "MissingContextValue": {
            "type": "string"
        },
        "TestAuthorizationRequest": {
            "type": "object",
            "properties": {
                "principal": {
                    "$ref": "#/$defs/Principal"
                },
                "cognitoIdentityPoolId": {
                    "$ref": "#/$defs/CognitoIdentityPoolId"
                },
                "authInfos": {
                    "$ref": "#/$defs/AuthInfos"
                },
                "clientId": {
                    "$ref": "#/$defs/ClientId"
                },
                "policyNamesToAdd": {
                    "$ref": "#/$defs/PolicyNames"
                },
                "policyNamesToSkip": {
                    "$ref": "#/$defs/PolicyNames"
                }
            }
        },
        "AuthInfos": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuthInfo"
            }
        },
        "PolicyNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PolicyName"
            }
        },
        "TestInvokeAuthorizerResponse": {
            "type": "object",
            "properties": {
                "isAuthenticated": {
                    "$ref": "#/$defs/IsAuthenticated"
                },
                "principalId": {
                    "$ref": "#/$defs/PrincipalId"
                },
                "policyDocuments": {
                    "$ref": "#/$defs/PolicyDocuments"
                },
                "refreshAfterInSeconds": {
                    "$ref": "#/$defs/Seconds"
                },
                "disconnectAfterInSeconds": {
                    "$ref": "#/$defs/Seconds"
                }
            }
        },
        "IsAuthenticated": {
            "type": "boolean"
        },
        "PrincipalId": {
            "type": "string"
        },
        "PolicyDocuments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PolicyDocument"
            }
        },
        "Seconds": {
            "type": "integer",
            "format": "int32"
        },
        "TestInvokeAuthorizerRequest": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                },
                "token": {
                    "$ref": "#/$defs/Token"
                },
                "tokenSignature": {
                    "$ref": "#/$defs/TokenSignature"
                },
                "httpContext": {
                    "$ref": "#/$defs/HttpContext"
                },
                "mqttContext": {
                    "$ref": "#/$defs/MqttContext"
                },
                "tlsContext": {
                    "$ref": "#/$defs/TlsContext"
                }
            }
        },
        "Token": {
            "type": "string"
        },
        "TokenSignature": {
            "type": "string"
        },
        "HttpContext": {
            "type": "object",
            "properties": {
                "headers": {
                    "$ref": "#/$defs/HttpHeaders"
                },
                "queryString": {
                    "$ref": "#/$defs/HttpQueryString"
                }
            }
        },
        "HttpHeaders": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/HttpHeaderValue"
            }
        },
        "HttpHeaderValue": {
            "type": "string"
        },
        "HttpQueryString": {
            "type": "string"
        },
        "MqttContext": {
            "type": "object",
            "properties": {
                "username": {
                    "$ref": "#/$defs/MqttUsername"
                },
                "password": {
                    "$ref": "#/$defs/MqttPassword"
                },
                "clientId": {
                    "$ref": "#/$defs/MqttClientId"
                }
            }
        },
        "MqttUsername": {
            "type": "string"
        },
        "MqttPassword": {
            "type": "string",
            "format": "binary"
        },
        "MqttClientId": {
            "type": "string"
        },
        "TlsContext": {
            "type": "object",
            "properties": {
                "serverName": {
                    "$ref": "#/$defs/ServerName"
                }
            }
        },
        "ServerName": {
            "type": "string"
        },
        "TransferCertificateResponse": {
            "type": "object",
            "properties": {
                "transferredCertificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                }
            }
        },
        "TransferCertificateRequest": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "targetAwsAccount": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "transferMessage": {
                    "$ref": "#/$defs/Message"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateAccountAuditConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateAccountAuditConfigurationRequest": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "auditNotificationTargetConfigurations": {
                    "$ref": "#/$defs/AuditNotificationTargetConfigurations"
                },
                "auditCheckConfigurations": {
                    "$ref": "#/$defs/AuditCheckConfigurations"
                }
            }
        },
        "UpdateAuditSuppressionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateAuditSuppressionRequest": {
            "type": "object",
            "properties": {
                "checkName": {
                    "$ref": "#/$defs/AuditCheckName"
                },
                "resourceIdentifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "expirationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "suppressIndefinitely": {
                    "$ref": "#/$defs/SuppressIndefinitely"
                },
                "description": {
                    "$ref": "#/$defs/AuditDescription"
                }
            }
        },
        "UpdateAuthorizerResponse": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                },
                "authorizerArn": {
                    "$ref": "#/$defs/AuthorizerArn"
                }
            }
        },
        "UpdateAuthorizerRequest": {
            "type": "object",
            "properties": {
                "authorizerName": {
                    "$ref": "#/$defs/AuthorizerName"
                },
                "authorizerFunctionArn": {
                    "$ref": "#/$defs/AuthorizerFunctionArn"
                },
                "tokenKeyName": {
                    "$ref": "#/$defs/TokenKeyName"
                },
                "tokenSigningPublicKeys": {
                    "$ref": "#/$defs/PublicKeyMap"
                },
                "status": {
                    "$ref": "#/$defs/AuthorizerStatus"
                },
                "enableCachingForHttp": {
                    "$ref": "#/$defs/EnableCachingForHttp"
                }
            }
        },
        "UpdateBillingGroupResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "UpdateBillingGroupRequest": {
            "type": "object",
            "properties": {
                "billingGroupName": {
                    "$ref": "#/$defs/BillingGroupName"
                },
                "billingGroupProperties": {
                    "$ref": "#/$defs/BillingGroupProperties"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                }
            }
        },
        "UpdateCACertificateRequest": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "newStatus": {
                    "$ref": "#/$defs/CACertificateStatus"
                },
                "newAutoRegistrationStatus": {
                    "$ref": "#/$defs/AutoRegistrationStatus"
                },
                "registrationConfig": {
                    "$ref": "#/$defs/RegistrationConfig"
                },
                "removeAutoRegistration": {
                    "$ref": "#/$defs/RemoveAutoRegistration"
                }
            }
        },
        "RemoveAutoRegistration": {
            "type": "boolean"
        },
        "UpdateCertificateRequest": {
            "type": "object",
            "properties": {
                "certificateId": {
                    "$ref": "#/$defs/CertificateId"
                },
                "newStatus": {
                    "$ref": "#/$defs/CertificateStatus"
                }
            }
        },
        "UpdateCertificateProviderResponse": {
            "type": "object",
            "properties": {
                "certificateProviderName": {
                    "$ref": "#/$defs/CertificateProviderName"
                },
                "certificateProviderArn": {
                    "$ref": "#/$defs/CertificateProviderArn"
                }
            }
        },
        "UpdateCertificateProviderRequest": {
            "type": "object",
            "properties": {
                "certificateProviderName": {
                    "$ref": "#/$defs/CertificateProviderName"
                },
                "lambdaFunctionArn": {
                    "$ref": "#/$defs/CertificateProviderFunctionArn"
                },
                "accountDefaultForOperations": {
                    "$ref": "#/$defs/CertificateProviderAccountDefaultForOperations"
                }
            }
        },
        "UpdateCustomMetricResponse": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "metricArn": {
                    "$ref": "#/$defs/CustomMetricArn"
                },
                "metricType": {
                    "$ref": "#/$defs/CustomMetricType"
                },
                "displayName": {
                    "$ref": "#/$defs/CustomMetricDisplayName"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UpdateCustomMetricRequest": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "displayName": {
                    "$ref": "#/$defs/CustomMetricDisplayName"
                }
            }
        },
        "UpdateDimensionResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DimensionName"
                },
                "arn": {
                    "$ref": "#/$defs/DimensionArn"
                },
                "type": {
                    "$ref": "#/$defs/DimensionType"
                },
                "stringValues": {
                    "$ref": "#/$defs/DimensionStringValues"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UpdateDimensionRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DimensionName"
                },
                "stringValues": {
                    "$ref": "#/$defs/DimensionStringValues"
                }
            }
        },
        "UpdateDomainConfigurationResponse": {
            "type": "object",
            "properties": {
                "domainConfigurationName": {
                    "$ref": "#/$defs/ReservedDomainConfigurationName"
                },
                "domainConfigurationArn": {
                    "$ref": "#/$defs/DomainConfigurationArn"
                }
            }
        },
        "UpdateDomainConfigurationRequest": {
            "type": "object",
            "properties": {
                "domainConfigurationName": {
                    "$ref": "#/$defs/ReservedDomainConfigurationName"
                },
                "authorizerConfig": {
                    "$ref": "#/$defs/AuthorizerConfig"
                },
                "domainConfigurationStatus": {
                    "$ref": "#/$defs/DomainConfigurationStatus"
                },
                "removeAuthorizerConfig": {
                    "$ref": "#/$defs/RemoveAuthorizerConfig"
                },
                "tlsConfig": {
                    "$ref": "#/$defs/TlsConfig"
                },
                "serverCertificateConfig": {
                    "$ref": "#/$defs/ServerCertificateConfig"
                },
                "authenticationType": {
                    "$ref": "#/$defs/AuthenticationType"
                },
                "applicationProtocol": {
                    "$ref": "#/$defs/ApplicationProtocol"
                },
                "clientCertificateConfig": {
                    "$ref": "#/$defs/ClientCertificateConfig"
                }
            }
        },
        "RemoveAuthorizerConfig": {
            "type": "boolean"
        },
        "UpdateDynamicThingGroupResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "UpdateDynamicThingGroupRequest": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupProperties": {
                    "$ref": "#/$defs/ThingGroupProperties"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                },
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                }
            }
        },
        "UpdateEventConfigurationsResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateEventConfigurationsRequest": {
            "type": "object",
            "properties": {
                "eventConfigurations": {
                    "$ref": "#/$defs/EventConfigurations"
                }
            }
        },
        "UpdateFleetMetricRequest": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/FleetMetricName"
                },
                "queryString": {
                    "$ref": "#/$defs/QueryString"
                },
                "aggregationType": {
                    "$ref": "#/$defs/AggregationType"
                },
                "period": {
                    "$ref": "#/$defs/FleetMetricPeriod"
                },
                "aggregationField": {
                    "$ref": "#/$defs/AggregationField"
                },
                "description": {
                    "$ref": "#/$defs/FleetMetricDescription"
                },
                "queryVersion": {
                    "$ref": "#/$defs/QueryVersion"
                },
                "indexName": {
                    "$ref": "#/$defs/IndexName"
                },
                "unit": {
                    "$ref": "#/$defs/FleetMetricUnit"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                }
            }
        },
        "UpdateIndexingConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateIndexingConfigurationRequest": {
            "type": "object",
            "properties": {
                "thingIndexingConfiguration": {
                    "$ref": "#/$defs/ThingIndexingConfiguration"
                },
                "thingGroupIndexingConfiguration": {
                    "$ref": "#/$defs/ThingGroupIndexingConfiguration"
                }
            }
        },
        "UpdateJobRequest": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "description": {
                    "$ref": "#/$defs/JobDescription"
                },
                "presignedUrlConfig": {
                    "$ref": "#/$defs/PresignedUrlConfig"
                },
                "jobExecutionsRolloutConfig": {
                    "$ref": "#/$defs/JobExecutionsRolloutConfig"
                },
                "abortConfig": {
                    "$ref": "#/$defs/AbortConfig"
                },
                "timeoutConfig": {
                    "$ref": "#/$defs/TimeoutConfig"
                },
                "namespaceId": {
                    "$ref": "#/$defs/NamespaceId"
                },
                "jobExecutionsRetryConfig": {
                    "$ref": "#/$defs/JobExecutionsRetryConfig"
                }
            }
        },
        "UpdateMitigationActionResponse": {
            "type": "object",
            "properties": {
                "actionArn": {
                    "$ref": "#/$defs/MitigationActionArn"
                },
                "actionId": {
                    "$ref": "#/$defs/MitigationActionId"
                }
            }
        },
        "UpdateMitigationActionRequest": {
            "type": "object",
            "properties": {
                "actionName": {
                    "$ref": "#/$defs/MitigationActionName"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "actionParams": {
                    "$ref": "#/$defs/MitigationActionParams"
                }
            }
        },
        "UpdatePackageResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdatePackageRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "defaultVersionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "unsetDefaultVersion": {
                    "$ref": "#/$defs/UnsetDefaultVersion"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "UnsetDefaultVersion": {
            "type": "boolean"
        },
        "UpdatePackageConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdatePackageConfigurationRequest": {
            "type": "object",
            "properties": {
                "versionUpdateByJobsConfig": {
                    "$ref": "#/$defs/VersionUpdateByJobsConfig"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "UpdatePackageVersionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdatePackageVersionRequest": {
            "type": "object",
            "properties": {
                "packageName": {
                    "$ref": "#/$defs/PackageName"
                },
                "versionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "description": {
                    "$ref": "#/$defs/ResourceDescription"
                },
                "attributes": {
                    "$ref": "#/$defs/ResourceAttributes"
                },
                "artifact": {
                    "$ref": "#/$defs/PackageVersionArtifact"
                },
                "action": {
                    "$ref": "#/$defs/PackageVersionAction"
                },
                "recipe": {
                    "$ref": "#/$defs/PackageVersionRecipe"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                }
            }
        },
        "PackageVersionAction": {
            "enum": [
                "PUBLISH",
                "DEPRECATE"
            ]
        },
        "UpdateProvisioningTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateProvisioningTemplateRequest": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/TemplateName"
                },
                "description": {
                    "$ref": "#/$defs/TemplateDescription"
                },
                "enabled": {
                    "$ref": "#/$defs/Enabled2"
                },
                "defaultVersionId": {
                    "$ref": "#/$defs/TemplateVersionId"
                },
                "provisioningRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "preProvisioningHook": {
                    "$ref": "#/$defs/ProvisioningHook"
                },
                "removePreProvisioningHook": {
                    "$ref": "#/$defs/RemoveHook"
                }
            }
        },
        "RemoveHook": {
            "type": "boolean"
        },
        "UpdateRoleAliasResponse": {
            "type": "object",
            "properties": {
                "roleAlias": {
                    "$ref": "#/$defs/RoleAlias"
                },
                "roleAliasArn": {
                    "$ref": "#/$defs/RoleAliasArn"
                }
            }
        },
        "UpdateRoleAliasRequest": {
            "type": "object",
            "properties": {
                "roleAlias": {
                    "$ref": "#/$defs/RoleAlias"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "credentialDurationSeconds": {
                    "$ref": "#/$defs/CredentialDurationSeconds"
                }
            }
        },
        "UpdateScheduledAuditResponse": {
            "type": "object",
            "properties": {
                "scheduledAuditArn": {
                    "$ref": "#/$defs/ScheduledAuditArn"
                }
            }
        },
        "UpdateScheduledAuditRequest": {
            "type": "object",
            "properties": {
                "frequency": {
                    "$ref": "#/$defs/AuditFrequency"
                },
                "dayOfMonth": {
                    "$ref": "#/$defs/DayOfMonth"
                },
                "dayOfWeek": {
                    "$ref": "#/$defs/DayOfWeek"
                },
                "targetCheckNames": {
                    "$ref": "#/$defs/TargetAuditCheckNames"
                },
                "scheduledAuditName": {
                    "$ref": "#/$defs/ScheduledAuditName"
                }
            }
        },
        "UpdateSecurityProfileResponse": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "securityProfileArn": {
                    "$ref": "#/$defs/SecurityProfileArn"
                },
                "securityProfileDescription": {
                    "$ref": "#/$defs/SecurityProfileDescription"
                },
                "behaviors": {
                    "$ref": "#/$defs/Behaviors"
                },
                "alertTargets": {
                    "$ref": "#/$defs/AlertTargets"
                },
                "additionalMetricsToRetain": {
                    "$ref": "#/$defs/AdditionalMetricsToRetainList"
                },
                "additionalMetricsToRetainV2": {
                    "$ref": "#/$defs/AdditionalMetricsToRetainV2List"
                },
                "version": {
                    "$ref": "#/$defs/Version"
                },
                "creationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "metricsExportConfig": {
                    "$ref": "#/$defs/MetricsExportConfig"
                }
            }
        },
        "UpdateSecurityProfileRequest": {
            "type": "object",
            "properties": {
                "securityProfileName": {
                    "$ref": "#/$defs/SecurityProfileName"
                },
                "securityProfileDescription": {
                    "$ref": "#/$defs/SecurityProfileDescription"
                },
                "behaviors": {
                    "$ref": "#/$defs/Behaviors"
                },
                "alertTargets": {
                    "$ref": "#/$defs/AlertTargets"
                },
                "additionalMetricsToRetain": {
                    "$ref": "#/$defs/AdditionalMetricsToRetainList"
                },
                "additionalMetricsToRetainV2": {
                    "$ref": "#/$defs/AdditionalMetricsToRetainV2List"
                },
                "deleteBehaviors": {
                    "$ref": "#/$defs/DeleteBehaviors"
                },
                "deleteAlertTargets": {
                    "$ref": "#/$defs/DeleteAlertTargets"
                },
                "deleteAdditionalMetricsToRetain": {
                    "$ref": "#/$defs/DeleteAdditionalMetricsToRetain"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                },
                "metricsExportConfig": {
                    "$ref": "#/$defs/MetricsExportConfig"
                },
                "deleteMetricsExportConfig": {
                    "$ref": "#/$defs/DeleteMetricsExportConfig"
                }
            }
        },
        "DeleteBehaviors": {
            "type": "boolean"
        },
        "DeleteAlertTargets": {
            "type": "boolean"
        },
        "DeleteAdditionalMetricsToRetain": {
            "type": "boolean"
        },
        "DeleteMetricsExportConfig": {
            "type": "boolean"
        },
        "UpdateStreamResponse": {
            "type": "object",
            "properties": {
                "streamId": {
                    "$ref": "#/$defs/StreamId"
                },
                "streamArn": {
                    "$ref": "#/$defs/StreamArn"
                },
                "description": {
                    "$ref": "#/$defs/StreamDescription"
                },
                "streamVersion": {
                    "$ref": "#/$defs/StreamVersion"
                }
            }
        },
        "UpdateStreamRequest": {
            "type": "object",
            "properties": {
                "streamId": {
                    "$ref": "#/$defs/StreamId"
                },
                "description": {
                    "$ref": "#/$defs/StreamDescription"
                },
                "files": {
                    "$ref": "#/$defs/StreamFiles"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "UpdateThingResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateThingRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingTypeName": {
                    "$ref": "#/$defs/ThingTypeName"
                },
                "attributePayload": {
                    "$ref": "#/$defs/AttributePayload"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                },
                "removeThingType": {
                    "$ref": "#/$defs/RemoveThingType"
                }
            }
        },
        "RemoveThingType": {
            "type": "boolean"
        },
        "UpdateThingGroupResponse": {
            "type": "object",
            "properties": {
                "version": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "UpdateThingGroupRequest": {
            "type": "object",
            "properties": {
                "thingGroupName": {
                    "$ref": "#/$defs/ThingGroupName"
                },
                "thingGroupProperties": {
                    "$ref": "#/$defs/ThingGroupProperties"
                },
                "expectedVersion": {
                    "$ref": "#/$defs/OptionalVersion"
                }
            }
        },
        "UpdateThingGroupsForThingResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateThingGroupsForThingRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "thingGroupsToAdd": {
                    "$ref": "#/$defs/ThingGroupList"
                },
                "thingGroupsToRemove": {
                    "$ref": "#/$defs/ThingGroupList"
                },
                "overrideDynamicGroups": {
                    "$ref": "#/$defs/OverrideDynamicGroups"
                }
            }
        },
        "ThingGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThingGroupName"
            }
        },
        "UpdateTopicRuleDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateTopicRuleDestinationRequest": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/AwsArn"
                },
                "status": {
                    "$ref": "#/$defs/TopicRuleDestinationStatus"
                }
            }
        },
        "ValidateSecurityProfileBehaviorsResponse": {
            "type": "object",
            "properties": {
                "valid": {
                    "$ref": "#/$defs/Valid"
                },
                "validationErrors": {
                    "$ref": "#/$defs/ValidationErrors"
                }
            }
        },
        "Valid": {
            "type": "boolean"
        },
        "ValidationErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValidationError"
            }
        },
        "ValidationError": {
            "type": "object",
            "properties": {
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ValidateSecurityProfileBehaviorsRequest": {
            "type": "object",
            "properties": {
                "behaviors": {
                    "$ref": "#/$defs/Behaviors"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iot-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iot-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iot.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                "aws",
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://iot.{Region}.amazonaws.com",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                "aws-cn",
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://iot.{Region}.amazonaws.com.cn",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                "aws-us-gov",
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://iot.{Region}.amazonaws.com",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://iot.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}