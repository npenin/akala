{
    "name": "cur",
    "commands": [
        {
            "name": "DeleteReportDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteReportDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteReportDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteReportDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReportDefinitions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeReportDefinitions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReportDefinitionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReportDefinitionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyReportDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ModifyReportDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyReportDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyReportDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutReportDefinition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutReportDefinition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutReportDefinitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutReportDefinitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "DeleteReportDefinitionResponse": {
            "type": "object",
            "properties": {
                "ResponseMessage": {
                    "$ref": "#/$defs/DeleteResponseMessage"
                }
            }
        },
        "DeleteResponseMessage": {
            "type": "string"
        },
        "DeleteReportDefinitionRequest": {
            "type": "object",
            "properties": {
                "ReportName": {
                    "$ref": "#/$defs/ReportName"
                }
            }
        },
        "ReportName": {
            "type": "string"
        },
        "DescribeReportDefinitionsResponse": {
            "type": "object",
            "properties": {
                "ReportDefinitions": {
                    "$ref": "#/$defs/ReportDefinitionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "ReportDefinitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReportDefinition"
            }
        },
        "ReportDefinition": {
            "type": "object",
            "properties": {
                "ReportName": {
                    "$ref": "#/$defs/ReportName"
                },
                "TimeUnit": {
                    "$ref": "#/$defs/TimeUnit"
                },
                "Format": {
                    "$ref": "#/$defs/ReportFormat"
                },
                "Compression": {
                    "$ref": "#/$defs/CompressionFormat"
                },
                "AdditionalSchemaElements": {
                    "$ref": "#/$defs/SchemaElementList"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/S3Prefix"
                },
                "S3Region": {
                    "$ref": "#/$defs/AWSRegion"
                },
                "AdditionalArtifacts": {
                    "$ref": "#/$defs/AdditionalArtifactList"
                },
                "RefreshClosedReports": {
                    "$ref": "#/$defs/RefreshClosedReports"
                },
                "ReportVersioning": {
                    "$ref": "#/$defs/ReportVersioning"
                },
                "BillingViewArn": {
                    "$ref": "#/$defs/BillingViewArn"
                },
                "ReportStatus": {
                    "$ref": "#/$defs/ReportStatus"
                }
            }
        },
        "TimeUnit": {
            "enum": [
                "HOURLY",
                "DAILY",
                "MONTHLY"
            ]
        },
        "ReportFormat": {
            "enum": [
                "CSV",
                "Parquet"
            ]
        },
        "CompressionFormat": {
            "enum": [
                "ZIP",
                "GZIP",
                "Parquet"
            ]
        },
        "SchemaElementList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SchemaElement"
            }
        },
        "SchemaElement": {
            "enum": [
                "RESOURCES",
                "SPLIT_COST_ALLOCATION_DATA",
                "MANUAL_DISCOUNT_COMPATIBILITY"
            ]
        },
        "S3Bucket": {
            "type": "string"
        },
        "S3Prefix": {
            "type": "string"
        },
        "AWSRegion": {
            "enum": [
                "CAPE_TOWN",
                "HONG_KONG",
                "MUMBAI",
                "HYDERABAD",
                "SINGAPORE",
                "SYDNEY",
                "JAKARTA",
                "TOKYO",
                "SEOUL",
                "OSAKA",
                "CANADA_CENTRAL",
                "FRANKFURT",
                "ZURICH",
                "IRELAND",
                "LONDON",
                "PARIS",
                "STOCKHOLM",
                "MILANO",
                "SPAIN",
                "UAE",
                "BAHRAIN",
                "SAO_PAULO",
                "US_STANDARD",
                "OHIO",
                "NORTHERN_CALIFORNIA",
                "OREGON",
                "BEIJING",
                "NINGXIA"
            ]
        },
        "AdditionalArtifactList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdditionalArtifact"
            }
        },
        "AdditionalArtifact": {
            "enum": [
                "REDSHIFT",
                "QUICKSIGHT",
                "ATHENA"
            ]
        },
        "RefreshClosedReports": {
            "type": "boolean"
        },
        "ReportVersioning": {
            "enum": [
                "CREATE_NEW_REPORT",
                "OVERWRITE_REPORT"
            ]
        },
        "BillingViewArn": {
            "type": "string"
        },
        "ReportStatus": {
            "type": "object",
            "properties": {
                "lastDelivery": {
                    "$ref": "#/$defs/LastDelivery"
                },
                "lastStatus": {
                    "$ref": "#/$defs/LastStatus"
                }
            }
        },
        "LastDelivery": {
            "type": "string"
        },
        "LastStatus": {
            "enum": [
                "SUCCESS",
                "ERROR_PERMISSIONS",
                "ERROR_NO_BUCKET"
            ]
        },
        "GenericString": {
            "type": "string"
        },
        "DescribeReportDefinitionsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/GenericString"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ReportName": {
                    "$ref": "#/$defs/ReportName"
                }
            }
        },
        "ModifyReportDefinitionResponse": {
            "type": "object",
            "properties": {}
        },
        "ModifyReportDefinitionRequest": {
            "type": "object",
            "properties": {
                "ReportName": {
                    "$ref": "#/$defs/ReportName"
                },
                "ReportDefinition": {
                    "$ref": "#/$defs/ReportDefinition"
                }
            }
        },
        "PutReportDefinitionResponse": {
            "type": "object",
            "properties": {}
        },
        "PutReportDefinitionRequest": {
            "type": "object",
            "properties": {
                "ReportDefinition": {
                    "$ref": "#/$defs/ReportDefinition"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ReportName": {
                    "$ref": "#/$defs/ReportName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ReportName": {
                    "$ref": "#/$defs/ReportName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://cur-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://cur-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://cur.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://cur.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}