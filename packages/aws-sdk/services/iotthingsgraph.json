{
    "name": "iotthingsgraph",
    "commands": [
        {
            "name": "AssociateEntityToThing",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.AssociateEntityToThing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateEntityToThingResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssociateEntityToThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFlowTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.CreateFlowTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFlowTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateFlowTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSystemInstance",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.CreateSystemInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSystemInstanceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSystemInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSystemTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.CreateSystemTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSystemTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSystemTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFlowTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.DeleteFlowTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFlowTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteFlowTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNamespace",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.DeleteNamespace"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNamespaceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteNamespaceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSystemInstance",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.DeleteSystemInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSystemInstanceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSystemInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSystemTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.DeleteSystemTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSystemTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSystemTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeploySystemInstance",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.DeploySystemInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeploySystemInstanceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeploySystemInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeprecateFlowTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.DeprecateFlowTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeprecateFlowTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeprecateFlowTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeprecateSystemTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.DeprecateSystemTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeprecateSystemTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeprecateSystemTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNamespace",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.DescribeNamespace"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNamespaceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeNamespaceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DissociateEntityFromThing",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.DissociateEntityFromThing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DissociateEntityFromThingResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DissociateEntityFromThingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEntities",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.GetEntities"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEntitiesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetEntitiesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFlowTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.GetFlowTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFlowTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetFlowTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFlowTemplateRevisions",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.GetFlowTemplateRevisions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFlowTemplateRevisionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetFlowTemplateRevisionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetNamespaceDeletionStatus",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.GetNamespaceDeletionStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetNamespaceDeletionStatusResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetNamespaceDeletionStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSystemInstance",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.GetSystemInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSystemInstanceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSystemInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSystemTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.GetSystemTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSystemTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSystemTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSystemTemplateRevisions",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.GetSystemTemplateRevisions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSystemTemplateRevisionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSystemTemplateRevisionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetUploadStatus",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.GetUploadStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetUploadStatusResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetUploadStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFlowExecutionMessages",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.ListFlowExecutionMessages"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFlowExecutionMessagesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListFlowExecutionMessagesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchEntities",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.SearchEntities"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchEntitiesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SearchEntitiesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchFlowExecutions",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.SearchFlowExecutions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchFlowExecutionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SearchFlowExecutionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchFlowTemplates",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.SearchFlowTemplates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchFlowTemplatesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SearchFlowTemplatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchSystemInstances",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.SearchSystemInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchSystemInstancesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SearchSystemInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchSystemTemplates",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.SearchSystemTemplates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchSystemTemplatesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SearchSystemTemplatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchThings",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.SearchThings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchThingsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SearchThingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UndeploySystemInstance",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.UndeploySystemInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UndeploySystemInstanceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UndeploySystemInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateFlowTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.UpdateFlowTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFlowTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateFlowTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSystemTemplate",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.UpdateSystemTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSystemTemplateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateSystemTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UploadEntityDefinitions",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IotThingsGraphFrontEndService.UploadEntityDefinitions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UploadEntityDefinitionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UploadEntityDefinitionsRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateEntityToThingResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateEntityToThingRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "entityId": {
                    "$ref": "#/$defs/Urn"
                },
                "namespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "ThingName": {
            "type": "string"
        },
        "Urn": {
            "type": "string"
        },
        "Version": {
            "type": "integer",
            "format": "int64"
        },
        "CreateFlowTemplateResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/FlowTemplateSummary"
                }
            }
        },
        "FlowTemplateSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "revisionNumber": {
                    "$ref": "#/$defs/Version"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Arn": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "CreateFlowTemplateRequest": {
            "type": "object",
            "properties": {
                "definition": {
                    "$ref": "#/$defs/DefinitionDocument"
                },
                "compatibleNamespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "DefinitionDocument": {
            "type": "object",
            "properties": {
                "language": {
                    "$ref": "#/$defs/DefinitionLanguage"
                },
                "text": {
                    "$ref": "#/$defs/DefinitionText"
                }
            }
        },
        "DefinitionLanguage": {
            "enum": [
                "GRAPHQL"
            ]
        },
        "DefinitionText": {
            "type": "string"
        },
        "CreateSystemInstanceResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/SystemInstanceSummary"
                }
            }
        },
        "SystemInstanceSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "status": {
                    "$ref": "#/$defs/SystemInstanceDeploymentStatus"
                },
                "target": {
                    "$ref": "#/$defs/DeploymentTarget"
                },
                "greengrassGroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "greengrassGroupId": {
                    "$ref": "#/$defs/GreengrassGroupId"
                },
                "greengrassGroupVersionId": {
                    "$ref": "#/$defs/GreengrassGroupVersionId"
                }
            }
        },
        "SystemInstanceDeploymentStatus": {
            "enum": [
                "NOT_DEPLOYED",
                "BOOTSTRAP",
                "DEPLOY_IN_PROGRESS",
                "DEPLOYED_IN_TARGET",
                "UNDEPLOY_IN_PROGRESS",
                "FAILED",
                "PENDING_DELETE",
                "DELETED_IN_TARGET"
            ]
        },
        "DeploymentTarget": {
            "enum": [
                "GREENGRASS",
                "CLOUD"
            ]
        },
        "GroupName": {
            "type": "string"
        },
        "GreengrassGroupId": {
            "type": "string"
        },
        "GreengrassGroupVersionId": {
            "type": "string"
        },
        "CreateSystemInstanceRequest": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "definition": {
                    "$ref": "#/$defs/DefinitionDocument"
                },
                "target": {
                    "$ref": "#/$defs/DeploymentTarget"
                },
                "greengrassGroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "s3BucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "metricsConfiguration": {
                    "$ref": "#/$defs/MetricsConfiguration"
                },
                "flowActionsRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "S3BucketName": {
            "type": "string"
        },
        "MetricsConfiguration": {
            "type": "object",
            "properties": {
                "cloudMetricEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "metricRuleRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "Enabled": {
            "type": "boolean"
        },
        "RoleArn": {
            "type": "string"
        },
        "CreateSystemTemplateResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/SystemTemplateSummary"
                }
            }
        },
        "SystemTemplateSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "revisionNumber": {
                    "$ref": "#/$defs/Version"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "CreateSystemTemplateRequest": {
            "type": "object",
            "properties": {
                "definition": {
                    "$ref": "#/$defs/DefinitionDocument"
                },
                "compatibleNamespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "DeleteFlowTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteFlowTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                }
            }
        },
        "DeleteNamespaceResponse": {
            "type": "object",
            "properties": {
                "namespaceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "namespaceName": {
                    "$ref": "#/$defs/NamespaceName"
                }
            }
        },
        "NamespaceName": {
            "type": "string"
        },
        "DeleteNamespaceRequest": {
            "type": "object",
            "properties": {}
        },
        "DeleteSystemInstanceResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteSystemInstanceRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                }
            }
        },
        "DeleteSystemTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteSystemTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                }
            }
        },
        "DeploySystemInstanceResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/SystemInstanceSummary"
                },
                "greengrassDeploymentId": {
                    "$ref": "#/$defs/GreengrassDeploymentId"
                }
            }
        },
        "GreengrassDeploymentId": {
            "type": "string"
        },
        "DeploySystemInstanceRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                }
            }
        },
        "DeprecateFlowTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "DeprecateFlowTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                }
            }
        },
        "DeprecateSystemTemplateResponse": {
            "type": "object",
            "properties": {}
        },
        "DeprecateSystemTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                }
            }
        },
        "DescribeNamespaceResponse": {
            "type": "object",
            "properties": {
                "namespaceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "namespaceName": {
                    "$ref": "#/$defs/NamespaceName"
                },
                "trackingNamespaceName": {
                    "$ref": "#/$defs/NamespaceName"
                },
                "trackingNamespaceVersion": {
                    "$ref": "#/$defs/Version"
                },
                "namespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "DescribeNamespaceRequest": {
            "type": "object",
            "properties": {
                "namespaceName": {
                    "$ref": "#/$defs/NamespaceName"
                }
            }
        },
        "DissociateEntityFromThingResponse": {
            "type": "object",
            "properties": {}
        },
        "DissociateEntityFromThingRequest": {
            "type": "object",
            "properties": {
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                },
                "entityType": {
                    "$ref": "#/$defs/EntityType"
                }
            }
        },
        "EntityType": {
            "enum": [
                "DEVICE",
                "SERVICE",
                "DEVICE_MODEL",
                "CAPABILITY",
                "STATE",
                "ACTION",
                "EVENT",
                "PROPERTY",
                "MAPPING",
                "ENUM"
            ]
        },
        "GetEntitiesResponse": {
            "type": "object",
            "properties": {
                "descriptions": {
                    "$ref": "#/$defs/EntityDescriptions"
                }
            }
        },
        "EntityDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntityDescription"
            }
        },
        "EntityDescription": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "type": {
                    "$ref": "#/$defs/EntityType"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "definition": {
                    "$ref": "#/$defs/DefinitionDocument"
                }
            }
        },
        "GetEntitiesRequest": {
            "type": "object",
            "properties": {
                "ids": {
                    "$ref": "#/$defs/Urns"
                },
                "namespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "Urns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Urn"
            }
        },
        "GetFlowTemplateResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/FlowTemplateDescription"
                }
            }
        },
        "FlowTemplateDescription": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/FlowTemplateSummary"
                },
                "definition": {
                    "$ref": "#/$defs/DefinitionDocument"
                },
                "validatedNamespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "GetFlowTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "revisionNumber": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "GetFlowTemplateRevisionsResponse": {
            "type": "object",
            "properties": {
                "summaries": {
                    "$ref": "#/$defs/FlowTemplateSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "FlowTemplateSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FlowTemplateSummary"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "GetFlowTemplateRevisionsRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetNamespaceDeletionStatusResponse": {
            "type": "object",
            "properties": {
                "namespaceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "namespaceName": {
                    "$ref": "#/$defs/NamespaceName"
                },
                "status": {
                    "$ref": "#/$defs/NamespaceDeletionStatus"
                },
                "errorCode": {
                    "$ref": "#/$defs/NamespaceDeletionStatusErrorCodes"
                },
                "errorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NamespaceDeletionStatus": {
            "enum": [
                "IN_PROGRESS",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "NamespaceDeletionStatusErrorCodes": {
            "enum": [
                "VALIDATION_FAILED"
            ]
        },
        "String": {
            "type": "string"
        },
        "GetNamespaceDeletionStatusRequest": {
            "type": "object",
            "properties": {}
        },
        "GetSystemInstanceResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/SystemInstanceDescription"
                }
            }
        },
        "SystemInstanceDescription": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/SystemInstanceSummary"
                },
                "definition": {
                    "$ref": "#/$defs/DefinitionDocument"
                },
                "s3BucketName": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "metricsConfiguration": {
                    "$ref": "#/$defs/MetricsConfiguration"
                },
                "validatedNamespaceVersion": {
                    "$ref": "#/$defs/Version"
                },
                "validatedDependencyRevisions": {
                    "$ref": "#/$defs/DependencyRevisions"
                },
                "flowActionsRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "DependencyRevisions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DependencyRevision"
            }
        },
        "DependencyRevision": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "revisionNumber": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "GetSystemInstanceRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                }
            }
        },
        "GetSystemTemplateResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/SystemTemplateDescription"
                }
            }
        },
        "SystemTemplateDescription": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/SystemTemplateSummary"
                },
                "definition": {
                    "$ref": "#/$defs/DefinitionDocument"
                },
                "validatedNamespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "GetSystemTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "revisionNumber": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "GetSystemTemplateRevisionsResponse": {
            "type": "object",
            "properties": {
                "summaries": {
                    "$ref": "#/$defs/SystemTemplateSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SystemTemplateSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SystemTemplateSummary"
            }
        },
        "GetSystemTemplateRevisionsRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "GetUploadStatusResponse": {
            "type": "object",
            "properties": {
                "uploadId": {
                    "$ref": "#/$defs/UploadId"
                },
                "uploadStatus": {
                    "$ref": "#/$defs/UploadStatus"
                },
                "namespaceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "namespaceName": {
                    "$ref": "#/$defs/NamespaceName"
                },
                "namespaceVersion": {
                    "$ref": "#/$defs/Version"
                },
                "failureReason": {
                    "$ref": "#/$defs/StringList"
                },
                "createdDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UploadId": {
            "type": "string"
        },
        "UploadStatus": {
            "enum": [
                "IN_PROGRESS",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "GetUploadStatusRequest": {
            "type": "object",
            "properties": {
                "uploadId": {
                    "$ref": "#/$defs/UploadId"
                }
            }
        },
        "ListFlowExecutionMessagesResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "$ref": "#/$defs/FlowExecutionMessages"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "FlowExecutionMessages": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FlowExecutionMessage"
            }
        },
        "FlowExecutionMessage": {
            "type": "object",
            "properties": {
                "messageId": {
                    "$ref": "#/$defs/FlowExecutionMessageId"
                },
                "eventType": {
                    "$ref": "#/$defs/FlowExecutionEventType"
                },
                "timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "payload": {
                    "$ref": "#/$defs/FlowExecutionMessagePayload"
                }
            }
        },
        "FlowExecutionMessageId": {
            "type": "string"
        },
        "FlowExecutionEventType": {
            "enum": [
                "EXECUTION_STARTED",
                "EXECUTION_FAILED",
                "EXECUTION_ABORTED",
                "EXECUTION_SUCCEEDED",
                "STEP_STARTED",
                "STEP_FAILED",
                "STEP_SUCCEEDED",
                "ACTIVITY_SCHEDULED",
                "ACTIVITY_STARTED",
                "ACTIVITY_FAILED",
                "ACTIVITY_SUCCEEDED",
                "START_FLOW_EXECUTION_TASK",
                "SCHEDULE_NEXT_READY_STEPS_TASK",
                "THING_ACTION_TASK",
                "THING_ACTION_TASK_FAILED",
                "THING_ACTION_TASK_SUCCEEDED",
                "ACKNOWLEDGE_TASK_MESSAGE"
            ]
        },
        "FlowExecutionMessagePayload": {
            "type": "string"
        },
        "ListFlowExecutionMessagesRequest": {
            "type": "object",
            "properties": {
                "flowExecutionId": {
                    "$ref": "#/$defs/FlowExecutionId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "FlowExecutionId": {
            "type": "string"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "SearchEntitiesResponse": {
            "type": "object",
            "properties": {
                "descriptions": {
                    "$ref": "#/$defs/EntityDescriptions"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SearchEntitiesRequest": {
            "type": "object",
            "properties": {
                "entityTypes": {
                    "$ref": "#/$defs/EntityTypes"
                },
                "filters": {
                    "$ref": "#/$defs/EntityFilters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "namespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "EntityTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntityType"
            }
        },
        "EntityFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntityFilter"
            }
        },
        "EntityFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/EntityFilterName"
                },
                "value": {
                    "$ref": "#/$defs/EntityFilterValues"
                }
            }
        },
        "EntityFilterName": {
            "enum": [
                "NAME",
                "NAMESPACE",
                "SEMANTIC_TYPE_PATH",
                "REFERENCED_ENTITY_ID"
            ]
        },
        "EntityFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntityFilterValue"
            }
        },
        "EntityFilterValue": {
            "type": "string"
        },
        "SearchFlowExecutionsResponse": {
            "type": "object",
            "properties": {
                "summaries": {
                    "$ref": "#/$defs/FlowExecutionSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "FlowExecutionSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FlowExecutionSummary"
            }
        },
        "FlowExecutionSummary": {
            "type": "object",
            "properties": {
                "flowExecutionId": {
                    "$ref": "#/$defs/FlowExecutionId"
                },
                "status": {
                    "$ref": "#/$defs/FlowExecutionStatus"
                },
                "systemInstanceId": {
                    "$ref": "#/$defs/Urn"
                },
                "flowTemplateId": {
                    "$ref": "#/$defs/Urn"
                },
                "createdAt": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updatedAt": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "FlowExecutionStatus": {
            "enum": [
                "RUNNING",
                "ABORTED",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "SearchFlowExecutionsRequest": {
            "type": "object",
            "properties": {
                "systemInstanceId": {
                    "$ref": "#/$defs/Urn"
                },
                "flowExecutionId": {
                    "$ref": "#/$defs/FlowExecutionId"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "SearchFlowTemplatesResponse": {
            "type": "object",
            "properties": {
                "summaries": {
                    "$ref": "#/$defs/FlowTemplateSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SearchFlowTemplatesRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/FlowTemplateFilters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "FlowTemplateFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FlowTemplateFilter"
            }
        },
        "FlowTemplateFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/FlowTemplateFilterName"
                },
                "value": {
                    "$ref": "#/$defs/FlowTemplateFilterValues"
                }
            }
        },
        "FlowTemplateFilterName": {
            "enum": [
                "DEVICE_MODEL_ID"
            ]
        },
        "FlowTemplateFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FlowTemplateFilterValue"
            }
        },
        "FlowTemplateFilterValue": {
            "type": "string"
        },
        "SearchSystemInstancesResponse": {
            "type": "object",
            "properties": {
                "summaries": {
                    "$ref": "#/$defs/SystemInstanceSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SystemInstanceSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SystemInstanceSummary"
            }
        },
        "SearchSystemInstancesRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/SystemInstanceFilters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "SystemInstanceFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SystemInstanceFilter"
            }
        },
        "SystemInstanceFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/SystemInstanceFilterName"
                },
                "value": {
                    "$ref": "#/$defs/SystemInstanceFilterValues"
                }
            }
        },
        "SystemInstanceFilterName": {
            "enum": [
                "SYSTEM_TEMPLATE_ID",
                "STATUS",
                "GREENGRASS_GROUP_NAME"
            ]
        },
        "SystemInstanceFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SystemInstanceFilterValue"
            }
        },
        "SystemInstanceFilterValue": {
            "type": "string"
        },
        "SearchSystemTemplatesResponse": {
            "type": "object",
            "properties": {
                "summaries": {
                    "$ref": "#/$defs/SystemTemplateSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SearchSystemTemplatesRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/SystemTemplateFilters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "SystemTemplateFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SystemTemplateFilter"
            }
        },
        "SystemTemplateFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/SystemTemplateFilterName"
                },
                "value": {
                    "$ref": "#/$defs/SystemTemplateFilterValues"
                }
            }
        },
        "SystemTemplateFilterName": {
            "enum": [
                "FLOW_TEMPLATE_ID"
            ]
        },
        "SystemTemplateFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SystemTemplateFilterValue"
            }
        },
        "SystemTemplateFilterValue": {
            "type": "string"
        },
        "SearchThingsResponse": {
            "type": "object",
            "properties": {
                "things": {
                    "$ref": "#/$defs/Things"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Things": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Thing"
            }
        },
        "Thing": {
            "type": "object",
            "properties": {
                "thingArn": {
                    "$ref": "#/$defs/ThingArn"
                },
                "thingName": {
                    "$ref": "#/$defs/ThingName"
                }
            }
        },
        "ThingArn": {
            "type": "string"
        },
        "SearchThingsRequest": {
            "type": "object",
            "properties": {
                "entityId": {
                    "$ref": "#/$defs/Urn"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "namespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UndeploySystemInstanceResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/SystemInstanceSummary"
                }
            }
        },
        "UndeploySystemInstanceRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateFlowTemplateResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/FlowTemplateSummary"
                }
            }
        },
        "UpdateFlowTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "definition": {
                    "$ref": "#/$defs/DefinitionDocument"
                },
                "compatibleNamespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "UpdateSystemTemplateResponse": {
            "type": "object",
            "properties": {
                "summary": {
                    "$ref": "#/$defs/SystemTemplateSummary"
                }
            }
        },
        "UpdateSystemTemplateRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/Urn"
                },
                "definition": {
                    "$ref": "#/$defs/DefinitionDocument"
                },
                "compatibleNamespaceVersion": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "UploadEntityDefinitionsResponse": {
            "type": "object",
            "properties": {
                "uploadId": {
                    "$ref": "#/$defs/UploadId"
                }
            }
        },
        "UploadEntityDefinitionsRequest": {
            "type": "object",
            "properties": {
                "document": {
                    "$ref": "#/$defs/DefinitionDocument"
                },
                "syncWithPublicNamespace": {
                    "$ref": "#/$defs/SyncWithPublicNamespace"
                },
                "deprecateExistingEntities": {
                    "$ref": "#/$defs/DeprecateExistingEntities"
                }
            }
        },
        "SyncWithPublicNamespace": {
            "type": "boolean"
        },
        "DeprecateExistingEntities": {
            "type": "boolean"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iotthingsgraph-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iotthingsgraph-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iotthingsgraph.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                "aws",
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://iotthingsgraph.{Region}.amazonaws.com",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://iotthingsgraph.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
