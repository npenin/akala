{
    "name": "lightsail",
    "commands": [
        {
            "name": "AllocateStaticIp",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/AllocateStaticIp"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AllocateStaticIpResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AllocateStaticIpRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachCertificateToDistribution",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/AttachCertificateToDistribution"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachCertificateToDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachCertificateToDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachDisk",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/AttachDisk"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachDiskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachDiskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachInstancesToLoadBalancer",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/AttachInstancesToLoadBalancer"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachInstancesToLoadBalancerResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachInstancesToLoadBalancerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachLoadBalancerTlsCertificate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/AttachLoadBalancerTlsCertificate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachLoadBalancerTlsCertificateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachLoadBalancerTlsCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachStaticIp",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/AttachStaticIp"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachStaticIpResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachStaticIpRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CloseInstancePublicPorts",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CloseInstancePublicPorts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CloseInstancePublicPortsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CloseInstancePublicPortsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CopySnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CopySnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CopySnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CopySnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBucket",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateBucket"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBucketResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBucketRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBucketAccessKey",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateBucketAccessKey"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBucketAccessKeyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBucketAccessKeyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCertificate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateCertificate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCertificateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCloudFormationStack",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateCloudFormationStack"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCloudFormationStackResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCloudFormationStackRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateContactMethod",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateContactMethod"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateContactMethodResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateContactMethodRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateContainerService",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/container-services"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateContainerServiceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateContainerServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateContainerServiceDeployment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serviceName": "route.serviceName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/container-services/{serviceName}/deployments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateContainerServiceDeploymentResult"
                    },
                    "inject": [
                        "param.0.serviceName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateContainerServiceDeploymentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateContainerServiceRegistryLogin",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/container-registry-login"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateContainerServiceRegistryLoginResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateContainerServiceRegistryLoginRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDisk",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateDisk"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDiskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDiskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDiskFromSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateDiskFromSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDiskFromSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDiskFromSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDiskSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateDiskSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDiskSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDiskSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDistribution",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateDistribution"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDomain",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateDomain"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDomainResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDomainEntry",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateDomainEntry"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDomainEntryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDomainEntryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateGUISessionAccessDetails",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/create-gui-session-access-details"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateGUISessionAccessDetailsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateGUISessionAccessDetailsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateInstances",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateInstances"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateInstancesFromSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateInstancesFromSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInstancesFromSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInstancesFromSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateInstanceSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateInstanceSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInstanceSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInstanceSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKeyPair",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateKeyPair"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateKeyPairResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKeyPairRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLoadBalancer",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateLoadBalancer"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLoadBalancerResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLoadBalancerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLoadBalancerTlsCertificate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateLoadBalancerTlsCertificate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLoadBalancerTlsCertificateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLoadBalancerTlsCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRelationalDatabase",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateRelationalDatabase"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRelationalDatabaseResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRelationalDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRelationalDatabaseFromSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateRelationalDatabaseFromSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRelationalDatabaseFromSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRelationalDatabaseFromSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRelationalDatabaseSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/CreateRelationalDatabaseSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRelationalDatabaseSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRelationalDatabaseSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAlarm",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/ls/api/2016-11-28/DeleteAlarm"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAlarmResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAlarmRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAutoSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteAutoSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAutoSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAutoSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBucket",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteBucket"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBucketResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBucketRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBucketAccessKey",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteBucketAccessKey"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBucketAccessKeyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBucketAccessKeyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCertificate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteCertificate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCertificateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteContactMethod",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteContactMethod"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteContactMethodResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteContactMethodRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteContainerImage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serviceName": "route.serviceName",
                            "image": "route.image",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/ls/api/2016-11-28/container-services/{serviceName}/images/{image}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteContainerImageResult"
                    },
                    "inject": [
                        "param.0.serviceName",
                        "param.0.image",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteContainerImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteContainerService",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serviceName": "route.serviceName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/ls/api/2016-11-28/container-services/{serviceName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteContainerServiceResult"
                    },
                    "inject": [
                        "param.0.serviceName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteContainerServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDisk",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteDisk"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDiskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDiskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDiskSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteDiskSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDiskSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDiskSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDistribution",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteDistribution"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDomain",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteDomain"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDomainResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDomainEntry",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteDomainEntry"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDomainEntryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDomainEntryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteInstance",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteInstance"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteInstanceSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteInstanceSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInstanceSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInstanceSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKeyPair",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteKeyPair"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKeyPairResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKeyPairRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKnownHostKeys",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteKnownHostKeys"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKnownHostKeysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKnownHostKeysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLoadBalancer",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteLoadBalancer"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLoadBalancerResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLoadBalancerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLoadBalancerTlsCertificate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteLoadBalancerTlsCertificate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLoadBalancerTlsCertificateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLoadBalancerTlsCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRelationalDatabase",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteRelationalDatabase"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRelationalDatabaseResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRelationalDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRelationalDatabaseSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DeleteRelationalDatabaseSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRelationalDatabaseSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRelationalDatabaseSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachCertificateFromDistribution",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DetachCertificateFromDistribution"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachCertificateFromDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachCertificateFromDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachDisk",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DetachDisk"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachDiskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachDiskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachInstancesFromLoadBalancer",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DetachInstancesFromLoadBalancer"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachInstancesFromLoadBalancerResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachInstancesFromLoadBalancerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachStaticIp",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DetachStaticIp"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachStaticIpResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachStaticIpRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableAddOn",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DisableAddOn"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableAddOnResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableAddOnRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DownloadDefaultKeyPair",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/DownloadDefaultKeyPair"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DownloadDefaultKeyPairResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DownloadDefaultKeyPairRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableAddOn",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/EnableAddOn"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableAddOnResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableAddOnRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/ExportSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetActiveNames",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetActiveNames"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetActiveNamesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetActiveNamesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAlarms",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/ls/api/2016-11-28/GetAlarms"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAlarmsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAlarmsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAutoSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetAutoSnapshots"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAutoSnapshotsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAutoSnapshotsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBlueprints",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetBlueprints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBlueprintsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBlueprintsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBucketAccessKeys",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetBucketAccessKeys"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketAccessKeysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBucketAccessKeysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBucketBundles",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetBucketBundles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketBundlesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBucketBundlesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBucketMetricData",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetBucketMetricData"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketMetricDataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBucketMetricDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBuckets",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetBuckets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBucketsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBucketsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBundles",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetBundles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBundlesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBundlesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCertificates",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetCertificates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCertificatesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCertificatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCloudFormationStackRecords",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetCloudFormationStackRecords"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCloudFormationStackRecordsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCloudFormationStackRecordsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContactMethods",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/ls/api/2016-11-28/GetContactMethods"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContactMethodsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContactMethodsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContainerAPIMetadata",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/ls/api/2016-11-28/container-api-metadata"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContainerAPIMetadataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContainerAPIMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContainerImages",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serviceName": "route.serviceName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/ls/api/2016-11-28/container-services/{serviceName}/images"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContainerImagesResult"
                    },
                    "inject": [
                        "param.0.serviceName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContainerImagesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContainerLog",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serviceName": "route.serviceName",
                            "containerName": "route.containerName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/ls/api/2016-11-28/container-services/{serviceName}/containers/{containerName}/log"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContainerLogResult"
                    },
                    "inject": [
                        "param.0.serviceName",
                        "param.0.containerName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContainerLogRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContainerServiceDeployments",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serviceName": "route.serviceName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/ls/api/2016-11-28/container-services/{serviceName}/deployments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContainerServiceDeploymentsResult"
                    },
                    "inject": [
                        "param.0.serviceName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContainerServiceDeploymentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContainerServiceMetricData",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serviceName": "route.serviceName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/ls/api/2016-11-28/container-services/{serviceName}/metrics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContainerServiceMetricDataResult"
                    },
                    "inject": [
                        "param.0.serviceName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContainerServiceMetricDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContainerServicePowers",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/ls/api/2016-11-28/container-service-powers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContainerServicePowersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContainerServicePowersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContainerServices",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/ls/api/2016-11-28/container-services"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ContainerServicesListResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContainerServicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCostEstimate",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/budgettracker/getCostEstimate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCostEstimateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCostEstimateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDisk",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetDisk"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDiskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDiskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDisks",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetDisks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDisksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDisksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDiskSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetDiskSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDiskSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDiskSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDiskSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetDiskSnapshots"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDiskSnapshotsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDiskSnapshotsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDistributionBundles",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetDistributionBundles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDistributionBundlesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDistributionBundlesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDistributionLatestCacheReset",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetDistributionLatestCacheReset"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDistributionLatestCacheResetResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDistributionLatestCacheResetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDistributionMetricData",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetDistributionMetricData"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDistributionMetricDataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDistributionMetricDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDistributions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetDistributions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDistributionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDistributionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDomain",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetDomain"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDomainResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDomains",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetDomains"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDomainsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetExportSnapshotRecords",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetExportSnapshotRecords"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetExportSnapshotRecordsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetExportSnapshotRecordsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstance",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetInstance"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstanceAccessDetails",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetInstanceAccessDetails"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceAccessDetailsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceAccessDetailsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstanceMetricData",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetInstanceMetricData"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceMetricDataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceMetricDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstancePortStates",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetInstancePortStates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstancePortStatesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstancePortStatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstances",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetInstances"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstanceSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetInstanceSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstanceSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetInstanceSnapshots"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceSnapshotsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceSnapshotsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstanceState",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetInstanceState"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceStateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceStateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKeyPair",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetKeyPair"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKeyPairResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKeyPairRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetKeyPairs",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetKeyPairs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetKeyPairsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetKeyPairsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLoadBalancer",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetLoadBalancer"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLoadBalancerResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLoadBalancerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLoadBalancerMetricData",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetLoadBalancerMetricData"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLoadBalancerMetricDataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLoadBalancerMetricDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLoadBalancers",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetLoadBalancers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLoadBalancersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLoadBalancersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLoadBalancerTlsCertificates",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetLoadBalancerTlsCertificates"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLoadBalancerTlsCertificatesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLoadBalancerTlsCertificatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLoadBalancerTlsPolicies",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetLoadBalancerTlsPolicies"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLoadBalancerTlsPoliciesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLoadBalancerTlsPoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetOperation",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetOperation"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOperationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOperationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetOperations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetOperations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOperationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOperationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetOperationsForResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetOperationsForResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetOperationsForResourceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetOperationsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRegions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRegions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRegionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRegionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabase",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabase"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabaseBlueprints",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabaseBlueprints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseBlueprintsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseBlueprintsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabaseBundles",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabaseBundles"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseBundlesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseBundlesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabaseEvents",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabaseEvents"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseEventsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseEventsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabaseLogEvents",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabaseLogEvents"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseLogEventsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseLogEventsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabaseLogStreams",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabaseLogStreams"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseLogStreamsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseLogStreamsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabaseMasterUserPassword",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabaseMasterUserPassword"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseMasterUserPasswordResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseMasterUserPasswordRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabaseMetricData",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabaseMetricData"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseMetricDataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseMetricDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabaseParameters",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabaseParameters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseParametersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseParametersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabases",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabases"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabasesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabasesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabaseSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabaseSnapshot"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRelationalDatabaseSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetRelationalDatabaseSnapshots"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRelationalDatabaseSnapshotsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRelationalDatabaseSnapshotsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSetupHistory",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/get-setup-history"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSetupHistoryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSetupHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetStaticIp",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetStaticIp"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetStaticIpResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetStaticIpRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetStaticIps",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/GetStaticIps"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetStaticIpsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetStaticIpsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportKeyPair",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/ImportKeyPair"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportKeyPairResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportKeyPairRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "IsVpcPeered",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/IsVpcPeered"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/IsVpcPeeredResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/IsVpcPeeredRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "OpenInstancePublicPorts",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/OpenInstancePublicPorts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/OpenInstancePublicPortsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/OpenInstancePublicPortsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PeerVpc",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/PeerVpc"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PeerVpcResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PeerVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutAlarm",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/PutAlarm"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAlarmResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAlarmRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutInstancePublicPorts",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/PutInstancePublicPorts"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutInstancePublicPortsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutInstancePublicPortsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RebootInstance",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/RebootInstance"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RebootInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RebootInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RebootRelationalDatabase",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/RebootRelationalDatabase"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RebootRelationalDatabaseResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RebootRelationalDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterContainerImage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serviceName": "route.serviceName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/container-services/{serviceName}/images"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterContainerImageResult"
                    },
                    "inject": [
                        "param.0.serviceName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterContainerImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReleaseStaticIp",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/ReleaseStaticIp"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReleaseStaticIpResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReleaseStaticIpRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetDistributionCache",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/ResetDistributionCache"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetDistributionCacheResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetDistributionCacheRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SendContactMethodVerification",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/SendContactMethodVerification"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendContactMethodVerificationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendContactMethodVerificationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SetIpAddressType",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/SetIpAddressType"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SetIpAddressTypeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetIpAddressTypeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SetResourceAccessForBucket",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/SetResourceAccessForBucket"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SetResourceAccessForBucketResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetResourceAccessForBucketRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SetupInstanceHttps",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/setup-instance-https"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SetupInstanceHttpsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SetupInstanceHttpsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartGUISession",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/start-gui-session"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartGUISessionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartGUISessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartInstance",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/StartInstance"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartRelationalDatabase",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/StartRelationalDatabase"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartRelationalDatabaseResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartRelationalDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopGUISession",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/stop-gui-session"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopGUISessionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopGUISessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopInstance",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/StopInstance"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopRelationalDatabase",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/StopRelationalDatabase"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopRelationalDatabaseResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopRelationalDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/TagResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TestAlarm",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/ls/api/2016-11-28/TestAlarm"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestAlarmResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestAlarmRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UnpeerVpc",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UnpeerVpc"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UnpeerVpcResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UnpeerVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UntagResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateBucket",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UpdateBucket"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBucketResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBucketRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateBucketBundle",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UpdateBucketBundle"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBucketBundleResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBucketBundleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateContainerService",
            "config": {
                "http": {
                    "inject": [
                        {
                            "serviceName": "route.serviceName",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/ls/api/2016-11-28/container-services/{serviceName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateContainerServiceResult"
                    },
                    "inject": [
                        "param.0.serviceName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateContainerServiceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDistribution",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UpdateDistribution"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDistributionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDistributionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDistributionBundle",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UpdateDistributionBundle"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDistributionBundleResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDistributionBundleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDomainEntry",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UpdateDomainEntry"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDomainEntryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDomainEntryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateInstanceMetadataOptions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UpdateInstanceMetadataOptions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateInstanceMetadataOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateInstanceMetadataOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateLoadBalancerAttribute",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UpdateLoadBalancerAttribute"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateLoadBalancerAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateLoadBalancerAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRelationalDatabase",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UpdateRelationalDatabase"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRelationalDatabaseResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRelationalDatabaseRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRelationalDatabaseParameters",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ls/api/2016-11-28/UpdateRelationalDatabaseParameters"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRelationalDatabaseParametersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRelationalDatabaseParametersRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AllocateStaticIpResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "OperationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Operation"
            }
        },
        "Operation": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "isTerminal": {
                    "$ref": "#/$defs/boolean"
                },
                "operationDetails": {
                    "$ref": "#/$defs/string"
                },
                "operationType": {
                    "$ref": "#/$defs/OperationType"
                },
                "status": {
                    "$ref": "#/$defs/OperationStatus"
                },
                "statusChangedAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "errorCode": {
                    "$ref": "#/$defs/string"
                },
                "errorDetails": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "NonEmptyString": {
            "type": "string"
        },
        "ResourceName": {
            "type": "string"
        },
        "ResourceType": {
            "enum": [
                "ContainerService",
                "Instance",
                "StaticIp",
                "KeyPair",
                "InstanceSnapshot",
                "Domain",
                "PeeredVpc",
                "LoadBalancer",
                "LoadBalancerTlsCertificate",
                "Disk",
                "DiskSnapshot",
                "RelationalDatabase",
                "RelationalDatabaseSnapshot",
                "ExportSnapshotRecord",
                "CloudFormationStackRecord",
                "Alarm",
                "ContactMethod",
                "Distribution",
                "Certificate",
                "Bucket"
            ]
        },
        "IsoDate": {
            "type": "string",
            "format": "date-time"
        },
        "ResourceLocation": {
            "type": "object",
            "properties": {
                "availabilityZone": {
                    "$ref": "#/$defs/string"
                },
                "regionName": {
                    "$ref": "#/$defs/RegionName"
                }
            }
        },
        "string": {
            "type": "string"
        },
        "RegionName": {
            "enum": [
                "US_EAST_1",
                "US_EAST_2",
                "US_WEST_1",
                "US_WEST_2",
                "EU_WEST_1",
                "EU_WEST_2",
                "EU_WEST_3",
                "EU_CENTRAL_1",
                "CA_CENTRAL_1",
                "AP_SOUTH_1",
                "AP_SOUTHEAST_1",
                "AP_SOUTHEAST_2",
                "AP_NORTHEAST_1",
                "AP_NORTHEAST_2",
                "EU_NORTH_1"
            ]
        },
        "boolean": {
            "type": "boolean"
        },
        "OperationType": {
            "enum": [
                "DeleteKnownHostKeys",
                "DeleteInstance",
                "CreateInstance",
                "StopInstance",
                "StartInstance",
                "RebootInstance",
                "OpenInstancePublicPorts",
                "PutInstancePublicPorts",
                "CloseInstancePublicPorts",
                "AllocateStaticIp",
                "ReleaseStaticIp",
                "AttachStaticIp",
                "DetachStaticIp",
                "UpdateDomainEntry",
                "DeleteDomainEntry",
                "CreateDomain",
                "DeleteDomain",
                "CreateInstanceSnapshot",
                "DeleteInstanceSnapshot",
                "CreateInstancesFromSnapshot",
                "CreateLoadBalancer",
                "DeleteLoadBalancer",
                "AttachInstancesToLoadBalancer",
                "DetachInstancesFromLoadBalancer",
                "UpdateLoadBalancerAttribute",
                "CreateLoadBalancerTlsCertificate",
                "DeleteLoadBalancerTlsCertificate",
                "AttachLoadBalancerTlsCertificate",
                "CreateDisk",
                "DeleteDisk",
                "AttachDisk",
                "DetachDisk",
                "CreateDiskSnapshot",
                "DeleteDiskSnapshot",
                "CreateDiskFromSnapshot",
                "CreateRelationalDatabase",
                "UpdateRelationalDatabase",
                "DeleteRelationalDatabase",
                "CreateRelationalDatabaseFromSnapshot",
                "CreateRelationalDatabaseSnapshot",
                "DeleteRelationalDatabaseSnapshot",
                "UpdateRelationalDatabaseParameters",
                "StartRelationalDatabase",
                "RebootRelationalDatabase",
                "StopRelationalDatabase",
                "EnableAddOn",
                "DisableAddOn",
                "PutAlarm",
                "GetAlarms",
                "DeleteAlarm",
                "TestAlarm",
                "CreateContactMethod",
                "GetContactMethods",
                "SendContactMethodVerification",
                "DeleteContactMethod",
                "CreateDistribution",
                "UpdateDistribution",
                "DeleteDistribution",
                "ResetDistributionCache",
                "AttachCertificateToDistribution",
                "DetachCertificateFromDistribution",
                "UpdateDistributionBundle",
                "SetIpAddressType",
                "CreateCertificate",
                "DeleteCertificate",
                "CreateContainerService",
                "UpdateContainerService",
                "DeleteContainerService",
                "CreateContainerServiceDeployment",
                "CreateContainerServiceRegistryLogin",
                "RegisterContainerImage",
                "DeleteContainerImage",
                "CreateBucket",
                "DeleteBucket",
                "CreateBucketAccessKey",
                "DeleteBucketAccessKey",
                "UpdateBucketBundle",
                "UpdateBucket",
                "SetResourceAccessForBucket",
                "UpdateInstanceMetadataOptions",
                "StartGUISession",
                "StopGUISession",
                "SetupInstanceHttps"
            ]
        },
        "OperationStatus": {
            "enum": [
                "NotStarted",
                "Started",
                "Failed",
                "Completed",
                "Succeeded"
            ]
        },
        "AllocateStaticIpRequest": {
            "type": "object",
            "properties": {
                "staticIpName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "AttachCertificateToDistributionResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "AttachCertificateToDistributionRequest": {
            "type": "object",
            "properties": {
                "distributionName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "certificateName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "AttachDiskResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "AttachDiskRequest": {
            "type": "object",
            "properties": {
                "diskName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "diskPath": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "autoMounting": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "AttachInstancesToLoadBalancerResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "AttachInstancesToLoadBalancerRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "instanceNames": {
                    "$ref": "#/$defs/ResourceNameList"
                }
            }
        },
        "ResourceNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceName"
            }
        },
        "AttachLoadBalancerTlsCertificateResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "AttachLoadBalancerTlsCertificateRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "certificateName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "AttachStaticIpResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "AttachStaticIpRequest": {
            "type": "object",
            "properties": {
                "staticIpName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "CloseInstancePublicPortsResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "CloseInstancePublicPortsRequest": {
            "type": "object",
            "properties": {
                "portInfo": {
                    "$ref": "#/$defs/PortInfo"
                },
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "PortInfo": {
            "type": "object",
            "properties": {
                "fromPort": {
                    "$ref": "#/$defs/Port"
                },
                "toPort": {
                    "$ref": "#/$defs/Port"
                },
                "protocol": {
                    "$ref": "#/$defs/NetworkProtocol"
                },
                "cidrs": {
                    "$ref": "#/$defs/StringList"
                },
                "ipv6Cidrs": {
                    "$ref": "#/$defs/StringList"
                },
                "cidrListAliases": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "Port": {
            "type": "integer",
            "format": "int32"
        },
        "NetworkProtocol": {
            "enum": [
                "TCP",
                "ALL",
                "UDP",
                "ICMP",
                "ICMPV6"
            ]
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "CopySnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CopySnapshotRequest": {
            "type": "object",
            "properties": {
                "sourceSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "sourceResourceName": {
                    "$ref": "#/$defs/string"
                },
                "restoreDate": {
                    "$ref": "#/$defs/string"
                },
                "useLatestRestorableAutoSnapshot": {
                    "$ref": "#/$defs/boolean"
                },
                "targetSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "sourceRegion": {
                    "$ref": "#/$defs/RegionName"
                }
            }
        },
        "CreateBucketResult": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/Bucket"
                },
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "Bucket": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "accessRules": {
                    "$ref": "#/$defs/AccessRules"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "bundleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "url": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "name": {
                    "$ref": "#/$defs/BucketName"
                },
                "supportCode": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "objectVersioning": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "ableToUpdateBundle": {
                    "$ref": "#/$defs/boolean"
                },
                "readonlyAccessAccounts": {
                    "$ref": "#/$defs/PartnerIdList"
                },
                "resourcesReceivingAccess": {
                    "$ref": "#/$defs/AccessReceiverList"
                },
                "state": {
                    "$ref": "#/$defs/BucketState"
                },
                "accessLogConfig": {
                    "$ref": "#/$defs/BucketAccessLogConfig"
                }
            }
        },
        "AccessRules": {
            "type": "object",
            "properties": {
                "getObject": {
                    "$ref": "#/$defs/AccessType"
                },
                "allowPublicOverrides": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "AccessType": {
            "enum": [
                "Public",
                "Private"
            ]
        },
        "BucketName": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "PartnerIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NonEmptyString"
            }
        },
        "AccessReceiverList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceReceivingAccess"
            }
        },
        "ResourceReceivingAccess": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "resourceType": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "BucketState": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "message": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BucketAccessLogConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "$ref": "#/$defs/boolean"
                },
                "destination": {
                    "$ref": "#/$defs/BucketName"
                },
                "prefix": {
                    "$ref": "#/$defs/BucketAccessLogPrefix"
                }
            }
        },
        "BucketAccessLogPrefix": {
            "type": "string"
        },
        "CreateBucketRequest": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "bundleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "enableObjectVersioning": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "CreateBucketAccessKeyResult": {
            "type": "object",
            "properties": {
                "accessKey": {
                    "$ref": "#/$defs/AccessKey"
                },
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "AccessKey": {
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "$ref": "#/$defs/IAMAccessKeyId"
                },
                "secretAccessKey": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "status": {
                    "$ref": "#/$defs/StatusType"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "lastUsed": {
                    "$ref": "#/$defs/AccessKeyLastUsed"
                }
            }
        },
        "IAMAccessKeyId": {
            "type": "string"
        },
        "StatusType": {
            "enum": [
                "Active",
                "Inactive"
            ]
        },
        "AccessKeyLastUsed": {
            "type": "object",
            "properties": {
                "lastUsedDate": {
                    "$ref": "#/$defs/IsoDate"
                },
                "region": {
                    "$ref": "#/$defs/string"
                },
                "serviceName": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateBucketAccessKeyRequest": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                }
            }
        },
        "CreateCertificateResult": {
            "type": "object",
            "properties": {
                "certificate": {
                    "$ref": "#/$defs/CertificateSummary"
                },
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CertificateSummary": {
            "type": "object",
            "properties": {
                "certificateArn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "certificateName": {
                    "$ref": "#/$defs/CertificateName"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "certificateDetail": {
                    "$ref": "#/$defs/Certificate"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CertificateName": {
            "type": "string"
        },
        "DomainName": {
            "type": "string"
        },
        "Certificate": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "name": {
                    "$ref": "#/$defs/CertificateName"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "status": {
                    "$ref": "#/$defs/CertificateStatus"
                },
                "serialNumber": {
                    "$ref": "#/$defs/SerialNumber"
                },
                "subjectAlternativeNames": {
                    "$ref": "#/$defs/SubjectAlternativeNameList"
                },
                "domainValidationRecords": {
                    "$ref": "#/$defs/DomainValidationRecordList"
                },
                "requestFailureReason": {
                    "$ref": "#/$defs/RequestFailureReason"
                },
                "inUseResourceCount": {
                    "$ref": "#/$defs/InUseResourceCount"
                },
                "keyAlgorithm": {
                    "$ref": "#/$defs/KeyAlgorithm"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "issuedAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "issuerCA": {
                    "$ref": "#/$defs/IssuerCA"
                },
                "notBefore": {
                    "$ref": "#/$defs/IsoDate"
                },
                "notAfter": {
                    "$ref": "#/$defs/IsoDate"
                },
                "eligibleToRenew": {
                    "$ref": "#/$defs/EligibleToRenew"
                },
                "renewalSummary": {
                    "$ref": "#/$defs/RenewalSummary"
                },
                "revokedAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "revocationReason": {
                    "$ref": "#/$defs/RevocationReason"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CertificateStatus": {
            "enum": [
                "PendingValidation",
                "Issued",
                "Inactive",
                "Expired",
                "ValidationTimedOut",
                "Revoked",
                "Failed"
            ]
        },
        "SerialNumber": {
            "type": "string"
        },
        "SubjectAlternativeNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainName"
            }
        },
        "DomainValidationRecordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainValidationRecord"
            }
        },
        "DomainValidationRecord": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "resourceRecord": {
                    "$ref": "#/$defs/ResourceRecord"
                },
                "dnsRecordCreationState": {
                    "$ref": "#/$defs/DnsRecordCreationState"
                },
                "validationStatus": {
                    "$ref": "#/$defs/CertificateDomainValidationStatus"
                }
            }
        },
        "ResourceRecord": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "type": {
                    "$ref": "#/$defs/string"
                },
                "value": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DnsRecordCreationState": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/DnsRecordCreationStateCode"
                },
                "message": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DnsRecordCreationStateCode": {
            "enum": [
                "Succeeded",
                "Started",
                "Failed"
            ]
        },
        "CertificateDomainValidationStatus": {
            "enum": [
                "PendingValidation",
                "Failed",
                "Success"
            ]
        },
        "RequestFailureReason": {
            "type": "string"
        },
        "InUseResourceCount": {
            "type": "integer",
            "format": "int32"
        },
        "KeyAlgorithm": {
            "type": "string"
        },
        "IssuerCA": {
            "type": "string"
        },
        "EligibleToRenew": {
            "type": "string"
        },
        "RenewalSummary": {
            "type": "object",
            "properties": {
                "domainValidationRecords": {
                    "$ref": "#/$defs/DomainValidationRecordList"
                },
                "renewalStatus": {
                    "$ref": "#/$defs/RenewalStatus"
                },
                "renewalStatusReason": {
                    "$ref": "#/$defs/RenewalStatusReason"
                },
                "updatedAt": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "RenewalStatus": {
            "enum": [
                "PendingAutoRenewal",
                "PendingValidation",
                "Success",
                "Failed"
            ]
        },
        "RenewalStatusReason": {
            "type": "string"
        },
        "RevocationReason": {
            "type": "string"
        },
        "CreateCertificateRequest": {
            "type": "object",
            "properties": {
                "certificateName": {
                    "$ref": "#/$defs/CertificateName"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "subjectAlternativeNames": {
                    "$ref": "#/$defs/SubjectAlternativeNameList"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateCloudFormationStackResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateCloudFormationStackRequest": {
            "type": "object",
            "properties": {
                "instances": {
                    "$ref": "#/$defs/InstanceEntryList"
                }
            }
        },
        "InstanceEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceEntry"
            }
        },
        "InstanceEntry": {
            "type": "object",
            "properties": {
                "sourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "instanceType": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "portInfoSource": {
                    "$ref": "#/$defs/PortInfoSourceType"
                },
                "userData": {
                    "$ref": "#/$defs/string"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "PortInfoSourceType": {
            "enum": [
                "Default",
                "Instance",
                "None",
                "Closed"
            ]
        },
        "CreateContactMethodResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateContactMethodRequest": {
            "type": "object",
            "properties": {
                "protocol": {
                    "$ref": "#/$defs/ContactProtocol"
                },
                "contactEndpoint": {
                    "$ref": "#/$defs/StringMax256"
                }
            }
        },
        "ContactProtocol": {
            "enum": [
                "Email",
                "SMS"
            ]
        },
        "StringMax256": {
            "type": "string"
        },
        "CreateContainerServiceResult": {
            "type": "object",
            "properties": {
                "containerService": {
                    "$ref": "#/$defs/ContainerService"
                }
            }
        },
        "ContainerService": {
            "type": "object",
            "properties": {
                "containerServiceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "power": {
                    "$ref": "#/$defs/ContainerServicePowerName"
                },
                "powerId": {
                    "$ref": "#/$defs/string"
                },
                "state": {
                    "$ref": "#/$defs/ContainerServiceState"
                },
                "stateDetail": {
                    "$ref": "#/$defs/ContainerServiceStateDetail"
                },
                "scale": {
                    "$ref": "#/$defs/ContainerServiceScale"
                },
                "currentDeployment": {
                    "$ref": "#/$defs/ContainerServiceDeployment"
                },
                "nextDeployment": {
                    "$ref": "#/$defs/ContainerServiceDeployment"
                },
                "isDisabled": {
                    "$ref": "#/$defs/boolean"
                },
                "principalArn": {
                    "$ref": "#/$defs/string"
                },
                "privateDomainName": {
                    "$ref": "#/$defs/string"
                },
                "publicDomainNames": {
                    "$ref": "#/$defs/ContainerServicePublicDomains"
                },
                "url": {
                    "$ref": "#/$defs/string"
                },
                "privateRegistryAccess": {
                    "$ref": "#/$defs/PrivateRegistryAccess"
                }
            }
        },
        "ContainerServiceName": {
            "type": "string"
        },
        "ContainerServicePowerName": {
            "enum": [
                "nano",
                "micro",
                "small",
                "medium",
                "large",
                "xlarge"
            ]
        },
        "ContainerServiceState": {
            "enum": [
                "PENDING",
                "READY",
                "RUNNING",
                "UPDATING",
                "DELETING",
                "DISABLED",
                "DEPLOYING"
            ]
        },
        "ContainerServiceStateDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/ContainerServiceStateDetailCode"
                },
                "message": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ContainerServiceStateDetailCode": {
            "enum": [
                "CREATING_SYSTEM_RESOURCES",
                "CREATING_NETWORK_INFRASTRUCTURE",
                "PROVISIONING_CERTIFICATE",
                "PROVISIONING_SERVICE",
                "CREATING_DEPLOYMENT",
                "EVALUATING_HEALTH_CHECK",
                "ACTIVATING_DEPLOYMENT",
                "CERTIFICATE_LIMIT_EXCEEDED",
                "UNKNOWN_ERROR"
            ]
        },
        "ContainerServiceScale": {
            "type": "integer",
            "format": "int32"
        },
        "ContainerServiceDeployment": {
            "type": "object",
            "properties": {
                "version": {
                    "$ref": "#/$defs/integer"
                },
                "state": {
                    "$ref": "#/$defs/ContainerServiceDeploymentState"
                },
                "containers": {
                    "$ref": "#/$defs/ContainerMap"
                },
                "publicEndpoint": {
                    "$ref": "#/$defs/ContainerServiceEndpoint"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "integer": {
            "type": "integer",
            "format": "int32"
        },
        "ContainerServiceDeploymentState": {
            "enum": [
                "ACTIVATING",
                "ACTIVE",
                "INACTIVE",
                "FAILED"
            ]
        },
        "ContainerMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Container"
            }
        },
        "Container": {
            "type": "object",
            "properties": {
                "image": {
                    "$ref": "#/$defs/string"
                },
                "command": {
                    "$ref": "#/$defs/StringList"
                },
                "environment": {
                    "$ref": "#/$defs/Environment"
                },
                "ports": {
                    "$ref": "#/$defs/PortMap"
                }
            }
        },
        "Environment": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string"
            }
        },
        "PortMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ContainerServiceProtocol"
            }
        },
        "ContainerServiceProtocol": {
            "enum": [
                "HTTP",
                "HTTPS",
                "TCP",
                "UDP"
            ]
        },
        "ContainerServiceEndpoint": {
            "type": "object",
            "properties": {
                "containerName": {
                    "$ref": "#/$defs/string"
                },
                "containerPort": {
                    "$ref": "#/$defs/integer"
                },
                "healthCheck": {
                    "$ref": "#/$defs/ContainerServiceHealthCheckConfig"
                }
            }
        },
        "ContainerServiceHealthCheckConfig": {
            "type": "object",
            "properties": {
                "healthyThreshold": {
                    "$ref": "#/$defs/integer"
                },
                "unhealthyThreshold": {
                    "$ref": "#/$defs/integer"
                },
                "timeoutSeconds": {
                    "$ref": "#/$defs/integer"
                },
                "intervalSeconds": {
                    "$ref": "#/$defs/integer"
                },
                "path": {
                    "$ref": "#/$defs/string"
                },
                "successCodes": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ContainerServicePublicDomains": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ContainerServicePublicDomainsList"
            }
        },
        "ContainerServicePublicDomainsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "PrivateRegistryAccess": {
            "type": "object",
            "properties": {
                "ecrImagePullerRole": {
                    "$ref": "#/$defs/ContainerServiceECRImagePullerRole"
                }
            }
        },
        "ContainerServiceECRImagePullerRole": {
            "type": "object",
            "properties": {
                "isActive": {
                    "$ref": "#/$defs/boolean"
                },
                "principalArn": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateContainerServiceRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                },
                "power": {
                    "$ref": "#/$defs/ContainerServicePowerName"
                },
                "scale": {
                    "$ref": "#/$defs/ContainerServiceScale"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "publicDomainNames": {
                    "$ref": "#/$defs/ContainerServicePublicDomains"
                },
                "deployment": {
                    "$ref": "#/$defs/ContainerServiceDeploymentRequest"
                },
                "privateRegistryAccess": {
                    "$ref": "#/$defs/PrivateRegistryAccessRequest"
                }
            }
        },
        "ContainerServiceDeploymentRequest": {
            "type": "object",
            "properties": {
                "containers": {
                    "$ref": "#/$defs/ContainerMap"
                },
                "publicEndpoint": {
                    "$ref": "#/$defs/EndpointRequest"
                }
            }
        },
        "EndpointRequest": {
            "type": "object",
            "properties": {
                "containerName": {
                    "$ref": "#/$defs/string"
                },
                "containerPort": {
                    "$ref": "#/$defs/integer"
                },
                "healthCheck": {
                    "$ref": "#/$defs/ContainerServiceHealthCheckConfig"
                }
            }
        },
        "PrivateRegistryAccessRequest": {
            "type": "object",
            "properties": {
                "ecrImagePullerRole": {
                    "$ref": "#/$defs/ContainerServiceECRImagePullerRoleRequest"
                }
            }
        },
        "ContainerServiceECRImagePullerRoleRequest": {
            "type": "object",
            "properties": {
                "isActive": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "CreateContainerServiceDeploymentResult": {
            "type": "object",
            "properties": {
                "containerService": {
                    "$ref": "#/$defs/ContainerService"
                }
            }
        },
        "CreateContainerServiceDeploymentRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                },
                "containers": {
                    "$ref": "#/$defs/ContainerMap"
                },
                "publicEndpoint": {
                    "$ref": "#/$defs/EndpointRequest"
                }
            }
        },
        "CreateContainerServiceRegistryLoginResult": {
            "type": "object",
            "properties": {
                "registryLogin": {
                    "$ref": "#/$defs/ContainerServiceRegistryLogin"
                }
            }
        },
        "ContainerServiceRegistryLogin": {
            "type": "object",
            "properties": {
                "username": {
                    "$ref": "#/$defs/string"
                },
                "password": {
                    "$ref": "#/$defs/string"
                },
                "expiresAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "registry": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateContainerServiceRegistryLoginRequest": {
            "type": "object",
            "properties": {}
        },
        "CreateDiskResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateDiskRequest": {
            "type": "object",
            "properties": {
                "diskName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "sizeInGb": {
                    "$ref": "#/$defs/integer"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "addOns": {
                    "$ref": "#/$defs/AddOnRequestList"
                }
            }
        },
        "AddOnRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddOnRequest"
            }
        },
        "AddOnRequest": {
            "type": "object",
            "properties": {
                "addOnType": {
                    "$ref": "#/$defs/AddOnType"
                },
                "autoSnapshotAddOnRequest": {
                    "$ref": "#/$defs/AutoSnapshotAddOnRequest"
                },
                "stopInstanceOnIdleRequest": {
                    "$ref": "#/$defs/StopInstanceOnIdleRequest"
                }
            }
        },
        "AddOnType": {
            "enum": [
                "AutoSnapshot",
                "StopInstanceOnIdle"
            ]
        },
        "AutoSnapshotAddOnRequest": {
            "type": "object",
            "properties": {
                "snapshotTimeOfDay": {
                    "$ref": "#/$defs/TimeOfDay"
                }
            }
        },
        "TimeOfDay": {
            "type": "string"
        },
        "StopInstanceOnIdleRequest": {
            "type": "object",
            "properties": {
                "threshold": {
                    "$ref": "#/$defs/string"
                },
                "duration": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateDiskFromSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateDiskFromSnapshotRequest": {
            "type": "object",
            "properties": {
                "diskName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "diskSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "sizeInGb": {
                    "$ref": "#/$defs/integer"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "addOns": {
                    "$ref": "#/$defs/AddOnRequestList"
                },
                "sourceDiskName": {
                    "$ref": "#/$defs/string"
                },
                "restoreDate": {
                    "$ref": "#/$defs/string"
                },
                "useLatestRestorableAutoSnapshot": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "CreateDiskSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateDiskSnapshotRequest": {
            "type": "object",
            "properties": {
                "diskName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "diskSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateDistributionResult": {
            "type": "object",
            "properties": {
                "distribution": {
                    "$ref": "#/$defs/LightsailDistribution"
                },
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "LightsailDistribution": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "alternativeDomainNames": {
                    "$ref": "#/$defs/StringList"
                },
                "status": {
                    "$ref": "#/$defs/string"
                },
                "isEnabled": {
                    "$ref": "#/$defs/boolean"
                },
                "domainName": {
                    "$ref": "#/$defs/string"
                },
                "bundleId": {
                    "$ref": "#/$defs/string"
                },
                "certificateName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "origin": {
                    "$ref": "#/$defs/Origin"
                },
                "originPublicDNS": {
                    "$ref": "#/$defs/string"
                },
                "defaultCacheBehavior": {
                    "$ref": "#/$defs/CacheBehavior"
                },
                "cacheBehaviorSettings": {
                    "$ref": "#/$defs/CacheSettings"
                },
                "cacheBehaviors": {
                    "$ref": "#/$defs/CacheBehaviorList"
                },
                "ableToUpdateBundle": {
                    "$ref": "#/$defs/boolean"
                },
                "ipAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "viewerMinimumTlsProtocolVersion": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "Origin": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "regionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "protocolPolicy": {
                    "$ref": "#/$defs/OriginProtocolPolicyEnum"
                },
                "responseTimeout": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "OriginProtocolPolicyEnum": {
            "enum": [
                "HTTPOnly",
                "HTTPSOnly"
            ]
        },
        "CacheBehavior": {
            "type": "object",
            "properties": {
                "behavior": {
                    "$ref": "#/$defs/BehaviorEnum"
                }
            }
        },
        "BehaviorEnum": {
            "enum": [
                "DontCacheSetting",
                "CacheSetting"
            ]
        },
        "CacheSettings": {
            "type": "object",
            "properties": {
                "defaultTTL": {
                    "$ref": "#/$defs/long"
                },
                "minimumTTL": {
                    "$ref": "#/$defs/long"
                },
                "maximumTTL": {
                    "$ref": "#/$defs/long"
                },
                "allowedHTTPMethods": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "cachedHTTPMethods": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "forwardedCookies": {
                    "$ref": "#/$defs/CookieObject"
                },
                "forwardedHeaders": {
                    "$ref": "#/$defs/HeaderObject"
                },
                "forwardedQueryStrings": {
                    "$ref": "#/$defs/QueryStringObject"
                }
            }
        },
        "long": {
            "type": "integer",
            "format": "int64"
        },
        "CookieObject": {
            "type": "object",
            "properties": {
                "option": {
                    "$ref": "#/$defs/ForwardValues"
                },
                "cookiesAllowList": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "ForwardValues": {
            "enum": [
                "none",
                "allowList",
                "all"
            ]
        },
        "HeaderObject": {
            "type": "object",
            "properties": {
                "option": {
                    "$ref": "#/$defs/ForwardValues"
                },
                "headersAllowList": {
                    "$ref": "#/$defs/HeaderForwardList"
                }
            }
        },
        "HeaderForwardList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HeaderEnum"
            }
        },
        "HeaderEnum": {
            "enum": [
                "accept",
                "acceptCharset",
                "acceptDatetime",
                "acceptEncoding",
                "acceptLanguage",
                "authorization",
                "cloudFrontForwardedProto",
                "cloudFrontIsDesktopViewer",
                "cloudFrontIsMobileViewer",
                "cloudFrontIsSmartTVViewer",
                "cloudFrontIsTabletViewer",
                "cloudFrontViewerCountry",
                "host",
                "origin",
                "referer"
            ]
        },
        "QueryStringObject": {
            "type": "object",
            "properties": {
                "option": {
                    "$ref": "#/$defs/boolean"
                },
                "queryStringsAllowList": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "CacheBehaviorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CacheBehaviorPerPath"
            }
        },
        "CacheBehaviorPerPath": {
            "type": "object",
            "properties": {
                "path": {
                    "$ref": "#/$defs/string"
                },
                "behavior": {
                    "$ref": "#/$defs/BehaviorEnum"
                }
            }
        },
        "IpAddressType": {
            "enum": [
                "DUALSTACK",
                "IPV4",
                "IPV6"
            ]
        },
        "CreateDistributionRequest": {
            "type": "object",
            "properties": {
                "distributionName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "origin": {
                    "$ref": "#/$defs/InputOrigin"
                },
                "defaultCacheBehavior": {
                    "$ref": "#/$defs/CacheBehavior"
                },
                "cacheBehaviorSettings": {
                    "$ref": "#/$defs/CacheSettings"
                },
                "cacheBehaviors": {
                    "$ref": "#/$defs/CacheBehaviorList"
                },
                "bundleId": {
                    "$ref": "#/$defs/string"
                },
                "ipAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "certificateName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "viewerMinimumTlsProtocolVersion": {
                    "$ref": "#/$defs/ViewerMinimumTlsProtocolVersionEnum"
                }
            }
        },
        "InputOrigin": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "regionName": {
                    "$ref": "#/$defs/RegionName"
                },
                "protocolPolicy": {
                    "$ref": "#/$defs/OriginProtocolPolicyEnum"
                },
                "responseTimeout": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ViewerMinimumTlsProtocolVersionEnum": {
            "enum": [
                "TLSv11_2016",
                "TLSv12_2018",
                "TLSv12_2019",
                "TLSv12_2021"
            ]
        },
        "CreateDomainResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "CreateDomainRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateDomainEntryResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "CreateDomainEntryRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "domainEntry": {
                    "$ref": "#/$defs/DomainEntry"
                }
            }
        },
        "DomainEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "name": {
                    "$ref": "#/$defs/DomainName"
                },
                "target": {
                    "$ref": "#/$defs/string"
                },
                "isAlias": {
                    "$ref": "#/$defs/boolean"
                },
                "type": {
                    "$ref": "#/$defs/DomainEntryType"
                },
                "options": {
                    "$ref": "#/$defs/DomainEntryOptions"
                }
            }
        },
        "DomainEntryType": {
            "type": "string"
        },
        "DomainEntryOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string"
            }
        },
        "CreateGUISessionAccessDetailsResult": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "percentageComplete": {
                    "$ref": "#/$defs/integer"
                },
                "failureReason": {
                    "$ref": "#/$defs/string"
                },
                "sessions": {
                    "$ref": "#/$defs/Sessions"
                }
            }
        },
        "Status": {
            "enum": [
                "StartExpired",
                "NotStarted",
                "Started",
                "Starting",
                "Stopped",
                "Stopping",
                "SettingUpInstance",
                "FailedInstanceCreation",
                "FailedStartingGUISession",
                "FailedStoppingGUISession"
            ]
        },
        "Sessions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Session"
            }
        },
        "Session": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "url": {
                    "$ref": "#/$defs/SensitiveNonEmptyString"
                },
                "isPrimary": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "SensitiveNonEmptyString": {
            "type": "string"
        },
        "CreateGUISessionAccessDetailsRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "CreateInstancesResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateInstancesRequest": {
            "type": "object",
            "properties": {
                "instanceNames": {
                    "$ref": "#/$defs/StringList"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/string"
                },
                "customImageName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "blueprintId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "bundleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "userData": {
                    "$ref": "#/$defs/string"
                },
                "keyPairName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "addOns": {
                    "$ref": "#/$defs/AddOnRequestList"
                },
                "ipAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                }
            }
        },
        "CreateInstancesFromSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateInstancesFromSnapshotRequest": {
            "type": "object",
            "properties": {
                "instanceNames": {
                    "$ref": "#/$defs/StringList"
                },
                "attachedDiskMapping": {
                    "$ref": "#/$defs/AttachedDiskMap"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/string"
                },
                "instanceSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "bundleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "userData": {
                    "$ref": "#/$defs/string"
                },
                "keyPairName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "addOns": {
                    "$ref": "#/$defs/AddOnRequestList"
                },
                "ipAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "sourceInstanceName": {
                    "$ref": "#/$defs/string"
                },
                "restoreDate": {
                    "$ref": "#/$defs/string"
                },
                "useLatestRestorableAutoSnapshot": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "AttachedDiskMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DiskMapList"
            }
        },
        "DiskMapList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DiskMap"
            }
        },
        "DiskMap": {
            "type": "object",
            "properties": {
                "originalDiskPath": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "newDiskName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "CreateInstanceSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateInstanceSnapshotRequest": {
            "type": "object",
            "properties": {
                "instanceSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateKeyPairResult": {
            "type": "object",
            "properties": {
                "keyPair": {
                    "$ref": "#/$defs/KeyPair"
                },
                "publicKeyBase64": {
                    "$ref": "#/$defs/Base64"
                },
                "privateKeyBase64": {
                    "$ref": "#/$defs/Base64"
                },
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "KeyPair": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "fingerprint": {
                    "$ref": "#/$defs/Base64"
                }
            }
        },
        "Base64": {
            "type": "string"
        },
        "CreateKeyPairRequest": {
            "type": "object",
            "properties": {
                "keyPairName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateLoadBalancerResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateLoadBalancerRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "instancePort": {
                    "$ref": "#/$defs/Port"
                },
                "healthCheckPath": {
                    "$ref": "#/$defs/string"
                },
                "certificateName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "certificateDomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "certificateAlternativeNames": {
                    "$ref": "#/$defs/DomainNameList"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ipAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "tlsPolicyName": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DomainNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainName"
            }
        },
        "CreateLoadBalancerTlsCertificateResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateLoadBalancerTlsCertificateRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "certificateName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "certificateDomainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "certificateAlternativeNames": {
                    "$ref": "#/$defs/DomainNameList"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateRelationalDatabaseResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateRelationalDatabaseRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/string"
                },
                "relationalDatabaseBlueprintId": {
                    "$ref": "#/$defs/string"
                },
                "relationalDatabaseBundleId": {
                    "$ref": "#/$defs/string"
                },
                "masterDatabaseName": {
                    "$ref": "#/$defs/string"
                },
                "masterUsername": {
                    "$ref": "#/$defs/string"
                },
                "masterUserPassword": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "preferredBackupWindow": {
                    "$ref": "#/$defs/string"
                },
                "preferredMaintenanceWindow": {
                    "$ref": "#/$defs/string"
                },
                "publiclyAccessible": {
                    "$ref": "#/$defs/boolean"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "SensitiveString": {
            "type": "string"
        },
        "CreateRelationalDatabaseFromSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateRelationalDatabaseFromSnapshotRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "availabilityZone": {
                    "$ref": "#/$defs/string"
                },
                "publiclyAccessible": {
                    "$ref": "#/$defs/boolean"
                },
                "relationalDatabaseSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "relationalDatabaseBundleId": {
                    "$ref": "#/$defs/string"
                },
                "sourceRelationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "restoreTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "useLatestRestorableTime": {
                    "$ref": "#/$defs/boolean"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateRelationalDatabaseSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "CreateRelationalDatabaseSnapshotRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "relationalDatabaseSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DeleteAlarmResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteAlarmRequest": {
            "type": "object",
            "properties": {
                "alarmName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DeleteAutoSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteAutoSnapshotRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "date": {
                    "$ref": "#/$defs/AutoSnapshotDate"
                }
            }
        },
        "AutoSnapshotDate": {
            "type": "string"
        },
        "DeleteBucketResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteBucketRequest": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "forceDelete": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "DeleteBucketAccessKeyResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteBucketAccessKeyRequest": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "accessKeyId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "DeleteCertificateResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteCertificateRequest": {
            "type": "object",
            "properties": {
                "certificateName": {
                    "$ref": "#/$defs/CertificateName"
                }
            }
        },
        "DeleteContactMethodResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteContactMethodRequest": {
            "type": "object",
            "properties": {
                "protocol": {
                    "$ref": "#/$defs/ContactProtocol"
                }
            }
        },
        "DeleteContainerImageResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteContainerImageRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                },
                "image": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteContainerServiceResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteContainerServiceRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                }
            }
        },
        "DeleteDiskResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteDiskRequest": {
            "type": "object",
            "properties": {
                "diskName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "forceDeleteAddOns": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "DeleteDiskSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteDiskSnapshotRequest": {
            "type": "object",
            "properties": {
                "diskSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DeleteDistributionResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "DeleteDistributionRequest": {
            "type": "object",
            "properties": {
                "distributionName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DeleteDomainResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "DeleteDomainRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "DeleteDomainEntryResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "DeleteDomainEntryRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "domainEntry": {
                    "$ref": "#/$defs/DomainEntry"
                }
            }
        },
        "DeleteInstanceResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteInstanceRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "forceDeleteAddOns": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "DeleteInstanceSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteInstanceSnapshotRequest": {
            "type": "object",
            "properties": {
                "instanceSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DeleteKeyPairResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "DeleteKeyPairRequest": {
            "type": "object",
            "properties": {
                "keyPairName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "expectedFingerprint": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteKnownHostKeysResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteKnownHostKeysRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DeleteLoadBalancerResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteLoadBalancerRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DeleteLoadBalancerTlsCertificateResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteLoadBalancerTlsCertificateRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "certificateName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "force": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "DeleteRelationalDatabaseResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteRelationalDatabaseRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "skipFinalSnapshot": {
                    "$ref": "#/$defs/boolean"
                },
                "finalRelationalDatabaseSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DeleteRelationalDatabaseSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DeleteRelationalDatabaseSnapshotRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DetachCertificateFromDistributionResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "DetachCertificateFromDistributionRequest": {
            "type": "object",
            "properties": {
                "distributionName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DetachDiskResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DetachDiskRequest": {
            "type": "object",
            "properties": {
                "diskName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DetachInstancesFromLoadBalancerResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DetachInstancesFromLoadBalancerRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "instanceNames": {
                    "$ref": "#/$defs/ResourceNameList"
                }
            }
        },
        "DetachStaticIpResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DetachStaticIpRequest": {
            "type": "object",
            "properties": {
                "staticIpName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DisableAddOnResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "DisableAddOnRequest": {
            "type": "object",
            "properties": {
                "addOnType": {
                    "$ref": "#/$defs/AddOnType"
                },
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "DownloadDefaultKeyPairResult": {
            "type": "object",
            "properties": {
                "publicKeyBase64": {
                    "$ref": "#/$defs/Base64"
                },
                "privateKeyBase64": {
                    "$ref": "#/$defs/Base64"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "DownloadDefaultKeyPairRequest": {
            "type": "object",
            "properties": {}
        },
        "EnableAddOnResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "EnableAddOnRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "addOnRequest": {
                    "$ref": "#/$defs/AddOnRequest"
                }
            }
        },
        "ExportSnapshotResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "ExportSnapshotRequest": {
            "type": "object",
            "properties": {
                "sourceSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetActiveNamesResult": {
            "type": "object",
            "properties": {
                "activeNames": {
                    "$ref": "#/$defs/StringList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetActiveNamesRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetAlarmsResult": {
            "type": "object",
            "properties": {
                "alarms": {
                    "$ref": "#/$defs/AlarmsList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "AlarmsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Alarm"
            }
        },
        "Alarm": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "monitoredResourceInfo": {
                    "$ref": "#/$defs/MonitoredResourceInfo"
                },
                "comparisonOperator": {
                    "$ref": "#/$defs/ComparisonOperator"
                },
                "evaluationPeriods": {
                    "$ref": "#/$defs/integer"
                },
                "period": {
                    "$ref": "#/$defs/MetricPeriod"
                },
                "threshold": {
                    "$ref": "#/$defs/double"
                },
                "datapointsToAlarm": {
                    "$ref": "#/$defs/integer"
                },
                "treatMissingData": {
                    "$ref": "#/$defs/TreatMissingData"
                },
                "statistic": {
                    "$ref": "#/$defs/MetricStatistic"
                },
                "metricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "state": {
                    "$ref": "#/$defs/AlarmState"
                },
                "unit": {
                    "$ref": "#/$defs/MetricUnit"
                },
                "contactProtocols": {
                    "$ref": "#/$defs/ContactProtocolsList"
                },
                "notificationTriggers": {
                    "$ref": "#/$defs/NotificationTriggerList"
                },
                "notificationEnabled": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "MonitoredResourceInfo": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "ComparisonOperator": {
            "enum": [
                "GreaterThanOrEqualToThreshold",
                "GreaterThanThreshold",
                "LessThanThreshold",
                "LessThanOrEqualToThreshold"
            ]
        },
        "MetricPeriod": {
            "type": "integer",
            "format": "int32"
        },
        "double": {
            "type": "number",
            "format": "double"
        },
        "TreatMissingData": {
            "enum": [
                "Breaching",
                "NotBreaching",
                "Ignore",
                "Missing"
            ]
        },
        "MetricStatistic": {
            "enum": [
                "Minimum",
                "Maximum",
                "Sum",
                "Average",
                "SampleCount"
            ]
        },
        "MetricName": {
            "enum": [
                "CPUUtilization",
                "NetworkIn",
                "NetworkOut",
                "StatusCheckFailed",
                "StatusCheckFailed_Instance",
                "StatusCheckFailed_System",
                "ClientTLSNegotiationErrorCount",
                "HealthyHostCount",
                "UnhealthyHostCount",
                "HTTPCode_LB_4XX_Count",
                "HTTPCode_LB_5XX_Count",
                "HTTPCode_Instance_2XX_Count",
                "HTTPCode_Instance_3XX_Count",
                "HTTPCode_Instance_4XX_Count",
                "HTTPCode_Instance_5XX_Count",
                "InstanceResponseTime",
                "RejectedConnectionCount",
                "RequestCount",
                "DatabaseConnections",
                "DiskQueueDepth",
                "FreeStorageSpace",
                "NetworkReceiveThroughput",
                "NetworkTransmitThroughput",
                "BurstCapacityTime",
                "BurstCapacityPercentage"
            ]
        },
        "AlarmState": {
            "enum": [
                "OK",
                "ALARM",
                "INSUFFICIENT_DATA"
            ]
        },
        "MetricUnit": {
            "enum": [
                "Seconds",
                "Microseconds",
                "Milliseconds",
                "Bytes",
                "Kilobytes",
                "Megabytes",
                "Gigabytes",
                "Terabytes",
                "Bits",
                "Kilobits",
                "Megabits",
                "Gigabits",
                "Terabits",
                "Percent",
                "Count",
                "BytesSecond",
                "KilobytesSecond",
                "MegabytesSecond",
                "GigabytesSecond",
                "TerabytesSecond",
                "BitsSecond",
                "KilobitsSecond",
                "MegabitsSecond",
                "GigabitsSecond",
                "TerabitsSecond",
                "CountSecond",
                "None"
            ]
        },
        "ContactProtocolsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContactProtocol"
            }
        },
        "NotificationTriggerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AlarmState"
            }
        },
        "GetAlarmsRequest": {
            "type": "object",
            "properties": {
                "alarmName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                },
                "monitoredResourceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetAutoSnapshotsResult": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "autoSnapshots": {
                    "$ref": "#/$defs/AutoSnapshotDetailsList"
                }
            }
        },
        "AutoSnapshotDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoSnapshotDetails"
            }
        },
        "AutoSnapshotDetails": {
            "type": "object",
            "properties": {
                "date": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "status": {
                    "$ref": "#/$defs/AutoSnapshotStatus"
                },
                "fromAttachedDisks": {
                    "$ref": "#/$defs/AttachedDiskList"
                }
            }
        },
        "AutoSnapshotStatus": {
            "enum": [
                "SUCCESS",
                "FAILED",
                "IN_PROGRESS",
                "NOT_FOUND"
            ]
        },
        "AttachedDiskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttachedDisk"
            }
        },
        "AttachedDisk": {
            "type": "object",
            "properties": {
                "path": {
                    "$ref": "#/$defs/string"
                },
                "sizeInGb": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "GetAutoSnapshotsRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetBlueprintsResult": {
            "type": "object",
            "properties": {
                "blueprints": {
                    "$ref": "#/$defs/BlueprintList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BlueprintList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Blueprint"
            }
        },
        "Blueprint": {
            "type": "object",
            "properties": {
                "blueprintId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "group": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "type": {
                    "$ref": "#/$defs/BlueprintType"
                },
                "description": {
                    "$ref": "#/$defs/string"
                },
                "isActive": {
                    "$ref": "#/$defs/boolean"
                },
                "minPower": {
                    "$ref": "#/$defs/integer"
                },
                "version": {
                    "$ref": "#/$defs/string"
                },
                "versionCode": {
                    "$ref": "#/$defs/string"
                },
                "productUrl": {
                    "$ref": "#/$defs/string"
                },
                "licenseUrl": {
                    "$ref": "#/$defs/string"
                },
                "platform": {
                    "$ref": "#/$defs/InstancePlatform"
                },
                "appCategory": {
                    "$ref": "#/$defs/AppCategory"
                }
            }
        },
        "BlueprintType": {
            "enum": [
                "os",
                "app"
            ]
        },
        "InstancePlatform": {
            "enum": [
                "LinuxUnix",
                "Windows"
            ]
        },
        "AppCategory": {
            "enum": [
                "LfR"
            ]
        },
        "GetBlueprintsRequest": {
            "type": "object",
            "properties": {
                "includeInactive": {
                    "$ref": "#/$defs/boolean"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                },
                "appCategory": {
                    "$ref": "#/$defs/AppCategory"
                }
            }
        },
        "GetBucketAccessKeysResult": {
            "type": "object",
            "properties": {
                "accessKeys": {
                    "$ref": "#/$defs/AccessKeyList"
                }
            }
        },
        "AccessKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccessKey"
            }
        },
        "GetBucketAccessKeysRequest": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                }
            }
        },
        "GetBucketBundlesResult": {
            "type": "object",
            "properties": {
                "bundles": {
                    "$ref": "#/$defs/BucketBundleList"
                }
            }
        },
        "BucketBundleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BucketBundle"
            }
        },
        "BucketBundle": {
            "type": "object",
            "properties": {
                "bundleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "name": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "price": {
                    "$ref": "#/$defs/float"
                },
                "storagePerMonthInGb": {
                    "$ref": "#/$defs/integer"
                },
                "transferPerMonthInGb": {
                    "$ref": "#/$defs/integer"
                },
                "isActive": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "float": {
            "type": "number",
            "format": "float"
        },
        "GetBucketBundlesRequest": {
            "type": "object",
            "properties": {
                "includeInactive": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "GetBucketMetricDataResult": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/BucketMetricName"
                },
                "metricData": {
                    "$ref": "#/$defs/MetricDatapointList"
                }
            }
        },
        "BucketMetricName": {
            "enum": [
                "BucketSizeBytes",
                "NumberOfObjects"
            ]
        },
        "MetricDatapointList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricDatapoint"
            }
        },
        "MetricDatapoint": {
            "type": "object",
            "properties": {
                "average": {
                    "$ref": "#/$defs/double"
                },
                "maximum": {
                    "$ref": "#/$defs/double"
                },
                "minimum": {
                    "$ref": "#/$defs/double"
                },
                "sampleCount": {
                    "$ref": "#/$defs/double"
                },
                "sum": {
                    "$ref": "#/$defs/double"
                },
                "timestamp": {
                    "$ref": "#/$defs/timestamp"
                },
                "unit": {
                    "$ref": "#/$defs/MetricUnit"
                }
            }
        },
        "timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "GetBucketMetricDataRequest": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "metricName": {
                    "$ref": "#/$defs/BucketMetricName"
                },
                "startTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "endTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "period": {
                    "$ref": "#/$defs/MetricPeriod"
                },
                "statistics": {
                    "$ref": "#/$defs/MetricStatisticList"
                },
                "unit": {
                    "$ref": "#/$defs/MetricUnit"
                }
            }
        },
        "MetricStatisticList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricStatistic"
            }
        },
        "GetBucketsResult": {
            "type": "object",
            "properties": {
                "buckets": {
                    "$ref": "#/$defs/BucketList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                },
                "accountLevelBpaSync": {
                    "$ref": "#/$defs/AccountLevelBpaSync"
                }
            }
        },
        "BucketList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Bucket"
            }
        },
        "AccountLevelBpaSync": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/AccountLevelBpaSyncStatus"
                },
                "lastSyncedAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "message": {
                    "$ref": "#/$defs/BPAStatusMessage"
                },
                "bpaImpactsLightsail": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "AccountLevelBpaSyncStatus": {
            "enum": [
                "InSync",
                "Failed",
                "NeverSynced",
                "Defaulted"
            ]
        },
        "BPAStatusMessage": {
            "enum": [
                "DEFAULTED_FOR_SLR_MISSING",
                "SYNC_ON_HOLD",
                "DEFAULTED_FOR_SLR_MISSING_ON_HOLD",
                "Unknown"
            ]
        },
        "GetBucketsRequest": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                },
                "includeConnectedResources": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "GetBundlesResult": {
            "type": "object",
            "properties": {
                "bundles": {
                    "$ref": "#/$defs/BundleList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BundleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Bundle"
            }
        },
        "Bundle": {
            "type": "object",
            "properties": {
                "price": {
                    "$ref": "#/$defs/float"
                },
                "cpuCount": {
                    "$ref": "#/$defs/integer"
                },
                "diskSizeInGb": {
                    "$ref": "#/$defs/integer"
                },
                "bundleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "instanceType": {
                    "$ref": "#/$defs/string"
                },
                "isActive": {
                    "$ref": "#/$defs/boolean"
                },
                "name": {
                    "$ref": "#/$defs/string"
                },
                "power": {
                    "$ref": "#/$defs/integer"
                },
                "ramSizeInGb": {
                    "$ref": "#/$defs/float"
                },
                "transferPerMonthInGb": {
                    "$ref": "#/$defs/integer"
                },
                "supportedPlatforms": {
                    "$ref": "#/$defs/InstancePlatformList"
                },
                "supportedAppCategories": {
                    "$ref": "#/$defs/AppCategoryList"
                },
                "publicIpv4AddressCount": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "InstancePlatformList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstancePlatform"
            }
        },
        "AppCategoryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AppCategory"
            }
        },
        "GetBundlesRequest": {
            "type": "object",
            "properties": {
                "includeInactive": {
                    "$ref": "#/$defs/boolean"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                },
                "appCategory": {
                    "$ref": "#/$defs/AppCategory"
                }
            }
        },
        "GetCertificatesResult": {
            "type": "object",
            "properties": {
                "certificates": {
                    "$ref": "#/$defs/CertificateSummaryList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CertificateSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CertificateSummary"
            }
        },
        "GetCertificatesRequest": {
            "type": "object",
            "properties": {
                "certificateStatuses": {
                    "$ref": "#/$defs/CertificateStatusList"
                },
                "includeCertificateDetails": {
                    "$ref": "#/$defs/IncludeCertificateDetails"
                },
                "certificateName": {
                    "$ref": "#/$defs/CertificateName"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CertificateStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CertificateStatus"
            }
        },
        "IncludeCertificateDetails": {
            "type": "boolean"
        },
        "GetCloudFormationStackRecordsResult": {
            "type": "object",
            "properties": {
                "cloudFormationStackRecords": {
                    "$ref": "#/$defs/CloudFormationStackRecordList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CloudFormationStackRecordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudFormationStackRecord"
            }
        },
        "CloudFormationStackRecord": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "state": {
                    "$ref": "#/$defs/RecordState"
                },
                "sourceInfo": {
                    "$ref": "#/$defs/CloudFormationStackRecordSourceInfoList"
                },
                "destinationInfo": {
                    "$ref": "#/$defs/DestinationInfo"
                }
            }
        },
        "RecordState": {
            "enum": [
                "Started",
                "Succeeded",
                "Failed"
            ]
        },
        "CloudFormationStackRecordSourceInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudFormationStackRecordSourceInfo"
            }
        },
        "CloudFormationStackRecordSourceInfo": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/CloudFormationStackRecordSourceType"
                },
                "name": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "CloudFormationStackRecordSourceType": {
            "enum": [
                "ExportSnapshotRecord"
            ]
        },
        "DestinationInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "service": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetCloudFormationStackRecordsRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetContactMethodsResult": {
            "type": "object",
            "properties": {
                "contactMethods": {
                    "$ref": "#/$defs/ContactMethodsList"
                }
            }
        },
        "ContactMethodsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContactMethod"
            }
        },
        "ContactMethod": {
            "type": "object",
            "properties": {
                "contactEndpoint": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "status": {
                    "$ref": "#/$defs/ContactMethodStatus"
                },
                "protocol": {
                    "$ref": "#/$defs/ContactProtocol"
                },
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ContactMethodStatus": {
            "enum": [
                "PendingVerification",
                "Valid",
                "Invalid"
            ]
        },
        "GetContactMethodsRequest": {
            "type": "object",
            "properties": {
                "protocols": {
                    "$ref": "#/$defs/ContactProtocolsList"
                }
            }
        },
        "GetContainerAPIMetadataResult": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/$defs/ContainerServiceMetadataEntryList"
                }
            }
        },
        "ContainerServiceMetadataEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerServiceMetadataEntry"
            }
        },
        "ContainerServiceMetadataEntry": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string"
            }
        },
        "GetContainerAPIMetadataRequest": {
            "type": "object",
            "properties": {}
        },
        "GetContainerImagesResult": {
            "type": "object",
            "properties": {
                "containerImages": {
                    "$ref": "#/$defs/ContainerImageList"
                }
            }
        },
        "ContainerImageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerImage"
            }
        },
        "ContainerImage": {
            "type": "object",
            "properties": {
                "image": {
                    "$ref": "#/$defs/string"
                },
                "digest": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "GetContainerImagesRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                }
            }
        },
        "GetContainerLogResult": {
            "type": "object",
            "properties": {
                "logEvents": {
                    "$ref": "#/$defs/ContainerServiceLogEventList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ContainerServiceLogEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerServiceLogEvent"
            }
        },
        "ContainerServiceLogEvent": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "message": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetContainerLogRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                },
                "containerName": {
                    "$ref": "#/$defs/string"
                },
                "startTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "endTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "filterPattern": {
                    "$ref": "#/$defs/string"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetContainerServiceDeploymentsResult": {
            "type": "object",
            "properties": {
                "deployments": {
                    "$ref": "#/$defs/ContainerServiceDeploymentList"
                }
            }
        },
        "ContainerServiceDeploymentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerServiceDeployment"
            }
        },
        "GetContainerServiceDeploymentsRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                }
            }
        },
        "GetContainerServiceMetricDataResult": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/ContainerServiceMetricName"
                },
                "metricData": {
                    "$ref": "#/$defs/MetricDatapointList"
                }
            }
        },
        "ContainerServiceMetricName": {
            "enum": [
                "CPUUtilization",
                "MemoryUtilization"
            ]
        },
        "GetContainerServiceMetricDataRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                },
                "metricName": {
                    "$ref": "#/$defs/ContainerServiceMetricName"
                },
                "startTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "endTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "period": {
                    "$ref": "#/$defs/MetricPeriod"
                },
                "statistics": {
                    "$ref": "#/$defs/MetricStatisticList"
                }
            }
        },
        "GetContainerServicePowersResult": {
            "type": "object",
            "properties": {
                "powers": {
                    "$ref": "#/$defs/ContainerServicePowerList"
                }
            }
        },
        "ContainerServicePowerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerServicePower"
            }
        },
        "ContainerServicePower": {
            "type": "object",
            "properties": {
                "powerId": {
                    "$ref": "#/$defs/string"
                },
                "price": {
                    "$ref": "#/$defs/float"
                },
                "cpuCount": {
                    "$ref": "#/$defs/float"
                },
                "ramSizeInGb": {
                    "$ref": "#/$defs/float"
                },
                "name": {
                    "$ref": "#/$defs/string"
                },
                "isActive": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "GetContainerServicePowersRequest": {
            "type": "object",
            "properties": {}
        },
        "ContainerServicesListResult": {
            "type": "object",
            "properties": {
                "containerServices": {
                    "$ref": "#/$defs/ContainerServiceList"
                }
            }
        },
        "ContainerServiceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerService"
            }
        },
        "GetContainerServicesRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                }
            }
        },
        "GetCostEstimateResult": {
            "type": "object",
            "properties": {
                "resourcesBudgetEstimate": {
                    "$ref": "#/$defs/ResourcesBudgetEstimate"
                }
            }
        },
        "ResourcesBudgetEstimate": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceBudgetEstimate"
            }
        },
        "ResourceBudgetEstimate": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "costEstimates": {
                    "$ref": "#/$defs/CostEstimates"
                },
                "startTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "endTime": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "CostEstimates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CostEstimate"
            }
        },
        "CostEstimate": {
            "type": "object",
            "properties": {
                "usageType": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "resultsByTime": {
                    "$ref": "#/$defs/EstimatesByTime"
                }
            }
        },
        "EstimatesByTime": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EstimateByTime"
            }
        },
        "EstimateByTime": {
            "type": "object",
            "properties": {
                "usageCost": {
                    "$ref": "#/$defs/double"
                },
                "pricingUnit": {
                    "$ref": "#/$defs/PricingUnit"
                },
                "unit": {
                    "$ref": "#/$defs/double"
                },
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "timePeriod": {
                    "$ref": "#/$defs/TimePeriod"
                }
            }
        },
        "PricingUnit": {
            "enum": [
                "GB",
                "Hrs",
                "GBMo",
                "Bundles",
                "Queries"
            ]
        },
        "Currency": {
            "enum": [
                "USD"
            ]
        },
        "TimePeriod": {
            "type": "object",
            "properties": {
                "start": {
                    "$ref": "#/$defs/IsoDate"
                },
                "end": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "GetCostEstimateRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "startTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "endTime": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "GetDiskResult": {
            "type": "object",
            "properties": {
                "disk": {
                    "$ref": "#/$defs/Disk"
                }
            }
        },
        "Disk": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "addOns": {
                    "$ref": "#/$defs/AddOnList"
                },
                "sizeInGb": {
                    "$ref": "#/$defs/integer"
                },
                "isSystemDisk": {
                    "$ref": "#/$defs/boolean"
                },
                "iops": {
                    "$ref": "#/$defs/integer"
                },
                "path": {
                    "$ref": "#/$defs/string"
                },
                "state": {
                    "$ref": "#/$defs/DiskState"
                },
                "attachedTo": {
                    "$ref": "#/$defs/ResourceName"
                },
                "isAttached": {
                    "$ref": "#/$defs/boolean"
                },
                "attachmentState": {
                    "$ref": "#/$defs/string"
                },
                "gbInUse": {
                    "$ref": "#/$defs/integer"
                },
                "autoMountStatus": {
                    "$ref": "#/$defs/AutoMountStatus"
                }
            }
        },
        "AddOnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddOn"
            }
        },
        "AddOn": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "status": {
                    "$ref": "#/$defs/string"
                },
                "snapshotTimeOfDay": {
                    "$ref": "#/$defs/TimeOfDay"
                },
                "nextSnapshotTimeOfDay": {
                    "$ref": "#/$defs/TimeOfDay"
                },
                "threshold": {
                    "$ref": "#/$defs/string"
                },
                "duration": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DiskState": {
            "enum": [
                "Pending",
                "Error",
                "Available",
                "InUse",
                "Unknown"
            ]
        },
        "AutoMountStatus": {
            "enum": [
                "Failed",
                "Pending",
                "Mounted",
                "NotMounted"
            ]
        },
        "GetDiskRequest": {
            "type": "object",
            "properties": {
                "diskName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetDisksResult": {
            "type": "object",
            "properties": {
                "disks": {
                    "$ref": "#/$defs/DiskList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DiskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Disk"
            }
        },
        "GetDisksRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetDiskSnapshotResult": {
            "type": "object",
            "properties": {
                "diskSnapshot": {
                    "$ref": "#/$defs/DiskSnapshot"
                }
            }
        },
        "DiskSnapshot": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "sizeInGb": {
                    "$ref": "#/$defs/integer"
                },
                "state": {
                    "$ref": "#/$defs/DiskSnapshotState"
                },
                "progress": {
                    "$ref": "#/$defs/string"
                },
                "fromDiskName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "fromDiskArn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "fromInstanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "fromInstanceArn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "isFromAutoSnapshot": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "DiskSnapshotState": {
            "enum": [
                "Pending",
                "Completed",
                "Error",
                "Unknown"
            ]
        },
        "GetDiskSnapshotRequest": {
            "type": "object",
            "properties": {
                "diskSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetDiskSnapshotsResult": {
            "type": "object",
            "properties": {
                "diskSnapshots": {
                    "$ref": "#/$defs/DiskSnapshotList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DiskSnapshotList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DiskSnapshot"
            }
        },
        "GetDiskSnapshotsRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetDistributionBundlesResult": {
            "type": "object",
            "properties": {
                "bundles": {
                    "$ref": "#/$defs/DistributionBundleList"
                }
            }
        },
        "DistributionBundleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DistributionBundle"
            }
        },
        "DistributionBundle": {
            "type": "object",
            "properties": {
                "bundleId": {
                    "$ref": "#/$defs/string"
                },
                "name": {
                    "$ref": "#/$defs/string"
                },
                "price": {
                    "$ref": "#/$defs/float"
                },
                "transferPerMonthInGb": {
                    "$ref": "#/$defs/integer"
                },
                "isActive": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "GetDistributionBundlesRequest": {
            "type": "object",
            "properties": {}
        },
        "GetDistributionLatestCacheResetResult": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/string"
                },
                "createTime": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "GetDistributionLatestCacheResetRequest": {
            "type": "object",
            "properties": {
                "distributionName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetDistributionMetricDataResult": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/DistributionMetricName"
                },
                "metricData": {
                    "$ref": "#/$defs/MetricDatapointList"
                }
            }
        },
        "DistributionMetricName": {
            "enum": [
                "Requests",
                "BytesDownloaded",
                "BytesUploaded",
                "TotalErrorRate",
                "Http4xxErrorRate",
                "Http5xxErrorRate"
            ]
        },
        "GetDistributionMetricDataRequest": {
            "type": "object",
            "properties": {
                "distributionName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "metricName": {
                    "$ref": "#/$defs/DistributionMetricName"
                },
                "startTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "period": {
                    "$ref": "#/$defs/MetricPeriod"
                },
                "unit": {
                    "$ref": "#/$defs/MetricUnit"
                },
                "statistics": {
                    "$ref": "#/$defs/MetricStatisticList"
                }
            }
        },
        "GetDistributionsResult": {
            "type": "object",
            "properties": {
                "distributions": {
                    "$ref": "#/$defs/DistributionList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DistributionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LightsailDistribution"
            }
        },
        "GetDistributionsRequest": {
            "type": "object",
            "properties": {
                "distributionName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetDomainResult": {
            "type": "object",
            "properties": {
                "domain": {
                    "$ref": "#/$defs/Domain"
                }
            }
        },
        "Domain": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "domainEntries": {
                    "$ref": "#/$defs/DomainEntryList"
                },
                "registeredDomainDelegationInfo": {
                    "$ref": "#/$defs/RegisteredDomainDelegationInfo"
                }
            }
        },
        "DomainEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainEntry"
            }
        },
        "RegisteredDomainDelegationInfo": {
            "type": "object",
            "properties": {
                "nameServersUpdateState": {
                    "$ref": "#/$defs/NameServersUpdateState"
                },
                "r53HostedZoneDeletionState": {
                    "$ref": "#/$defs/R53HostedZoneDeletionState"
                }
            }
        },
        "NameServersUpdateState": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/NameServersUpdateStateCode"
                },
                "message": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "NameServersUpdateStateCode": {
            "enum": [
                "Succeeded",
                "Pending",
                "Failed",
                "Started"
            ]
        },
        "R53HostedZoneDeletionState": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/R53HostedZoneDeletionStateCode"
                },
                "message": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "R53HostedZoneDeletionStateCode": {
            "enum": [
                "Succeeded",
                "Pending",
                "Failed",
                "Started"
            ]
        },
        "GetDomainRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                }
            }
        },
        "GetDomainsResult": {
            "type": "object",
            "properties": {
                "domains": {
                    "$ref": "#/$defs/DomainList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DomainList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Domain"
            }
        },
        "GetDomainsRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetExportSnapshotRecordsResult": {
            "type": "object",
            "properties": {
                "exportSnapshotRecords": {
                    "$ref": "#/$defs/ExportSnapshotRecordList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ExportSnapshotRecordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportSnapshotRecord"
            }
        },
        "ExportSnapshotRecord": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "state": {
                    "$ref": "#/$defs/RecordState"
                },
                "sourceInfo": {
                    "$ref": "#/$defs/ExportSnapshotRecordSourceInfo"
                },
                "destinationInfo": {
                    "$ref": "#/$defs/DestinationInfo"
                }
            }
        },
        "ExportSnapshotRecordSourceInfo": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/ExportSnapshotRecordSourceType"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "name": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "fromResourceName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "fromResourceArn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "instanceSnapshotInfo": {
                    "$ref": "#/$defs/InstanceSnapshotInfo"
                },
                "diskSnapshotInfo": {
                    "$ref": "#/$defs/DiskSnapshotInfo"
                }
            }
        },
        "ExportSnapshotRecordSourceType": {
            "enum": [
                "InstanceSnapshot",
                "DiskSnapshot"
            ]
        },
        "InstanceSnapshotInfo": {
            "type": "object",
            "properties": {
                "fromBundleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "fromBlueprintId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "fromDiskInfo": {
                    "$ref": "#/$defs/DiskInfoList"
                }
            }
        },
        "DiskInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DiskInfo"
            }
        },
        "DiskInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/string"
                },
                "path": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "sizeInGb": {
                    "$ref": "#/$defs/integer"
                },
                "isSystemDisk": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "DiskSnapshotInfo": {
            "type": "object",
            "properties": {
                "sizeInGb": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "GetExportSnapshotRecordsRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetInstanceResult": {
            "type": "object",
            "properties": {
                "instance": {
                    "$ref": "#/$defs/Instance"
                }
            }
        },
        "Instance": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "blueprintId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "blueprintName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "bundleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "addOns": {
                    "$ref": "#/$defs/AddOnList"
                },
                "isStaticIp": {
                    "$ref": "#/$defs/boolean"
                },
                "privateIpAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "publicIpAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "ipv6Addresses": {
                    "$ref": "#/$defs/Ipv6AddressList"
                },
                "ipAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "hardware": {
                    "$ref": "#/$defs/InstanceHardware"
                },
                "networking": {
                    "$ref": "#/$defs/InstanceNetworking"
                },
                "state": {
                    "$ref": "#/$defs/InstanceState"
                },
                "username": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "sshKeyName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "metadataOptions": {
                    "$ref": "#/$defs/InstanceMetadataOptions"
                }
            }
        },
        "IpAddress": {
            "type": "string"
        },
        "Ipv6AddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv6Address"
            }
        },
        "Ipv6Address": {
            "type": "string"
        },
        "InstanceHardware": {
            "type": "object",
            "properties": {
                "cpuCount": {
                    "$ref": "#/$defs/integer"
                },
                "disks": {
                    "$ref": "#/$defs/DiskList"
                },
                "ramSizeInGb": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "InstanceNetworking": {
            "type": "object",
            "properties": {
                "monthlyTransfer": {
                    "$ref": "#/$defs/MonthlyTransfer"
                },
                "ports": {
                    "$ref": "#/$defs/InstancePortInfoList"
                }
            }
        },
        "MonthlyTransfer": {
            "type": "object",
            "properties": {
                "gbPerMonthAllocated": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "InstancePortInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstancePortInfo"
            }
        },
        "InstancePortInfo": {
            "type": "object",
            "properties": {
                "fromPort": {
                    "$ref": "#/$defs/Port"
                },
                "toPort": {
                    "$ref": "#/$defs/Port"
                },
                "protocol": {
                    "$ref": "#/$defs/NetworkProtocol"
                },
                "accessFrom": {
                    "$ref": "#/$defs/string"
                },
                "accessType": {
                    "$ref": "#/$defs/PortAccessType"
                },
                "commonName": {
                    "$ref": "#/$defs/string"
                },
                "accessDirection": {
                    "$ref": "#/$defs/AccessDirection"
                },
                "cidrs": {
                    "$ref": "#/$defs/StringList"
                },
                "ipv6Cidrs": {
                    "$ref": "#/$defs/StringList"
                },
                "cidrListAliases": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "PortAccessType": {
            "enum": [
                "Public",
                "Private"
            ]
        },
        "AccessDirection": {
            "enum": [
                "inbound",
                "outbound"
            ]
        },
        "InstanceState": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/integer"
                },
                "name": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "InstanceMetadataOptions": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/InstanceMetadataState"
                },
                "httpTokens": {
                    "$ref": "#/$defs/HttpTokens"
                },
                "httpEndpoint": {
                    "$ref": "#/$defs/HttpEndpoint"
                },
                "httpPutResponseHopLimit": {
                    "$ref": "#/$defs/integer"
                },
                "httpProtocolIpv6": {
                    "$ref": "#/$defs/HttpProtocolIpv6"
                }
            }
        },
        "InstanceMetadataState": {
            "enum": [
                "pending",
                "applied"
            ]
        },
        "HttpTokens": {
            "enum": [
                "optional",
                "required"
            ]
        },
        "HttpEndpoint": {
            "enum": [
                "disabled",
                "enabled"
            ]
        },
        "HttpProtocolIpv6": {
            "enum": [
                "disabled",
                "enabled"
            ]
        },
        "GetInstanceRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetInstanceAccessDetailsResult": {
            "type": "object",
            "properties": {
                "accessDetails": {
                    "$ref": "#/$defs/InstanceAccessDetails"
                }
            }
        },
        "InstanceAccessDetails": {
            "type": "object",
            "properties": {
                "certKey": {
                    "$ref": "#/$defs/string"
                },
                "expiresAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "ipAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "ipv6Addresses": {
                    "$ref": "#/$defs/Ipv6AddressList"
                },
                "password": {
                    "$ref": "#/$defs/string"
                },
                "passwordData": {
                    "$ref": "#/$defs/PasswordData"
                },
                "privateKey": {
                    "$ref": "#/$defs/string"
                },
                "protocol": {
                    "$ref": "#/$defs/InstanceAccessProtocol"
                },
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "username": {
                    "$ref": "#/$defs/string"
                },
                "hostKeys": {
                    "$ref": "#/$defs/HostKeysList"
                }
            }
        },
        "PasswordData": {
            "type": "object",
            "properties": {
                "ciphertext": {
                    "$ref": "#/$defs/string"
                },
                "keyPairName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "InstanceAccessProtocol": {
            "enum": [
                "ssh",
                "rdp"
            ]
        },
        "HostKeysList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HostKeyAttributes"
            }
        },
        "HostKeyAttributes": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "$ref": "#/$defs/string"
                },
                "publicKey": {
                    "$ref": "#/$defs/string"
                },
                "witnessedAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "fingerprintSHA1": {
                    "$ref": "#/$defs/string"
                },
                "fingerprintSHA256": {
                    "$ref": "#/$defs/string"
                },
                "notValidBefore": {
                    "$ref": "#/$defs/IsoDate"
                },
                "notValidAfter": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "GetInstanceAccessDetailsRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "protocol": {
                    "$ref": "#/$defs/InstanceAccessProtocol"
                }
            }
        },
        "GetInstanceMetricDataResult": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/InstanceMetricName"
                },
                "metricData": {
                    "$ref": "#/$defs/MetricDatapointList"
                }
            }
        },
        "InstanceMetricName": {
            "enum": [
                "CPUUtilization",
                "NetworkIn",
                "NetworkOut",
                "StatusCheckFailed",
                "StatusCheckFailed_Instance",
                "StatusCheckFailed_System",
                "BurstCapacityTime",
                "BurstCapacityPercentage",
                "MetadataNoToken"
            ]
        },
        "GetInstanceMetricDataRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "metricName": {
                    "$ref": "#/$defs/InstanceMetricName"
                },
                "period": {
                    "$ref": "#/$defs/MetricPeriod"
                },
                "startTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "unit": {
                    "$ref": "#/$defs/MetricUnit"
                },
                "statistics": {
                    "$ref": "#/$defs/MetricStatisticList"
                }
            }
        },
        "GetInstancePortStatesResult": {
            "type": "object",
            "properties": {
                "portStates": {
                    "$ref": "#/$defs/InstancePortStateList"
                }
            }
        },
        "InstancePortStateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstancePortState"
            }
        },
        "InstancePortState": {
            "type": "object",
            "properties": {
                "fromPort": {
                    "$ref": "#/$defs/Port"
                },
                "toPort": {
                    "$ref": "#/$defs/Port"
                },
                "protocol": {
                    "$ref": "#/$defs/NetworkProtocol"
                },
                "state": {
                    "$ref": "#/$defs/PortState"
                },
                "cidrs": {
                    "$ref": "#/$defs/StringList"
                },
                "ipv6Cidrs": {
                    "$ref": "#/$defs/StringList"
                },
                "cidrListAliases": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "PortState": {
            "enum": [
                "Open",
                "Closed"
            ]
        },
        "GetInstancePortStatesRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetInstancesResult": {
            "type": "object",
            "properties": {
                "instances": {
                    "$ref": "#/$defs/InstanceList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "InstanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Instance"
            }
        },
        "GetInstancesRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetInstanceSnapshotResult": {
            "type": "object",
            "properties": {
                "instanceSnapshot": {
                    "$ref": "#/$defs/InstanceSnapshot"
                }
            }
        },
        "InstanceSnapshot": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "state": {
                    "$ref": "#/$defs/InstanceSnapshotState"
                },
                "progress": {
                    "$ref": "#/$defs/string"
                },
                "fromAttachedDisks": {
                    "$ref": "#/$defs/DiskList"
                },
                "fromInstanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "fromInstanceArn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "fromBlueprintId": {
                    "$ref": "#/$defs/string"
                },
                "fromBundleId": {
                    "$ref": "#/$defs/string"
                },
                "isFromAutoSnapshot": {
                    "$ref": "#/$defs/boolean"
                },
                "sizeInGb": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "InstanceSnapshotState": {
            "enum": [
                "Pending",
                "Error",
                "Available"
            ]
        },
        "GetInstanceSnapshotRequest": {
            "type": "object",
            "properties": {
                "instanceSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetInstanceSnapshotsResult": {
            "type": "object",
            "properties": {
                "instanceSnapshots": {
                    "$ref": "#/$defs/InstanceSnapshotList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "InstanceSnapshotList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceSnapshot"
            }
        },
        "GetInstanceSnapshotsRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetInstanceStateResult": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/InstanceState"
                }
            }
        },
        "GetInstanceStateRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetKeyPairResult": {
            "type": "object",
            "properties": {
                "keyPair": {
                    "$ref": "#/$defs/KeyPair"
                }
            }
        },
        "GetKeyPairRequest": {
            "type": "object",
            "properties": {
                "keyPairName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetKeyPairsResult": {
            "type": "object",
            "properties": {
                "keyPairs": {
                    "$ref": "#/$defs/KeyPairList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "KeyPairList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyPair"
            }
        },
        "GetKeyPairsRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                },
                "includeDefaultKeyPair": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "GetLoadBalancerResult": {
            "type": "object",
            "properties": {
                "loadBalancer": {
                    "$ref": "#/$defs/LoadBalancer"
                }
            }
        },
        "LoadBalancer": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "dnsName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "state": {
                    "$ref": "#/$defs/LoadBalancerState"
                },
                "protocol": {
                    "$ref": "#/$defs/LoadBalancerProtocol"
                },
                "publicPorts": {
                    "$ref": "#/$defs/PortList"
                },
                "healthCheckPath": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "instancePort": {
                    "$ref": "#/$defs/integer"
                },
                "instanceHealthSummary": {
                    "$ref": "#/$defs/InstanceHealthSummaryList"
                },
                "tlsCertificateSummaries": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateSummaryList"
                },
                "configurationOptions": {
                    "$ref": "#/$defs/LoadBalancerConfigurationOptions"
                },
                "ipAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "httpsRedirectionEnabled": {
                    "$ref": "#/$defs/boolean"
                },
                "tlsPolicyName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "LoadBalancerState": {
            "enum": [
                "Active",
                "Provisioning",
                "ActiveImpaired",
                "Failed",
                "Unknown"
            ]
        },
        "LoadBalancerProtocol": {
            "enum": [
                "HTTP_HTTPS",
                "HTTP"
            ]
        },
        "PortList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Port"
            }
        },
        "InstanceHealthSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceHealthSummary"
            }
        },
        "InstanceHealthSummary": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "instanceHealth": {
                    "$ref": "#/$defs/InstanceHealthState"
                },
                "instanceHealthReason": {
                    "$ref": "#/$defs/InstanceHealthReason"
                }
            }
        },
        "InstanceHealthState": {
            "enum": [
                "Initial",
                "Healthy",
                "Unhealthy",
                "Unused",
                "Draining",
                "Unavailable"
            ]
        },
        "InstanceHealthReason": {
            "enum": [
                "LbRegistrationInProgress",
                "LbInitialHealthChecking",
                "LbInternalError",
                "InstanceResponseCodeMismatch",
                "InstanceTimeout",
                "InstanceFailedHealthChecks",
                "InstanceNotRegistered",
                "InstanceNotInUse",
                "InstanceDeregistrationInProgress",
                "InstanceInvalidState",
                "InstanceIpUnusable"
            ]
        },
        "LoadBalancerTlsCertificateSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerTlsCertificateSummary"
            }
        },
        "LoadBalancerTlsCertificateSummary": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "isAttached": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "LoadBalancerConfigurationOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string"
            }
        },
        "GetLoadBalancerRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetLoadBalancerMetricDataResult": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/LoadBalancerMetricName"
                },
                "metricData": {
                    "$ref": "#/$defs/MetricDatapointList"
                }
            }
        },
        "LoadBalancerMetricName": {
            "enum": [
                "ClientTLSNegotiationErrorCount",
                "HealthyHostCount",
                "UnhealthyHostCount",
                "HTTPCode_LB_4XX_Count",
                "HTTPCode_LB_5XX_Count",
                "HTTPCode_Instance_2XX_Count",
                "HTTPCode_Instance_3XX_Count",
                "HTTPCode_Instance_4XX_Count",
                "HTTPCode_Instance_5XX_Count",
                "InstanceResponseTime",
                "RejectedConnectionCount",
                "RequestCount"
            ]
        },
        "GetLoadBalancerMetricDataRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "metricName": {
                    "$ref": "#/$defs/LoadBalancerMetricName"
                },
                "period": {
                    "$ref": "#/$defs/MetricPeriod"
                },
                "startTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "unit": {
                    "$ref": "#/$defs/MetricUnit"
                },
                "statistics": {
                    "$ref": "#/$defs/MetricStatisticList"
                }
            }
        },
        "GetLoadBalancersResult": {
            "type": "object",
            "properties": {
                "loadBalancers": {
                    "$ref": "#/$defs/LoadBalancerList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "LoadBalancerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancer"
            }
        },
        "GetLoadBalancersRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetLoadBalancerTlsCertificatesResult": {
            "type": "object",
            "properties": {
                "tlsCertificates": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateList"
                }
            }
        },
        "LoadBalancerTlsCertificateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerTlsCertificate"
            }
        },
        "LoadBalancerTlsCertificate": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "isAttached": {
                    "$ref": "#/$defs/boolean"
                },
                "status": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateStatus"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "domainValidationRecords": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateDomainValidationRecordList"
                },
                "failureReason": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateFailureReason"
                },
                "issuedAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "issuer": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "keyAlgorithm": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "notAfter": {
                    "$ref": "#/$defs/IsoDate"
                },
                "notBefore": {
                    "$ref": "#/$defs/IsoDate"
                },
                "renewalSummary": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateRenewalSummary"
                },
                "revocationReason": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateRevocationReason"
                },
                "revokedAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "serial": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "signatureAlgorithm": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "subject": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "subjectAlternativeNames": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "LoadBalancerTlsCertificateStatus": {
            "enum": [
                "PendingValidation",
                "Issued",
                "Inactive",
                "Expired",
                "ValidationTimedOut",
                "Revoked",
                "Failed",
                "Unknown"
            ]
        },
        "LoadBalancerTlsCertificateDomainValidationRecordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerTlsCertificateDomainValidationRecord"
            }
        },
        "LoadBalancerTlsCertificateDomainValidationRecord": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "type": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "value": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "validationStatus": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateDomainStatus"
                },
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "dnsRecordCreationState": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateDnsRecordCreationState"
                }
            }
        },
        "LoadBalancerTlsCertificateDomainStatus": {
            "enum": [
                "PendingValidation",
                "Failed",
                "Success"
            ]
        },
        "LoadBalancerTlsCertificateDnsRecordCreationState": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateDnsRecordCreationStateCode"
                },
                "message": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "LoadBalancerTlsCertificateDnsRecordCreationStateCode": {
            "enum": [
                "Succeeded",
                "Started",
                "Failed"
            ]
        },
        "LoadBalancerTlsCertificateFailureReason": {
            "enum": [
                "NoAvailableContacts",
                "AdditionalVerificationRequired",
                "DomainNotAllowed",
                "InvalidPublicDomain",
                "Other"
            ]
        },
        "LoadBalancerTlsCertificateRenewalSummary": {
            "type": "object",
            "properties": {
                "renewalStatus": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateRenewalStatus"
                },
                "domainValidationOptions": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateDomainValidationOptionList"
                }
            }
        },
        "LoadBalancerTlsCertificateRenewalStatus": {
            "enum": [
                "PendingAutoRenewal",
                "PendingValidation",
                "Success",
                "Failed"
            ]
        },
        "LoadBalancerTlsCertificateDomainValidationOptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerTlsCertificateDomainValidationOption"
            }
        },
        "LoadBalancerTlsCertificateDomainValidationOption": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "validationStatus": {
                    "$ref": "#/$defs/LoadBalancerTlsCertificateDomainStatus"
                }
            }
        },
        "LoadBalancerTlsCertificateRevocationReason": {
            "enum": [
                "Unspecified",
                "KeyCompromise",
                "CaCompromise",
                "AffiliationChanged",
                "Superceded",
                "CessationOfOperation",
                "CertificateHold",
                "RemoveFromCrl",
                "PrivilegeWithdrawn",
                "AACompromise"
            ]
        },
        "GetLoadBalancerTlsCertificatesRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetLoadBalancerTlsPoliciesResult": {
            "type": "object",
            "properties": {
                "tlsPolicies": {
                    "$ref": "#/$defs/LoadBalancerTlsPolicyList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "LoadBalancerTlsPolicyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadBalancerTlsPolicy"
            }
        },
        "LoadBalancerTlsPolicy": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "isDefault": {
                    "$ref": "#/$defs/boolean"
                },
                "description": {
                    "$ref": "#/$defs/string"
                },
                "protocols": {
                    "$ref": "#/$defs/StringList"
                },
                "ciphers": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "GetLoadBalancerTlsPoliciesRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOperationResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "GetOperationRequest": {
            "type": "object",
            "properties": {
                "operationId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetOperationsResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOperationsRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOperationsForResourceResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                },
                "nextPageCount": {
                    "$ref": "#/$defs/string"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetOperationsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRegionsResult": {
            "type": "object",
            "properties": {
                "regions": {
                    "$ref": "#/$defs/RegionList"
                }
            }
        },
        "RegionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Region"
            }
        },
        "Region": {
            "type": "object",
            "properties": {
                "continentCode": {
                    "$ref": "#/$defs/string"
                },
                "description": {
                    "$ref": "#/$defs/string"
                },
                "displayName": {
                    "$ref": "#/$defs/string"
                },
                "name": {
                    "$ref": "#/$defs/RegionName"
                },
                "availabilityZones": {
                    "$ref": "#/$defs/AvailabilityZoneList"
                },
                "relationalDatabaseAvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZoneList"
                }
            }
        },
        "AvailabilityZoneList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZone"
            }
        },
        "AvailabilityZone": {
            "type": "object",
            "properties": {
                "zoneName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "state": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "GetRegionsRequest": {
            "type": "object",
            "properties": {
                "includeAvailabilityZones": {
                    "$ref": "#/$defs/boolean"
                },
                "includeRelationalDatabaseAvailabilityZones": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "GetRelationalDatabaseResult": {
            "type": "object",
            "properties": {
                "relationalDatabase": {
                    "$ref": "#/$defs/RelationalDatabase"
                }
            }
        },
        "RelationalDatabase": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "relationalDatabaseBlueprintId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "relationalDatabaseBundleId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "masterDatabaseName": {
                    "$ref": "#/$defs/string"
                },
                "hardware": {
                    "$ref": "#/$defs/RelationalDatabaseHardware"
                },
                "state": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "secondaryAvailabilityZone": {
                    "$ref": "#/$defs/string"
                },
                "backupRetentionEnabled": {
                    "$ref": "#/$defs/boolean"
                },
                "pendingModifiedValues": {
                    "$ref": "#/$defs/PendingModifiedRelationalDatabaseValues"
                },
                "engine": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "engineVersion": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "latestRestorableTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "masterUsername": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "parameterApplyStatus": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "preferredBackupWindow": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "preferredMaintenanceWindow": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "publiclyAccessible": {
                    "$ref": "#/$defs/boolean"
                },
                "masterEndpoint": {
                    "$ref": "#/$defs/RelationalDatabaseEndpoint"
                },
                "pendingMaintenanceActions": {
                    "$ref": "#/$defs/PendingMaintenanceActionList"
                },
                "caCertificateIdentifier": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RelationalDatabaseHardware": {
            "type": "object",
            "properties": {
                "cpuCount": {
                    "$ref": "#/$defs/integer"
                },
                "diskSizeInGb": {
                    "$ref": "#/$defs/integer"
                },
                "ramSizeInGb": {
                    "$ref": "#/$defs/float"
                }
            }
        },
        "PendingModifiedRelationalDatabaseValues": {
            "type": "object",
            "properties": {
                "masterUserPassword": {
                    "$ref": "#/$defs/string"
                },
                "engineVersion": {
                    "$ref": "#/$defs/string"
                },
                "backupRetentionEnabled": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "RelationalDatabaseEndpoint": {
            "type": "object",
            "properties": {
                "port": {
                    "$ref": "#/$defs/integer"
                },
                "address": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "PendingMaintenanceActionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PendingMaintenanceAction"
            }
        },
        "PendingMaintenanceAction": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "description": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "currentApplyDate": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "GetRelationalDatabaseRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetRelationalDatabaseBlueprintsResult": {
            "type": "object",
            "properties": {
                "blueprints": {
                    "$ref": "#/$defs/RelationalDatabaseBlueprintList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RelationalDatabaseBlueprintList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RelationalDatabaseBlueprint"
            }
        },
        "RelationalDatabaseBlueprint": {
            "type": "object",
            "properties": {
                "blueprintId": {
                    "$ref": "#/$defs/string"
                },
                "engine": {
                    "$ref": "#/$defs/RelationalDatabaseEngine"
                },
                "engineVersion": {
                    "$ref": "#/$defs/string"
                },
                "engineDescription": {
                    "$ref": "#/$defs/string"
                },
                "engineVersionDescription": {
                    "$ref": "#/$defs/string"
                },
                "isEngineDefault": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "RelationalDatabaseEngine": {
            "enum": [
                "MYSQL"
            ]
        },
        "GetRelationalDatabaseBlueprintsRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRelationalDatabaseBundlesResult": {
            "type": "object",
            "properties": {
                "bundles": {
                    "$ref": "#/$defs/RelationalDatabaseBundleList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RelationalDatabaseBundleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RelationalDatabaseBundle"
            }
        },
        "RelationalDatabaseBundle": {
            "type": "object",
            "properties": {
                "bundleId": {
                    "$ref": "#/$defs/string"
                },
                "name": {
                    "$ref": "#/$defs/string"
                },
                "price": {
                    "$ref": "#/$defs/float"
                },
                "ramSizeInGb": {
                    "$ref": "#/$defs/float"
                },
                "diskSizeInGb": {
                    "$ref": "#/$defs/integer"
                },
                "transferPerMonthInGb": {
                    "$ref": "#/$defs/integer"
                },
                "cpuCount": {
                    "$ref": "#/$defs/integer"
                },
                "isEncrypted": {
                    "$ref": "#/$defs/boolean"
                },
                "isActive": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "GetRelationalDatabaseBundlesRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                },
                "includeInactive": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "GetRelationalDatabaseEventsResult": {
            "type": "object",
            "properties": {
                "relationalDatabaseEvents": {
                    "$ref": "#/$defs/RelationalDatabaseEventList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RelationalDatabaseEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RelationalDatabaseEvent"
            }
        },
        "RelationalDatabaseEvent": {
            "type": "object",
            "properties": {
                "resource": {
                    "$ref": "#/$defs/ResourceName"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "message": {
                    "$ref": "#/$defs/string"
                },
                "eventCategories": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "GetRelationalDatabaseEventsRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "durationInMinutes": {
                    "$ref": "#/$defs/integer"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRelationalDatabaseLogEventsResult": {
            "type": "object",
            "properties": {
                "resourceLogEvents": {
                    "$ref": "#/$defs/LogEventList"
                },
                "nextBackwardToken": {
                    "$ref": "#/$defs/string"
                },
                "nextForwardToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "LogEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LogEvent"
            }
        },
        "LogEvent": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "message": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRelationalDatabaseLogEventsRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "logStreamName": {
                    "$ref": "#/$defs/string"
                },
                "startTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "endTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "startFromHead": {
                    "$ref": "#/$defs/boolean"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRelationalDatabaseLogStreamsResult": {
            "type": "object",
            "properties": {
                "logStreams": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "GetRelationalDatabaseLogStreamsRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetRelationalDatabaseMasterUserPasswordResult": {
            "type": "object",
            "properties": {
                "masterUserPassword": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                }
            }
        },
        "GetRelationalDatabaseMasterUserPasswordRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "passwordVersion": {
                    "$ref": "#/$defs/RelationalDatabasePasswordVersion"
                }
            }
        },
        "RelationalDatabasePasswordVersion": {
            "enum": [
                "CURRENT",
                "PREVIOUS",
                "PENDING"
            ]
        },
        "GetRelationalDatabaseMetricDataResult": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/RelationalDatabaseMetricName"
                },
                "metricData": {
                    "$ref": "#/$defs/MetricDatapointList"
                }
            }
        },
        "RelationalDatabaseMetricName": {
            "enum": [
                "CPUUtilization",
                "DatabaseConnections",
                "DiskQueueDepth",
                "FreeStorageSpace",
                "NetworkReceiveThroughput",
                "NetworkTransmitThroughput"
            ]
        },
        "GetRelationalDatabaseMetricDataRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "metricName": {
                    "$ref": "#/$defs/RelationalDatabaseMetricName"
                },
                "period": {
                    "$ref": "#/$defs/MetricPeriod"
                },
                "startTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "endTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "unit": {
                    "$ref": "#/$defs/MetricUnit"
                },
                "statistics": {
                    "$ref": "#/$defs/MetricStatisticList"
                }
            }
        },
        "GetRelationalDatabaseParametersResult": {
            "type": "object",
            "properties": {
                "parameters": {
                    "$ref": "#/$defs/RelationalDatabaseParameterList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RelationalDatabaseParameterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RelationalDatabaseParameter"
            }
        },
        "RelationalDatabaseParameter": {
            "type": "object",
            "properties": {
                "allowedValues": {
                    "$ref": "#/$defs/string"
                },
                "applyMethod": {
                    "$ref": "#/$defs/string"
                },
                "applyType": {
                    "$ref": "#/$defs/string"
                },
                "dataType": {
                    "$ref": "#/$defs/string"
                },
                "description": {
                    "$ref": "#/$defs/string"
                },
                "isModifiable": {
                    "$ref": "#/$defs/boolean"
                },
                "parameterName": {
                    "$ref": "#/$defs/string"
                },
                "parameterValue": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRelationalDatabaseParametersRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRelationalDatabasesResult": {
            "type": "object",
            "properties": {
                "relationalDatabases": {
                    "$ref": "#/$defs/RelationalDatabaseList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RelationalDatabaseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RelationalDatabase"
            }
        },
        "GetRelationalDatabasesRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRelationalDatabaseSnapshotResult": {
            "type": "object",
            "properties": {
                "relationalDatabaseSnapshot": {
                    "$ref": "#/$defs/RelationalDatabaseSnapshot"
                }
            }
        },
        "RelationalDatabaseSnapshot": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "engine": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "engineVersion": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "sizeInGb": {
                    "$ref": "#/$defs/integer"
                },
                "state": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "fromRelationalDatabaseName": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "fromRelationalDatabaseArn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "fromRelationalDatabaseBundleId": {
                    "$ref": "#/$defs/string"
                },
                "fromRelationalDatabaseBlueprintId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRelationalDatabaseSnapshotRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetRelationalDatabaseSnapshotsResult": {
            "type": "object",
            "properties": {
                "relationalDatabaseSnapshots": {
                    "$ref": "#/$defs/RelationalDatabaseSnapshotList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RelationalDatabaseSnapshotList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RelationalDatabaseSnapshot"
            }
        },
        "GetRelationalDatabaseSnapshotsRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetSetupHistoryResult": {
            "type": "object",
            "properties": {
                "setupHistory": {
                    "$ref": "#/$defs/setupHistoryList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/SetupHistoryPageToken"
                }
            }
        },
        "setupHistoryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SetupHistory"
            }
        },
        "SetupHistory": {
            "type": "object",
            "properties": {
                "operationId": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "request": {
                    "$ref": "#/$defs/SetupRequest"
                },
                "resource": {
                    "$ref": "#/$defs/SetupHistoryResource"
                },
                "executionDetails": {
                    "$ref": "#/$defs/SetupExecutionDetailsList"
                },
                "status": {
                    "$ref": "#/$defs/SetupStatus"
                }
            }
        },
        "SetupRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "domainNames": {
                    "$ref": "#/$defs/SetupDomainNameList"
                },
                "certificateProvider": {
                    "$ref": "#/$defs/CertificateProvider"
                }
            }
        },
        "SetupDomainNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SetupDomainName"
            }
        },
        "SetupDomainName": {
            "type": "string"
        },
        "CertificateProvider": {
            "enum": [
                "LetsEncrypt"
            ]
        },
        "SetupHistoryResource": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "SetupExecutionDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SetupExecutionDetails"
            }
        },
        "SetupExecutionDetails": {
            "type": "object",
            "properties": {
                "command": {
                    "$ref": "#/$defs/string"
                },
                "dateTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "name": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "status": {
                    "$ref": "#/$defs/SetupStatus"
                },
                "standardError": {
                    "$ref": "#/$defs/string"
                },
                "standardOutput": {
                    "$ref": "#/$defs/string"
                },
                "version": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "SetupStatus": {
            "enum": [
                "Succeeded",
                "Failed",
                "InProgress"
            ]
        },
        "SetupHistoryPageToken": {
            "type": "string"
        },
        "GetSetupHistoryRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "pageToken": {
                    "$ref": "#/$defs/SetupHistoryPageToken"
                }
            }
        },
        "GetStaticIpResult": {
            "type": "object",
            "properties": {
                "staticIp": {
                    "$ref": "#/$defs/StaticIp"
                }
            }
        },
        "StaticIp": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "supportCode": {
                    "$ref": "#/$defs/string"
                },
                "createdAt": {
                    "$ref": "#/$defs/IsoDate"
                },
                "location": {
                    "$ref": "#/$defs/ResourceLocation"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ipAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "attachedTo": {
                    "$ref": "#/$defs/ResourceName"
                },
                "isAttached": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "GetStaticIpRequest": {
            "type": "object",
            "properties": {
                "staticIpName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetStaticIpsResult": {
            "type": "object",
            "properties": {
                "staticIps": {
                    "$ref": "#/$defs/StaticIpList"
                },
                "nextPageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "StaticIpList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StaticIp"
            }
        },
        "GetStaticIpsRequest": {
            "type": "object",
            "properties": {
                "pageToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ImportKeyPairResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "ImportKeyPairRequest": {
            "type": "object",
            "properties": {
                "keyPairName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "publicKeyBase64": {
                    "$ref": "#/$defs/Base64"
                }
            }
        },
        "IsVpcPeeredResult": {
            "type": "object",
            "properties": {
                "isPeered": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "IsVpcPeeredRequest": {
            "type": "object",
            "properties": {}
        },
        "OpenInstancePublicPortsResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "OpenInstancePublicPortsRequest": {
            "type": "object",
            "properties": {
                "portInfo": {
                    "$ref": "#/$defs/PortInfo"
                },
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "PeerVpcResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "PeerVpcRequest": {
            "type": "object",
            "properties": {}
        },
        "PutAlarmResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "PutAlarmRequest": {
            "type": "object",
            "properties": {
                "alarmName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "metricName": {
                    "$ref": "#/$defs/MetricName"
                },
                "monitoredResourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "comparisonOperator": {
                    "$ref": "#/$defs/ComparisonOperator"
                },
                "threshold": {
                    "$ref": "#/$defs/double"
                },
                "evaluationPeriods": {
                    "$ref": "#/$defs/integer"
                },
                "datapointsToAlarm": {
                    "$ref": "#/$defs/integer"
                },
                "treatMissingData": {
                    "$ref": "#/$defs/TreatMissingData"
                },
                "contactProtocols": {
                    "$ref": "#/$defs/ContactProtocolsList"
                },
                "notificationTriggers": {
                    "$ref": "#/$defs/NotificationTriggerList"
                },
                "notificationEnabled": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "PutInstancePublicPortsResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "PutInstancePublicPortsRequest": {
            "type": "object",
            "properties": {
                "portInfos": {
                    "$ref": "#/$defs/PortInfoList"
                },
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "PortInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PortInfo"
            }
        },
        "RebootInstanceResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "RebootInstanceRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "RebootRelationalDatabaseResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "RebootRelationalDatabaseRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "RegisterContainerImageResult": {
            "type": "object",
            "properties": {
                "containerImage": {
                    "$ref": "#/$defs/ContainerImage"
                }
            }
        },
        "RegisterContainerImageRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                },
                "label": {
                    "$ref": "#/$defs/ContainerLabel"
                },
                "digest": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ContainerLabel": {
            "type": "string"
        },
        "ReleaseStaticIpResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "ReleaseStaticIpRequest": {
            "type": "object",
            "properties": {
                "staticIpName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "ResetDistributionCacheResult": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/string"
                },
                "createTime": {
                    "$ref": "#/$defs/IsoDate"
                },
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "ResetDistributionCacheRequest": {
            "type": "object",
            "properties": {
                "distributionName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "SendContactMethodVerificationResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "SendContactMethodVerificationRequest": {
            "type": "object",
            "properties": {
                "protocol": {
                    "$ref": "#/$defs/ContactMethodVerificationProtocol"
                }
            }
        },
        "ContactMethodVerificationProtocol": {
            "enum": [
                "Email"
            ]
        },
        "SetIpAddressTypeResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "SetIpAddressTypeRequest": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "ipAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "acceptBundleUpdate": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "SetResourceAccessForBucketResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "SetResourceAccessForBucketRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "access": {
                    "$ref": "#/$defs/ResourceBucketAccess"
                }
            }
        },
        "ResourceBucketAccess": {
            "enum": [
                "Allow",
                "Deny"
            ]
        },
        "SetupInstanceHttpsResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "SetupInstanceHttpsRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "emailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "domainNames": {
                    "$ref": "#/$defs/SetupDomainNameList"
                },
                "certificateProvider": {
                    "$ref": "#/$defs/CertificateProvider"
                }
            }
        },
        "EmailAddress": {
            "type": "string"
        },
        "StartGUISessionResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "StartGUISessionRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "StartInstanceResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "StartInstanceRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "StartRelationalDatabaseResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "StartRelationalDatabaseRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "StopGUISessionResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "StopGUISessionRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "StopInstanceResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "StopInstanceRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "force": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "StopRelationalDatabaseResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "StopRelationalDatabaseRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "relationalDatabaseSnapshotName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "TagResourceResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TestAlarmResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "TestAlarmRequest": {
            "type": "object",
            "properties": {
                "alarmName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "state": {
                    "$ref": "#/$defs/AlarmState"
                }
            }
        },
        "UnpeerVpcResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "UnpeerVpcRequest": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateBucketResult": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/Bucket"
                },
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "UpdateBucketRequest": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "accessRules": {
                    "$ref": "#/$defs/AccessRules"
                },
                "versioning": {
                    "$ref": "#/$defs/NonEmptyString"
                },
                "readonlyAccessAccounts": {
                    "$ref": "#/$defs/PartnerIdList"
                },
                "accessLogConfig": {
                    "$ref": "#/$defs/BucketAccessLogConfig"
                }
            }
        },
        "UpdateBucketBundleResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "UpdateBucketBundleRequest": {
            "type": "object",
            "properties": {
                "bucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "bundleId": {
                    "$ref": "#/$defs/NonEmptyString"
                }
            }
        },
        "UpdateContainerServiceResult": {
            "type": "object",
            "properties": {
                "containerService": {
                    "$ref": "#/$defs/ContainerService"
                }
            }
        },
        "UpdateContainerServiceRequest": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ContainerServiceName"
                },
                "power": {
                    "$ref": "#/$defs/ContainerServicePowerName"
                },
                "scale": {
                    "$ref": "#/$defs/ContainerServiceScale"
                },
                "isDisabled": {
                    "$ref": "#/$defs/boolean"
                },
                "publicDomainNames": {
                    "$ref": "#/$defs/ContainerServicePublicDomains"
                },
                "privateRegistryAccess": {
                    "$ref": "#/$defs/PrivateRegistryAccessRequest"
                }
            }
        },
        "UpdateDistributionResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "UpdateDistributionRequest": {
            "type": "object",
            "properties": {
                "distributionName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "origin": {
                    "$ref": "#/$defs/InputOrigin"
                },
                "defaultCacheBehavior": {
                    "$ref": "#/$defs/CacheBehavior"
                },
                "cacheBehaviorSettings": {
                    "$ref": "#/$defs/CacheSettings"
                },
                "cacheBehaviors": {
                    "$ref": "#/$defs/CacheBehaviorList"
                },
                "isEnabled": {
                    "$ref": "#/$defs/boolean"
                },
                "viewerMinimumTlsProtocolVersion": {
                    "$ref": "#/$defs/ViewerMinimumTlsProtocolVersionEnum"
                },
                "certificateName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "useDefaultCertificate": {
                    "$ref": "#/$defs/boolean"
                }
            }
        },
        "UpdateDistributionBundleResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "UpdateDistributionBundleRequest": {
            "type": "object",
            "properties": {
                "distributionName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "bundleId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateDomainEntryResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "UpdateDomainEntryRequest": {
            "type": "object",
            "properties": {
                "domainName": {
                    "$ref": "#/$defs/DomainName"
                },
                "domainEntry": {
                    "$ref": "#/$defs/DomainEntry"
                }
            }
        },
        "UpdateInstanceMetadataOptionsResult": {
            "type": "object",
            "properties": {
                "operation": {
                    "$ref": "#/$defs/Operation"
                }
            }
        },
        "UpdateInstanceMetadataOptionsRequest": {
            "type": "object",
            "properties": {
                "instanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "httpTokens": {
                    "$ref": "#/$defs/HttpTokens"
                },
                "httpEndpoint": {
                    "$ref": "#/$defs/HttpEndpoint"
                },
                "httpPutResponseHopLimit": {
                    "$ref": "#/$defs/integer"
                },
                "httpProtocolIpv6": {
                    "$ref": "#/$defs/HttpProtocolIpv6"
                }
            }
        },
        "UpdateLoadBalancerAttributeResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "UpdateLoadBalancerAttributeRequest": {
            "type": "object",
            "properties": {
                "loadBalancerName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "attributeName": {
                    "$ref": "#/$defs/LoadBalancerAttributeName"
                },
                "attributeValue": {
                    "$ref": "#/$defs/StringMax256"
                }
            }
        },
        "LoadBalancerAttributeName": {
            "enum": [
                "HealthCheckPath",
                "SessionStickinessEnabled",
                "SessionStickiness_LB_CookieDurationSeconds",
                "HttpsRedirectionEnabled",
                "TlsPolicyName"
            ]
        },
        "UpdateRelationalDatabaseResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "UpdateRelationalDatabaseRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "masterUserPassword": {
                    "$ref": "#/$defs/SensitiveString"
                },
                "rotateMasterUserPassword": {
                    "$ref": "#/$defs/boolean"
                },
                "preferredBackupWindow": {
                    "$ref": "#/$defs/string"
                },
                "preferredMaintenanceWindow": {
                    "$ref": "#/$defs/string"
                },
                "enableBackupRetention": {
                    "$ref": "#/$defs/boolean"
                },
                "disableBackupRetention": {
                    "$ref": "#/$defs/boolean"
                },
                "publiclyAccessible": {
                    "$ref": "#/$defs/boolean"
                },
                "applyImmediately": {
                    "$ref": "#/$defs/boolean"
                },
                "caCertificateIdentifier": {
                    "$ref": "#/$defs/string"
                },
                "relationalDatabaseBlueprintId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateRelationalDatabaseParametersResult": {
            "type": "object",
            "properties": {
                "operations": {
                    "$ref": "#/$defs/OperationList"
                }
            }
        },
        "UpdateRelationalDatabaseParametersRequest": {
            "type": "object",
            "properties": {
                "relationalDatabaseName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "parameters": {
                    "$ref": "#/$defs/RelationalDatabaseParameterList"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://lightsail-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://lightsail-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://lightsail.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://lightsail.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}