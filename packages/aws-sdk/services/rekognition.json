{
    "name": "rekognition",
    "commands": [
        {
            "name": "AssociateFaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateFaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateFacesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateFacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CompareFaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CompareFaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CompareFacesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CompareFacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CopyProjectVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CopyProjectVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CopyProjectVersionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CopyProjectVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCollection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateCollection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCollectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCollectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDataset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateDataset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDatasetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFaceLivenessSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateFaceLivenessSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFaceLivenessSessionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFaceLivenessSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateProject",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateProject"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProjectResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateProjectRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateProjectVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateProjectVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateProjectVersionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateProjectVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateStreamProcessor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateStreamProcessor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateStreamProcessorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateStreamProcessorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCollection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteCollection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCollectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCollectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDataset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteDataset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDatasetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteFaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFacesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteProject",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteProject"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProjectResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProjectRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteProjectPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteProjectPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProjectPolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProjectPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteProjectVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteProjectVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteProjectVersionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteProjectVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteStreamProcessor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteStreamProcessor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteStreamProcessorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteStreamProcessorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCollection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeCollection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCollectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCollectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDataset",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeDataset"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDatasetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeProjects",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeProjects"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeProjectsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeProjectsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeProjectVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeProjectVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeProjectVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeProjectVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStreamProcessor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeStreamProcessor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStreamProcessorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeStreamProcessorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetectCustomLabels",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DetectCustomLabels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectCustomLabelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectCustomLabelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetectFaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DetectFaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectFacesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectFacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetectLabels",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DetectLabels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectLabelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectLabelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetectModerationLabels",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DetectModerationLabels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectModerationLabelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectModerationLabelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetectProtectiveEquipment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DetectProtectiveEquipment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectProtectiveEquipmentResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectProtectiveEquipmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetectText",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DetectText"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetectTextResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetectTextRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateFaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateFaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateFacesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateFacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DistributeDatasetEntries",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DistributeDatasetEntries"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DistributeDatasetEntriesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DistributeDatasetEntriesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCelebrityInfo",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCelebrityInfo"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCelebrityInfoResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCelebrityInfoRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCelebrityRecognition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetCelebrityRecognition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCelebrityRecognitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCelebrityRecognitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetContentModeration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetContentModeration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetContentModerationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetContentModerationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFaceDetection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFaceDetection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFaceDetectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFaceDetectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFaceLivenessSessionResults",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFaceLivenessSessionResults"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFaceLivenessSessionResultsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFaceLivenessSessionResultsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFaceSearch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetFaceSearch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFaceSearchResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFaceSearchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLabelDetection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetLabelDetection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLabelDetectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLabelDetectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMediaAnalysisJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetMediaAnalysisJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMediaAnalysisJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMediaAnalysisJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPersonTracking",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPersonTracking"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPersonTrackingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPersonTrackingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSegmentDetection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetSegmentDetection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSegmentDetectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSegmentDetectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTextDetection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTextDetection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTextDetectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTextDetectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "IndexFaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "IndexFaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/IndexFacesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/IndexFacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListCollections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListCollections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCollectionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCollectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDatasetEntries",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDatasetEntries"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDatasetEntriesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDatasetEntriesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDatasetLabels",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListDatasetLabels"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDatasetLabelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDatasetLabelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListFaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFacesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListMediaAnalysisJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListMediaAnalysisJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMediaAnalysisJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListMediaAnalysisJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListProjectPolicies",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListProjectPolicies"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProjectPoliciesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProjectPoliciesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStreamProcessors",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListStreamProcessors"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStreamProcessorsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListStreamProcessorsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListUsers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListUsers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListUsersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListUsersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutProjectPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutProjectPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutProjectPolicyResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutProjectPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RecognizeCelebrities",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "RecognizeCelebrities"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RecognizeCelebritiesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RecognizeCelebritiesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchFaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SearchFaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchFacesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchFacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchFacesByImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SearchFacesByImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchFacesByImageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchFacesByImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchUsers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SearchUsers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchUsersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchUsersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchUsersByImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SearchUsersByImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchUsersByImageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchUsersByImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartCelebrityRecognition",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartCelebrityRecognition"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartCelebrityRecognitionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartCelebrityRecognitionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartContentModeration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartContentModeration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartContentModerationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartContentModerationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartFaceDetection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartFaceDetection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartFaceDetectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartFaceDetectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartFaceSearch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartFaceSearch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartFaceSearchResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartFaceSearchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartLabelDetection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartLabelDetection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartLabelDetectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartLabelDetectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartMediaAnalysisJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartMediaAnalysisJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartMediaAnalysisJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartMediaAnalysisJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartPersonTracking",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartPersonTracking"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartPersonTrackingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartPersonTrackingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartProjectVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartProjectVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartProjectVersionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartProjectVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartSegmentDetection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartSegmentDetection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartSegmentDetectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartSegmentDetectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartStreamProcessor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartStreamProcessor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartStreamProcessorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartStreamProcessorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartTextDetection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartTextDetection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartTextDetectionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartTextDetectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopProjectVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopProjectVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopProjectVersionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopProjectVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopStreamProcessor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopStreamProcessor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopStreamProcessorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopStreamProcessorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDatasetEntries",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateDatasetEntries"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDatasetEntriesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDatasetEntriesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateStreamProcessor",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateStreamProcessor"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateStreamProcessorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateStreamProcessorRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateFacesResponse": {
            "type": "object",
            "properties": {
                "AssociatedFaces": {
                    "$ref": "#/$defs/AssociatedFacesList"
                },
                "UnsuccessfulFaceAssociations": {
                    "$ref": "#/$defs/UnsuccessfulFaceAssociationList"
                },
                "UserStatus": {
                    "$ref": "#/$defs/UserStatus"
                }
            }
        },
        "AssociatedFacesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssociatedFace"
            }
        },
        "AssociatedFace": {
            "type": "object",
            "properties": {
                "FaceId": {
                    "$ref": "#/$defs/FaceId"
                }
            }
        },
        "FaceId": {
            "type": "string"
        },
        "UnsuccessfulFaceAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsuccessfulFaceAssociation"
            }
        },
        "UnsuccessfulFaceAssociation": {
            "type": "object",
            "properties": {
                "FaceId": {
                    "$ref": "#/$defs/FaceId"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Reasons": {
                    "$ref": "#/$defs/UnsuccessfulFaceAssociationReasons"
                }
            }
        },
        "UserId": {
            "type": "string"
        },
        "Percent": {
            "type": "number",
            "format": "float"
        },
        "UnsuccessfulFaceAssociationReasons": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsuccessfulFaceAssociationReason"
            }
        },
        "UnsuccessfulFaceAssociationReason": {
            "enum": [
                "FACE_NOT_FOUND",
                "ASSOCIATED_TO_A_DIFFERENT_USER",
                "LOW_MATCH_CONFIDENCE"
            ]
        },
        "UserStatus": {
            "enum": [
                "ACTIVE",
                "UPDATING",
                "CREATING",
                "CREATED"
            ]
        },
        "AssociateFacesRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "FaceIds": {
                    "$ref": "#/$defs/UserFaceIdList"
                },
                "UserMatchThreshold": {
                    "$ref": "#/$defs/Percent"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "CollectionId": {
            "type": "string"
        },
        "UserFaceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FaceId"
            }
        },
        "ClientRequestToken": {
            "type": "string"
        },
        "CompareFacesResponse": {
            "type": "object",
            "properties": {
                "SourceImageFace": {
                    "$ref": "#/$defs/ComparedSourceImageFace"
                },
                "FaceMatches": {
                    "$ref": "#/$defs/CompareFacesMatchList"
                },
                "UnmatchedFaces": {
                    "$ref": "#/$defs/CompareFacesUnmatchList"
                },
                "SourceImageOrientationCorrection": {
                    "$ref": "#/$defs/OrientationCorrection"
                },
                "TargetImageOrientationCorrection": {
                    "$ref": "#/$defs/OrientationCorrection"
                }
            }
        },
        "ComparedSourceImageFace": {
            "type": "object",
            "properties": {
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "BoundingBox": {
            "type": "object",
            "properties": {
                "Width": {
                    "$ref": "#/$defs/Float"
                },
                "Height": {
                    "$ref": "#/$defs/Float"
                },
                "Left": {
                    "$ref": "#/$defs/Float"
                },
                "Top": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "Float": {
            "type": "number",
            "format": "float"
        },
        "CompareFacesMatchList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CompareFacesMatch"
            }
        },
        "CompareFacesMatch": {
            "type": "object",
            "properties": {
                "Similarity": {
                    "$ref": "#/$defs/Percent"
                },
                "Face": {
                    "$ref": "#/$defs/ComparedFace"
                }
            }
        },
        "ComparedFace": {
            "type": "object",
            "properties": {
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Landmarks": {
                    "$ref": "#/$defs/Landmarks"
                },
                "Pose": {
                    "$ref": "#/$defs/Pose"
                },
                "Quality": {
                    "$ref": "#/$defs/ImageQuality"
                },
                "Emotions": {
                    "$ref": "#/$defs/Emotions"
                },
                "Smile": {
                    "$ref": "#/$defs/Smile"
                }
            }
        },
        "Landmarks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Landmark"
            }
        },
        "Landmark": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/LandmarkType"
                },
                "X": {
                    "$ref": "#/$defs/Float"
                },
                "Y": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "LandmarkType": {
            "enum": [
                "eyeLeft",
                "eyeRight",
                "nose",
                "mouthLeft",
                "mouthRight",
                "leftEyeBrowLeft",
                "leftEyeBrowRight",
                "leftEyeBrowUp",
                "rightEyeBrowLeft",
                "rightEyeBrowRight",
                "rightEyeBrowUp",
                "leftEyeLeft",
                "leftEyeRight",
                "leftEyeUp",
                "leftEyeDown",
                "rightEyeLeft",
                "rightEyeRight",
                "rightEyeUp",
                "rightEyeDown",
                "noseLeft",
                "noseRight",
                "mouthUp",
                "mouthDown",
                "leftPupil",
                "rightPupil",
                "upperJawlineLeft",
                "midJawlineLeft",
                "chinBottom",
                "midJawlineRight",
                "upperJawlineRight"
            ]
        },
        "Pose": {
            "type": "object",
            "properties": {
                "Roll": {
                    "$ref": "#/$defs/Degree"
                },
                "Yaw": {
                    "$ref": "#/$defs/Degree"
                },
                "Pitch": {
                    "$ref": "#/$defs/Degree"
                }
            }
        },
        "Degree": {
            "type": "number",
            "format": "float"
        },
        "ImageQuality": {
            "type": "object",
            "properties": {
                "Brightness": {
                    "$ref": "#/$defs/Float"
                },
                "Sharpness": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "Emotions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Emotion"
            }
        },
        "Emotion": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/EmotionName"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "EmotionName": {
            "enum": [
                "HAPPY",
                "SAD",
                "ANGRY",
                "CONFUSED",
                "DISGUSTED",
                "SURPRISED",
                "CALM",
                "UNKNOWN",
                "FEAR"
            ]
        },
        "Smile": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Boolean"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "CompareFacesUnmatchList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ComparedFace"
            }
        },
        "OrientationCorrection": {
            "enum": [
                "ROTATE_0",
                "ROTATE_90",
                "ROTATE_180",
                "ROTATE_270"
            ]
        },
        "CompareFacesRequest": {
            "type": "object",
            "properties": {
                "SourceImage": {
                    "$ref": "#/$defs/Image"
                },
                "TargetImage": {
                    "$ref": "#/$defs/Image"
                },
                "SimilarityThreshold": {
                    "$ref": "#/$defs/Percent"
                },
                "QualityFilter": {
                    "$ref": "#/$defs/QualityFilter"
                }
            }
        },
        "Image": {
            "type": "object",
            "properties": {
                "Bytes": {
                    "$ref": "#/$defs/ImageBlob"
                },
                "S3Object": {
                    "$ref": "#/$defs/S3Object"
                }
            }
        },
        "ImageBlob": {
            "type": "string",
            "format": "binary"
        },
        "S3Object": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "Name": {
                    "$ref": "#/$defs/S3ObjectName"
                },
                "Version": {
                    "$ref": "#/$defs/S3ObjectVersion"
                }
            }
        },
        "S3Bucket": {
            "type": "string"
        },
        "S3ObjectName": {
            "type": "string"
        },
        "S3ObjectVersion": {
            "type": "string"
        },
        "QualityFilter": {
            "enum": [
                "NONE",
                "AUTO",
                "LOW",
                "MEDIUM",
                "HIGH"
            ]
        },
        "CopyProjectVersionResponse": {
            "type": "object",
            "properties": {
                "ProjectVersionArn": {
                    "$ref": "#/$defs/ProjectVersionArn"
                }
            }
        },
        "ProjectVersionArn": {
            "type": "string"
        },
        "CopyProjectVersionRequest": {
            "type": "object",
            "properties": {
                "SourceProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "SourceProjectVersionArn": {
                    "$ref": "#/$defs/ProjectVersionArn"
                },
                "DestinationProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "VersionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "OutputConfig": {
                    "$ref": "#/$defs/OutputConfig"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "ProjectArn": {
            "type": "string"
        },
        "VersionName": {
            "type": "string"
        },
        "OutputConfig": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "S3KeyPrefix": {
                    "$ref": "#/$defs/S3KeyPrefix"
                }
            }
        },
        "S3KeyPrefix": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "KmsKeyId": {
            "type": "string"
        },
        "CreateCollectionResponse": {
            "type": "object",
            "properties": {
                "StatusCode": {
                    "$ref": "#/$defs/UInteger"
                },
                "CollectionArn": {
                    "$ref": "#/$defs/String"
                },
                "FaceModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UInteger": {
            "type": "integer",
            "format": "int32"
        },
        "String": {
            "type": "string"
        },
        "CreateCollectionRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreateDatasetResponse": {
            "type": "object",
            "properties": {
                "DatasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                }
            }
        },
        "DatasetArn": {
            "type": "string"
        },
        "CreateDatasetRequest": {
            "type": "object",
            "properties": {
                "DatasetSource": {
                    "$ref": "#/$defs/DatasetSource"
                },
                "DatasetType": {
                    "$ref": "#/$defs/DatasetType"
                },
                "ProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "DatasetSource": {
            "type": "object",
            "properties": {
                "GroundTruthManifest": {
                    "$ref": "#/$defs/GroundTruthManifest"
                },
                "DatasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                }
            }
        },
        "GroundTruthManifest": {
            "type": "object",
            "properties": {
                "S3Object": {
                    "$ref": "#/$defs/S3Object"
                }
            }
        },
        "DatasetType": {
            "enum": [
                "TRAIN",
                "TEST"
            ]
        },
        "CreateFaceLivenessSessionResponse": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/LivenessSessionId"
                }
            }
        },
        "LivenessSessionId": {
            "type": "string"
        },
        "CreateFaceLivenessSessionRequest": {
            "type": "object",
            "properties": {
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "Settings": {
                    "$ref": "#/$defs/CreateFaceLivenessSessionRequestSettings"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "CreateFaceLivenessSessionRequestSettings": {
            "type": "object",
            "properties": {
                "OutputConfig": {
                    "$ref": "#/$defs/LivenessOutputConfig"
                },
                "AuditImagesLimit": {
                    "$ref": "#/$defs/AuditImagesLimit"
                }
            }
        },
        "LivenessOutputConfig": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "S3KeyPrefix": {
                    "$ref": "#/$defs/LivenessS3KeyPrefix"
                }
            }
        },
        "LivenessS3KeyPrefix": {
            "type": "string"
        },
        "AuditImagesLimit": {
            "type": "integer",
            "format": "int32"
        },
        "CreateProjectResponse": {
            "type": "object",
            "properties": {
                "ProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                }
            }
        },
        "CreateProjectRequest": {
            "type": "object",
            "properties": {
                "ProjectName": {
                    "$ref": "#/$defs/ProjectName"
                },
                "Feature": {
                    "$ref": "#/$defs/CustomizationFeature"
                },
                "AutoUpdate": {
                    "$ref": "#/$defs/ProjectAutoUpdate"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ProjectName": {
            "type": "string"
        },
        "CustomizationFeature": {
            "enum": [
                "CONTENT_MODERATION",
                "CUSTOM_LABELS"
            ]
        },
        "ProjectAutoUpdate": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "CreateProjectVersionResponse": {
            "type": "object",
            "properties": {
                "ProjectVersionArn": {
                    "$ref": "#/$defs/ProjectVersionArn"
                }
            }
        },
        "CreateProjectVersionRequest": {
            "type": "object",
            "properties": {
                "ProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "VersionName": {
                    "$ref": "#/$defs/VersionName"
                },
                "OutputConfig": {
                    "$ref": "#/$defs/OutputConfig"
                },
                "TrainingData": {
                    "$ref": "#/$defs/TrainingData"
                },
                "TestingData": {
                    "$ref": "#/$defs/TestingData"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "VersionDescription": {
                    "$ref": "#/$defs/VersionDescription"
                },
                "FeatureConfig": {
                    "$ref": "#/$defs/CustomizationFeatureConfig"
                }
            }
        },
        "TrainingData": {
            "type": "object",
            "properties": {
                "Assets": {
                    "$ref": "#/$defs/Assets"
                }
            }
        },
        "Assets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Asset"
            }
        },
        "Asset": {
            "type": "object",
            "properties": {
                "GroundTruthManifest": {
                    "$ref": "#/$defs/GroundTruthManifest"
                }
            }
        },
        "TestingData": {
            "type": "object",
            "properties": {
                "Assets": {
                    "$ref": "#/$defs/Assets"
                },
                "AutoCreate": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VersionDescription": {
            "type": "string"
        },
        "CustomizationFeatureConfig": {
            "type": "object",
            "properties": {
                "ContentModeration": {
                    "$ref": "#/$defs/CustomizationFeatureContentModerationConfig"
                }
            }
        },
        "CustomizationFeatureContentModerationConfig": {
            "type": "object",
            "properties": {
                "ConfidenceThreshold": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "CreateStreamProcessorResponse": {
            "type": "object",
            "properties": {
                "StreamProcessorArn": {
                    "$ref": "#/$defs/StreamProcessorArn"
                }
            }
        },
        "StreamProcessorArn": {
            "type": "string"
        },
        "CreateStreamProcessorRequest": {
            "type": "object",
            "properties": {
                "Input": {
                    "$ref": "#/$defs/StreamProcessorInput"
                },
                "Output": {
                    "$ref": "#/$defs/StreamProcessorOutput"
                },
                "Name": {
                    "$ref": "#/$defs/StreamProcessorName"
                },
                "Settings": {
                    "$ref": "#/$defs/StreamProcessorSettings"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "NotificationChannel": {
                    "$ref": "#/$defs/StreamProcessorNotificationChannel"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "RegionsOfInterest": {
                    "$ref": "#/$defs/RegionsOfInterest"
                },
                "DataSharingPreference": {
                    "$ref": "#/$defs/StreamProcessorDataSharingPreference"
                }
            }
        },
        "StreamProcessorInput": {
            "type": "object",
            "properties": {
                "KinesisVideoStream": {
                    "$ref": "#/$defs/KinesisVideoStream"
                }
            }
        },
        "KinesisVideoStream": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/KinesisVideoArn"
                }
            }
        },
        "KinesisVideoArn": {
            "type": "string"
        },
        "StreamProcessorOutput": {
            "type": "object",
            "properties": {
                "KinesisDataStream": {
                    "$ref": "#/$defs/KinesisDataStream"
                },
                "S3Destination": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "KinesisDataStream": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/KinesisDataArn"
                }
            }
        },
        "KinesisDataArn": {
            "type": "string"
        },
        "S3Destination": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "KeyPrefix": {
                    "$ref": "#/$defs/S3KeyPrefix"
                }
            }
        },
        "StreamProcessorName": {
            "type": "string"
        },
        "StreamProcessorSettings": {
            "type": "object",
            "properties": {
                "FaceSearch": {
                    "$ref": "#/$defs/FaceSearchSettings"
                },
                "ConnectedHome": {
                    "$ref": "#/$defs/ConnectedHomeSettings"
                }
            }
        },
        "FaceSearchSettings": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "FaceMatchThreshold": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "ConnectedHomeSettings": {
            "type": "object",
            "properties": {
                "Labels": {
                    "$ref": "#/$defs/ConnectedHomeLabels"
                },
                "MinConfidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "ConnectedHomeLabels": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConnectedHomeLabel"
            }
        },
        "ConnectedHomeLabel": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "StreamProcessorNotificationChannel": {
            "type": "object",
            "properties": {
                "SNSTopicArn": {
                    "$ref": "#/$defs/SNSTopicArn"
                }
            }
        },
        "SNSTopicArn": {
            "type": "string"
        },
        "RegionsOfInterest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RegionOfInterest"
            }
        },
        "RegionOfInterest": {
            "type": "object",
            "properties": {
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "Polygon": {
                    "$ref": "#/$defs/Polygon"
                }
            }
        },
        "Polygon": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Point"
            }
        },
        "Point": {
            "type": "object",
            "properties": {
                "X": {
                    "$ref": "#/$defs/Float"
                },
                "Y": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "StreamProcessorDataSharingPreference": {
            "type": "object",
            "properties": {
                "OptIn": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateUserResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateUserRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "DeleteCollectionResponse": {
            "type": "object",
            "properties": {
                "StatusCode": {
                    "$ref": "#/$defs/UInteger"
                }
            }
        },
        "DeleteCollectionRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                }
            }
        },
        "DeleteDatasetResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDatasetRequest": {
            "type": "object",
            "properties": {
                "DatasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                }
            }
        },
        "DeleteFacesResponse": {
            "type": "object",
            "properties": {
                "DeletedFaces": {
                    "$ref": "#/$defs/FaceIdList"
                },
                "UnsuccessfulFaceDeletions": {
                    "$ref": "#/$defs/UnsuccessfulFaceDeletionsList"
                }
            }
        },
        "FaceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FaceId"
            }
        },
        "UnsuccessfulFaceDeletionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsuccessfulFaceDeletion"
            }
        },
        "UnsuccessfulFaceDeletion": {
            "type": "object",
            "properties": {
                "FaceId": {
                    "$ref": "#/$defs/FaceId"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "Reasons": {
                    "$ref": "#/$defs/UnsuccessfulFaceDeletionReasons"
                }
            }
        },
        "UnsuccessfulFaceDeletionReasons": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsuccessfulFaceDeletionReason"
            }
        },
        "UnsuccessfulFaceDeletionReason": {
            "enum": [
                "ASSOCIATED_TO_AN_EXISTING_USER",
                "FACE_NOT_FOUND"
            ]
        },
        "DeleteFacesRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "FaceIds": {
                    "$ref": "#/$defs/FaceIdList"
                }
            }
        },
        "DeleteProjectResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ProjectStatus"
                }
            }
        },
        "ProjectStatus": {
            "enum": [
                "CREATING",
                "CREATED",
                "DELETING"
            ]
        },
        "DeleteProjectRequest": {
            "type": "object",
            "properties": {
                "ProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                }
            }
        },
        "DeleteProjectPolicyResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteProjectPolicyRequest": {
            "type": "object",
            "properties": {
                "ProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "PolicyName": {
                    "$ref": "#/$defs/ProjectPolicyName"
                },
                "PolicyRevisionId": {
                    "$ref": "#/$defs/ProjectPolicyRevisionId"
                }
            }
        },
        "ProjectPolicyName": {
            "type": "string"
        },
        "ProjectPolicyRevisionId": {
            "type": "string"
        },
        "DeleteProjectVersionResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ProjectVersionStatus"
                }
            }
        },
        "ProjectVersionStatus": {
            "enum": [
                "TRAINING_IN_PROGRESS",
                "TRAINING_COMPLETED",
                "TRAINING_FAILED",
                "STARTING",
                "RUNNING",
                "FAILED",
                "STOPPING",
                "STOPPED",
                "DELETING",
                "COPYING_IN_PROGRESS",
                "COPYING_COMPLETED",
                "COPYING_FAILED",
                "DEPRECATED",
                "EXPIRED"
            ]
        },
        "DeleteProjectVersionRequest": {
            "type": "object",
            "properties": {
                "ProjectVersionArn": {
                    "$ref": "#/$defs/ProjectVersionArn"
                }
            }
        },
        "DeleteStreamProcessorResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteStreamProcessorRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/StreamProcessorName"
                }
            }
        },
        "DeleteUserResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteUserRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "DescribeCollectionResponse": {
            "type": "object",
            "properties": {
                "FaceCount": {
                    "$ref": "#/$defs/ULong"
                },
                "FaceModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "CollectionARN": {
                    "$ref": "#/$defs/String"
                },
                "CreationTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "UserCount": {
                    "$ref": "#/$defs/ULong"
                }
            }
        },
        "ULong": {
            "type": "integer",
            "format": "int64"
        },
        "DateTime": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeCollectionRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                }
            }
        },
        "DescribeDatasetResponse": {
            "type": "object",
            "properties": {
                "DatasetDescription": {
                    "$ref": "#/$defs/DatasetDescription"
                }
            }
        },
        "DatasetDescription": {
            "type": "object",
            "properties": {
                "CreationTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "LastUpdatedTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "Status": {
                    "$ref": "#/$defs/DatasetStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "StatusMessageCode": {
                    "$ref": "#/$defs/DatasetStatusMessageCode"
                },
                "DatasetStats": {
                    "$ref": "#/$defs/DatasetStats"
                }
            }
        },
        "DatasetStatus": {
            "enum": [
                "CREATE_IN_PROGRESS",
                "CREATE_COMPLETE",
                "CREATE_FAILED",
                "UPDATE_IN_PROGRESS",
                "UPDATE_COMPLETE",
                "UPDATE_FAILED",
                "DELETE_IN_PROGRESS"
            ]
        },
        "StatusMessage": {
            "type": "string"
        },
        "DatasetStatusMessageCode": {
            "enum": [
                "SUCCESS",
                "SERVICE_ERROR",
                "CLIENT_ERROR"
            ]
        },
        "DatasetStats": {
            "type": "object",
            "properties": {
                "LabeledEntries": {
                    "$ref": "#/$defs/UInteger"
                },
                "TotalEntries": {
                    "$ref": "#/$defs/UInteger"
                },
                "TotalLabels": {
                    "$ref": "#/$defs/UInteger"
                },
                "ErrorEntries": {
                    "$ref": "#/$defs/UInteger"
                }
            }
        },
        "DescribeDatasetRequest": {
            "type": "object",
            "properties": {
                "DatasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                }
            }
        },
        "DescribeProjectsResponse": {
            "type": "object",
            "properties": {
                "ProjectDescriptions": {
                    "$ref": "#/$defs/ProjectDescriptions"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                }
            }
        },
        "ProjectDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProjectDescription"
            }
        },
        "ProjectDescription": {
            "type": "object",
            "properties": {
                "ProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "CreationTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "Status": {
                    "$ref": "#/$defs/ProjectStatus"
                },
                "Datasets": {
                    "$ref": "#/$defs/DatasetMetadataList"
                },
                "Feature": {
                    "$ref": "#/$defs/CustomizationFeature"
                },
                "AutoUpdate": {
                    "$ref": "#/$defs/ProjectAutoUpdate"
                }
            }
        },
        "DatasetMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetMetadata"
            }
        },
        "DatasetMetadata": {
            "type": "object",
            "properties": {
                "CreationTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "DatasetType": {
                    "$ref": "#/$defs/DatasetType"
                },
                "DatasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                },
                "Status": {
                    "$ref": "#/$defs/DatasetStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "StatusMessageCode": {
                    "$ref": "#/$defs/DatasetStatusMessageCode"
                }
            }
        },
        "ExtendedPaginationToken": {
            "type": "string"
        },
        "DescribeProjectsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ProjectsPageSize"
                },
                "ProjectNames": {
                    "$ref": "#/$defs/ProjectNames"
                },
                "Features": {
                    "$ref": "#/$defs/CustomizationFeatures"
                }
            }
        },
        "ProjectsPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ProjectNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProjectName"
            }
        },
        "CustomizationFeatures": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomizationFeature"
            }
        },
        "DescribeProjectVersionsResponse": {
            "type": "object",
            "properties": {
                "ProjectVersionDescriptions": {
                    "$ref": "#/$defs/ProjectVersionDescriptions"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                }
            }
        },
        "ProjectVersionDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProjectVersionDescription"
            }
        },
        "ProjectVersionDescription": {
            "type": "object",
            "properties": {
                "ProjectVersionArn": {
                    "$ref": "#/$defs/ProjectVersionArn"
                },
                "CreationTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "MinInferenceUnits": {
                    "$ref": "#/$defs/InferenceUnits"
                },
                "Status": {
                    "$ref": "#/$defs/ProjectVersionStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "BillableTrainingTimeInSeconds": {
                    "$ref": "#/$defs/ULong"
                },
                "TrainingEndTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "OutputConfig": {
                    "$ref": "#/$defs/OutputConfig"
                },
                "TrainingDataResult": {
                    "$ref": "#/$defs/TrainingDataResult"
                },
                "TestingDataResult": {
                    "$ref": "#/$defs/TestingDataResult"
                },
                "EvaluationResult": {
                    "$ref": "#/$defs/EvaluationResult"
                },
                "ManifestSummary": {
                    "$ref": "#/$defs/GroundTruthManifest"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "MaxInferenceUnits": {
                    "$ref": "#/$defs/InferenceUnits"
                },
                "SourceProjectVersionArn": {
                    "$ref": "#/$defs/ProjectVersionArn"
                },
                "VersionDescription": {
                    "$ref": "#/$defs/VersionDescription"
                },
                "Feature": {
                    "$ref": "#/$defs/CustomizationFeature"
                },
                "BaseModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "FeatureConfig": {
                    "$ref": "#/$defs/CustomizationFeatureConfig"
                }
            }
        },
        "InferenceUnits": {
            "type": "integer",
            "format": "int32"
        },
        "TrainingDataResult": {
            "type": "object",
            "properties": {
                "Input": {
                    "$ref": "#/$defs/TrainingData"
                },
                "Output": {
                    "$ref": "#/$defs/TrainingData"
                },
                "Validation": {
                    "$ref": "#/$defs/ValidationData"
                }
            }
        },
        "ValidationData": {
            "type": "object",
            "properties": {
                "Assets": {
                    "$ref": "#/$defs/Assets"
                }
            }
        },
        "TestingDataResult": {
            "type": "object",
            "properties": {
                "Input": {
                    "$ref": "#/$defs/TestingData"
                },
                "Output": {
                    "$ref": "#/$defs/TestingData"
                },
                "Validation": {
                    "$ref": "#/$defs/ValidationData"
                }
            }
        },
        "EvaluationResult": {
            "type": "object",
            "properties": {
                "F1Score": {
                    "$ref": "#/$defs/Float"
                },
                "Summary": {
                    "$ref": "#/$defs/Summary"
                }
            }
        },
        "Summary": {
            "type": "object",
            "properties": {
                "S3Object": {
                    "$ref": "#/$defs/S3Object"
                }
            }
        },
        "DescribeProjectVersionsRequest": {
            "type": "object",
            "properties": {
                "ProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "VersionNames": {
                    "$ref": "#/$defs/VersionNames"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ProjectVersionsPageSize"
                }
            }
        },
        "VersionNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VersionName"
            }
        },
        "ProjectVersionsPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeStreamProcessorResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/StreamProcessorName"
                },
                "StreamProcessorArn": {
                    "$ref": "#/$defs/StreamProcessorArn"
                },
                "Status": {
                    "$ref": "#/$defs/StreamProcessorStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "CreationTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "LastUpdateTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "Input": {
                    "$ref": "#/$defs/StreamProcessorInput"
                },
                "Output": {
                    "$ref": "#/$defs/StreamProcessorOutput"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "Settings": {
                    "$ref": "#/$defs/StreamProcessorSettings"
                },
                "NotificationChannel": {
                    "$ref": "#/$defs/StreamProcessorNotificationChannel"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "RegionsOfInterest": {
                    "$ref": "#/$defs/RegionsOfInterest"
                },
                "DataSharingPreference": {
                    "$ref": "#/$defs/StreamProcessorDataSharingPreference"
                }
            }
        },
        "StreamProcessorStatus": {
            "enum": [
                "STOPPED",
                "STARTING",
                "RUNNING",
                "FAILED",
                "STOPPING",
                "UPDATING"
            ]
        },
        "DescribeStreamProcessorRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/StreamProcessorName"
                }
            }
        },
        "DetectCustomLabelsResponse": {
            "type": "object",
            "properties": {
                "CustomLabels": {
                    "$ref": "#/$defs/CustomLabels"
                }
            }
        },
        "CustomLabels": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomLabel"
            }
        },
        "CustomLabel": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Geometry": {
                    "$ref": "#/$defs/Geometry"
                }
            }
        },
        "Geometry": {
            "type": "object",
            "properties": {
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "Polygon": {
                    "$ref": "#/$defs/Polygon"
                }
            }
        },
        "DetectCustomLabelsRequest": {
            "type": "object",
            "properties": {
                "ProjectVersionArn": {
                    "$ref": "#/$defs/ProjectVersionArn"
                },
                "Image": {
                    "$ref": "#/$defs/Image"
                },
                "MaxResults": {
                    "$ref": "#/$defs/UInteger"
                },
                "MinConfidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "DetectFacesResponse": {
            "type": "object",
            "properties": {
                "FaceDetails": {
                    "$ref": "#/$defs/FaceDetailList"
                },
                "OrientationCorrection": {
                    "$ref": "#/$defs/OrientationCorrection"
                }
            }
        },
        "FaceDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FaceDetail"
            }
        },
        "FaceDetail": {
            "type": "object",
            "properties": {
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "AgeRange": {
                    "$ref": "#/$defs/AgeRange"
                },
                "Smile": {
                    "$ref": "#/$defs/Smile"
                },
                "Eyeglasses": {
                    "$ref": "#/$defs/Eyeglasses"
                },
                "Sunglasses": {
                    "$ref": "#/$defs/Sunglasses"
                },
                "Gender": {
                    "$ref": "#/$defs/Gender"
                },
                "Beard": {
                    "$ref": "#/$defs/Beard"
                },
                "Mustache": {
                    "$ref": "#/$defs/Mustache"
                },
                "EyesOpen": {
                    "$ref": "#/$defs/EyeOpen"
                },
                "MouthOpen": {
                    "$ref": "#/$defs/MouthOpen"
                },
                "Emotions": {
                    "$ref": "#/$defs/Emotions"
                },
                "Landmarks": {
                    "$ref": "#/$defs/Landmarks"
                },
                "Pose": {
                    "$ref": "#/$defs/Pose"
                },
                "Quality": {
                    "$ref": "#/$defs/ImageQuality"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "FaceOccluded": {
                    "$ref": "#/$defs/FaceOccluded"
                },
                "EyeDirection": {
                    "$ref": "#/$defs/EyeDirection"
                }
            }
        },
        "AgeRange": {
            "type": "object",
            "properties": {
                "Low": {
                    "$ref": "#/$defs/UInteger"
                },
                "High": {
                    "$ref": "#/$defs/UInteger"
                }
            }
        },
        "Eyeglasses": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Boolean"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "Sunglasses": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Boolean"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "Gender": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/GenderType"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "GenderType": {
            "enum": [
                "Male",
                "Female"
            ]
        },
        "Beard": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Boolean"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "Mustache": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Boolean"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "EyeOpen": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Boolean"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "MouthOpen": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Boolean"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "FaceOccluded": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Boolean"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "EyeDirection": {
            "type": "object",
            "properties": {
                "Yaw": {
                    "$ref": "#/$defs/Degree"
                },
                "Pitch": {
                    "$ref": "#/$defs/Degree"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "DetectFacesRequest": {
            "type": "object",
            "properties": {
                "Image": {
                    "$ref": "#/$defs/Image"
                },
                "Attributes": {
                    "$ref": "#/$defs/Attributes"
                }
            }
        },
        "Attributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Attribute"
            }
        },
        "Attribute": {
            "enum": [
                "DEFAULT",
                "ALL",
                "AGE_RANGE",
                "BEARD",
                "EMOTIONS",
                "EYE_DIRECTION",
                "EYEGLASSES",
                "EYES_OPEN",
                "GENDER",
                "MOUTH_OPEN",
                "MUSTACHE",
                "FACE_OCCLUDED",
                "SMILE",
                "SUNGLASSES"
            ]
        },
        "DetectLabelsResponse": {
            "type": "object",
            "properties": {
                "Labels": {
                    "$ref": "#/$defs/Labels"
                },
                "OrientationCorrection": {
                    "$ref": "#/$defs/OrientationCorrection"
                },
                "LabelModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "ImageProperties": {
                    "$ref": "#/$defs/DetectLabelsImageProperties"
                }
            }
        },
        "Labels": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Label"
            }
        },
        "Label": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Instances": {
                    "$ref": "#/$defs/Instances"
                },
                "Parents": {
                    "$ref": "#/$defs/Parents"
                },
                "Aliases": {
                    "$ref": "#/$defs/LabelAliases"
                },
                "Categories": {
                    "$ref": "#/$defs/LabelCategories"
                }
            }
        },
        "Instances": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Instance"
            }
        },
        "Instance": {
            "type": "object",
            "properties": {
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "DominantColors": {
                    "$ref": "#/$defs/DominantColors"
                }
            }
        },
        "DominantColors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DominantColor"
            }
        },
        "DominantColor": {
            "type": "object",
            "properties": {
                "Red": {
                    "$ref": "#/$defs/UInteger"
                },
                "Blue": {
                    "$ref": "#/$defs/UInteger"
                },
                "Green": {
                    "$ref": "#/$defs/UInteger"
                },
                "HexCode": {
                    "$ref": "#/$defs/String"
                },
                "CSSColor": {
                    "$ref": "#/$defs/String"
                },
                "SimplifiedColor": {
                    "$ref": "#/$defs/String"
                },
                "PixelPercent": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "Parents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Parent"
            }
        },
        "Parent": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LabelAliases": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LabelAlias"
            }
        },
        "LabelAlias": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LabelCategories": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LabelCategory"
            }
        },
        "LabelCategory": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DetectLabelsImageProperties": {
            "type": "object",
            "properties": {
                "Quality": {
                    "$ref": "#/$defs/DetectLabelsImageQuality"
                },
                "DominantColors": {
                    "$ref": "#/$defs/DominantColors"
                },
                "Foreground": {
                    "$ref": "#/$defs/DetectLabelsImageForeground"
                },
                "Background": {
                    "$ref": "#/$defs/DetectLabelsImageBackground"
                }
            }
        },
        "DetectLabelsImageQuality": {
            "type": "object",
            "properties": {
                "Brightness": {
                    "$ref": "#/$defs/Float"
                },
                "Sharpness": {
                    "$ref": "#/$defs/Float"
                },
                "Contrast": {
                    "$ref": "#/$defs/Float"
                }
            }
        },
        "DetectLabelsImageForeground": {
            "type": "object",
            "properties": {
                "Quality": {
                    "$ref": "#/$defs/DetectLabelsImageQuality"
                },
                "DominantColors": {
                    "$ref": "#/$defs/DominantColors"
                }
            }
        },
        "DetectLabelsImageBackground": {
            "type": "object",
            "properties": {
                "Quality": {
                    "$ref": "#/$defs/DetectLabelsImageQuality"
                },
                "DominantColors": {
                    "$ref": "#/$defs/DominantColors"
                }
            }
        },
        "DetectLabelsRequest": {
            "type": "object",
            "properties": {
                "Image": {
                    "$ref": "#/$defs/Image"
                },
                "MaxLabels": {
                    "$ref": "#/$defs/UInteger"
                },
                "MinConfidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Features": {
                    "$ref": "#/$defs/DetectLabelsFeatureList"
                },
                "Settings": {
                    "$ref": "#/$defs/DetectLabelsSettings"
                }
            }
        },
        "DetectLabelsFeatureList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DetectLabelsFeatureName"
            }
        },
        "DetectLabelsFeatureName": {
            "enum": [
                "GENERAL_LABELS",
                "IMAGE_PROPERTIES"
            ]
        },
        "DetectLabelsSettings": {
            "type": "object",
            "properties": {
                "GeneralLabels": {
                    "$ref": "#/$defs/GeneralLabelsSettings"
                },
                "ImageProperties": {
                    "$ref": "#/$defs/DetectLabelsImagePropertiesSettings"
                }
            }
        },
        "GeneralLabelsSettings": {
            "type": "object",
            "properties": {
                "LabelInclusionFilters": {
                    "$ref": "#/$defs/GeneralLabelsFilterList"
                },
                "LabelExclusionFilters": {
                    "$ref": "#/$defs/GeneralLabelsFilterList"
                },
                "LabelCategoryInclusionFilters": {
                    "$ref": "#/$defs/GeneralLabelsFilterList"
                },
                "LabelCategoryExclusionFilters": {
                    "$ref": "#/$defs/GeneralLabelsFilterList"
                }
            }
        },
        "GeneralLabelsFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GeneralLabelsFilterValue"
            }
        },
        "GeneralLabelsFilterValue": {
            "type": "string"
        },
        "DetectLabelsImagePropertiesSettings": {
            "type": "object",
            "properties": {
                "MaxDominantColors": {
                    "$ref": "#/$defs/DetectLabelsMaxDominantColors"
                }
            }
        },
        "DetectLabelsMaxDominantColors": {
            "type": "integer",
            "format": "int32"
        },
        "DetectModerationLabelsResponse": {
            "type": "object",
            "properties": {
                "ModerationLabels": {
                    "$ref": "#/$defs/ModerationLabels"
                },
                "ModerationModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "HumanLoopActivationOutput": {
                    "$ref": "#/$defs/HumanLoopActivationOutput"
                },
                "ProjectVersion": {
                    "$ref": "#/$defs/ProjectVersionId"
                },
                "ContentTypes": {
                    "$ref": "#/$defs/ContentTypes"
                }
            }
        },
        "ModerationLabels": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ModerationLabel"
            }
        },
        "ModerationLabel": {
            "type": "object",
            "properties": {
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "ParentName": {
                    "$ref": "#/$defs/String"
                },
                "TaxonomyLevel": {
                    "$ref": "#/$defs/UInteger"
                }
            }
        },
        "HumanLoopActivationOutput": {
            "type": "object",
            "properties": {
                "HumanLoopArn": {
                    "$ref": "#/$defs/HumanLoopArn"
                },
                "HumanLoopActivationReasons": {
                    "$ref": "#/$defs/HumanLoopActivationReasons"
                },
                "HumanLoopActivationConditionsEvaluationResults": {
                    "$ref": "#/$defs/SynthesizedJsonHumanLoopActivationConditionsEvaluationResults"
                }
            }
        },
        "HumanLoopArn": {
            "type": "string"
        },
        "HumanLoopActivationReasons": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HumanLoopActivationReason"
            }
        },
        "HumanLoopActivationReason": {
            "type": "string"
        },
        "SynthesizedJsonHumanLoopActivationConditionsEvaluationResults": {
            "type": "string"
        },
        "ProjectVersionId": {
            "type": "string"
        },
        "ContentTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContentType"
            }
        },
        "ContentType": {
            "type": "object",
            "properties": {
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DetectModerationLabelsRequest": {
            "type": "object",
            "properties": {
                "Image": {
                    "$ref": "#/$defs/Image"
                },
                "MinConfidence": {
                    "$ref": "#/$defs/Percent"
                },
                "HumanLoopConfig": {
                    "$ref": "#/$defs/HumanLoopConfig"
                },
                "ProjectVersion": {
                    "$ref": "#/$defs/ProjectVersionId"
                }
            }
        },
        "HumanLoopConfig": {
            "type": "object",
            "properties": {
                "HumanLoopName": {
                    "$ref": "#/$defs/HumanLoopName"
                },
                "FlowDefinitionArn": {
                    "$ref": "#/$defs/FlowDefinitionArn"
                },
                "DataAttributes": {
                    "$ref": "#/$defs/HumanLoopDataAttributes"
                }
            }
        },
        "HumanLoopName": {
            "type": "string"
        },
        "FlowDefinitionArn": {
            "type": "string"
        },
        "HumanLoopDataAttributes": {
            "type": "object",
            "properties": {
                "ContentClassifiers": {
                    "$ref": "#/$defs/ContentClassifiers"
                }
            }
        },
        "ContentClassifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContentClassifier"
            }
        },
        "ContentClassifier": {
            "enum": [
                "FREE_OF_PERSONALLY_IDENTIFIABLE_INFORMATION",
                "FREE_OF_ADULT_CONTENT"
            ]
        },
        "DetectProtectiveEquipmentResponse": {
            "type": "object",
            "properties": {
                "ProtectiveEquipmentModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "Persons": {
                    "$ref": "#/$defs/ProtectiveEquipmentPersons"
                },
                "Summary": {
                    "$ref": "#/$defs/ProtectiveEquipmentSummary"
                }
            }
        },
        "ProtectiveEquipmentPersons": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProtectiveEquipmentPerson"
            }
        },
        "ProtectiveEquipmentPerson": {
            "type": "object",
            "properties": {
                "BodyParts": {
                    "$ref": "#/$defs/BodyParts"
                },
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Id": {
                    "$ref": "#/$defs/UInteger"
                }
            }
        },
        "BodyParts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProtectiveEquipmentBodyPart"
            }
        },
        "ProtectiveEquipmentBodyPart": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/BodyPart"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "EquipmentDetections": {
                    "$ref": "#/$defs/EquipmentDetections"
                }
            }
        },
        "BodyPart": {
            "enum": [
                "FACE",
                "HEAD",
                "LEFT_HAND",
                "RIGHT_HAND"
            ]
        },
        "EquipmentDetections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EquipmentDetection"
            }
        },
        "EquipmentDetection": {
            "type": "object",
            "properties": {
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Type": {
                    "$ref": "#/$defs/ProtectiveEquipmentType"
                },
                "CoversBodyPart": {
                    "$ref": "#/$defs/CoversBodyPart"
                }
            }
        },
        "ProtectiveEquipmentType": {
            "enum": [
                "FACE_COVER",
                "HAND_COVER",
                "HEAD_COVER"
            ]
        },
        "CoversBodyPart": {
            "type": "object",
            "properties": {
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Value": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ProtectiveEquipmentSummary": {
            "type": "object",
            "properties": {
                "PersonsWithRequiredEquipment": {
                    "$ref": "#/$defs/ProtectiveEquipmentPersonIds"
                },
                "PersonsWithoutRequiredEquipment": {
                    "$ref": "#/$defs/ProtectiveEquipmentPersonIds"
                },
                "PersonsIndeterminate": {
                    "$ref": "#/$defs/ProtectiveEquipmentPersonIds"
                }
            }
        },
        "ProtectiveEquipmentPersonIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UInteger"
            }
        },
        "DetectProtectiveEquipmentRequest": {
            "type": "object",
            "properties": {
                "Image": {
                    "$ref": "#/$defs/Image"
                },
                "SummarizationAttributes": {
                    "$ref": "#/$defs/ProtectiveEquipmentSummarizationAttributes"
                }
            }
        },
        "ProtectiveEquipmentSummarizationAttributes": {
            "type": "object",
            "properties": {
                "MinConfidence": {
                    "$ref": "#/$defs/Percent"
                },
                "RequiredEquipmentTypes": {
                    "$ref": "#/$defs/ProtectiveEquipmentTypes"
                }
            }
        },
        "ProtectiveEquipmentTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProtectiveEquipmentType"
            }
        },
        "DetectTextResponse": {
            "type": "object",
            "properties": {
                "TextDetections": {
                    "$ref": "#/$defs/TextDetectionList"
                },
                "TextModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TextDetectionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TextDetection"
            }
        },
        "TextDetection": {
            "type": "object",
            "properties": {
                "DetectedText": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/TextTypes"
                },
                "Id": {
                    "$ref": "#/$defs/UInteger"
                },
                "ParentId": {
                    "$ref": "#/$defs/UInteger"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "Geometry": {
                    "$ref": "#/$defs/Geometry"
                }
            }
        },
        "TextTypes": {
            "enum": [
                "LINE",
                "WORD"
            ]
        },
        "DetectTextRequest": {
            "type": "object",
            "properties": {
                "Image": {
                    "$ref": "#/$defs/Image"
                },
                "Filters": {
                    "$ref": "#/$defs/DetectTextFilters"
                }
            }
        },
        "DetectTextFilters": {
            "type": "object",
            "properties": {
                "WordFilter": {
                    "$ref": "#/$defs/DetectionFilter"
                },
                "RegionsOfInterest": {
                    "$ref": "#/$defs/RegionsOfInterest"
                }
            }
        },
        "DetectionFilter": {
            "type": "object",
            "properties": {
                "MinConfidence": {
                    "$ref": "#/$defs/Percent"
                },
                "MinBoundingBoxHeight": {
                    "$ref": "#/$defs/BoundingBoxHeight"
                },
                "MinBoundingBoxWidth": {
                    "$ref": "#/$defs/BoundingBoxWidth"
                }
            }
        },
        "BoundingBoxHeight": {
            "type": "number",
            "format": "float"
        },
        "BoundingBoxWidth": {
            "type": "number",
            "format": "float"
        },
        "DisassociateFacesResponse": {
            "type": "object",
            "properties": {
                "DisassociatedFaces": {
                    "$ref": "#/$defs/DisassociatedFacesList"
                },
                "UnsuccessfulFaceDisassociations": {
                    "$ref": "#/$defs/UnsuccessfulFaceDisassociationList"
                },
                "UserStatus": {
                    "$ref": "#/$defs/UserStatus"
                }
            }
        },
        "DisassociatedFacesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DisassociatedFace"
            }
        },
        "DisassociatedFace": {
            "type": "object",
            "properties": {
                "FaceId": {
                    "$ref": "#/$defs/FaceId"
                }
            }
        },
        "UnsuccessfulFaceDisassociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsuccessfulFaceDisassociation"
            }
        },
        "UnsuccessfulFaceDisassociation": {
            "type": "object",
            "properties": {
                "FaceId": {
                    "$ref": "#/$defs/FaceId"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "Reasons": {
                    "$ref": "#/$defs/UnsuccessfulFaceDisassociationReasons"
                }
            }
        },
        "UnsuccessfulFaceDisassociationReasons": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsuccessfulFaceDisassociationReason"
            }
        },
        "UnsuccessfulFaceDisassociationReason": {
            "enum": [
                "FACE_NOT_FOUND",
                "ASSOCIATED_TO_A_DIFFERENT_USER"
            ]
        },
        "DisassociateFacesRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "FaceIds": {
                    "$ref": "#/$defs/UserFaceIdList"
                }
            }
        },
        "DistributeDatasetEntriesResponse": {
            "type": "object",
            "properties": {}
        },
        "DistributeDatasetEntriesRequest": {
            "type": "object",
            "properties": {
                "Datasets": {
                    "$ref": "#/$defs/DistributeDatasetMetadataList"
                }
            }
        },
        "DistributeDatasetMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DistributeDataset"
            }
        },
        "DistributeDataset": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/DatasetArn"
                }
            }
        },
        "GetCelebrityInfoResponse": {
            "type": "object",
            "properties": {
                "Urls": {
                    "$ref": "#/$defs/Urls"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "KnownGender": {
                    "$ref": "#/$defs/KnownGender"
                }
            }
        },
        "Urls": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Url"
            }
        },
        "Url": {
            "type": "string"
        },
        "KnownGender": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/KnownGenderType"
                }
            }
        },
        "KnownGenderType": {
            "enum": [
                "Male",
                "Female",
                "Nonbinary",
                "Unlisted"
            ]
        },
        "GetCelebrityInfoRequest": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/RekognitionUniqueId"
                }
            }
        },
        "RekognitionUniqueId": {
            "type": "string"
        },
        "GetCelebrityRecognitionResponse": {
            "type": "object",
            "properties": {
                "JobStatus": {
                    "$ref": "#/$defs/VideoJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "VideoMetadata": {
                    "$ref": "#/$defs/VideoMetadata"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "Celebrities": {
                    "$ref": "#/$defs/CelebrityRecognitions"
                },
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "VideoJobStatus": {
            "enum": [
                "IN_PROGRESS",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "VideoMetadata": {
            "type": "object",
            "properties": {
                "Codec": {
                    "$ref": "#/$defs/String"
                },
                "DurationMillis": {
                    "$ref": "#/$defs/ULong"
                },
                "Format": {
                    "$ref": "#/$defs/String"
                },
                "FrameRate": {
                    "$ref": "#/$defs/Float"
                },
                "FrameHeight": {
                    "$ref": "#/$defs/ULong"
                },
                "FrameWidth": {
                    "$ref": "#/$defs/ULong"
                },
                "ColorRange": {
                    "$ref": "#/$defs/VideoColorRange"
                }
            }
        },
        "VideoColorRange": {
            "enum": [
                "FULL",
                "LIMITED"
            ]
        },
        "PaginationToken": {
            "type": "string"
        },
        "CelebrityRecognitions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CelebrityRecognition"
            }
        },
        "CelebrityRecognition": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Celebrity": {
                    "$ref": "#/$defs/CelebrityDetail"
                }
            }
        },
        "Timestamp": {
            "type": "integer",
            "format": "int64"
        },
        "CelebrityDetail": {
            "type": "object",
            "properties": {
                "Urls": {
                    "$ref": "#/$defs/Urls"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Id": {
                    "$ref": "#/$defs/RekognitionUniqueId"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "Face": {
                    "$ref": "#/$defs/FaceDetail"
                },
                "KnownGender": {
                    "$ref": "#/$defs/KnownGender"
                }
            }
        },
        "JobId": {
            "type": "string"
        },
        "Video": {
            "type": "object",
            "properties": {
                "S3Object": {
                    "$ref": "#/$defs/S3Object"
                }
            }
        },
        "JobTag": {
            "type": "string"
        },
        "GetCelebrityRecognitionRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "SortBy": {
                    "$ref": "#/$defs/CelebrityRecognitionSortBy"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "CelebrityRecognitionSortBy": {
            "enum": [
                "ID",
                "TIMESTAMP"
            ]
        },
        "GetContentModerationResponse": {
            "type": "object",
            "properties": {
                "JobStatus": {
                    "$ref": "#/$defs/VideoJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "VideoMetadata": {
                    "$ref": "#/$defs/VideoMetadata"
                },
                "ModerationLabels": {
                    "$ref": "#/$defs/ContentModerationDetections"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "ModerationModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                },
                "GetRequestMetadata": {
                    "$ref": "#/$defs/GetContentModerationRequestMetadata"
                }
            }
        },
        "ContentModerationDetections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContentModerationDetection"
            }
        },
        "ContentModerationDetection": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ModerationLabel": {
                    "$ref": "#/$defs/ModerationLabel"
                },
                "StartTimestampMillis": {
                    "$ref": "#/$defs/ULong"
                },
                "EndTimestampMillis": {
                    "$ref": "#/$defs/ULong"
                },
                "DurationMillis": {
                    "$ref": "#/$defs/ULong"
                },
                "ContentTypes": {
                    "$ref": "#/$defs/ContentTypes"
                }
            }
        },
        "GetContentModerationRequestMetadata": {
            "type": "object",
            "properties": {
                "SortBy": {
                    "$ref": "#/$defs/ContentModerationSortBy"
                },
                "AggregateBy": {
                    "$ref": "#/$defs/ContentModerationAggregateBy"
                }
            }
        },
        "ContentModerationSortBy": {
            "enum": [
                "NAME",
                "TIMESTAMP"
            ]
        },
        "ContentModerationAggregateBy": {
            "enum": [
                "TIMESTAMPS",
                "SEGMENTS"
            ]
        },
        "GetContentModerationRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "SortBy": {
                    "$ref": "#/$defs/ContentModerationSortBy"
                },
                "AggregateBy": {
                    "$ref": "#/$defs/ContentModerationAggregateBy"
                }
            }
        },
        "GetFaceDetectionResponse": {
            "type": "object",
            "properties": {
                "JobStatus": {
                    "$ref": "#/$defs/VideoJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "VideoMetadata": {
                    "$ref": "#/$defs/VideoMetadata"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "Faces": {
                    "$ref": "#/$defs/FaceDetections"
                },
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "FaceDetections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FaceDetection"
            }
        },
        "FaceDetection": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Face": {
                    "$ref": "#/$defs/FaceDetail"
                }
            }
        },
        "GetFaceDetectionRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "GetFaceLivenessSessionResultsResponse": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/LivenessSessionId"
                },
                "Status": {
                    "$ref": "#/$defs/LivenessSessionStatus"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "ReferenceImage": {
                    "$ref": "#/$defs/AuditImage"
                },
                "AuditImages": {
                    "$ref": "#/$defs/AuditImages"
                }
            }
        },
        "LivenessSessionStatus": {
            "enum": [
                "CREATED",
                "IN_PROGRESS",
                "SUCCEEDED",
                "FAILED",
                "EXPIRED"
            ]
        },
        "AuditImage": {
            "type": "object",
            "properties": {
                "Bytes": {
                    "$ref": "#/$defs/LivenessImageBlob"
                },
                "S3Object": {
                    "$ref": "#/$defs/S3Object"
                },
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                }
            }
        },
        "LivenessImageBlob": {
            "type": "string",
            "format": "binary"
        },
        "AuditImages": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuditImage"
            }
        },
        "GetFaceLivenessSessionResultsRequest": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/LivenessSessionId"
                }
            }
        },
        "GetFaceSearchResponse": {
            "type": "object",
            "properties": {
                "JobStatus": {
                    "$ref": "#/$defs/VideoJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "VideoMetadata": {
                    "$ref": "#/$defs/VideoMetadata"
                },
                "Persons": {
                    "$ref": "#/$defs/PersonMatches"
                },
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "PersonMatches": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PersonMatch"
            }
        },
        "PersonMatch": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Person": {
                    "$ref": "#/$defs/PersonDetail"
                },
                "FaceMatches": {
                    "$ref": "#/$defs/FaceMatchList"
                }
            }
        },
        "PersonDetail": {
            "type": "object",
            "properties": {
                "Index": {
                    "$ref": "#/$defs/PersonIndex"
                },
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "Face": {
                    "$ref": "#/$defs/FaceDetail"
                }
            }
        },
        "PersonIndex": {
            "type": "integer",
            "format": "int64"
        },
        "FaceMatchList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FaceMatch"
            }
        },
        "FaceMatch": {
            "type": "object",
            "properties": {
                "Similarity": {
                    "$ref": "#/$defs/Percent"
                },
                "Face": {
                    "$ref": "#/$defs/Face"
                }
            }
        },
        "Face": {
            "type": "object",
            "properties": {
                "FaceId": {
                    "$ref": "#/$defs/FaceId"
                },
                "BoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "ExternalImageId": {
                    "$ref": "#/$defs/ExternalImageId"
                },
                "Confidence": {
                    "$ref": "#/$defs/Percent"
                },
                "IndexFacesModelVersion": {
                    "$ref": "#/$defs/IndexFacesModelVersion"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                }
            }
        },
        "ImageId": {
            "type": "string"
        },
        "ExternalImageId": {
            "type": "string"
        },
        "IndexFacesModelVersion": {
            "type": "string"
        },
        "GetFaceSearchRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "SortBy": {
                    "$ref": "#/$defs/FaceSearchSortBy"
                }
            }
        },
        "FaceSearchSortBy": {
            "enum": [
                "INDEX",
                "TIMESTAMP"
            ]
        },
        "GetLabelDetectionResponse": {
            "type": "object",
            "properties": {
                "JobStatus": {
                    "$ref": "#/$defs/VideoJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "VideoMetadata": {
                    "$ref": "#/$defs/VideoMetadata"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "Labels": {
                    "$ref": "#/$defs/LabelDetections"
                },
                "LabelModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                },
                "GetRequestMetadata": {
                    "$ref": "#/$defs/GetLabelDetectionRequestMetadata"
                }
            }
        },
        "LabelDetections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LabelDetection"
            }
        },
        "LabelDetection": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Label": {
                    "$ref": "#/$defs/Label"
                },
                "StartTimestampMillis": {
                    "$ref": "#/$defs/ULong"
                },
                "EndTimestampMillis": {
                    "$ref": "#/$defs/ULong"
                },
                "DurationMillis": {
                    "$ref": "#/$defs/ULong"
                }
            }
        },
        "GetLabelDetectionRequestMetadata": {
            "type": "object",
            "properties": {
                "SortBy": {
                    "$ref": "#/$defs/LabelDetectionSortBy"
                },
                "AggregateBy": {
                    "$ref": "#/$defs/LabelDetectionAggregateBy"
                }
            }
        },
        "LabelDetectionSortBy": {
            "enum": [
                "NAME",
                "TIMESTAMP"
            ]
        },
        "LabelDetectionAggregateBy": {
            "enum": [
                "TIMESTAMPS",
                "SEGMENTS"
            ]
        },
        "GetLabelDetectionRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "SortBy": {
                    "$ref": "#/$defs/LabelDetectionSortBy"
                },
                "AggregateBy": {
                    "$ref": "#/$defs/LabelDetectionAggregateBy"
                }
            }
        },
        "GetMediaAnalysisJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/MediaAnalysisJobId"
                },
                "JobName": {
                    "$ref": "#/$defs/MediaAnalysisJobName"
                },
                "OperationsConfig": {
                    "$ref": "#/$defs/MediaAnalysisOperationsConfig"
                },
                "Status": {
                    "$ref": "#/$defs/MediaAnalysisJobStatus"
                },
                "FailureDetails": {
                    "$ref": "#/$defs/MediaAnalysisJobFailureDetails"
                },
                "CreationTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "CompletionTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "Input": {
                    "$ref": "#/$defs/MediaAnalysisInput"
                },
                "OutputConfig": {
                    "$ref": "#/$defs/MediaAnalysisOutputConfig"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "Results": {
                    "$ref": "#/$defs/MediaAnalysisResults"
                },
                "ManifestSummary": {
                    "$ref": "#/$defs/MediaAnalysisManifestSummary"
                }
            }
        },
        "MediaAnalysisJobId": {
            "type": "string"
        },
        "MediaAnalysisJobName": {
            "type": "string"
        },
        "MediaAnalysisOperationsConfig": {
            "type": "object",
            "properties": {
                "DetectModerationLabels": {
                    "$ref": "#/$defs/MediaAnalysisDetectModerationLabelsConfig"
                }
            }
        },
        "MediaAnalysisDetectModerationLabelsConfig": {
            "type": "object",
            "properties": {
                "MinConfidence": {
                    "$ref": "#/$defs/Percent"
                },
                "ProjectVersion": {
                    "$ref": "#/$defs/ProjectVersionId"
                }
            }
        },
        "MediaAnalysisJobStatus": {
            "enum": [
                "CREATED",
                "QUEUED",
                "IN_PROGRESS",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "MediaAnalysisJobFailureDetails": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/MediaAnalysisJobFailureCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MediaAnalysisJobFailureCode": {
            "enum": [
                "INTERNAL_ERROR",
                "INVALID_S3_OBJECT",
                "INVALID_MANIFEST",
                "INVALID_OUTPUT_CONFIG",
                "INVALID_KMS_KEY",
                "ACCESS_DENIED",
                "RESOURCE_NOT_FOUND",
                "RESOURCE_NOT_READY",
                "THROTTLED"
            ]
        },
        "MediaAnalysisInput": {
            "type": "object",
            "properties": {
                "S3Object": {
                    "$ref": "#/$defs/S3Object"
                }
            }
        },
        "MediaAnalysisOutputConfig": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "S3KeyPrefix": {
                    "$ref": "#/$defs/MediaAnalysisS3KeyPrefix"
                }
            }
        },
        "MediaAnalysisS3KeyPrefix": {
            "type": "string"
        },
        "MediaAnalysisResults": {
            "type": "object",
            "properties": {
                "S3Object": {
                    "$ref": "#/$defs/S3Object"
                },
                "ModelVersions": {
                    "$ref": "#/$defs/MediaAnalysisModelVersions"
                }
            }
        },
        "MediaAnalysisModelVersions": {
            "type": "object",
            "properties": {
                "Moderation": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MediaAnalysisManifestSummary": {
            "type": "object",
            "properties": {
                "S3Object": {
                    "$ref": "#/$defs/S3Object"
                }
            }
        },
        "GetMediaAnalysisJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/MediaAnalysisJobId"
                }
            }
        },
        "GetPersonTrackingResponse": {
            "type": "object",
            "properties": {
                "JobStatus": {
                    "$ref": "#/$defs/VideoJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "VideoMetadata": {
                    "$ref": "#/$defs/VideoMetadata"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "Persons": {
                    "$ref": "#/$defs/PersonDetections"
                },
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "PersonDetections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PersonDetection"
            }
        },
        "PersonDetection": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Person": {
                    "$ref": "#/$defs/PersonDetail"
                }
            }
        },
        "GetPersonTrackingRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "SortBy": {
                    "$ref": "#/$defs/PersonTrackingSortBy"
                }
            }
        },
        "PersonTrackingSortBy": {
            "enum": [
                "INDEX",
                "TIMESTAMP"
            ]
        },
        "GetSegmentDetectionResponse": {
            "type": "object",
            "properties": {
                "JobStatus": {
                    "$ref": "#/$defs/VideoJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "VideoMetadata": {
                    "$ref": "#/$defs/VideoMetadataList"
                },
                "AudioMetadata": {
                    "$ref": "#/$defs/AudioMetadataList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "Segments": {
                    "$ref": "#/$defs/SegmentDetections"
                },
                "SelectedSegmentTypes": {
                    "$ref": "#/$defs/SegmentTypesInfo"
                },
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "VideoMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VideoMetadata"
            }
        },
        "AudioMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AudioMetadata"
            }
        },
        "AudioMetadata": {
            "type": "object",
            "properties": {
                "Codec": {
                    "$ref": "#/$defs/String"
                },
                "DurationMillis": {
                    "$ref": "#/$defs/ULong"
                },
                "SampleRate": {
                    "$ref": "#/$defs/ULong"
                },
                "NumberOfChannels": {
                    "$ref": "#/$defs/ULong"
                }
            }
        },
        "SegmentDetections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SegmentDetection"
            }
        },
        "SegmentDetection": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/SegmentType"
                },
                "StartTimestampMillis": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndTimestampMillis": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DurationMillis": {
                    "$ref": "#/$defs/ULong"
                },
                "StartTimecodeSMPTE": {
                    "$ref": "#/$defs/Timecode"
                },
                "EndTimecodeSMPTE": {
                    "$ref": "#/$defs/Timecode"
                },
                "DurationSMPTE": {
                    "$ref": "#/$defs/Timecode"
                },
                "TechnicalCueSegment": {
                    "$ref": "#/$defs/TechnicalCueSegment"
                },
                "ShotSegment": {
                    "$ref": "#/$defs/ShotSegment"
                },
                "StartFrameNumber": {
                    "$ref": "#/$defs/ULong"
                },
                "EndFrameNumber": {
                    "$ref": "#/$defs/ULong"
                },
                "DurationFrames": {
                    "$ref": "#/$defs/ULong"
                }
            }
        },
        "SegmentType": {
            "enum": [
                "TECHNICAL_CUE",
                "SHOT"
            ]
        },
        "Timecode": {
            "type": "string"
        },
        "TechnicalCueSegment": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/TechnicalCueType"
                },
                "Confidence": {
                    "$ref": "#/$defs/SegmentConfidence"
                }
            }
        },
        "TechnicalCueType": {
            "enum": [
                "COLOR_BARS",
                "END_CREDITS",
                "BLACK_FRAMES",
                "OPENING_CREDITS",
                "STUDIO_LOGO",
                "SLATE",
                "CONTENT"
            ]
        },
        "SegmentConfidence": {
            "type": "number",
            "format": "float"
        },
        "ShotSegment": {
            "type": "object",
            "properties": {
                "Index": {
                    "$ref": "#/$defs/ULong"
                },
                "Confidence": {
                    "$ref": "#/$defs/SegmentConfidence"
                }
            }
        },
        "SegmentTypesInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SegmentTypeInfo"
            }
        },
        "SegmentTypeInfo": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/SegmentType"
                },
                "ModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetSegmentDetectionRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "GetTextDetectionResponse": {
            "type": "object",
            "properties": {
                "JobStatus": {
                    "$ref": "#/$defs/VideoJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "VideoMetadata": {
                    "$ref": "#/$defs/VideoMetadata"
                },
                "TextDetections": {
                    "$ref": "#/$defs/TextDetectionResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "TextModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "TextDetectionResults": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TextDetectionResult"
            }
        },
        "TextDetectionResult": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TextDetection": {
                    "$ref": "#/$defs/TextDetection"
                }
            }
        },
        "GetTextDetectionRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "IndexFacesResponse": {
            "type": "object",
            "properties": {
                "FaceRecords": {
                    "$ref": "#/$defs/FaceRecordList"
                },
                "OrientationCorrection": {
                    "$ref": "#/$defs/OrientationCorrection"
                },
                "FaceModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "UnindexedFaces": {
                    "$ref": "#/$defs/UnindexedFaces"
                }
            }
        },
        "FaceRecordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FaceRecord"
            }
        },
        "FaceRecord": {
            "type": "object",
            "properties": {
                "Face": {
                    "$ref": "#/$defs/Face"
                },
                "FaceDetail": {
                    "$ref": "#/$defs/FaceDetail"
                }
            }
        },
        "UnindexedFaces": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnindexedFace"
            }
        },
        "UnindexedFace": {
            "type": "object",
            "properties": {
                "Reasons": {
                    "$ref": "#/$defs/Reasons"
                },
                "FaceDetail": {
                    "$ref": "#/$defs/FaceDetail"
                }
            }
        },
        "Reasons": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Reason"
            }
        },
        "Reason": {
            "enum": [
                "EXCEEDS_MAX_FACES",
                "EXTREME_POSE",
                "LOW_BRIGHTNESS",
                "LOW_SHARPNESS",
                "LOW_CONFIDENCE",
                "SMALL_BOUNDING_BOX",
                "LOW_FACE_QUALITY"
            ]
        },
        "IndexFacesRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "Image": {
                    "$ref": "#/$defs/Image"
                },
                "ExternalImageId": {
                    "$ref": "#/$defs/ExternalImageId"
                },
                "DetectionAttributes": {
                    "$ref": "#/$defs/Attributes"
                },
                "MaxFaces": {
                    "$ref": "#/$defs/MaxFacesToIndex"
                },
                "QualityFilter": {
                    "$ref": "#/$defs/QualityFilter"
                }
            }
        },
        "MaxFacesToIndex": {
            "type": "integer",
            "format": "int32"
        },
        "ListCollectionsResponse": {
            "type": "object",
            "properties": {
                "CollectionIds": {
                    "$ref": "#/$defs/CollectionIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "FaceModelVersions": {
                    "$ref": "#/$defs/FaceModelVersionList"
                }
            }
        },
        "CollectionIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CollectionId"
            }
        },
        "FaceModelVersionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ListCollectionsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "PageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ListDatasetEntriesResponse": {
            "type": "object",
            "properties": {
                "DatasetEntries": {
                    "$ref": "#/$defs/DatasetEntries"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                }
            }
        },
        "DatasetEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetEntry"
            }
        },
        "DatasetEntry": {
            "type": "string"
        },
        "ListDatasetEntriesRequest": {
            "type": "object",
            "properties": {
                "DatasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                },
                "ContainsLabels": {
                    "$ref": "#/$defs/DatasetLabels"
                },
                "Labeled": {
                    "$ref": "#/$defs/IsLabeled"
                },
                "SourceRefContains": {
                    "$ref": "#/$defs/QueryString"
                },
                "HasErrors": {
                    "$ref": "#/$defs/HasErrors"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListDatasetEntriesPageSize"
                }
            }
        },
        "DatasetLabels": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetLabel"
            }
        },
        "DatasetLabel": {
            "type": "string"
        },
        "IsLabeled": {
            "type": "boolean"
        },
        "QueryString": {
            "type": "string"
        },
        "HasErrors": {
            "type": "boolean"
        },
        "ListDatasetEntriesPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ListDatasetLabelsResponse": {
            "type": "object",
            "properties": {
                "DatasetLabelDescriptions": {
                    "$ref": "#/$defs/DatasetLabelDescriptions"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                }
            }
        },
        "DatasetLabelDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetLabelDescription"
            }
        },
        "DatasetLabelDescription": {
            "type": "object",
            "properties": {
                "LabelName": {
                    "$ref": "#/$defs/DatasetLabel"
                },
                "LabelStats": {
                    "$ref": "#/$defs/DatasetLabelStats"
                }
            }
        },
        "DatasetLabelStats": {
            "type": "object",
            "properties": {
                "EntryCount": {
                    "$ref": "#/$defs/UInteger"
                },
                "BoundingBoxCount": {
                    "$ref": "#/$defs/UInteger"
                }
            }
        },
        "ListDatasetLabelsRequest": {
            "type": "object",
            "properties": {
                "DatasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListDatasetLabelsPageSize"
                }
            }
        },
        "ListDatasetLabelsPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ListFacesResponse": {
            "type": "object",
            "properties": {
                "Faces": {
                    "$ref": "#/$defs/FaceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "FaceModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FaceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Face"
            }
        },
        "ListFacesRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "FaceIds": {
                    "$ref": "#/$defs/FaceIdList"
                }
            }
        },
        "ListMediaAnalysisJobsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                },
                "MediaAnalysisJobs": {
                    "$ref": "#/$defs/MediaAnalysisJobDescriptions"
                }
            }
        },
        "MediaAnalysisJobDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaAnalysisJobDescription"
            }
        },
        "MediaAnalysisJobDescription": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/MediaAnalysisJobId"
                },
                "JobName": {
                    "$ref": "#/$defs/MediaAnalysisJobName"
                },
                "OperationsConfig": {
                    "$ref": "#/$defs/MediaAnalysisOperationsConfig"
                },
                "Status": {
                    "$ref": "#/$defs/MediaAnalysisJobStatus"
                },
                "FailureDetails": {
                    "$ref": "#/$defs/MediaAnalysisJobFailureDetails"
                },
                "CreationTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "CompletionTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "Input": {
                    "$ref": "#/$defs/MediaAnalysisInput"
                },
                "OutputConfig": {
                    "$ref": "#/$defs/MediaAnalysisOutputConfig"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "Results": {
                    "$ref": "#/$defs/MediaAnalysisResults"
                },
                "ManifestSummary": {
                    "$ref": "#/$defs/MediaAnalysisManifestSummary"
                }
            }
        },
        "ListMediaAnalysisJobsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListMediaAnalysisJobsPageSize"
                }
            }
        },
        "ListMediaAnalysisJobsPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ListProjectPoliciesResponse": {
            "type": "object",
            "properties": {
                "ProjectPolicies": {
                    "$ref": "#/$defs/ProjectPolicies"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                }
            }
        },
        "ProjectPolicies": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProjectPolicy"
            }
        },
        "ProjectPolicy": {
            "type": "object",
            "properties": {
                "ProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "PolicyName": {
                    "$ref": "#/$defs/ProjectPolicyName"
                },
                "PolicyRevisionId": {
                    "$ref": "#/$defs/ProjectPolicyRevisionId"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/ProjectPolicyDocument"
                },
                "CreationTimestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "LastUpdatedTimestamp": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "ProjectPolicyDocument": {
            "type": "string"
        },
        "ListProjectPoliciesRequest": {
            "type": "object",
            "properties": {
                "ProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "NextToken": {
                    "$ref": "#/$defs/ExtendedPaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListProjectPoliciesPageSize"
                }
            }
        },
        "ListProjectPoliciesPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "ListStreamProcessorsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "StreamProcessors": {
                    "$ref": "#/$defs/StreamProcessorList"
                }
            }
        },
        "StreamProcessorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StreamProcessor"
            }
        },
        "StreamProcessor": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/StreamProcessorName"
                },
                "Status": {
                    "$ref": "#/$defs/StreamProcessorStatus"
                }
            }
        },
        "ListStreamProcessorsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "ListUsersResponse": {
            "type": "object",
            "properties": {
                "Users": {
                    "$ref": "#/$defs/UserList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "UserList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/User"
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "UserStatus": {
                    "$ref": "#/$defs/UserStatus"
                }
            }
        },
        "ListUsersRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxUserResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "MaxUserResults": {
            "type": "integer",
            "format": "int32"
        },
        "PutProjectPolicyResponse": {
            "type": "object",
            "properties": {
                "PolicyRevisionId": {
                    "$ref": "#/$defs/ProjectPolicyRevisionId"
                }
            }
        },
        "PutProjectPolicyRequest": {
            "type": "object",
            "properties": {
                "ProjectArn": {
                    "$ref": "#/$defs/ProjectArn"
                },
                "PolicyName": {
                    "$ref": "#/$defs/ProjectPolicyName"
                },
                "PolicyRevisionId": {
                    "$ref": "#/$defs/ProjectPolicyRevisionId"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/ProjectPolicyDocument"
                }
            }
        },
        "RecognizeCelebritiesResponse": {
            "type": "object",
            "properties": {
                "CelebrityFaces": {
                    "$ref": "#/$defs/CelebrityList"
                },
                "UnrecognizedFaces": {
                    "$ref": "#/$defs/ComparedFaceList"
                },
                "OrientationCorrection": {
                    "$ref": "#/$defs/OrientationCorrection"
                }
            }
        },
        "CelebrityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Celebrity"
            }
        },
        "Celebrity": {
            "type": "object",
            "properties": {
                "Urls": {
                    "$ref": "#/$defs/Urls"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Id": {
                    "$ref": "#/$defs/RekognitionUniqueId"
                },
                "Face": {
                    "$ref": "#/$defs/ComparedFace"
                },
                "MatchConfidence": {
                    "$ref": "#/$defs/Percent"
                },
                "KnownGender": {
                    "$ref": "#/$defs/KnownGender"
                }
            }
        },
        "ComparedFaceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ComparedFace"
            }
        },
        "RecognizeCelebritiesRequest": {
            "type": "object",
            "properties": {
                "Image": {
                    "$ref": "#/$defs/Image"
                }
            }
        },
        "SearchFacesResponse": {
            "type": "object",
            "properties": {
                "SearchedFaceId": {
                    "$ref": "#/$defs/FaceId"
                },
                "FaceMatches": {
                    "$ref": "#/$defs/FaceMatchList"
                },
                "FaceModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SearchFacesRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "FaceId": {
                    "$ref": "#/$defs/FaceId"
                },
                "MaxFaces": {
                    "$ref": "#/$defs/MaxFaces"
                },
                "FaceMatchThreshold": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "MaxFaces": {
            "type": "integer",
            "format": "int32"
        },
        "SearchFacesByImageResponse": {
            "type": "object",
            "properties": {
                "SearchedFaceBoundingBox": {
                    "$ref": "#/$defs/BoundingBox"
                },
                "SearchedFaceConfidence": {
                    "$ref": "#/$defs/Percent"
                },
                "FaceMatches": {
                    "$ref": "#/$defs/FaceMatchList"
                },
                "FaceModelVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SearchFacesByImageRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "Image": {
                    "$ref": "#/$defs/Image"
                },
                "MaxFaces": {
                    "$ref": "#/$defs/MaxFaces"
                },
                "FaceMatchThreshold": {
                    "$ref": "#/$defs/Percent"
                },
                "QualityFilter": {
                    "$ref": "#/$defs/QualityFilter"
                }
            }
        },
        "SearchUsersResponse": {
            "type": "object",
            "properties": {
                "UserMatches": {
                    "$ref": "#/$defs/UserMatchList"
                },
                "FaceModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "SearchedFace": {
                    "$ref": "#/$defs/SearchedFace"
                },
                "SearchedUser": {
                    "$ref": "#/$defs/SearchedUser"
                }
            }
        },
        "UserMatchList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserMatch"
            }
        },
        "UserMatch": {
            "type": "object",
            "properties": {
                "Similarity": {
                    "$ref": "#/$defs/Percent"
                },
                "User": {
                    "$ref": "#/$defs/MatchedUser"
                }
            }
        },
        "MatchedUser": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "UserStatus": {
                    "$ref": "#/$defs/UserStatus"
                }
            }
        },
        "SearchedFace": {
            "type": "object",
            "properties": {
                "FaceId": {
                    "$ref": "#/$defs/FaceId"
                }
            }
        },
        "SearchedUser": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/UserId"
                }
            }
        },
        "SearchUsersRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "UserId": {
                    "$ref": "#/$defs/UserId"
                },
                "FaceId": {
                    "$ref": "#/$defs/FaceId"
                },
                "UserMatchThreshold": {
                    "$ref": "#/$defs/Percent"
                },
                "MaxUsers": {
                    "$ref": "#/$defs/MaxUserResults"
                }
            }
        },
        "SearchUsersByImageResponse": {
            "type": "object",
            "properties": {
                "UserMatches": {
                    "$ref": "#/$defs/UserMatchList"
                },
                "FaceModelVersion": {
                    "$ref": "#/$defs/String"
                },
                "SearchedFace": {
                    "$ref": "#/$defs/SearchedFaceDetails"
                },
                "UnsearchedFaces": {
                    "$ref": "#/$defs/UnsearchedFacesList"
                }
            }
        },
        "SearchedFaceDetails": {
            "type": "object",
            "properties": {
                "FaceDetail": {
                    "$ref": "#/$defs/FaceDetail"
                }
            }
        },
        "UnsearchedFacesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsearchedFace"
            }
        },
        "UnsearchedFace": {
            "type": "object",
            "properties": {
                "FaceDetails": {
                    "$ref": "#/$defs/FaceDetail"
                },
                "Reasons": {
                    "$ref": "#/$defs/UnsearchedFaceReasons"
                }
            }
        },
        "UnsearchedFaceReasons": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsearchedFaceReason"
            }
        },
        "UnsearchedFaceReason": {
            "enum": [
                "FACE_NOT_LARGEST",
                "EXCEEDS_MAX_FACES",
                "EXTREME_POSE",
                "LOW_BRIGHTNESS",
                "LOW_SHARPNESS",
                "LOW_CONFIDENCE",
                "SMALL_BOUNDING_BOX",
                "LOW_FACE_QUALITY"
            ]
        },
        "SearchUsersByImageRequest": {
            "type": "object",
            "properties": {
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "Image": {
                    "$ref": "#/$defs/Image"
                },
                "UserMatchThreshold": {
                    "$ref": "#/$defs/Percent"
                },
                "MaxUsers": {
                    "$ref": "#/$defs/MaxUserResults"
                },
                "QualityFilter": {
                    "$ref": "#/$defs/QualityFilter"
                }
            }
        },
        "StartCelebrityRecognitionResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartCelebrityRecognitionRequest": {
            "type": "object",
            "properties": {
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "NotificationChannel": {
                    "$ref": "#/$defs/NotificationChannel"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "NotificationChannel": {
            "type": "object",
            "properties": {
                "SNSTopicArn": {
                    "$ref": "#/$defs/SNSTopicArn"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "StartContentModerationResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartContentModerationRequest": {
            "type": "object",
            "properties": {
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "MinConfidence": {
                    "$ref": "#/$defs/Percent"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "NotificationChannel": {
                    "$ref": "#/$defs/NotificationChannel"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "StartFaceDetectionResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartFaceDetectionRequest": {
            "type": "object",
            "properties": {
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "NotificationChannel": {
                    "$ref": "#/$defs/NotificationChannel"
                },
                "FaceAttributes": {
                    "$ref": "#/$defs/FaceAttributes"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "FaceAttributes": {
            "enum": [
                "DEFAULT",
                "ALL"
            ]
        },
        "StartFaceSearchResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartFaceSearchRequest": {
            "type": "object",
            "properties": {
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "FaceMatchThreshold": {
                    "$ref": "#/$defs/Percent"
                },
                "CollectionId": {
                    "$ref": "#/$defs/CollectionId"
                },
                "NotificationChannel": {
                    "$ref": "#/$defs/NotificationChannel"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "StartLabelDetectionResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartLabelDetectionRequest": {
            "type": "object",
            "properties": {
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "MinConfidence": {
                    "$ref": "#/$defs/Percent"
                },
                "NotificationChannel": {
                    "$ref": "#/$defs/NotificationChannel"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                },
                "Features": {
                    "$ref": "#/$defs/LabelDetectionFeatureList"
                },
                "Settings": {
                    "$ref": "#/$defs/LabelDetectionSettings"
                }
            }
        },
        "LabelDetectionFeatureList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LabelDetectionFeatureName"
            }
        },
        "LabelDetectionFeatureName": {
            "enum": [
                "GENERAL_LABELS"
            ]
        },
        "LabelDetectionSettings": {
            "type": "object",
            "properties": {
                "GeneralLabels": {
                    "$ref": "#/$defs/GeneralLabelsSettings"
                }
            }
        },
        "StartMediaAnalysisJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/MediaAnalysisJobId"
                }
            }
        },
        "StartMediaAnalysisJobRequest": {
            "type": "object",
            "properties": {
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "JobName": {
                    "$ref": "#/$defs/MediaAnalysisJobName"
                },
                "OperationsConfig": {
                    "$ref": "#/$defs/MediaAnalysisOperationsConfig"
                },
                "Input": {
                    "$ref": "#/$defs/MediaAnalysisInput"
                },
                "OutputConfig": {
                    "$ref": "#/$defs/MediaAnalysisOutputConfig"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "StartPersonTrackingResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartPersonTrackingRequest": {
            "type": "object",
            "properties": {
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "NotificationChannel": {
                    "$ref": "#/$defs/NotificationChannel"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                }
            }
        },
        "StartProjectVersionResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ProjectVersionStatus"
                }
            }
        },
        "StartProjectVersionRequest": {
            "type": "object",
            "properties": {
                "ProjectVersionArn": {
                    "$ref": "#/$defs/ProjectVersionArn"
                },
                "MinInferenceUnits": {
                    "$ref": "#/$defs/InferenceUnits"
                },
                "MaxInferenceUnits": {
                    "$ref": "#/$defs/InferenceUnits"
                }
            }
        },
        "StartSegmentDetectionResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartSegmentDetectionRequest": {
            "type": "object",
            "properties": {
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "NotificationChannel": {
                    "$ref": "#/$defs/NotificationChannel"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                },
                "Filters": {
                    "$ref": "#/$defs/StartSegmentDetectionFilters"
                },
                "SegmentTypes": {
                    "$ref": "#/$defs/SegmentTypes"
                }
            }
        },
        "StartSegmentDetectionFilters": {
            "type": "object",
            "properties": {
                "TechnicalCueFilter": {
                    "$ref": "#/$defs/StartTechnicalCueDetectionFilter"
                },
                "ShotFilter": {
                    "$ref": "#/$defs/StartShotDetectionFilter"
                }
            }
        },
        "StartTechnicalCueDetectionFilter": {
            "type": "object",
            "properties": {
                "MinSegmentConfidence": {
                    "$ref": "#/$defs/SegmentConfidence"
                },
                "BlackFrame": {
                    "$ref": "#/$defs/BlackFrame"
                }
            }
        },
        "BlackFrame": {
            "type": "object",
            "properties": {
                "MaxPixelThreshold": {
                    "$ref": "#/$defs/MaxPixelThreshold"
                },
                "MinCoveragePercentage": {
                    "$ref": "#/$defs/MinCoveragePercentage"
                }
            }
        },
        "MaxPixelThreshold": {
            "type": "number",
            "format": "float"
        },
        "MinCoveragePercentage": {
            "type": "number",
            "format": "float"
        },
        "StartShotDetectionFilter": {
            "type": "object",
            "properties": {
                "MinSegmentConfidence": {
                    "$ref": "#/$defs/SegmentConfidence"
                }
            }
        },
        "SegmentTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SegmentType"
            }
        },
        "StartStreamProcessorResponse": {
            "type": "object",
            "properties": {
                "SessionId": {
                    "$ref": "#/$defs/StartStreamProcessorSessionId"
                }
            }
        },
        "StartStreamProcessorSessionId": {
            "type": "string"
        },
        "StartStreamProcessorRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/StreamProcessorName"
                },
                "StartSelector": {
                    "$ref": "#/$defs/StreamProcessingStartSelector"
                },
                "StopSelector": {
                    "$ref": "#/$defs/StreamProcessingStopSelector"
                }
            }
        },
        "StreamProcessingStartSelector": {
            "type": "object",
            "properties": {
                "KVSStreamStartSelector": {
                    "$ref": "#/$defs/KinesisVideoStreamStartSelector"
                }
            }
        },
        "KinesisVideoStreamStartSelector": {
            "type": "object",
            "properties": {
                "ProducerTimestamp": {
                    "$ref": "#/$defs/ULong"
                },
                "FragmentNumber": {
                    "$ref": "#/$defs/KinesisVideoStreamFragmentNumber"
                }
            }
        },
        "KinesisVideoStreamFragmentNumber": {
            "type": "string"
        },
        "StreamProcessingStopSelector": {
            "type": "object",
            "properties": {
                "MaxDurationInSeconds": {
                    "$ref": "#/$defs/MaxDurationInSecondsULong"
                }
            }
        },
        "MaxDurationInSecondsULong": {
            "type": "integer",
            "format": "int64"
        },
        "StartTextDetectionResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "StartTextDetectionRequest": {
            "type": "object",
            "properties": {
                "Video": {
                    "$ref": "#/$defs/Video"
                },
                "ClientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "NotificationChannel": {
                    "$ref": "#/$defs/NotificationChannel"
                },
                "JobTag": {
                    "$ref": "#/$defs/JobTag"
                },
                "Filters": {
                    "$ref": "#/$defs/StartTextDetectionFilters"
                }
            }
        },
        "StartTextDetectionFilters": {
            "type": "object",
            "properties": {
                "WordFilter": {
                    "$ref": "#/$defs/DetectionFilter"
                },
                "RegionsOfInterest": {
                    "$ref": "#/$defs/RegionsOfInterest"
                }
            }
        },
        "StopProjectVersionResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ProjectVersionStatus"
                }
            }
        },
        "StopProjectVersionRequest": {
            "type": "object",
            "properties": {
                "ProjectVersionArn": {
                    "$ref": "#/$defs/ProjectVersionArn"
                }
            }
        },
        "StopStreamProcessorResponse": {
            "type": "object",
            "properties": {}
        },
        "StopStreamProcessorRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/StreamProcessorName"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateDatasetEntriesResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateDatasetEntriesRequest": {
            "type": "object",
            "properties": {
                "DatasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                },
                "Changes": {
                    "$ref": "#/$defs/DatasetChanges"
                }
            }
        },
        "DatasetChanges": {
            "type": "object",
            "properties": {
                "GroundTruth": {
                    "$ref": "#/$defs/GroundTruthBlob"
                }
            }
        },
        "GroundTruthBlob": {
            "type": "string",
            "format": "binary"
        },
        "UpdateStreamProcessorResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateStreamProcessorRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/StreamProcessorName"
                },
                "SettingsForUpdate": {
                    "$ref": "#/$defs/StreamProcessorSettingsForUpdate"
                },
                "RegionsOfInterestForUpdate": {
                    "$ref": "#/$defs/RegionsOfInterest"
                },
                "DataSharingPreferenceForUpdate": {
                    "$ref": "#/$defs/StreamProcessorDataSharingPreference"
                },
                "ParametersToDelete": {
                    "$ref": "#/$defs/StreamProcessorParametersToDelete"
                }
            }
        },
        "StreamProcessorSettingsForUpdate": {
            "type": "object",
            "properties": {
                "ConnectedHomeForUpdate": {
                    "$ref": "#/$defs/ConnectedHomeSettingsForUpdate"
                }
            }
        },
        "ConnectedHomeSettingsForUpdate": {
            "type": "object",
            "properties": {
                "Labels": {
                    "$ref": "#/$defs/ConnectedHomeLabels"
                },
                "MinConfidence": {
                    "$ref": "#/$defs/Percent"
                }
            }
        },
        "StreamProcessorParametersToDelete": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StreamProcessorParameterToDelete"
            }
        },
        "StreamProcessorParameterToDelete": {
            "enum": [
                "ConnectedHomeMinConfidence",
                "RegionsOfInterest"
            ]
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://rekognition-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://rekognition-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://rekognition.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://rekognition.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}