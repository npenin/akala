{
    "name": "iotanalytics",
    "commands": [
        {
            "name": "BatchPutMessage",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/messages/batch"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchPutMessageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchPutMessageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelPipelineReprocessing",
            "config": {
                "http": {
                    "inject": [
                        {
                            "pipelineName": "route.pipelineName",
                            "reprocessingId": "route.reprocessingId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/pipelines/{pipelineName}/reprocessing/{reprocessingId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelPipelineReprocessingResponse"
                    },
                    "inject": [
                        "param.0.pipelineName",
                        "param.0.reprocessingId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelPipelineReprocessingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateChannel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/channels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateChannelResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateChannelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDataset",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/datasets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDatasetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDatasetContent",
            "config": {
                "http": {
                    "inject": [
                        {
                            "datasetName": "route.datasetName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/datasets/{datasetName}/content"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDatasetContentResponse"
                    },
                    "inject": [
                        "param.0.datasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDatasetContentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDatastore",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/datastores"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDatastoreResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDatastoreRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePipeline",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/pipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePipelineResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePipelineRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "channelName": "route.channelName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/channels/{channelName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.channelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteChannelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDataset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "datasetName": "route.datasetName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/datasets/{datasetName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.datasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDatasetContent",
            "config": {
                "http": {
                    "inject": [
                        {
                            "datasetName": "route.datasetName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/datasets/{datasetName}/content"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.datasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDatasetContentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDatastore",
            "config": {
                "http": {
                    "inject": [
                        {
                            "datastoreName": "route.datastoreName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/datastores/{datastoreName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.datastoreName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDatastoreRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "pipelineName": "route.pipelineName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/pipelines/{pipelineName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.pipelineName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePipelineRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "channelName": "route.channelName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/channels/{channelName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeChannelResponse"
                    },
                    "inject": [
                        "param.0.channelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeChannelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDataset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "datasetName": "route.datasetName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/datasets/{datasetName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDatasetResponse"
                    },
                    "inject": [
                        "param.0.datasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDatastore",
            "config": {
                "http": {
                    "inject": [
                        {
                            "datastoreName": "route.datastoreName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/datastores/{datastoreName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDatastoreResponse"
                    },
                    "inject": [
                        "param.0.datastoreName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDatastoreRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLoggingOptions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/logging"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLoggingOptionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLoggingOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribePipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "pipelineName": "route.pipelineName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/pipelines/{pipelineName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePipelineResponse"
                    },
                    "inject": [
                        "param.0.pipelineName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePipelineRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDatasetContent",
            "config": {
                "http": {
                    "inject": [
                        {
                            "datasetName": "route.datasetName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/datasets/{datasetName}/content"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDatasetContentResponse"
                    },
                    "inject": [
                        "param.0.datasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDatasetContentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListChannels",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/channels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListChannelsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListChannelsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDatasetContents",
            "config": {
                "http": {
                    "inject": [
                        {
                            "datasetName": "route.datasetName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/datasets/{datasetName}/contents"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDatasetContentsResponse"
                    },
                    "inject": [
                        "param.0.datasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDatasetContentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDatasets",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/datasets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDatasetsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDatasetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListDatastores",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/datastores"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDatastoresResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDatastoresRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPipelines",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/pipelines"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPipelinesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPipelinesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutLoggingOptions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/logging"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutLoggingOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RunPipelineActivity",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/pipelineactivities/run"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RunPipelineActivityResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RunPipelineActivityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SampleChannelData",
            "config": {
                "http": {
                    "inject": [
                        {
                            "channelName": "route.channelName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/channels/{channelName}/sample"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SampleChannelDataResponse"
                    },
                    "inject": [
                        "param.0.channelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SampleChannelDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartPipelineReprocessing",
            "config": {
                "http": {
                    "inject": [
                        {
                            "pipelineName": "route.pipelineName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/pipelines/{pipelineName}/reprocessing"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartPipelineReprocessingResponse"
                    },
                    "inject": [
                        "param.0.pipelineName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartPipelineReprocessingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateChannel",
            "config": {
                "http": {
                    "inject": [
                        {
                            "channelName": "route.channelName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/channels/{channelName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.channelName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateChannelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDataset",
            "config": {
                "http": {
                    "inject": [
                        {
                            "datasetName": "route.datasetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/datasets/{datasetName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.datasetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDatasetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDatastore",
            "config": {
                "http": {
                    "inject": [
                        {
                            "datastoreName": "route.datastoreName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/datastores/{datastoreName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.datastoreName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDatastoreRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePipeline",
            "config": {
                "http": {
                    "inject": [
                        {
                            "pipelineName": "route.pipelineName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/pipelines/{pipelineName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.pipelineName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePipelineRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchPutMessageResponse": {
            "type": "object",
            "properties": {
                "batchPutMessageErrorEntries": {
                    "$ref": "#/$defs/BatchPutMessageErrorEntries"
                }
            }
        },
        "BatchPutMessageErrorEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchPutMessageErrorEntry"
            }
        },
        "BatchPutMessageErrorEntry": {
            "type": "object",
            "properties": {
                "messageId": {
                    "$ref": "#/$defs/MessageId"
                },
                "errorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "MessageId": {
            "type": "string"
        },
        "ErrorCode": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "BatchPutMessageRequest": {
            "type": "object",
            "properties": {
                "channelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "messages": {
                    "$ref": "#/$defs/Messages"
                }
            }
        },
        "ChannelName": {
            "type": "string"
        },
        "Messages": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Message"
            }
        },
        "Message": {
            "type": "object",
            "properties": {
                "messageId": {
                    "$ref": "#/$defs/MessageId"
                },
                "payload": {
                    "$ref": "#/$defs/MessagePayload"
                }
            }
        },
        "MessagePayload": {
            "type": "string",
            "format": "binary"
        },
        "CancelPipelineReprocessingResponse": {
            "type": "object",
            "properties": {}
        },
        "CancelPipelineReprocessingRequest": {
            "type": "object",
            "properties": {
                "pipelineName": {
                    "$ref": "#/$defs/PipelineName"
                },
                "reprocessingId": {
                    "$ref": "#/$defs/ReprocessingId"
                }
            }
        },
        "PipelineName": {
            "type": "string"
        },
        "ReprocessingId": {
            "type": "string"
        },
        "CreateChannelResponse": {
            "type": "object",
            "properties": {
                "channelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "channelArn": {
                    "$ref": "#/$defs/ChannelArn"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                }
            }
        },
        "ChannelArn": {
            "type": "string"
        },
        "RetentionPeriod": {
            "type": "object",
            "properties": {
                "unlimited": {
                    "$ref": "#/$defs/UnlimitedRetentionPeriod"
                },
                "numberOfDays": {
                    "$ref": "#/$defs/RetentionPeriodInDays"
                }
            }
        },
        "UnlimitedRetentionPeriod": {
            "type": "boolean"
        },
        "RetentionPeriodInDays": {
            "type": "integer",
            "format": "int32"
        },
        "CreateChannelRequest": {
            "type": "object",
            "properties": {
                "channelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "channelStorage": {
                    "$ref": "#/$defs/ChannelStorage"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ChannelStorage": {
            "type": "object",
            "properties": {
                "serviceManagedS3": {
                    "$ref": "#/$defs/ServiceManagedChannelS3Storage"
                },
                "customerManagedS3": {
                    "$ref": "#/$defs/CustomerManagedChannelS3Storage"
                }
            }
        },
        "ServiceManagedChannelS3Storage": {
            "type": "object",
            "properties": {}
        },
        "CustomerManagedChannelS3Storage": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "keyPrefix": {
                    "$ref": "#/$defs/S3KeyPrefix"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "BucketName": {
            "type": "string"
        },
        "S3KeyPrefix": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateDatasetResponse": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "datasetArn": {
                    "$ref": "#/$defs/DatasetArn"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                }
            }
        },
        "DatasetName": {
            "type": "string"
        },
        "DatasetArn": {
            "type": "string"
        },
        "CreateDatasetRequest": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "actions": {
                    "$ref": "#/$defs/DatasetActions"
                },
                "triggers": {
                    "$ref": "#/$defs/DatasetTriggers"
                },
                "contentDeliveryRules": {
                    "$ref": "#/$defs/DatasetContentDeliveryRules"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "versioningConfiguration": {
                    "$ref": "#/$defs/VersioningConfiguration"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "lateDataRules": {
                    "$ref": "#/$defs/LateDataRules"
                }
            }
        },
        "DatasetActions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetAction"
            }
        },
        "DatasetAction": {
            "type": "object",
            "properties": {
                "actionName": {
                    "$ref": "#/$defs/DatasetActionName"
                },
                "queryAction": {
                    "$ref": "#/$defs/SqlQueryDatasetAction"
                },
                "containerAction": {
                    "$ref": "#/$defs/ContainerDatasetAction"
                }
            }
        },
        "DatasetActionName": {
            "type": "string"
        },
        "SqlQueryDatasetAction": {
            "type": "object",
            "properties": {
                "sqlQuery": {
                    "$ref": "#/$defs/SqlQuery"
                },
                "filters": {
                    "$ref": "#/$defs/QueryFilters"
                }
            }
        },
        "SqlQuery": {
            "type": "string"
        },
        "QueryFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/QueryFilter"
            }
        },
        "QueryFilter": {
            "type": "object",
            "properties": {
                "deltaTime": {
                    "$ref": "#/$defs/DeltaTime"
                }
            }
        },
        "DeltaTime": {
            "type": "object",
            "properties": {
                "offsetSeconds": {
                    "$ref": "#/$defs/OffsetSeconds"
                },
                "timeExpression": {
                    "$ref": "#/$defs/TimeExpression"
                }
            }
        },
        "OffsetSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "TimeExpression": {
            "type": "string"
        },
        "ContainerDatasetAction": {
            "type": "object",
            "properties": {
                "image": {
                    "$ref": "#/$defs/Image"
                },
                "executionRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "resourceConfiguration": {
                    "$ref": "#/$defs/ResourceConfiguration"
                },
                "variables": {
                    "$ref": "#/$defs/Variables"
                }
            }
        },
        "Image": {
            "type": "string"
        },
        "ResourceConfiguration": {
            "type": "object",
            "properties": {
                "computeType": {
                    "$ref": "#/$defs/ComputeType"
                },
                "volumeSizeInGB": {
                    "$ref": "#/$defs/VolumeSizeInGB"
                }
            }
        },
        "ComputeType": {
            "enum": [
                "ACU_1",
                "ACU_2"
            ]
        },
        "VolumeSizeInGB": {
            "type": "integer",
            "format": "int32"
        },
        "Variables": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Variable"
            }
        },
        "Variable": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/VariableName"
                },
                "stringValue": {
                    "$ref": "#/$defs/StringValue"
                },
                "doubleValue": {
                    "$ref": "#/$defs/DoubleValue"
                },
                "datasetContentVersionValue": {
                    "$ref": "#/$defs/DatasetContentVersionValue"
                },
                "outputFileUriValue": {
                    "$ref": "#/$defs/OutputFileUriValue"
                }
            }
        },
        "VariableName": {
            "type": "string"
        },
        "StringValue": {
            "type": "string"
        },
        "DoubleValue": {
            "type": "number",
            "format": "double"
        },
        "DatasetContentVersionValue": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "OutputFileUriValue": {
            "type": "object",
            "properties": {
                "fileName": {
                    "$ref": "#/$defs/OutputFileName"
                }
            }
        },
        "OutputFileName": {
            "type": "string"
        },
        "DatasetTriggers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetTrigger"
            }
        },
        "DatasetTrigger": {
            "type": "object",
            "properties": {
                "schedule": {
                    "$ref": "#/$defs/Schedule"
                },
                "dataset": {
                    "$ref": "#/$defs/TriggeringDataset"
                }
            }
        },
        "Schedule": {
            "type": "object",
            "properties": {
                "expression": {
                    "$ref": "#/$defs/ScheduleExpression"
                }
            }
        },
        "ScheduleExpression": {
            "type": "string"
        },
        "TriggeringDataset": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "DatasetContentDeliveryRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetContentDeliveryRule"
            }
        },
        "DatasetContentDeliveryRule": {
            "type": "object",
            "properties": {
                "entryName": {
                    "$ref": "#/$defs/EntryName"
                },
                "destination": {
                    "$ref": "#/$defs/DatasetContentDeliveryDestination"
                }
            }
        },
        "EntryName": {
            "type": "string"
        },
        "DatasetContentDeliveryDestination": {
            "type": "object",
            "properties": {
                "iotEventsDestinationConfiguration": {
                    "$ref": "#/$defs/IotEventsDestinationConfiguration"
                },
                "s3DestinationConfiguration": {
                    "$ref": "#/$defs/S3DestinationConfiguration"
                }
            }
        },
        "IotEventsDestinationConfiguration": {
            "type": "object",
            "properties": {
                "inputName": {
                    "$ref": "#/$defs/IotEventsInputName"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "IotEventsInputName": {
            "type": "string"
        },
        "S3DestinationConfiguration": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "key": {
                    "$ref": "#/$defs/BucketKeyExpression"
                },
                "glueConfiguration": {
                    "$ref": "#/$defs/GlueConfiguration"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "BucketKeyExpression": {
            "type": "string"
        },
        "GlueConfiguration": {
            "type": "object",
            "properties": {
                "tableName": {
                    "$ref": "#/$defs/GlueTableName"
                },
                "databaseName": {
                    "$ref": "#/$defs/GlueDatabaseName"
                }
            }
        },
        "GlueTableName": {
            "type": "string"
        },
        "GlueDatabaseName": {
            "type": "string"
        },
        "VersioningConfiguration": {
            "type": "object",
            "properties": {
                "unlimited": {
                    "$ref": "#/$defs/UnlimitedVersioning"
                },
                "maxVersions": {
                    "$ref": "#/$defs/MaxVersions"
                }
            }
        },
        "UnlimitedVersioning": {
            "type": "boolean"
        },
        "MaxVersions": {
            "type": "integer",
            "format": "int32"
        },
        "LateDataRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LateDataRule"
            }
        },
        "LateDataRule": {
            "type": "object",
            "properties": {
                "ruleName": {
                    "$ref": "#/$defs/LateDataRuleName"
                },
                "ruleConfiguration": {
                    "$ref": "#/$defs/LateDataRuleConfiguration"
                }
            }
        },
        "LateDataRuleName": {
            "type": "string"
        },
        "LateDataRuleConfiguration": {
            "type": "object",
            "properties": {
                "deltaTimeSessionWindowConfiguration": {
                    "$ref": "#/$defs/DeltaTimeSessionWindowConfiguration"
                }
            }
        },
        "DeltaTimeSessionWindowConfiguration": {
            "type": "object",
            "properties": {
                "timeoutInMinutes": {
                    "$ref": "#/$defs/SessionTimeoutInMinutes"
                }
            }
        },
        "SessionTimeoutInMinutes": {
            "type": "integer",
            "format": "int32"
        },
        "CreateDatasetContentResponse": {
            "type": "object",
            "properties": {
                "versionId": {
                    "$ref": "#/$defs/DatasetContentVersion"
                }
            }
        },
        "DatasetContentVersion": {
            "type": "string"
        },
        "CreateDatasetContentRequest": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "versionId": {
                    "$ref": "#/$defs/DatasetContentVersion"
                }
            }
        },
        "CreateDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastoreName": {
                    "$ref": "#/$defs/DatastoreName"
                },
                "datastoreArn": {
                    "$ref": "#/$defs/DatastoreArn"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                }
            }
        },
        "DatastoreName": {
            "type": "string"
        },
        "DatastoreArn": {
            "type": "string"
        },
        "CreateDatastoreRequest": {
            "type": "object",
            "properties": {
                "datastoreName": {
                    "$ref": "#/$defs/DatastoreName"
                },
                "datastoreStorage": {
                    "$ref": "#/$defs/DatastoreStorage"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "fileFormatConfiguration": {
                    "$ref": "#/$defs/FileFormatConfiguration"
                },
                "datastorePartitions": {
                    "$ref": "#/$defs/DatastorePartitions"
                }
            }
        },
        "DatastoreStorage": {
            "type": "object",
            "properties": {
                "serviceManagedS3": {
                    "$ref": "#/$defs/ServiceManagedDatastoreS3Storage"
                },
                "customerManagedS3": {
                    "$ref": "#/$defs/CustomerManagedDatastoreS3Storage"
                },
                "iotSiteWiseMultiLayerStorage": {
                    "$ref": "#/$defs/DatastoreIotSiteWiseMultiLayerStorage"
                }
            }
        },
        "ServiceManagedDatastoreS3Storage": {
            "type": "object",
            "properties": {}
        },
        "CustomerManagedDatastoreS3Storage": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "keyPrefix": {
                    "$ref": "#/$defs/S3KeyPrefix"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "DatastoreIotSiteWiseMultiLayerStorage": {
            "type": "object",
            "properties": {
                "customerManagedS3Storage": {
                    "$ref": "#/$defs/IotSiteWiseCustomerManagedDatastoreS3Storage"
                }
            }
        },
        "IotSiteWiseCustomerManagedDatastoreS3Storage": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "keyPrefix": {
                    "$ref": "#/$defs/S3KeyPrefix"
                }
            }
        },
        "FileFormatConfiguration": {
            "type": "object",
            "properties": {
                "jsonConfiguration": {
                    "$ref": "#/$defs/JsonConfiguration"
                },
                "parquetConfiguration": {
                    "$ref": "#/$defs/ParquetConfiguration"
                }
            }
        },
        "JsonConfiguration": {
            "type": "object",
            "properties": {}
        },
        "ParquetConfiguration": {
            "type": "object",
            "properties": {
                "schemaDefinition": {
                    "$ref": "#/$defs/SchemaDefinition"
                }
            }
        },
        "SchemaDefinition": {
            "type": "object",
            "properties": {
                "columns": {
                    "$ref": "#/$defs/Columns"
                }
            }
        },
        "Columns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Column"
            }
        },
        "Column": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ColumnName"
                },
                "type": {
                    "$ref": "#/$defs/ColumnDataType"
                }
            }
        },
        "ColumnName": {
            "type": "string"
        },
        "ColumnDataType": {
            "type": "string"
        },
        "DatastorePartitions": {
            "type": "object",
            "properties": {
                "partitions": {
                    "$ref": "#/$defs/Partitions"
                }
            }
        },
        "Partitions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatastorePartition"
            }
        },
        "DatastorePartition": {
            "type": "object",
            "properties": {
                "attributePartition": {
                    "$ref": "#/$defs/Partition"
                },
                "timestampPartition": {
                    "$ref": "#/$defs/TimestampPartition"
                }
            }
        },
        "Partition": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "$ref": "#/$defs/PartitionAttributeName"
                }
            }
        },
        "PartitionAttributeName": {
            "type": "string"
        },
        "TimestampPartition": {
            "type": "object",
            "properties": {
                "attributeName": {
                    "$ref": "#/$defs/PartitionAttributeName"
                },
                "timestampFormat": {
                    "$ref": "#/$defs/TimestampFormat"
                }
            }
        },
        "TimestampFormat": {
            "type": "string"
        },
        "CreatePipelineResponse": {
            "type": "object",
            "properties": {
                "pipelineName": {
                    "$ref": "#/$defs/PipelineName"
                },
                "pipelineArn": {
                    "$ref": "#/$defs/PipelineArn"
                }
            }
        },
        "PipelineArn": {
            "type": "string"
        },
        "CreatePipelineRequest": {
            "type": "object",
            "properties": {
                "pipelineName": {
                    "$ref": "#/$defs/PipelineName"
                },
                "pipelineActivities": {
                    "$ref": "#/$defs/PipelineActivities"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "PipelineActivities": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PipelineActivity"
            }
        },
        "PipelineActivity": {
            "type": "object",
            "properties": {
                "channel": {
                    "$ref": "#/$defs/ChannelActivity"
                },
                "lambda": {
                    "$ref": "#/$defs/LambdaActivity"
                },
                "datastore": {
                    "$ref": "#/$defs/DatastoreActivity"
                },
                "addAttributes": {
                    "$ref": "#/$defs/AddAttributesActivity"
                },
                "removeAttributes": {
                    "$ref": "#/$defs/RemoveAttributesActivity"
                },
                "selectAttributes": {
                    "$ref": "#/$defs/SelectAttributesActivity"
                },
                "filter": {
                    "$ref": "#/$defs/FilterActivity"
                },
                "math": {
                    "$ref": "#/$defs/MathActivity"
                },
                "deviceRegistryEnrich": {
                    "$ref": "#/$defs/DeviceRegistryEnrichActivity"
                },
                "deviceShadowEnrich": {
                    "$ref": "#/$defs/DeviceShadowEnrichActivity"
                }
            }
        },
        "ChannelActivity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ActivityName"
                },
                "channelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "next": {
                    "$ref": "#/$defs/ActivityName"
                }
            }
        },
        "ActivityName": {
            "type": "string"
        },
        "LambdaActivity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ActivityName"
                },
                "lambdaName": {
                    "$ref": "#/$defs/LambdaName"
                },
                "batchSize": {
                    "$ref": "#/$defs/ActivityBatchSize"
                },
                "next": {
                    "$ref": "#/$defs/ActivityName"
                }
            }
        },
        "LambdaName": {
            "type": "string"
        },
        "ActivityBatchSize": {
            "type": "integer",
            "format": "int32"
        },
        "DatastoreActivity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ActivityName"
                },
                "datastoreName": {
                    "$ref": "#/$defs/DatastoreName"
                }
            }
        },
        "AddAttributesActivity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ActivityName"
                },
                "attributes": {
                    "$ref": "#/$defs/AttributeNameMapping"
                },
                "next": {
                    "$ref": "#/$defs/ActivityName"
                }
            }
        },
        "AttributeNameMapping": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/AttributeName"
            }
        },
        "AttributeName": {
            "type": "string"
        },
        "RemoveAttributesActivity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ActivityName"
                },
                "attributes": {
                    "$ref": "#/$defs/AttributeNames"
                },
                "next": {
                    "$ref": "#/$defs/ActivityName"
                }
            }
        },
        "AttributeNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeName"
            }
        },
        "SelectAttributesActivity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ActivityName"
                },
                "attributes": {
                    "$ref": "#/$defs/AttributeNames"
                },
                "next": {
                    "$ref": "#/$defs/ActivityName"
                }
            }
        },
        "FilterActivity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ActivityName"
                },
                "filter": {
                    "$ref": "#/$defs/FilterExpression"
                },
                "next": {
                    "$ref": "#/$defs/ActivityName"
                }
            }
        },
        "FilterExpression": {
            "type": "string"
        },
        "MathActivity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ActivityName"
                },
                "attribute": {
                    "$ref": "#/$defs/AttributeName"
                },
                "math": {
                    "$ref": "#/$defs/MathExpression"
                },
                "next": {
                    "$ref": "#/$defs/ActivityName"
                }
            }
        },
        "MathExpression": {
            "type": "string"
        },
        "DeviceRegistryEnrichActivity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ActivityName"
                },
                "attribute": {
                    "$ref": "#/$defs/AttributeName"
                },
                "thingName": {
                    "$ref": "#/$defs/AttributeName"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "next": {
                    "$ref": "#/$defs/ActivityName"
                }
            }
        },
        "DeviceShadowEnrichActivity": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ActivityName"
                },
                "attribute": {
                    "$ref": "#/$defs/AttributeName"
                },
                "thingName": {
                    "$ref": "#/$defs/AttributeName"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "next": {
                    "$ref": "#/$defs/ActivityName"
                }
            }
        },
        "DeleteChannelRequest": {
            "type": "object",
            "properties": {
                "channelName": {
                    "$ref": "#/$defs/ChannelName"
                }
            }
        },
        "DeleteDatasetRequest": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "DeleteDatasetContentRequest": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "versionId": {
                    "$ref": "#/$defs/DatasetContentVersion"
                }
            }
        },
        "DeleteDatastoreRequest": {
            "type": "object",
            "properties": {
                "datastoreName": {
                    "$ref": "#/$defs/DatastoreName"
                }
            }
        },
        "DeletePipelineRequest": {
            "type": "object",
            "properties": {
                "pipelineName": {
                    "$ref": "#/$defs/PipelineName"
                }
            }
        },
        "DescribeChannelResponse": {
            "type": "object",
            "properties": {
                "channel": {
                    "$ref": "#/$defs/Channel"
                },
                "statistics": {
                    "$ref": "#/$defs/ChannelStatistics"
                }
            }
        },
        "Channel": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ChannelName"
                },
                "storage": {
                    "$ref": "#/$defs/ChannelStorage"
                },
                "arn": {
                    "$ref": "#/$defs/ChannelArn"
                },
                "status": {
                    "$ref": "#/$defs/ChannelStatus"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastMessageArrivalTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ChannelStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "DELETING"
            ]
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "ChannelStatistics": {
            "type": "object",
            "properties": {
                "size": {
                    "$ref": "#/$defs/EstimatedResourceSize"
                }
            }
        },
        "EstimatedResourceSize": {
            "type": "object",
            "properties": {
                "estimatedSizeInBytes": {
                    "$ref": "#/$defs/SizeInBytes"
                },
                "estimatedOn": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "SizeInBytes": {
            "type": "number",
            "format": "double"
        },
        "DescribeChannelRequest": {
            "type": "object",
            "properties": {
                "channelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "includeStatistics": {
                    "$ref": "#/$defs/IncludeStatisticsFlag"
                }
            }
        },
        "IncludeStatisticsFlag": {
            "type": "boolean"
        },
        "DescribeDatasetResponse": {
            "type": "object",
            "properties": {
                "dataset": {
                    "$ref": "#/$defs/Dataset"
                }
            }
        },
        "Dataset": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DatasetName"
                },
                "arn": {
                    "$ref": "#/$defs/DatasetArn"
                },
                "actions": {
                    "$ref": "#/$defs/DatasetActions"
                },
                "triggers": {
                    "$ref": "#/$defs/DatasetTriggers"
                },
                "contentDeliveryRules": {
                    "$ref": "#/$defs/DatasetContentDeliveryRules"
                },
                "status": {
                    "$ref": "#/$defs/DatasetStatus"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "versioningConfiguration": {
                    "$ref": "#/$defs/VersioningConfiguration"
                },
                "lateDataRules": {
                    "$ref": "#/$defs/LateDataRules"
                }
            }
        },
        "DatasetStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "DELETING"
            ]
        },
        "DescribeDatasetRequest": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                }
            }
        },
        "DescribeDatastoreResponse": {
            "type": "object",
            "properties": {
                "datastore": {
                    "$ref": "#/$defs/Datastore"
                },
                "statistics": {
                    "$ref": "#/$defs/DatastoreStatistics"
                }
            }
        },
        "Datastore": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/DatastoreName"
                },
                "storage": {
                    "$ref": "#/$defs/DatastoreStorage"
                },
                "arn": {
                    "$ref": "#/$defs/DatastoreArn"
                },
                "status": {
                    "$ref": "#/$defs/DatastoreStatus"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastMessageArrivalTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "fileFormatConfiguration": {
                    "$ref": "#/$defs/FileFormatConfiguration"
                },
                "datastorePartitions": {
                    "$ref": "#/$defs/DatastorePartitions"
                }
            }
        },
        "DatastoreStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "DELETING"
            ]
        },
        "DatastoreStatistics": {
            "type": "object",
            "properties": {
                "size": {
                    "$ref": "#/$defs/EstimatedResourceSize"
                }
            }
        },
        "DescribeDatastoreRequest": {
            "type": "object",
            "properties": {
                "datastoreName": {
                    "$ref": "#/$defs/DatastoreName"
                },
                "includeStatistics": {
                    "$ref": "#/$defs/IncludeStatisticsFlag"
                }
            }
        },
        "DescribeLoggingOptionsResponse": {
            "type": "object",
            "properties": {
                "loggingOptions": {
                    "$ref": "#/$defs/LoggingOptions"
                }
            }
        },
        "LoggingOptions": {
            "type": "object",
            "properties": {
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "level": {
                    "$ref": "#/$defs/LoggingLevel"
                },
                "enabled": {
                    "$ref": "#/$defs/LoggingEnabled"
                }
            }
        },
        "LoggingLevel": {
            "enum": [
                "ERROR"
            ]
        },
        "LoggingEnabled": {
            "type": "boolean"
        },
        "DescribeLoggingOptionsRequest": {
            "type": "object",
            "properties": {}
        },
        "DescribePipelineResponse": {
            "type": "object",
            "properties": {
                "pipeline": {
                    "$ref": "#/$defs/Pipeline"
                }
            }
        },
        "Pipeline": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/PipelineName"
                },
                "arn": {
                    "$ref": "#/$defs/PipelineArn"
                },
                "activities": {
                    "$ref": "#/$defs/PipelineActivities"
                },
                "reprocessingSummaries": {
                    "$ref": "#/$defs/ReprocessingSummaries"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ReprocessingSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReprocessingSummary"
            }
        },
        "ReprocessingSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/$defs/ReprocessingId"
                },
                "status": {
                    "$ref": "#/$defs/ReprocessingStatus"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ReprocessingStatus": {
            "enum": [
                "RUNNING",
                "SUCCEEDED",
                "CANCELLED",
                "FAILED"
            ]
        },
        "DescribePipelineRequest": {
            "type": "object",
            "properties": {
                "pipelineName": {
                    "$ref": "#/$defs/PipelineName"
                }
            }
        },
        "GetDatasetContentResponse": {
            "type": "object",
            "properties": {
                "entries": {
                    "$ref": "#/$defs/DatasetEntries"
                },
                "timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/DatasetContentStatus"
                }
            }
        },
        "DatasetEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetEntry"
            }
        },
        "DatasetEntry": {
            "type": "object",
            "properties": {
                "entryName": {
                    "$ref": "#/$defs/EntryName"
                },
                "dataURI": {
                    "$ref": "#/$defs/PresignedURI"
                }
            }
        },
        "PresignedURI": {
            "type": "string"
        },
        "DatasetContentStatus": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/DatasetContentState"
                },
                "reason": {
                    "$ref": "#/$defs/Reason"
                }
            }
        },
        "DatasetContentState": {
            "enum": [
                "CREATING",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "Reason": {
            "type": "string"
        },
        "GetDatasetContentRequest": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "versionId": {
                    "$ref": "#/$defs/DatasetContentVersion"
                }
            }
        },
        "ListChannelsResponse": {
            "type": "object",
            "properties": {
                "channelSummaries": {
                    "$ref": "#/$defs/ChannelSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ChannelSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChannelSummary"
            }
        },
        "ChannelSummary": {
            "type": "object",
            "properties": {
                "channelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "channelStorage": {
                    "$ref": "#/$defs/ChannelStorageSummary"
                },
                "status": {
                    "$ref": "#/$defs/ChannelStatus"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastMessageArrivalTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ChannelStorageSummary": {
            "type": "object",
            "properties": {
                "serviceManagedS3": {
                    "$ref": "#/$defs/ServiceManagedChannelS3StorageSummary"
                },
                "customerManagedS3": {
                    "$ref": "#/$defs/CustomerManagedChannelS3StorageSummary"
                }
            }
        },
        "ServiceManagedChannelS3StorageSummary": {
            "type": "object",
            "properties": {}
        },
        "CustomerManagedChannelS3StorageSummary": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "keyPrefix": {
                    "$ref": "#/$defs/S3KeyPrefix"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListChannelsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListDatasetContentsResponse": {
            "type": "object",
            "properties": {
                "datasetContentSummaries": {
                    "$ref": "#/$defs/DatasetContentSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DatasetContentSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetContentSummary"
            }
        },
        "DatasetContentSummary": {
            "type": "object",
            "properties": {
                "version": {
                    "$ref": "#/$defs/DatasetContentVersion"
                },
                "status": {
                    "$ref": "#/$defs/DatasetContentStatus"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "scheduleTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "completionTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListDatasetContentsRequest": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "scheduledOnOrAfter": {
                    "$ref": "#/$defs/Timestamp"
                },
                "scheduledBefore": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListDatasetsResponse": {
            "type": "object",
            "properties": {
                "datasetSummaries": {
                    "$ref": "#/$defs/DatasetSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DatasetSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetSummary"
            }
        },
        "DatasetSummary": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "status": {
                    "$ref": "#/$defs/DatasetStatus"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "triggers": {
                    "$ref": "#/$defs/DatasetTriggers"
                },
                "actions": {
                    "$ref": "#/$defs/DatasetActionSummaries"
                }
            }
        },
        "DatasetActionSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatasetActionSummary"
            }
        },
        "DatasetActionSummary": {
            "type": "object",
            "properties": {
                "actionName": {
                    "$ref": "#/$defs/DatasetActionName"
                },
                "actionType": {
                    "$ref": "#/$defs/DatasetActionType"
                }
            }
        },
        "DatasetActionType": {
            "enum": [
                "QUERY",
                "CONTAINER"
            ]
        },
        "ListDatasetsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListDatastoresResponse": {
            "type": "object",
            "properties": {
                "datastoreSummaries": {
                    "$ref": "#/$defs/DatastoreSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DatastoreSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DatastoreSummary"
            }
        },
        "DatastoreSummary": {
            "type": "object",
            "properties": {
                "datastoreName": {
                    "$ref": "#/$defs/DatastoreName"
                },
                "datastoreStorage": {
                    "$ref": "#/$defs/DatastoreStorageSummary"
                },
                "status": {
                    "$ref": "#/$defs/DatastoreStatus"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastMessageArrivalTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "fileFormatType": {
                    "$ref": "#/$defs/FileFormatType"
                },
                "datastorePartitions": {
                    "$ref": "#/$defs/DatastorePartitions"
                }
            }
        },
        "DatastoreStorageSummary": {
            "type": "object",
            "properties": {
                "serviceManagedS3": {
                    "$ref": "#/$defs/ServiceManagedDatastoreS3StorageSummary"
                },
                "customerManagedS3": {
                    "$ref": "#/$defs/CustomerManagedDatastoreS3StorageSummary"
                },
                "iotSiteWiseMultiLayerStorage": {
                    "$ref": "#/$defs/DatastoreIotSiteWiseMultiLayerStorageSummary"
                }
            }
        },
        "ServiceManagedDatastoreS3StorageSummary": {
            "type": "object",
            "properties": {}
        },
        "CustomerManagedDatastoreS3StorageSummary": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "keyPrefix": {
                    "$ref": "#/$defs/S3KeyPrefix"
                },
                "roleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "DatastoreIotSiteWiseMultiLayerStorageSummary": {
            "type": "object",
            "properties": {
                "customerManagedS3Storage": {
                    "$ref": "#/$defs/IotSiteWiseCustomerManagedDatastoreS3StorageSummary"
                }
            }
        },
        "IotSiteWiseCustomerManagedDatastoreS3StorageSummary": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/BucketName"
                },
                "keyPrefix": {
                    "$ref": "#/$defs/S3KeyPrefix"
                }
            }
        },
        "FileFormatType": {
            "enum": [
                "JSON",
                "PARQUET"
            ]
        },
        "ListDatastoresRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListPipelinesResponse": {
            "type": "object",
            "properties": {
                "pipelineSummaries": {
                    "$ref": "#/$defs/PipelineSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PipelineSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PipelineSummary"
            }
        },
        "PipelineSummary": {
            "type": "object",
            "properties": {
                "pipelineName": {
                    "$ref": "#/$defs/PipelineName"
                },
                "reprocessingSummaries": {
                    "$ref": "#/$defs/ReprocessingSummaries"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastUpdateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListPipelinesRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "PutLoggingOptionsRequest": {
            "type": "object",
            "properties": {
                "loggingOptions": {
                    "$ref": "#/$defs/LoggingOptions"
                }
            }
        },
        "RunPipelineActivityResponse": {
            "type": "object",
            "properties": {
                "payloads": {
                    "$ref": "#/$defs/MessagePayloads"
                },
                "logResult": {
                    "$ref": "#/$defs/LogResult"
                }
            }
        },
        "MessagePayloads": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MessagePayload"
            }
        },
        "LogResult": {
            "type": "string"
        },
        "RunPipelineActivityRequest": {
            "type": "object",
            "properties": {
                "pipelineActivity": {
                    "$ref": "#/$defs/PipelineActivity"
                },
                "payloads": {
                    "$ref": "#/$defs/MessagePayloads"
                }
            }
        },
        "SampleChannelDataResponse": {
            "type": "object",
            "properties": {
                "payloads": {
                    "$ref": "#/$defs/MessagePayloads"
                }
            }
        },
        "SampleChannelDataRequest": {
            "type": "object",
            "properties": {
                "channelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "maxMessages": {
                    "$ref": "#/$defs/MaxMessages"
                },
                "startTime": {
                    "$ref": "#/$defs/StartTime"
                },
                "endTime": {
                    "$ref": "#/$defs/EndTime"
                }
            }
        },
        "MaxMessages": {
            "type": "integer",
            "format": "int32"
        },
        "StartTime": {
            "type": "string",
            "format": "date-time"
        },
        "EndTime": {
            "type": "string",
            "format": "date-time"
        },
        "StartPipelineReprocessingResponse": {
            "type": "object",
            "properties": {
                "reprocessingId": {
                    "$ref": "#/$defs/ReprocessingId"
                }
            }
        },
        "StartPipelineReprocessingRequest": {
            "type": "object",
            "properties": {
                "pipelineName": {
                    "$ref": "#/$defs/PipelineName"
                },
                "startTime": {
                    "$ref": "#/$defs/StartTime"
                },
                "endTime": {
                    "$ref": "#/$defs/EndTime"
                },
                "channelMessages": {
                    "$ref": "#/$defs/ChannelMessages"
                }
            }
        },
        "ChannelMessages": {
            "type": "object",
            "properties": {
                "s3Paths": {
                    "$ref": "#/$defs/S3PathChannelMessages"
                }
            }
        },
        "S3PathChannelMessages": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3PathChannelMessage"
            }
        },
        "S3PathChannelMessage": {
            "type": "string"
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateChannelRequest": {
            "type": "object",
            "properties": {
                "channelName": {
                    "$ref": "#/$defs/ChannelName"
                },
                "channelStorage": {
                    "$ref": "#/$defs/ChannelStorage"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                }
            }
        },
        "UpdateDatasetRequest": {
            "type": "object",
            "properties": {
                "datasetName": {
                    "$ref": "#/$defs/DatasetName"
                },
                "actions": {
                    "$ref": "#/$defs/DatasetActions"
                },
                "triggers": {
                    "$ref": "#/$defs/DatasetTriggers"
                },
                "contentDeliveryRules": {
                    "$ref": "#/$defs/DatasetContentDeliveryRules"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "versioningConfiguration": {
                    "$ref": "#/$defs/VersioningConfiguration"
                },
                "lateDataRules": {
                    "$ref": "#/$defs/LateDataRules"
                }
            }
        },
        "UpdateDatastoreRequest": {
            "type": "object",
            "properties": {
                "datastoreName": {
                    "$ref": "#/$defs/DatastoreName"
                },
                "retentionPeriod": {
                    "$ref": "#/$defs/RetentionPeriod"
                },
                "datastoreStorage": {
                    "$ref": "#/$defs/DatastoreStorage"
                },
                "fileFormatConfiguration": {
                    "$ref": "#/$defs/FileFormatConfiguration"
                }
            }
        },
        "UpdatePipelineRequest": {
            "type": "object",
            "properties": {
                "pipelineName": {
                    "$ref": "#/$defs/PipelineName"
                },
                "pipelineActivities": {
                    "$ref": "#/$defs/PipelineActivities"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iotanalytics-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iotanalytics-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iotanalytics.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://iotanalytics.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}