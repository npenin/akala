{
    "name": "lakeformation",
    "commands": [
        {
            "name": "AddLFTagsToResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/AddLFTagsToResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddLFTagsToResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AddLFTagsToResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "Resource": {},
                        "LFTags": {}
                    }
                }
            }
        },
        {
            "name": "AssumeDecoratedRoleWithSAML",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/AssumeDecoratedRoleWithSAML"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssumeDecoratedRoleWithSAMLResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AssumeDecoratedRoleWithSAMLRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SAMLAssertion": {},
                        "RoleArn": {},
                        "PrincipalArn": {},
                        "DurationSeconds": {}
                    }
                }
            }
        },
        {
            "name": "BatchGrantPermissions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/BatchGrantPermissions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGrantPermissionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/BatchGrantPermissionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "Entries": {}
                    }
                }
            }
        },
        {
            "name": "BatchRevokePermissions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/BatchRevokePermissions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchRevokePermissionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/BatchRevokePermissionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "Entries": {}
                    }
                }
            }
        },
        {
            "name": "CancelTransaction",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CancelTransaction"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelTransactionResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CancelTransactionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TransactionId": {}
                    }
                }
            }
        },
        {
            "name": "CommitTransaction",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CommitTransaction"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CommitTransactionResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CommitTransactionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TransactionId": {}
                    }
                }
            }
        },
        {
            "name": "CreateDataCellsFilter",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateDataCellsFilter"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDataCellsFilterResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateDataCellsFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TableData": {}
                    }
                }
            }
        },
        {
            "name": "CreateLakeFormationIdentityCenterConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateLakeFormationIdentityCenterConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLakeFormationIdentityCenterConfigurationResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateLakeFormationIdentityCenterConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "InstanceArn": {},
                        "ExternalFiltering": {},
                        "ShareRecipients": {}
                    }
                }
            }
        },
        {
            "name": "CreateLakeFormationOptIn",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateLakeFormationOptIn"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLakeFormationOptInResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateLakeFormationOptInRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Principal": {},
                        "Resource": {},
                        "Condition": {}
                    }
                }
            }
        },
        {
            "name": "CreateLFTag",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateLFTag"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLFTagResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateLFTagRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "TagKey": {},
                        "TagValues": {}
                    }
                }
            }
        },
        {
            "name": "CreateLFTagExpression",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/CreateLFTagExpression"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLFTagExpressionResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateLFTagExpressionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Description": {},
                        "CatalogId": {},
                        "Expression": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDataCellsFilter",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteDataCellsFilter"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDataCellsFilterResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteDataCellsFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TableCatalogId": {},
                        "DatabaseName": {},
                        "TableName": {},
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "DeleteLakeFormationIdentityCenterConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteLakeFormationIdentityCenterConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLakeFormationIdentityCenterConfigurationResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteLakeFormationIdentityCenterConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteLakeFormationOptIn",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteLakeFormationOptIn"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLakeFormationOptInResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteLakeFormationOptInRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Principal": {},
                        "Resource": {},
                        "Condition": {}
                    }
                }
            }
        },
        {
            "name": "DeleteLFTag",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteLFTag"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLFTagResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteLFTagRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "TagKey": {}
                    }
                }
            }
        },
        {
            "name": "DeleteLFTagExpression",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteLFTagExpression"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLFTagExpressionResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteLFTagExpressionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "CatalogId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteObjectsOnCancel",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeleteObjectsOnCancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteObjectsOnCancelResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteObjectsOnCancelRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "DatabaseName": {},
                        "TableName": {},
                        "TransactionId": {},
                        "Objects": {}
                    }
                }
            }
        },
        {
            "name": "DeregisterResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DeregisterResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeregisterResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "DescribeLakeFormationIdentityCenterConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DescribeLakeFormationIdentityCenterConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLakeFormationIdentityCenterConfigurationResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeLakeFormationIdentityCenterConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DescribeResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "DescribeTransaction",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/DescribeTransaction"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransactionResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeTransactionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TransactionId": {}
                    }
                }
            }
        },
        {
            "name": "ExtendTransaction",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ExtendTransaction"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExtendTransactionResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ExtendTransactionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TransactionId": {}
                    }
                }
            }
        },
        {
            "name": "GetDataCellsFilter",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetDataCellsFilter"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataCellsFilterResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetDataCellsFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TableCatalogId": {},
                        "DatabaseName": {},
                        "TableName": {},
                        "Name": {}
                    }
                }
            }
        },
        {
            "name": "GetDataLakePrincipal",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetDataLakePrincipal"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataLakePrincipalResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetDataLakePrincipalRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetDataLakeSettings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetDataLakeSettings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDataLakeSettingsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetDataLakeSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {}
                    }
                }
            }
        },
        {
            "name": "GetEffectivePermissionsForPath",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetEffectivePermissionsForPath"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEffectivePermissionsForPathResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetEffectivePermissionsForPathRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "ResourceArn": {},
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "GetLFTag",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetLFTag"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLFTagResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetLFTagRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "TagKey": {}
                    }
                }
            }
        },
        {
            "name": "GetLFTagExpression",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetLFTagExpression"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLFTagExpressionResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetLFTagExpressionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "CatalogId": {}
                    }
                }
            }
        },
        {
            "name": "GetQueryState",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetQueryState"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetQueryStateResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetQueryStateRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "QueryId": {}
                    }
                }
            }
        },
        {
            "name": "GetQueryStatistics",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetQueryStatistics"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetQueryStatisticsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetQueryStatisticsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "QueryId": {}
                    }
                }
            }
        },
        {
            "name": "GetResourceLFTags",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetResourceLFTags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourceLFTagsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetResourceLFTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "Resource": {},
                        "ShowAssignedLFTags": {}
                    }
                }
            }
        },
        {
            "name": "GetTableObjects",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetTableObjects"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTableObjectsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTableObjectsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "DatabaseName": {},
                        "TableName": {},
                        "TransactionId": {},
                        "QueryAsOfTime": {},
                        "PartitionPredicate": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetTemporaryGluePartitionCredentials",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetTemporaryGluePartitionCredentials"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTemporaryGluePartitionCredentialsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTemporaryGluePartitionCredentialsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TableArn": {},
                        "Partition": {},
                        "Permissions": {},
                        "DurationSeconds": {},
                        "AuditContext": {},
                        "SupportedPermissionTypes": {}
                    }
                }
            }
        },
        {
            "name": "GetTemporaryGlueTableCredentials",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetTemporaryGlueTableCredentials"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTemporaryGlueTableCredentialsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetTemporaryGlueTableCredentialsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TableArn": {},
                        "Permissions": {},
                        "DurationSeconds": {},
                        "AuditContext": {},
                        "SupportedPermissionTypes": {},
                        "S3Path": {},
                        "QuerySessionContext": {}
                    }
                }
            }
        },
        {
            "name": "GetWorkUnitResults",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetWorkUnitResults"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkUnitResultsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetWorkUnitResultsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "QueryId": {},
                        "WorkUnitId": {},
                        "WorkUnitToken": {}
                    }
                }
            }
        },
        {
            "name": "GetWorkUnits",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetWorkUnits"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkUnitsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetWorkUnitsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "PageSize": {},
                        "QueryId": {}
                    }
                }
            }
        },
        {
            "name": "GrantPermissions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GrantPermissions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GrantPermissionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GrantPermissionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "Principal": {},
                        "Resource": {},
                        "Permissions": {},
                        "Condition": {},
                        "PermissionsWithGrantOption": {}
                    }
                }
            }
        },
        {
            "name": "ListDataCellsFilter",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListDataCellsFilter"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDataCellsFilterResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListDataCellsFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Table": {},
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListLakeFormationOptIns",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListLakeFormationOptIns"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListLakeFormationOptInsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListLakeFormationOptInsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Principal": {},
                        "Resource": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListLFTagExpressions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListLFTagExpressions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListLFTagExpressionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListLFTagExpressionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListLFTags",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListLFTags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListLFTagsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListLFTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "ResourceShareType": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListPermissions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListPermissions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPermissionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPermissionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "Principal": {},
                        "ResourceType": {},
                        "Resource": {},
                        "NextToken": {},
                        "MaxResults": {},
                        "IncludeRelated": {}
                    }
                }
            }
        },
        {
            "name": "ListResources",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListResources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourcesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListResourcesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "FilterConditionList": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTableStorageOptimizers",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListTableStorageOptimizers"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTableStorageOptimizersResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTableStorageOptimizersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "DatabaseName": {},
                        "TableName": {},
                        "StorageOptimizerType": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTransactions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/ListTransactions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTransactionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTransactionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "StatusFilter": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "PutDataLakeSettings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/PutDataLakeSettings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDataLakeSettingsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutDataLakeSettingsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "DataLakeSettings": {}
                    }
                }
            }
        },
        {
            "name": "RegisterResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/RegisterResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RegisterResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "UseServiceLinkedRole": {},
                        "RoleArn": {},
                        "WithFederation": {},
                        "HybridAccessEnabled": {},
                        "WithPrivilegedAccess": {}
                    }
                }
            }
        },
        {
            "name": "RemoveLFTagsFromResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/RemoveLFTagsFromResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveLFTagsFromResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RemoveLFTagsFromResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "Resource": {},
                        "LFTags": {}
                    }
                }
            }
        },
        {
            "name": "RevokePermissions",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/RevokePermissions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RevokePermissionsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RevokePermissionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "Principal": {},
                        "Resource": {},
                        "Permissions": {},
                        "Condition": {},
                        "PermissionsWithGrantOption": {}
                    }
                }
            }
        },
        {
            "name": "SearchDatabasesByLFTags",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/SearchDatabasesByLFTags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchDatabasesByLFTagsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SearchDatabasesByLFTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {},
                        "CatalogId": {},
                        "Expression": {}
                    }
                }
            }
        },
        {
            "name": "SearchTablesByLFTags",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/SearchTablesByLFTags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchTablesByLFTagsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SearchTablesByLFTagsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {},
                        "CatalogId": {},
                        "Expression": {}
                    }
                }
            }
        },
        {
            "name": "StartQueryPlanning",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/StartQueryPlanning"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartQueryPlanningResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartQueryPlanningRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "QueryPlanningContext": {},
                        "QueryString": {}
                    }
                }
            }
        },
        {
            "name": "StartTransaction",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/StartTransaction"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartTransactionResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartTransactionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TransactionType": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDataCellsFilter",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateDataCellsFilter"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDataCellsFilterResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateDataCellsFilterRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TableData": {}
                    }
                }
            }
        },
        {
            "name": "UpdateLakeFormationIdentityCenterConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateLakeFormationIdentityCenterConfiguration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateLakeFormationIdentityCenterConfigurationResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateLakeFormationIdentityCenterConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "ShareRecipients": {},
                        "ApplicationStatus": {},
                        "ExternalFiltering": {}
                    }
                }
            }
        },
        {
            "name": "UpdateLFTag",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateLFTag"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateLFTagResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateLFTagRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "TagKey": {},
                        "TagValuesToDelete": {},
                        "TagValuesToAdd": {}
                    }
                }
            }
        },
        {
            "name": "UpdateLFTagExpression",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateLFTagExpression"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateLFTagExpressionResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateLFTagExpressionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Description": {},
                        "CatalogId": {},
                        "Expression": {}
                    }
                }
            }
        },
        {
            "name": "UpdateResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateResource"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "RoleArn": {},
                        "ResourceArn": {},
                        "WithFederation": {},
                        "HybridAccessEnabled": {}
                    }
                }
            }
        },
        {
            "name": "UpdateTableObjects",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateTableObjects"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTableObjectsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateTableObjectsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "DatabaseName": {},
                        "TableName": {},
                        "TransactionId": {},
                        "WriteOperations": {}
                    }
                }
            }
        },
        {
            "name": "UpdateTableStorageOptimizer",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/UpdateTableStorageOptimizer"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateTableStorageOptimizerResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateTableStorageOptimizerRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "CatalogId": {},
                        "DatabaseName": {},
                        "TableName": {},
                        "StorageOptimizerConfig": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddLFTagsToResourceRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "LFTags": {
                    "$ref": "#/$defs/LFTagsList"
                }
            }
        },
        "CatalogIdString": {
            "type": "string"
        },
        "Resource": {
            "type": "object",
            "properties": {
                "Catalog": {
                    "$ref": "#/$defs/CatalogResource"
                },
                "Database": {
                    "$ref": "#/$defs/DatabaseResource"
                },
                "Table": {
                    "$ref": "#/$defs/TableResource"
                },
                "TableWithColumns": {
                    "$ref": "#/$defs/TableWithColumnsResource"
                },
                "DataLocation": {
                    "$ref": "#/$defs/DataLocationResource"
                },
                "DataCellsFilter": {
                    "$ref": "#/$defs/DataCellsFilterResource"
                },
                "LFTag": {
                    "$ref": "#/$defs/LFTagKeyResource"
                },
                "LFTagPolicy": {
                    "$ref": "#/$defs/LFTagPolicyResource"
                },
                "LFTagExpression": {
                    "$ref": "#/$defs/LFTagExpressionResource"
                }
            }
        },
        "CatalogResource": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "DatabaseResource": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "NameString": {
            "type": "string"
        },
        "TableResource": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "TableWildcard": {
                    "$ref": "#/$defs/TableWildcard"
                }
            }
        },
        "TableWildcard": {
            "type": "object",
            "properties": {}
        },
        "TableWithColumnsResource": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "ColumnNames": {
                    "$ref": "#/$defs/ColumnNames"
                },
                "ColumnWildcard": {
                    "$ref": "#/$defs/ColumnWildcard"
                }
            }
        },
        "ColumnNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "ColumnWildcard": {
            "type": "object",
            "properties": {
                "ExcludedColumnNames": {
                    "$ref": "#/$defs/ColumnNames"
                }
            }
        },
        "DataLocationResource": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                }
            }
        },
        "ResourceArnString": {
            "type": "string"
        },
        "DataCellsFilterResource": {
            "type": "object",
            "properties": {
                "TableCatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "LFTagKeyResource": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "TagKey": {
                    "$ref": "#/$defs/NameString"
                },
                "TagValues": {
                    "$ref": "#/$defs/TagValueList"
                }
            }
        },
        "TagValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LFTagValue"
            }
        },
        "LFTagValue": {
            "type": "string"
        },
        "LFTagPolicyResource": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                },
                "ExpressionName": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "ResourceType": {
            "enum": [
                "DATABASE",
                "TABLE"
            ]
        },
        "Expression": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LFTag"
            }
        },
        "LFTag": {
            "type": "object",
            "properties": {
                "TagKey": {
                    "$ref": "#/$defs/LFTagKey"
                },
                "TagValues": {
                    "$ref": "#/$defs/TagValueList"
                }
            }
        },
        "LFTagKey": {
            "type": "string"
        },
        "LFTagExpressionResource": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "LFTagsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LFTagPair"
            }
        },
        "LFTagPair": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "TagKey": {
                    "$ref": "#/$defs/LFTagKey"
                },
                "TagValues": {
                    "$ref": "#/$defs/TagValueList"
                }
            }
        },
        "AddLFTagsToResourceResponse": {
            "type": "object",
            "properties": {
                "Failures": {
                    "$ref": "#/$defs/LFTagErrors"
                }
            }
        },
        "LFTagErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LFTagError"
            }
        },
        "LFTagError": {
            "type": "object",
            "properties": {
                "LFTag": {
                    "$ref": "#/$defs/LFTagPair"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorDetail"
                }
            }
        },
        "ErrorDetail": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/NameString"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/DescriptionString"
                }
            }
        },
        "DescriptionString": {
            "type": "string"
        },
        "AssumeDecoratedRoleWithSAMLRequest": {
            "type": "object",
            "properties": {
                "SAMLAssertion": {
                    "$ref": "#/$defs/SAMLAssertionString"
                },
                "RoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "PrincipalArn": {
                    "$ref": "#/$defs/IAMSAMLProviderArn"
                },
                "DurationSeconds": {
                    "$ref": "#/$defs/CredentialTimeoutDurationSecondInteger"
                }
            }
        },
        "SAMLAssertionString": {
            "type": "string"
        },
        "IAMRoleArn": {
            "type": "string"
        },
        "IAMSAMLProviderArn": {
            "type": "string"
        },
        "CredentialTimeoutDurationSecondInteger": {
            "type": "integer",
            "format": "int32"
        },
        "AssumeDecoratedRoleWithSAMLResponse": {
            "type": "object",
            "properties": {
                "AccessKeyId": {
                    "$ref": "#/$defs/AccessKeyIdString"
                },
                "SecretAccessKey": {
                    "$ref": "#/$defs/SecretAccessKeyString"
                },
                "SessionToken": {
                    "$ref": "#/$defs/SessionTokenString"
                },
                "Expiration": {
                    "$ref": "#/$defs/ExpirationTimestamp"
                }
            }
        },
        "AccessKeyIdString": {
            "type": "string"
        },
        "SecretAccessKeyString": {
            "type": "string"
        },
        "SessionTokenString": {
            "type": "string"
        },
        "ExpirationTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "BatchGrantPermissionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Entries": {
                    "$ref": "#/$defs/BatchPermissionsRequestEntryList"
                }
            }
        },
        "BatchPermissionsRequestEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchPermissionsRequestEntry"
            }
        },
        "BatchPermissionsRequestEntry": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/Identifier"
                },
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "Permissions": {
                    "$ref": "#/$defs/PermissionList"
                },
                "Condition": {
                    "$ref": "#/$defs/Condition"
                },
                "PermissionsWithGrantOption": {
                    "$ref": "#/$defs/PermissionList"
                }
            }
        },
        "Identifier": {
            "type": "string"
        },
        "DataLakePrincipal": {
            "type": "object",
            "properties": {
                "DataLakePrincipalIdentifier": {
                    "$ref": "#/$defs/DataLakePrincipalString"
                }
            }
        },
        "DataLakePrincipalString": {
            "type": "string"
        },
        "PermissionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Permission"
            }
        },
        "Permission": {
            "enum": [
                "ALL",
                "SELECT",
                "ALTER",
                "DROP",
                "DELETE",
                "INSERT",
                "DESCRIBE",
                "CREATE_DATABASE",
                "CREATE_TABLE",
                "DATA_LOCATION_ACCESS",
                "CREATE_LF_TAG",
                "ASSOCIATE",
                "GRANT_WITH_LF_TAG_EXPRESSION",
                "CREATE_LF_TAG_EXPRESSION",
                "CREATE_CATALOG",
                "SUPER_USER"
            ]
        },
        "Condition": {
            "type": "object",
            "properties": {
                "Expression": {
                    "$ref": "#/$defs/ExpressionString"
                }
            }
        },
        "ExpressionString": {
            "type": "string"
        },
        "BatchGrantPermissionsResponse": {
            "type": "object",
            "properties": {
                "Failures": {
                    "$ref": "#/$defs/BatchPermissionsFailureList"
                }
            }
        },
        "BatchPermissionsFailureList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchPermissionsFailureEntry"
            }
        },
        "BatchPermissionsFailureEntry": {
            "type": "object",
            "properties": {
                "RequestEntry": {
                    "$ref": "#/$defs/BatchPermissionsRequestEntry"
                },
                "Error": {
                    "$ref": "#/$defs/ErrorDetail"
                }
            }
        },
        "BatchRevokePermissionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Entries": {
                    "$ref": "#/$defs/BatchPermissionsRequestEntryList"
                }
            }
        },
        "BatchRevokePermissionsResponse": {
            "type": "object",
            "properties": {
                "Failures": {
                    "$ref": "#/$defs/BatchPermissionsFailureList"
                }
            }
        },
        "CancelTransactionRequest": {
            "type": "object",
            "properties": {
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                }
            }
        },
        "TransactionIdString": {
            "type": "string"
        },
        "CancelTransactionResponse": {
            "type": "object",
            "properties": {}
        },
        "CommitTransactionRequest": {
            "type": "object",
            "properties": {
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                }
            }
        },
        "CommitTransactionResponse": {
            "type": "object",
            "properties": {
                "TransactionStatus": {
                    "$ref": "#/$defs/TransactionStatus"
                }
            }
        },
        "TransactionStatus": {
            "enum": [
                "ACTIVE",
                "COMMITTED",
                "ABORTED",
                "COMMIT_IN_PROGRESS"
            ]
        },
        "CreateDataCellsFilterRequest": {
            "type": "object",
            "properties": {
                "TableData": {
                    "$ref": "#/$defs/DataCellsFilter"
                }
            }
        },
        "DataCellsFilter": {
            "type": "object",
            "properties": {
                "TableCatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "RowFilter": {
                    "$ref": "#/$defs/RowFilter"
                },
                "ColumnNames": {
                    "$ref": "#/$defs/ColumnNames"
                },
                "ColumnWildcard": {
                    "$ref": "#/$defs/ColumnWildcard"
                },
                "VersionId": {
                    "$ref": "#/$defs/VersionString"
                }
            }
        },
        "RowFilter": {
            "type": "object",
            "properties": {
                "FilterExpression": {
                    "$ref": "#/$defs/PredicateString"
                },
                "AllRowsWildcard": {
                    "$ref": "#/$defs/AllRowsWildcard"
                }
            }
        },
        "PredicateString": {
            "type": "string"
        },
        "AllRowsWildcard": {
            "type": "object",
            "properties": {}
        },
        "VersionString": {
            "type": "string"
        },
        "CreateDataCellsFilterResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateLakeFormationIdentityCenterConfigurationRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "InstanceArn": {
                    "$ref": "#/$defs/IdentityCenterInstanceArn"
                },
                "ExternalFiltering": {
                    "$ref": "#/$defs/ExternalFilteringConfiguration"
                },
                "ShareRecipients": {
                    "$ref": "#/$defs/DataLakePrincipalList"
                }
            }
        },
        "IdentityCenterInstanceArn": {
            "type": "string"
        },
        "ExternalFilteringConfiguration": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/EnableStatus"
                },
                "AuthorizedTargets": {
                    "$ref": "#/$defs/ScopeTargets"
                }
            }
        },
        "EnableStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "ScopeTargets": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScopeTarget"
            }
        },
        "ScopeTarget": {
            "type": "string"
        },
        "DataLakePrincipalList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataLakePrincipal"
            }
        },
        "CreateLakeFormationIdentityCenterConfigurationResponse": {
            "type": "object",
            "properties": {
                "ApplicationArn": {
                    "$ref": "#/$defs/ApplicationArn"
                }
            }
        },
        "ApplicationArn": {
            "type": "string"
        },
        "CreateLakeFormationOptInRequest": {
            "type": "object",
            "properties": {
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "Condition": {
                    "$ref": "#/$defs/Condition"
                }
            }
        },
        "CreateLakeFormationOptInResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateLFTagRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "TagKey": {
                    "$ref": "#/$defs/LFTagKey"
                },
                "TagValues": {
                    "$ref": "#/$defs/TagValueList"
                }
            }
        },
        "CreateLFTagResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateLFTagExpressionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                }
            }
        },
        "CreateLFTagExpressionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDataCellsFilterRequest": {
            "type": "object",
            "properties": {
                "TableCatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DeleteDataCellsFilterResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteLakeFormationIdentityCenterConfigurationRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "DeleteLakeFormationIdentityCenterConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteLakeFormationOptInRequest": {
            "type": "object",
            "properties": {
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "Condition": {
                    "$ref": "#/$defs/Condition"
                }
            }
        },
        "DeleteLakeFormationOptInResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteLFTagRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "TagKey": {
                    "$ref": "#/$defs/LFTagKey"
                }
            }
        },
        "DeleteLFTagResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteLFTagExpressionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "DeleteLFTagExpressionResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteObjectsOnCancelRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                },
                "Objects": {
                    "$ref": "#/$defs/VirtualObjectList"
                }
            }
        },
        "VirtualObjectList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VirtualObject"
            }
        },
        "VirtualObject": {
            "type": "object",
            "properties": {
                "Uri": {
                    "$ref": "#/$defs/URI"
                },
                "ETag": {
                    "$ref": "#/$defs/ETagString"
                }
            }
        },
        "URI": {
            "type": "string"
        },
        "ETagString": {
            "type": "string"
        },
        "DeleteObjectsOnCancelResponse": {
            "type": "object",
            "properties": {}
        },
        "DeregisterResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                }
            }
        },
        "DeregisterResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "DescribeLakeFormationIdentityCenterConfigurationRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "DescribeLakeFormationIdentityCenterConfigurationResponse": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "InstanceArn": {
                    "$ref": "#/$defs/IdentityCenterInstanceArn"
                },
                "ApplicationArn": {
                    "$ref": "#/$defs/ApplicationArn"
                },
                "ExternalFiltering": {
                    "$ref": "#/$defs/ExternalFilteringConfiguration"
                },
                "ShareRecipients": {
                    "$ref": "#/$defs/DataLakePrincipalList"
                },
                "ResourceShare": {
                    "$ref": "#/$defs/RAMResourceShareArn"
                }
            }
        },
        "RAMResourceShareArn": {
            "type": "string"
        },
        "DescribeResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                }
            }
        },
        "DescribeResourceResponse": {
            "type": "object",
            "properties": {
                "ResourceInfo": {
                    "$ref": "#/$defs/ResourceInfo"
                }
            }
        },
        "ResourceInfo": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "RoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModifiedTimestamp"
                },
                "WithFederation": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "HybridAccessEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "WithPrivilegedAccess": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "LastModifiedTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "NullableBoolean": {
            "type": "boolean"
        },
        "DescribeTransactionRequest": {
            "type": "object",
            "properties": {
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                }
            }
        },
        "DescribeTransactionResponse": {
            "type": "object",
            "properties": {
                "TransactionDescription": {
                    "$ref": "#/$defs/TransactionDescription"
                }
            }
        },
        "TransactionDescription": {
            "type": "object",
            "properties": {
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                },
                "TransactionStatus": {
                    "$ref": "#/$defs/TransactionStatus"
                },
                "TransactionStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "TransactionEndTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "ExtendTransactionRequest": {
            "type": "object",
            "properties": {
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                }
            }
        },
        "ExtendTransactionResponse": {
            "type": "object",
            "properties": {}
        },
        "GetDataCellsFilterRequest": {
            "type": "object",
            "properties": {
                "TableCatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "Name": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "GetDataCellsFilterResponse": {
            "type": "object",
            "properties": {
                "DataCellsFilter": {
                    "$ref": "#/$defs/DataCellsFilter"
                }
            }
        },
        "GetDataLakePrincipalRequest": {
            "type": "object",
            "properties": {}
        },
        "GetDataLakePrincipalResponse": {
            "type": "object",
            "properties": {
                "Identity": {
                    "$ref": "#/$defs/IdentityString"
                }
            }
        },
        "IdentityString": {
            "type": "string"
        },
        "GetDataLakeSettingsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "GetDataLakeSettingsResponse": {
            "type": "object",
            "properties": {
                "DataLakeSettings": {
                    "$ref": "#/$defs/DataLakeSettings"
                }
            }
        },
        "DataLakeSettings": {
            "type": "object",
            "properties": {
                "DataLakeAdmins": {
                    "$ref": "#/$defs/DataLakePrincipalList"
                },
                "ReadOnlyAdmins": {
                    "$ref": "#/$defs/DataLakePrincipalList"
                },
                "CreateDatabaseDefaultPermissions": {
                    "$ref": "#/$defs/PrincipalPermissionsList"
                },
                "CreateTableDefaultPermissions": {
                    "$ref": "#/$defs/PrincipalPermissionsList"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersMap"
                },
                "TrustedResourceOwners": {
                    "$ref": "#/$defs/TrustedResourceOwners"
                },
                "AllowExternalDataFiltering": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "AllowFullTableExternalDataAccess": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "ExternalDataFilteringAllowList": {
                    "$ref": "#/$defs/DataLakePrincipalList"
                },
                "AuthorizedSessionTagValueList": {
                    "$ref": "#/$defs/AuthorizedSessionTagValueList"
                }
            }
        },
        "PrincipalPermissionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrincipalPermissions"
            }
        },
        "PrincipalPermissions": {
            "type": "object",
            "properties": {
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "Permissions": {
                    "$ref": "#/$defs/PermissionList"
                }
            }
        },
        "ParametersMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ParametersMapValue"
            }
        },
        "ParametersMapValue": {
            "type": "string"
        },
        "TrustedResourceOwners": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CatalogIdString"
            }
        },
        "AuthorizedSessionTagValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NameString"
            }
        },
        "GetEffectivePermissionsForPathRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "Token": {
            "type": "string"
        },
        "PageSize": {
            "type": "integer",
            "format": "int32"
        },
        "GetEffectivePermissionsForPathResponse": {
            "type": "object",
            "properties": {
                "Permissions": {
                    "$ref": "#/$defs/PrincipalResourcePermissionsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "PrincipalResourcePermissionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrincipalResourcePermissions"
            }
        },
        "PrincipalResourcePermissions": {
            "type": "object",
            "properties": {
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "Condition": {
                    "$ref": "#/$defs/Condition"
                },
                "Permissions": {
                    "$ref": "#/$defs/PermissionList"
                },
                "PermissionsWithGrantOption": {
                    "$ref": "#/$defs/PermissionList"
                },
                "AdditionalDetails": {
                    "$ref": "#/$defs/DetailsMap"
                },
                "LastUpdated": {
                    "$ref": "#/$defs/LastModifiedTimestamp"
                },
                "LastUpdatedBy": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "DetailsMap": {
            "type": "object",
            "properties": {
                "ResourceShare": {
                    "$ref": "#/$defs/ResourceShareList"
                }
            }
        },
        "ResourceShareList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RAMResourceShareArn"
            }
        },
        "GetLFTagRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "TagKey": {
                    "$ref": "#/$defs/LFTagKey"
                }
            }
        },
        "GetLFTagResponse": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "TagKey": {
                    "$ref": "#/$defs/LFTagKey"
                },
                "TagValues": {
                    "$ref": "#/$defs/TagValueList"
                }
            }
        },
        "GetLFTagExpressionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                }
            }
        },
        "GetLFTagExpressionResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                }
            }
        },
        "GetQueryStateRequest": {
            "type": "object",
            "properties": {
                "QueryId": {
                    "$ref": "#/$defs/GetQueryStateRequestQueryIdString"
                }
            }
        },
        "GetQueryStateRequestQueryIdString": {
            "type": "string"
        },
        "GetQueryStateResponse": {
            "type": "object",
            "properties": {
                "Error": {
                    "$ref": "#/$defs/ErrorMessageString"
                },
                "State": {
                    "$ref": "#/$defs/QueryStateString"
                }
            }
        },
        "ErrorMessageString": {
            "type": "string"
        },
        "QueryStateString": {
            "enum": [
                "PENDING",
                "WORKUNITS_AVAILABLE",
                "ERROR",
                "FINISHED",
                "EXPIRED"
            ]
        },
        "GetQueryStatisticsRequest": {
            "type": "object",
            "properties": {
                "QueryId": {
                    "$ref": "#/$defs/GetQueryStatisticsRequestQueryIdString"
                }
            }
        },
        "GetQueryStatisticsRequestQueryIdString": {
            "type": "string"
        },
        "GetQueryStatisticsResponse": {
            "type": "object",
            "properties": {
                "ExecutionStatistics": {
                    "$ref": "#/$defs/ExecutionStatistics"
                },
                "PlanningStatistics": {
                    "$ref": "#/$defs/PlanningStatistics"
                },
                "QuerySubmissionTime": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "ExecutionStatistics": {
            "type": "object",
            "properties": {
                "AverageExecutionTimeMillis": {
                    "$ref": "#/$defs/NumberOfMilliseconds"
                },
                "DataScannedBytes": {
                    "$ref": "#/$defs/NumberOfBytes"
                },
                "WorkUnitsExecutedCount": {
                    "$ref": "#/$defs/NumberOfItems"
                }
            }
        },
        "NumberOfMilliseconds": {
            "type": "integer",
            "format": "int64"
        },
        "NumberOfBytes": {
            "type": "integer",
            "format": "int64"
        },
        "NumberOfItems": {
            "type": "integer",
            "format": "int64"
        },
        "PlanningStatistics": {
            "type": "object",
            "properties": {
                "EstimatedDataToScanBytes": {
                    "$ref": "#/$defs/NumberOfBytes"
                },
                "PlanningTimeMillis": {
                    "$ref": "#/$defs/NumberOfMilliseconds"
                },
                "QueueTimeMillis": {
                    "$ref": "#/$defs/NumberOfMilliseconds"
                },
                "WorkUnitsGeneratedCount": {
                    "$ref": "#/$defs/NumberOfItems"
                }
            }
        },
        "DateTime": {
            "type": "string",
            "format": "date-time"
        },
        "GetResourceLFTagsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "ShowAssignedLFTags": {
                    "$ref": "#/$defs/BooleanNullable"
                }
            }
        },
        "BooleanNullable": {
            "type": "boolean"
        },
        "GetResourceLFTagsResponse": {
            "type": "object",
            "properties": {
                "LFTagOnDatabase": {
                    "$ref": "#/$defs/LFTagsList"
                },
                "LFTagsOnTable": {
                    "$ref": "#/$defs/LFTagsList"
                },
                "LFTagsOnColumns": {
                    "$ref": "#/$defs/ColumnLFTagsList"
                }
            }
        },
        "ColumnLFTagsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnLFTag"
            }
        },
        "ColumnLFTag": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "LFTags": {
                    "$ref": "#/$defs/LFTagsList"
                }
            }
        },
        "GetTableObjectsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                },
                "QueryAsOfTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "PartitionPredicate": {
                    "$ref": "#/$defs/PredicateString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/TokenString"
                }
            }
        },
        "TokenString": {
            "type": "string"
        },
        "GetTableObjectsResponse": {
            "type": "object",
            "properties": {
                "Objects": {
                    "$ref": "#/$defs/PartitionedTableObjectsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/TokenString"
                }
            }
        },
        "PartitionedTableObjectsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionObjects"
            }
        },
        "PartitionObjects": {
            "type": "object",
            "properties": {
                "PartitionValues": {
                    "$ref": "#/$defs/PartitionValuesList"
                },
                "Objects": {
                    "$ref": "#/$defs/TableObjectList"
                }
            }
        },
        "PartitionValuesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionValueString"
            }
        },
        "PartitionValueString": {
            "type": "string"
        },
        "TableObjectList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TableObject"
            }
        },
        "TableObject": {
            "type": "object",
            "properties": {
                "Uri": {
                    "$ref": "#/$defs/URI"
                },
                "ETag": {
                    "$ref": "#/$defs/ETagString"
                },
                "Size": {
                    "$ref": "#/$defs/ObjectSize"
                }
            }
        },
        "ObjectSize": {
            "type": "integer",
            "format": "int64"
        },
        "GetTemporaryGluePartitionCredentialsRequest": {
            "type": "object",
            "properties": {
                "TableArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "Partition": {
                    "$ref": "#/$defs/PartitionValueList"
                },
                "Permissions": {
                    "$ref": "#/$defs/PermissionList"
                },
                "DurationSeconds": {
                    "$ref": "#/$defs/CredentialTimeoutDurationSecondInteger"
                },
                "AuditContext": {
                    "$ref": "#/$defs/AuditContext"
                },
                "SupportedPermissionTypes": {
                    "$ref": "#/$defs/PermissionTypeList"
                }
            }
        },
        "PartitionValueList": {
            "type": "object",
            "properties": {
                "Values": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "ValueStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValueString"
            }
        },
        "ValueString": {
            "type": "string"
        },
        "AuditContext": {
            "type": "object",
            "properties": {
                "AdditionalAuditContext": {
                    "$ref": "#/$defs/AuditContextString"
                }
            }
        },
        "AuditContextString": {
            "type": "string"
        },
        "PermissionTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PermissionType"
            }
        },
        "PermissionType": {
            "enum": [
                "COLUMN_PERMISSION",
                "CELL_FILTER_PERMISSION",
                "NESTED_PERMISSION",
                "NESTED_CELL_PERMISSION"
            ]
        },
        "GetTemporaryGluePartitionCredentialsResponse": {
            "type": "object",
            "properties": {
                "AccessKeyId": {
                    "$ref": "#/$defs/AccessKeyIdString"
                },
                "SecretAccessKey": {
                    "$ref": "#/$defs/SecretAccessKeyString"
                },
                "SessionToken": {
                    "$ref": "#/$defs/SessionTokenString"
                },
                "Expiration": {
                    "$ref": "#/$defs/ExpirationTimestamp"
                }
            }
        },
        "GetTemporaryGlueTableCredentialsRequest": {
            "type": "object",
            "properties": {
                "TableArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "Permissions": {
                    "$ref": "#/$defs/PermissionList"
                },
                "DurationSeconds": {
                    "$ref": "#/$defs/CredentialTimeoutDurationSecondInteger"
                },
                "AuditContext": {
                    "$ref": "#/$defs/AuditContext"
                },
                "SupportedPermissionTypes": {
                    "$ref": "#/$defs/PermissionTypeList"
                },
                "S3Path": {
                    "$ref": "#/$defs/PathString"
                },
                "QuerySessionContext": {
                    "$ref": "#/$defs/QuerySessionContext"
                }
            }
        },
        "PathString": {
            "type": "string"
        },
        "QuerySessionContext": {
            "type": "object",
            "properties": {
                "QueryId": {
                    "$ref": "#/$defs/HashString"
                },
                "QueryStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ClusterId": {
                    "$ref": "#/$defs/NullableString"
                },
                "QueryAuthorizationId": {
                    "$ref": "#/$defs/HashString"
                },
                "AdditionalContext": {
                    "$ref": "#/$defs/AdditionalContextMap"
                }
            }
        },
        "HashString": {
            "type": "string"
        },
        "NullableString": {
            "type": "string"
        },
        "AdditionalContextMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ContextValue"
            }
        },
        "ContextValue": {
            "type": "string"
        },
        "GetTemporaryGlueTableCredentialsResponse": {
            "type": "object",
            "properties": {
                "AccessKeyId": {
                    "$ref": "#/$defs/AccessKeyIdString"
                },
                "SecretAccessKey": {
                    "$ref": "#/$defs/SecretAccessKeyString"
                },
                "SessionToken": {
                    "$ref": "#/$defs/SessionTokenString"
                },
                "Expiration": {
                    "$ref": "#/$defs/ExpirationTimestamp"
                },
                "VendedS3Path": {
                    "$ref": "#/$defs/PathStringList"
                }
            }
        },
        "PathStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PathString"
            }
        },
        "GetWorkUnitResultsRequest": {
            "type": "object",
            "properties": {
                "QueryId": {
                    "$ref": "#/$defs/GetWorkUnitResultsRequestQueryIdString"
                },
                "WorkUnitId": {
                    "$ref": "#/$defs/GetWorkUnitResultsRequestWorkUnitIdLong"
                },
                "WorkUnitToken": {
                    "$ref": "#/$defs/SyntheticGetWorkUnitResultsRequestWorkUnitTokenString"
                }
            }
        },
        "GetWorkUnitResultsRequestQueryIdString": {
            "type": "string"
        },
        "GetWorkUnitResultsRequestWorkUnitIdLong": {
            "type": "integer",
            "format": "int64"
        },
        "SyntheticGetWorkUnitResultsRequestWorkUnitTokenString": {
            "type": "string"
        },
        "GetWorkUnitResultsResponse": {
            "type": "object",
            "properties": {
                "ResultStream": {
                    "$ref": "#/$defs/ResultStream"
                }
            }
        },
        "ResultStream": {
            "type": "string",
            "format": "binary"
        },
        "GetWorkUnitsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "PageSize": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "QueryId": {
                    "$ref": "#/$defs/GetWorkUnitsRequestQueryIdString"
                }
            }
        },
        "GetWorkUnitsRequestQueryIdString": {
            "type": "string"
        },
        "GetWorkUnitsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "QueryId": {
                    "$ref": "#/$defs/QueryIdString"
                },
                "WorkUnitRanges": {
                    "$ref": "#/$defs/WorkUnitRangeList"
                }
            }
        },
        "QueryIdString": {
            "type": "string"
        },
        "WorkUnitRangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WorkUnitRange"
            }
        },
        "WorkUnitRange": {
            "type": "object",
            "properties": {
                "WorkUnitIdMax": {
                    "$ref": "#/$defs/WorkUnitIdLong"
                },
                "WorkUnitIdMin": {
                    "$ref": "#/$defs/WorkUnitIdLong"
                },
                "WorkUnitToken": {
                    "$ref": "#/$defs/WorkUnitTokenString"
                }
            }
        },
        "WorkUnitIdLong": {
            "type": "integer",
            "format": "int64"
        },
        "WorkUnitTokenString": {
            "type": "string"
        },
        "GrantPermissionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "Permissions": {
                    "$ref": "#/$defs/PermissionList"
                },
                "Condition": {
                    "$ref": "#/$defs/Condition"
                },
                "PermissionsWithGrantOption": {
                    "$ref": "#/$defs/PermissionList"
                }
            }
        },
        "GrantPermissionsResponse": {
            "type": "object",
            "properties": {}
        },
        "ListDataCellsFilterRequest": {
            "type": "object",
            "properties": {
                "Table": {
                    "$ref": "#/$defs/TableResource"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                }
            }
        },
        "ListDataCellsFilterResponse": {
            "type": "object",
            "properties": {
                "DataCellsFilters": {
                    "$ref": "#/$defs/DataCellsFilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "DataCellsFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataCellsFilter"
            }
        },
        "ListLakeFormationOptInsRequest": {
            "type": "object",
            "properties": {
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListLakeFormationOptInsResponse": {
            "type": "object",
            "properties": {
                "LakeFormationOptInsInfoList": {
                    "$ref": "#/$defs/LakeFormationOptInsInfoList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "LakeFormationOptInsInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LakeFormationOptInsInfo"
            }
        },
        "LakeFormationOptInsInfo": {
            "type": "object",
            "properties": {
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "Condition": {
                    "$ref": "#/$defs/Condition"
                },
                "LastModified": {
                    "$ref": "#/$defs/LastModifiedTimestamp"
                },
                "LastUpdatedBy": {
                    "$ref": "#/$defs/NameString"
                }
            }
        },
        "ListLFTagExpressionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListLFTagExpressionsResponse": {
            "type": "object",
            "properties": {
                "LFTagExpressions": {
                    "$ref": "#/$defs/LFTagExpressionsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "LFTagExpressionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LFTagExpression"
            }
        },
        "LFTagExpression": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                }
            }
        },
        "ListLFTagsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "ResourceShareType": {
                    "$ref": "#/$defs/ResourceShareType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ResourceShareType": {
            "enum": [
                "FOREIGN",
                "ALL"
            ]
        },
        "ListLFTagsResponse": {
            "type": "object",
            "properties": {
                "LFTags": {
                    "$ref": "#/$defs/LFTagsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListPermissionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "ResourceType": {
                    "$ref": "#/$defs/DataLakeResourceType"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "IncludeRelated": {
                    "$ref": "#/$defs/TrueFalseString"
                }
            }
        },
        "DataLakeResourceType": {
            "enum": [
                "CATALOG",
                "DATABASE",
                "TABLE",
                "DATA_LOCATION",
                "LF_TAG",
                "LF_TAG_POLICY",
                "LF_TAG_POLICY_DATABASE",
                "LF_TAG_POLICY_TABLE",
                "LF_NAMED_TAG_EXPRESSION"
            ]
        },
        "TrueFalseString": {
            "type": "string"
        },
        "ListPermissionsResponse": {
            "type": "object",
            "properties": {
                "PrincipalResourcePermissions": {
                    "$ref": "#/$defs/PrincipalResourcePermissionsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListResourcesRequest": {
            "type": "object",
            "properties": {
                "FilterConditionList": {
                    "$ref": "#/$defs/FilterConditionList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "FilterConditionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterCondition"
            }
        },
        "FilterCondition": {
            "type": "object",
            "properties": {
                "Field": {
                    "$ref": "#/$defs/FieldNameString"
                },
                "ComparisonOperator": {
                    "$ref": "#/$defs/ComparisonOperator"
                },
                "StringValueList": {
                    "$ref": "#/$defs/StringValueList"
                }
            }
        },
        "FieldNameString": {
            "enum": [
                "RESOURCE_ARN",
                "ROLE_ARN",
                "LAST_MODIFIED"
            ]
        },
        "ComparisonOperator": {
            "enum": [
                "EQ",
                "NE",
                "LE",
                "LT",
                "GE",
                "GT",
                "CONTAINS",
                "NOT_CONTAINS",
                "BEGINS_WITH",
                "IN",
                "BETWEEN"
            ]
        },
        "StringValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StringValue"
            }
        },
        "StringValue": {
            "type": "string"
        },
        "ListResourcesResponse": {
            "type": "object",
            "properties": {
                "ResourceInfoList": {
                    "$ref": "#/$defs/ResourceInfoList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ResourceInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceInfo"
            }
        },
        "ListTableStorageOptimizersRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "StorageOptimizerType": {
                    "$ref": "#/$defs/OptimizerType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "OptimizerType": {
            "enum": [
                "COMPACTION",
                "GARBAGE_COLLECTION",
                "GENERIC"
            ]
        },
        "ListTableStorageOptimizersResponse": {
            "type": "object",
            "properties": {
                "StorageOptimizerList": {
                    "$ref": "#/$defs/StorageOptimizerList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "StorageOptimizerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StorageOptimizer"
            }
        },
        "StorageOptimizer": {
            "type": "object",
            "properties": {
                "StorageOptimizerType": {
                    "$ref": "#/$defs/OptimizerType"
                },
                "Config": {
                    "$ref": "#/$defs/StorageOptimizerConfig"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/MessageString"
                },
                "Warnings": {
                    "$ref": "#/$defs/MessageString"
                },
                "LastRunDetails": {
                    "$ref": "#/$defs/MessageString"
                }
            }
        },
        "StorageOptimizerConfig": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/StorageOptimizerConfigValue"
            }
        },
        "StorageOptimizerConfigValue": {
            "type": "string"
        },
        "MessageString": {
            "type": "string"
        },
        "ListTransactionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "StatusFilter": {
                    "$ref": "#/$defs/TransactionStatusFilter"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PageSize"
                },
                "NextToken": {
                    "$ref": "#/$defs/TokenString"
                }
            }
        },
        "TransactionStatusFilter": {
            "enum": [
                "ALL",
                "COMPLETED",
                "ACTIVE",
                "COMMITTED",
                "ABORTED"
            ]
        },
        "ListTransactionsResponse": {
            "type": "object",
            "properties": {
                "Transactions": {
                    "$ref": "#/$defs/TransactionDescriptionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/TokenString"
                }
            }
        },
        "TransactionDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransactionDescription"
            }
        },
        "PutDataLakeSettingsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DataLakeSettings": {
                    "$ref": "#/$defs/DataLakeSettings"
                }
            }
        },
        "PutDataLakeSettingsResponse": {
            "type": "object",
            "properties": {}
        },
        "RegisterResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "UseServiceLinkedRole": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "RoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "WithFederation": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "HybridAccessEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "WithPrivilegedAccess": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "RegisterResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "RemoveLFTagsFromResourceRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "LFTags": {
                    "$ref": "#/$defs/LFTagsList"
                }
            }
        },
        "RemoveLFTagsFromResourceResponse": {
            "type": "object",
            "properties": {
                "Failures": {
                    "$ref": "#/$defs/LFTagErrors"
                }
            }
        },
        "RevokePermissionsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Principal": {
                    "$ref": "#/$defs/DataLakePrincipal"
                },
                "Resource": {
                    "$ref": "#/$defs/Resource"
                },
                "Permissions": {
                    "$ref": "#/$defs/PermissionList"
                },
                "Condition": {
                    "$ref": "#/$defs/Condition"
                },
                "PermissionsWithGrantOption": {
                    "$ref": "#/$defs/PermissionList"
                }
            }
        },
        "RevokePermissionsResponse": {
            "type": "object",
            "properties": {}
        },
        "SearchDatabasesByLFTagsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/SearchPageSize"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                }
            }
        },
        "SearchPageSize": {
            "type": "integer",
            "format": "int32"
        },
        "SearchDatabasesByLFTagsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "DatabaseList": {
                    "$ref": "#/$defs/DatabaseLFTagsList"
                }
            }
        },
        "DatabaseLFTagsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaggedDatabase"
            }
        },
        "TaggedDatabase": {
            "type": "object",
            "properties": {
                "Database": {
                    "$ref": "#/$defs/DatabaseResource"
                },
                "LFTags": {
                    "$ref": "#/$defs/LFTagsList"
                }
            }
        },
        "SearchTablesByLFTagsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/SearchPageSize"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                }
            }
        },
        "SearchTablesByLFTagsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "TableList": {
                    "$ref": "#/$defs/TableLFTagsList"
                }
            }
        },
        "TableLFTagsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaggedTable"
            }
        },
        "TaggedTable": {
            "type": "object",
            "properties": {
                "Table": {
                    "$ref": "#/$defs/TableResource"
                },
                "LFTagOnDatabase": {
                    "$ref": "#/$defs/LFTagsList"
                },
                "LFTagsOnTable": {
                    "$ref": "#/$defs/LFTagsList"
                },
                "LFTagsOnColumns": {
                    "$ref": "#/$defs/ColumnLFTagsList"
                }
            }
        },
        "StartQueryPlanningRequest": {
            "type": "object",
            "properties": {
                "QueryPlanningContext": {
                    "$ref": "#/$defs/QueryPlanningContext"
                },
                "QueryString": {
                    "$ref": "#/$defs/SyntheticStartQueryPlanningRequestQueryString"
                }
            }
        },
        "QueryPlanningContext": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/QueryPlanningContextDatabaseNameString"
                },
                "QueryAsOfTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "QueryParameters": {
                    "$ref": "#/$defs/QueryParameterMap"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                }
            }
        },
        "QueryPlanningContextDatabaseNameString": {
            "type": "string"
        },
        "QueryParameterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "SyntheticStartQueryPlanningRequestQueryString": {
            "type": "string"
        },
        "StartQueryPlanningResponse": {
            "type": "object",
            "properties": {
                "QueryId": {
                    "$ref": "#/$defs/QueryIdString"
                }
            }
        },
        "StartTransactionRequest": {
            "type": "object",
            "properties": {
                "TransactionType": {
                    "$ref": "#/$defs/TransactionType"
                }
            }
        },
        "TransactionType": {
            "enum": [
                "READ_AND_WRITE",
                "READ_ONLY"
            ]
        },
        "StartTransactionResponse": {
            "type": "object",
            "properties": {
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                }
            }
        },
        "UpdateDataCellsFilterRequest": {
            "type": "object",
            "properties": {
                "TableData": {
                    "$ref": "#/$defs/DataCellsFilter"
                }
            }
        },
        "UpdateDataCellsFilterResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateLakeFormationIdentityCenterConfigurationRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "ShareRecipients": {
                    "$ref": "#/$defs/DataLakePrincipalList"
                },
                "ApplicationStatus": {
                    "$ref": "#/$defs/ApplicationStatus"
                },
                "ExternalFiltering": {
                    "$ref": "#/$defs/ExternalFilteringConfiguration"
                }
            }
        },
        "ApplicationStatus": {
            "enum": [
                "ENABLED",
                "DISABLED"
            ]
        },
        "UpdateLakeFormationIdentityCenterConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateLFTagRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "TagKey": {
                    "$ref": "#/$defs/LFTagKey"
                },
                "TagValuesToDelete": {
                    "$ref": "#/$defs/TagValueList"
                },
                "TagValuesToAdd": {
                    "$ref": "#/$defs/TagValueList"
                }
            }
        },
        "UpdateLFTagResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateLFTagExpressionRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NameString"
                },
                "Description": {
                    "$ref": "#/$defs/DescriptionString"
                },
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "Expression": {
                    "$ref": "#/$defs/Expression"
                }
            }
        },
        "UpdateLFTagExpressionResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateResourceRequest": {
            "type": "object",
            "properties": {
                "RoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArnString"
                },
                "WithFederation": {
                    "$ref": "#/$defs/NullableBoolean"
                },
                "HybridAccessEnabled": {
                    "$ref": "#/$defs/NullableBoolean"
                }
            }
        },
        "UpdateResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateTableObjectsRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "TransactionId": {
                    "$ref": "#/$defs/TransactionIdString"
                },
                "WriteOperations": {
                    "$ref": "#/$defs/WriteOperationList"
                }
            }
        },
        "WriteOperationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WriteOperation"
            }
        },
        "WriteOperation": {
            "type": "object",
            "properties": {
                "AddObject": {
                    "$ref": "#/$defs/AddObjectInput"
                },
                "DeleteObject": {
                    "$ref": "#/$defs/DeleteObjectInput"
                }
            }
        },
        "AddObjectInput": {
            "type": "object",
            "properties": {
                "Uri": {
                    "$ref": "#/$defs/URI"
                },
                "ETag": {
                    "$ref": "#/$defs/ETagString"
                },
                "Size": {
                    "$ref": "#/$defs/ObjectSize"
                },
                "PartitionValues": {
                    "$ref": "#/$defs/PartitionValuesList"
                }
            }
        },
        "DeleteObjectInput": {
            "type": "object",
            "properties": {
                "Uri": {
                    "$ref": "#/$defs/URI"
                },
                "ETag": {
                    "$ref": "#/$defs/ETagString"
                },
                "PartitionValues": {
                    "$ref": "#/$defs/PartitionValuesList"
                }
            }
        },
        "UpdateTableObjectsResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateTableStorageOptimizerRequest": {
            "type": "object",
            "properties": {
                "CatalogId": {
                    "$ref": "#/$defs/CatalogIdString"
                },
                "DatabaseName": {
                    "$ref": "#/$defs/NameString"
                },
                "TableName": {
                    "$ref": "#/$defs/NameString"
                },
                "StorageOptimizerConfig": {
                    "$ref": "#/$defs/StorageOptimizerConfigMap"
                }
            }
        },
        "StorageOptimizerConfigMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/StorageOptimizerConfig"
            }
        },
        "UpdateTableStorageOptimizerResponse": {
            "type": "object",
            "properties": {
                "Result": {
                    "$ref": "#/$defs/Result"
                }
            }
        },
        "Result": {
            "type": "string"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://lakeformation-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://lakeformation-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://lakeformation.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://lakeformation.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
