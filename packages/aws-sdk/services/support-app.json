{
    "name": "supportapp",
    "commands": [
        {
            "name": "CreateSlackChannelConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/control/create-slack-channel-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSlackChannelConfigurationResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSlackChannelConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "teamId": {},
                        "channelId": {},
                        "channelName": {},
                        "notifyOnCreateOrReopenCase": {},
                        "notifyOnAddCorrespondenceToCase": {},
                        "notifyOnResolveCase": {},
                        "notifyOnCaseSeverity": {},
                        "channelRoleArn": {}
                    }
                }
            }
        },
        {
            "name": "DeleteAccountAlias",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/control/delete-account-alias"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAccountAliasResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteAccountAliasRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "DeleteSlackChannelConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/control/delete-slack-channel-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSlackChannelConfigurationResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSlackChannelConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "teamId": {},
                        "channelId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSlackWorkspaceConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/control/delete-slack-workspace-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSlackWorkspaceConfigurationResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSlackWorkspaceConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "teamId": {}
                    }
                }
            }
        },
        {
            "name": "GetAccountAlias",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/control/get-account-alias"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAccountAliasResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetAccountAliasRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "ListSlackChannelConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/control/list-slack-channel-configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSlackChannelConfigurationsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSlackChannelConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSlackWorkspaceConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/control/list-slack-workspace-configurations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSlackWorkspaceConfigurationsResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSlackWorkspaceConfigurationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "PutAccountAlias",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/control/put-account-alias"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountAliasResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutAccountAliasRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "accountAlias": {}
                    }
                }
            }
        },
        {
            "name": "RegisterSlackWorkspaceForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/control/register-slack-workspace-for-organization"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterSlackWorkspaceForOrganizationResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RegisterSlackWorkspaceForOrganizationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "teamId": {}
                    }
                }
            }
        },
        {
            "name": "UpdateSlackChannelConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/control/update-slack-channel-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSlackChannelConfigurationResult"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateSlackChannelConfigurationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "teamId": {},
                        "channelId": {},
                        "channelName": {},
                        "notifyOnCreateOrReopenCase": {},
                        "notifyOnAddCorrespondenceToCase": {},
                        "notifyOnResolveCase": {},
                        "notifyOnCaseSeverity": {},
                        "channelRoleArn": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateSlackChannelConfigurationRequest": {
            "type": "object",
            "properties": {
                "teamId": {
                    "$ref": "#/$defs/teamId"
                },
                "channelId": {
                    "$ref": "#/$defs/channelId"
                },
                "channelName": {
                    "$ref": "#/$defs/channelName"
                },
                "notifyOnCreateOrReopenCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnAddCorrespondenceToCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnResolveCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnCaseSeverity": {
                    "$ref": "#/$defs/NotificationSeverityLevel"
                },
                "channelRoleArn": {
                    "$ref": "#/$defs/roleArn"
                }
            }
        },
        "teamId": {
            "type": "string"
        },
        "channelId": {
            "type": "string"
        },
        "channelName": {
            "type": "string"
        },
        "booleanValue": {
            "type": "boolean"
        },
        "NotificationSeverityLevel": {
            "type": "string"
        },
        "roleArn": {
            "type": "string"
        },
        "CreateSlackChannelConfigurationResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteAccountAliasRequest": {
            "type": "object",
            "properties": {}
        },
        "DeleteAccountAliasResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteSlackChannelConfigurationRequest": {
            "type": "object",
            "properties": {
                "teamId": {
                    "$ref": "#/$defs/teamId"
                },
                "channelId": {
                    "$ref": "#/$defs/channelId"
                }
            }
        },
        "DeleteSlackChannelConfigurationResult": {
            "type": "object",
            "properties": {}
        },
        "DeleteSlackWorkspaceConfigurationRequest": {
            "type": "object",
            "properties": {
                "teamId": {
                    "$ref": "#/$defs/teamId"
                }
            }
        },
        "DeleteSlackWorkspaceConfigurationResult": {
            "type": "object",
            "properties": {}
        },
        "GetAccountAliasRequest": {
            "type": "object",
            "properties": {}
        },
        "GetAccountAliasResult": {
            "type": "object",
            "properties": {
                "accountAlias": {
                    "$ref": "#/$defs/awsAccountAlias"
                }
            }
        },
        "awsAccountAlias": {
            "type": "string"
        },
        "ListSlackChannelConfigurationsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/paginationToken"
                }
            }
        },
        "paginationToken": {
            "type": "string"
        },
        "ListSlackChannelConfigurationsResult": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/paginationToken"
                },
                "slackChannelConfigurations": {
                    "$ref": "#/$defs/slackChannelConfigurationList"
                }
            }
        },
        "slackChannelConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SlackChannelConfiguration"
            }
        },
        "SlackChannelConfiguration": {
            "type": "object",
            "properties": {
                "teamId": {
                    "$ref": "#/$defs/teamId"
                },
                "channelId": {
                    "$ref": "#/$defs/channelId"
                },
                "channelName": {
                    "$ref": "#/$defs/channelName"
                },
                "notifyOnCreateOrReopenCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnAddCorrespondenceToCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnResolveCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnCaseSeverity": {
                    "$ref": "#/$defs/NotificationSeverityLevel"
                },
                "channelRoleArn": {
                    "$ref": "#/$defs/roleArn"
                }
            }
        },
        "ListSlackWorkspaceConfigurationsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/paginationToken"
                }
            }
        },
        "ListSlackWorkspaceConfigurationsResult": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/paginationToken"
                },
                "slackWorkspaceConfigurations": {
                    "$ref": "#/$defs/SlackWorkspaceConfigurationList"
                }
            }
        },
        "SlackWorkspaceConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SlackWorkspaceConfiguration"
            }
        },
        "SlackWorkspaceConfiguration": {
            "type": "object",
            "properties": {
                "teamId": {
                    "$ref": "#/$defs/teamId"
                },
                "teamName": {
                    "$ref": "#/$defs/teamName"
                },
                "allowOrganizationMemberAccount": {
                    "$ref": "#/$defs/booleanValue"
                }
            }
        },
        "teamName": {
            "type": "string"
        },
        "PutAccountAliasRequest": {
            "type": "object",
            "properties": {
                "accountAlias": {
                    "$ref": "#/$defs/awsAccountAlias"
                }
            }
        },
        "PutAccountAliasResult": {
            "type": "object",
            "properties": {}
        },
        "RegisterSlackWorkspaceForOrganizationRequest": {
            "type": "object",
            "properties": {
                "teamId": {
                    "$ref": "#/$defs/teamId"
                }
            }
        },
        "RegisterSlackWorkspaceForOrganizationResult": {
            "type": "object",
            "properties": {
                "teamId": {
                    "$ref": "#/$defs/teamId"
                },
                "teamName": {
                    "$ref": "#/$defs/teamName"
                },
                "accountType": {
                    "$ref": "#/$defs/AccountType"
                }
            }
        },
        "AccountType": {
            "type": "string"
        },
        "UpdateSlackChannelConfigurationRequest": {
            "type": "object",
            "properties": {
                "teamId": {
                    "$ref": "#/$defs/teamId"
                },
                "channelId": {
                    "$ref": "#/$defs/channelId"
                },
                "channelName": {
                    "$ref": "#/$defs/channelName"
                },
                "notifyOnCreateOrReopenCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnAddCorrespondenceToCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnResolveCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnCaseSeverity": {
                    "$ref": "#/$defs/NotificationSeverityLevel"
                },
                "channelRoleArn": {
                    "$ref": "#/$defs/roleArn"
                }
            }
        },
        "UpdateSlackChannelConfigurationResult": {
            "type": "object",
            "properties": {
                "teamId": {
                    "$ref": "#/$defs/teamId"
                },
                "channelId": {
                    "$ref": "#/$defs/channelId"
                },
                "channelName": {
                    "$ref": "#/$defs/channelName"
                },
                "notifyOnCreateOrReopenCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnAddCorrespondenceToCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnResolveCase": {
                    "$ref": "#/$defs/booleanValue"
                },
                "notifyOnCaseSeverity": {
                    "$ref": "#/$defs/NotificationSeverityLevel"
                },
                "channelRoleArn": {
                    "$ref": "#/$defs/roleArn"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://supportapp-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://supportapp-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://supportapp.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://supportapp.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
