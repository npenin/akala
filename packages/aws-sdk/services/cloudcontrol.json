{
    "commands": [
        {
            "name": "CancelResourceRequest",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelResourceRequest"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelResourceRequestOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelResourceRequestInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourceRequestStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetResourceRequestStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourceRequestStatusOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourceRequestStatusInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResourceRequests",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResourceRequests"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourceRequestsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResourceRequestsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListResources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListResourcesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListResourcesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateResourceInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CancelResourceRequestOutput": {
            "type": "object",
            "properties": {
                "ProgressEvent": {
                    "$ref": "#/$defs/ProgressEvent"
                }
            }
        },
        "ProgressEvent": {
            "type": "object",
            "properties": {
                "TypeName": {
                    "$ref": "#/$defs/TypeName"
                },
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "RequestToken": {
                    "$ref": "#/$defs/RequestToken"
                },
                "Operation": {
                    "$ref": "#/$defs/Operation"
                },
                "OperationStatus": {
                    "$ref": "#/$defs/OperationStatus"
                },
                "EventTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ResourceModel": {
                    "$ref": "#/$defs/Properties"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/HandlerErrorCode"
                },
                "RetryAfter": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "TypeName": {
            "type": "string"
        },
        "Identifier": {
            "type": "string"
        },
        "RequestToken": {
            "type": "string"
        },
        "Operation": {
            "type": "string"
        },
        "OperationStatus": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "Properties": {
            "type": "string"
        },
        "StatusMessage": {
            "type": "string"
        },
        "HandlerErrorCode": {
            "type": "string"
        },
        "CancelResourceRequestInput": {
            "type": "object",
            "properties": {
                "RequestToken": {
                    "$ref": "#/$defs/RequestToken"
                }
            }
        },
        "CreateResourceOutput": {
            "type": "object",
            "properties": {
                "ProgressEvent": {
                    "$ref": "#/$defs/ProgressEvent"
                }
            }
        },
        "CreateResourceInput": {
            "type": "object",
            "properties": {
                "TypeName": {
                    "$ref": "#/$defs/TypeName"
                },
                "TypeVersionId": {
                    "$ref": "#/$defs/TypeVersionId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "DesiredState": {
                    "$ref": "#/$defs/Properties"
                }
            }
        },
        "TypeVersionId": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "ClientToken": {
            "type": "string"
        },
        "DeleteResourceOutput": {
            "type": "object",
            "properties": {
                "ProgressEvent": {
                    "$ref": "#/$defs/ProgressEvent"
                }
            }
        },
        "DeleteResourceInput": {
            "type": "object",
            "properties": {
                "TypeName": {
                    "$ref": "#/$defs/TypeName"
                },
                "TypeVersionId": {
                    "$ref": "#/$defs/TypeVersionId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "GetResourceOutput": {
            "type": "object",
            "properties": {
                "TypeName": {
                    "$ref": "#/$defs/TypeName"
                },
                "ResourceDescription": {
                    "$ref": "#/$defs/ResourceDescription"
                }
            }
        },
        "ResourceDescription": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "Properties": {
                    "$ref": "#/$defs/Properties"
                }
            }
        },
        "GetResourceInput": {
            "type": "object",
            "properties": {
                "TypeName": {
                    "$ref": "#/$defs/TypeName"
                },
                "TypeVersionId": {
                    "$ref": "#/$defs/TypeVersionId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                }
            }
        },
        "GetResourceRequestStatusOutput": {
            "type": "object",
            "properties": {
                "ProgressEvent": {
                    "$ref": "#/$defs/ProgressEvent"
                }
            }
        },
        "GetResourceRequestStatusInput": {
            "type": "object",
            "properties": {
                "RequestToken": {
                    "$ref": "#/$defs/RequestToken"
                }
            }
        },
        "ListResourceRequestsOutput": {
            "type": "object",
            "properties": {
                "ResourceRequestStatusSummaries": {
                    "$ref": "#/$defs/ResourceRequestStatusSummaries"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ResourceRequestStatusSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProgressEvent"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListResourceRequestsInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ResourceRequestStatusFilter": {
                    "$ref": "#/$defs/ResourceRequestStatusFilter"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ResourceRequestStatusFilter": {
            "type": "object",
            "properties": {
                "Operations": {
                    "$ref": "#/$defs/Operations"
                },
                "OperationStatuses": {
                    "$ref": "#/$defs/OperationStatuses"
                }
            }
        },
        "Operations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Operation"
            }
        },
        "OperationStatuses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OperationStatus"
            }
        },
        "ListResourcesOutput": {
            "type": "object",
            "properties": {
                "TypeName": {
                    "$ref": "#/$defs/TypeName"
                },
                "ResourceDescriptions": {
                    "$ref": "#/$defs/ResourceDescriptions"
                },
                "NextToken": {
                    "$ref": "#/$defs/HandlerNextToken"
                }
            }
        },
        "ResourceDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceDescription"
            }
        },
        "HandlerNextToken": {
            "type": "string"
        },
        "ListResourcesInput": {
            "type": "object",
            "properties": {
                "TypeName": {
                    "$ref": "#/$defs/TypeName"
                },
                "TypeVersionId": {
                    "$ref": "#/$defs/TypeVersionId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "NextToken": {
                    "$ref": "#/$defs/HandlerNextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ResourceModel": {
                    "$ref": "#/$defs/Properties"
                }
            }
        },
        "UpdateResourceOutput": {
            "type": "object",
            "properties": {
                "ProgressEvent": {
                    "$ref": "#/$defs/ProgressEvent"
                }
            }
        },
        "UpdateResourceInput": {
            "type": "object",
            "properties": {
                "TypeName": {
                    "$ref": "#/$defs/TypeName"
                },
                "TypeVersionId": {
                    "$ref": "#/$defs/TypeVersionId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "Identifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "PatchDocument": {
                    "$ref": "#/$defs/PatchDocument"
                }
            }
        },
        "PatchDocument": {
            "type": "string"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://cloudcontrolapi-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://cloudcontrolapi-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://cloudcontrolapi.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://cloudcontrolapi.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}