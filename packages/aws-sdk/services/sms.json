{
    "name": "sms",
    "commands": [
        {
            "name": "CreateApp",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateApp"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateAppResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateAppRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateReplicationJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateReplicationJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateReplicationJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateReplicationJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteApp",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteApp"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAppResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAppRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAppLaunchConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteAppLaunchConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAppLaunchConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAppLaunchConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAppReplicationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteAppReplicationConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAppReplicationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAppReplicationConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteAppValidationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteAppValidationConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteAppValidationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteAppValidationConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteReplicationJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteReplicationJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteReplicationJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteReplicationJobRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteServerCatalog",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteServerCatalog"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteServerCatalogResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteServerCatalogRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateConnector",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateConnector"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateConnectorResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateConnectorRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GenerateChangeSet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GenerateChangeSet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GenerateChangeSetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GenerateChangeSetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GenerateTemplate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GenerateTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GenerateTemplateResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GenerateTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetApp",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetApp"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAppResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAppRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAppLaunchConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetAppLaunchConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAppLaunchConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAppLaunchConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAppReplicationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetAppReplicationConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAppReplicationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAppReplicationConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAppValidationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetAppValidationConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAppValidationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAppValidationConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAppValidationOutput",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetAppValidationOutput"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAppValidationOutputResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAppValidationOutputRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetConnectors",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetConnectors"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConnectorsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConnectorsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetReplicationJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetReplicationJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetReplicationJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetReplicationJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetReplicationRuns",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetReplicationRuns"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetReplicationRunsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetReplicationRunsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetServers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetServers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetServersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetServersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportAppCatalog",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ImportAppCatalog"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportAppCatalogResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportAppCatalogRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportServerCatalog",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ImportServerCatalog"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportServerCatalogResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportServerCatalogRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "LaunchApp",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "LaunchApp"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/LaunchAppResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/LaunchAppRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListApps",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListApps"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAppsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAppsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "NotifyAppValidationOutput",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "NotifyAppValidationOutput"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/NotifyAppValidationOutputResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/NotifyAppValidationOutputRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutAppLaunchConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutAppLaunchConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAppLaunchConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAppLaunchConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutAppReplicationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutAppReplicationConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAppReplicationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAppReplicationConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutAppValidationConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutAppValidationConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAppValidationConfigurationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAppValidationConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartAppReplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartAppReplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartAppReplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartAppReplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartOnDemandAppReplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartOnDemandAppReplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartOnDemandAppReplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartOnDemandAppReplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartOnDemandReplicationRun",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartOnDemandReplicationRun"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartOnDemandReplicationRunResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartOnDemandReplicationRunRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopAppReplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopAppReplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopAppReplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopAppReplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TerminateApp",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "TerminateApp"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TerminateAppResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TerminateAppRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateApp",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateApp"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAppResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAppRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateReplicationJob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateReplicationJob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateReplicationJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateReplicationJobRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateAppResponse": {
            "type": "object",
            "properties": {
                "appSummary": {
                    "$ref": "#/$defs/AppSummary"
                },
                "serverGroups": {
                    "$ref": "#/$defs/ServerGroups"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "AppSummary": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "importedAppId": {
                    "$ref": "#/$defs/ImportedAppId"
                },
                "name": {
                    "$ref": "#/$defs/AppName"
                },
                "description": {
                    "$ref": "#/$defs/AppDescription"
                },
                "status": {
                    "$ref": "#/$defs/AppStatus"
                },
                "statusMessage": {
                    "$ref": "#/$defs/AppStatusMessage"
                },
                "replicationConfigurationStatus": {
                    "$ref": "#/$defs/AppReplicationConfigurationStatus"
                },
                "replicationStatus": {
                    "$ref": "#/$defs/AppReplicationStatus"
                },
                "replicationStatusMessage": {
                    "$ref": "#/$defs/AppReplicationStatusMessage"
                },
                "latestReplicationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "launchConfigurationStatus": {
                    "$ref": "#/$defs/AppLaunchConfigurationStatus"
                },
                "launchStatus": {
                    "$ref": "#/$defs/AppLaunchStatus"
                },
                "launchStatusMessage": {
                    "$ref": "#/$defs/AppLaunchStatusMessage"
                },
                "launchDetails": {
                    "$ref": "#/$defs/LaunchDetails"
                },
                "creationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "lastModified": {
                    "$ref": "#/$defs/Timestamp"
                },
                "roleName": {
                    "$ref": "#/$defs/RoleName"
                },
                "totalServerGroups": {
                    "$ref": "#/$defs/TotalServerGroups"
                },
                "totalServers": {
                    "$ref": "#/$defs/TotalServers"
                }
            }
        },
        "AppId": {
            "type": "string"
        },
        "ImportedAppId": {
            "type": "string"
        },
        "AppName": {
            "type": "string"
        },
        "AppDescription": {
            "type": "string"
        },
        "AppStatus": {
            "enum": [
                "Creating",
                "Active",
                "Updating",
                "Deleting",
                "Deleted",
                "DELETE_FAILED"
            ]
        },
        "AppStatusMessage": {
            "type": "string"
        },
        "AppReplicationConfigurationStatus": {
            "enum": [
                "NotConfigured",
                "Configured"
            ]
        },
        "AppReplicationStatus": {
            "enum": [
                "ReadyForConfiguration",
                "ConfigurationInProgress",
                "ConfigurationInvalid",
                "ReadyForReplication",
                "ValidationInProgress",
                "ReplicationPending",
                "ReplicationInProgress",
                "Replicated",
                "PartiallyReplicated",
                "DeltaReplicationInProgress",
                "DeltaReplicated",
                "DeltaReplicationFailed",
                "ReplicationFailed",
                "ReplicationStopping",
                "ReplicationStopFailed",
                "ReplicationStopped"
            ]
        },
        "AppReplicationStatusMessage": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "AppLaunchConfigurationStatus": {
            "enum": [
                "NotConfigured",
                "Configured"
            ]
        },
        "AppLaunchStatus": {
            "enum": [
                "ReadyForConfiguration",
                "ConfigurationInProgress",
                "ConfigurationInvalid",
                "ReadyForLaunch",
                "ValidationInProgress",
                "LaunchPending",
                "LaunchInProgress",
                "Launched",
                "PartiallyLaunched",
                "DeltaLaunchInProgress",
                "DeltaLaunchFailed",
                "LaunchFailed",
                "TerminateInProgress",
                "TerminateFailed",
                "Terminated"
            ]
        },
        "AppLaunchStatusMessage": {
            "type": "string"
        },
        "LaunchDetails": {
            "type": "object",
            "properties": {
                "latestLaunchTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "stackName": {
                    "$ref": "#/$defs/StackName"
                },
                "stackId": {
                    "$ref": "#/$defs/StackId"
                }
            }
        },
        "StackName": {
            "type": "string"
        },
        "StackId": {
            "type": "string"
        },
        "RoleName": {
            "type": "string"
        },
        "TotalServerGroups": {
            "type": "integer",
            "format": "int32"
        },
        "TotalServers": {
            "type": "integer",
            "format": "int32"
        },
        "ServerGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerGroup"
            }
        },
        "ServerGroup": {
            "type": "object",
            "properties": {
                "serverGroupId": {
                    "$ref": "#/$defs/ServerGroupId"
                },
                "name": {
                    "$ref": "#/$defs/ServerGroupName"
                },
                "serverList": {
                    "$ref": "#/$defs/ServerList"
                }
            }
        },
        "ServerGroupId": {
            "type": "string"
        },
        "ServerGroupName": {
            "type": "string"
        },
        "ServerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Server"
            }
        },
        "Server": {
            "type": "object",
            "properties": {
                "serverId": {
                    "$ref": "#/$defs/ServerId"
                },
                "serverType": {
                    "$ref": "#/$defs/ServerType"
                },
                "vmServer": {
                    "$ref": "#/$defs/VmServer"
                },
                "replicationJobId": {
                    "$ref": "#/$defs/ReplicationJobId"
                },
                "replicationJobTerminated": {
                    "$ref": "#/$defs/ReplicationJobTerminated"
                }
            }
        },
        "ServerId": {
            "type": "string"
        },
        "ServerType": {
            "enum": [
                "VirtualMachine"
            ]
        },
        "VmServer": {
            "type": "object",
            "properties": {
                "vmServerAddress": {
                    "$ref": "#/$defs/VmServerAddress"
                },
                "vmName": {
                    "$ref": "#/$defs/VmName"
                },
                "vmManagerName": {
                    "$ref": "#/$defs/VmManagerName"
                },
                "vmManagerType": {
                    "$ref": "#/$defs/VmManagerType"
                },
                "vmPath": {
                    "$ref": "#/$defs/VmPath"
                }
            }
        },
        "VmServerAddress": {
            "type": "object",
            "properties": {
                "vmManagerId": {
                    "$ref": "#/$defs/VmManagerId"
                },
                "vmId": {
                    "$ref": "#/$defs/VmId"
                }
            }
        },
        "VmManagerId": {
            "type": "string"
        },
        "VmId": {
            "type": "string"
        },
        "VmName": {
            "type": "string"
        },
        "VmManagerName": {
            "type": "string"
        },
        "VmManagerType": {
            "enum": [
                "vSphere",
                "scvmm",
                "hyperVManager"
            ]
        },
        "VmPath": {
            "type": "string"
        },
        "ReplicationJobId": {
            "type": "string"
        },
        "ReplicationJobTerminated": {
            "type": "boolean"
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateAppRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/AppName"
                },
                "description": {
                    "$ref": "#/$defs/AppDescription"
                },
                "roleName": {
                    "$ref": "#/$defs/RoleName"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "serverGroups": {
                    "$ref": "#/$defs/ServerGroups"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ClientToken": {
            "type": "string"
        },
        "CreateReplicationJobResponse": {
            "type": "object",
            "properties": {
                "replicationJobId": {
                    "$ref": "#/$defs/ReplicationJobId"
                }
            }
        },
        "CreateReplicationJobRequest": {
            "type": "object",
            "properties": {
                "serverId": {
                    "$ref": "#/$defs/ServerId"
                },
                "seedReplicationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "frequency": {
                    "$ref": "#/$defs/Frequency"
                },
                "runOnce": {
                    "$ref": "#/$defs/RunOnce"
                },
                "licenseType": {
                    "$ref": "#/$defs/LicenseType"
                },
                "roleName": {
                    "$ref": "#/$defs/RoleName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "numberOfRecentAmisToKeep": {
                    "$ref": "#/$defs/NumberOfRecentAmisToKeep"
                },
                "encrypted": {
                    "$ref": "#/$defs/Encrypted"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "Frequency": {
            "type": "integer",
            "format": "int32"
        },
        "RunOnce": {
            "type": "boolean"
        },
        "LicenseType": {
            "enum": [
                "AWS",
                "BYOL"
            ]
        },
        "Description": {
            "type": "string"
        },
        "NumberOfRecentAmisToKeep": {
            "type": "integer",
            "format": "int32"
        },
        "Encrypted": {
            "type": "boolean"
        },
        "KmsKeyId": {
            "type": "string"
        },
        "DeleteAppResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAppRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "forceStopAppReplication": {
                    "$ref": "#/$defs/ForceStopAppReplication"
                },
                "forceTerminateApp": {
                    "$ref": "#/$defs/ForceTerminateApp"
                }
            }
        },
        "ForceStopAppReplication": {
            "type": "boolean"
        },
        "ForceTerminateApp": {
            "type": "boolean"
        },
        "DeleteAppLaunchConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAppLaunchConfigurationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "DeleteAppReplicationConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAppReplicationConfigurationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "DeleteAppValidationConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteAppValidationConfigurationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppIdWithValidation"
                }
            }
        },
        "AppIdWithValidation": {
            "type": "string"
        },
        "DeleteReplicationJobResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteReplicationJobRequest": {
            "type": "object",
            "properties": {
                "replicationJobId": {
                    "$ref": "#/$defs/ReplicationJobId"
                }
            }
        },
        "DeleteServerCatalogResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteServerCatalogRequest": {
            "type": "object",
            "properties": {}
        },
        "DisassociateConnectorResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateConnectorRequest": {
            "type": "object",
            "properties": {
                "connectorId": {
                    "$ref": "#/$defs/ConnectorId"
                }
            }
        },
        "ConnectorId": {
            "type": "string"
        },
        "GenerateChangeSetResponse": {
            "type": "object",
            "properties": {
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "S3Location": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/S3BucketName"
                },
                "key": {
                    "$ref": "#/$defs/S3KeyName"
                }
            }
        },
        "S3BucketName": {
            "type": "string"
        },
        "S3KeyName": {
            "type": "string"
        },
        "GenerateChangeSetRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "changesetFormat": {
                    "$ref": "#/$defs/OutputFormat"
                }
            }
        },
        "OutputFormat": {
            "enum": [
                "JSON",
                "YAML"
            ]
        },
        "GenerateTemplateResponse": {
            "type": "object",
            "properties": {
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "GenerateTemplateRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "templateFormat": {
                    "$ref": "#/$defs/OutputFormat"
                }
            }
        },
        "GetAppResponse": {
            "type": "object",
            "properties": {
                "appSummary": {
                    "$ref": "#/$defs/AppSummary"
                },
                "serverGroups": {
                    "$ref": "#/$defs/ServerGroups"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "GetAppRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "GetAppLaunchConfigurationResponse": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "roleName": {
                    "$ref": "#/$defs/RoleName"
                },
                "autoLaunch": {
                    "$ref": "#/$defs/AutoLaunch"
                },
                "serverGroupLaunchConfigurations": {
                    "$ref": "#/$defs/ServerGroupLaunchConfigurations"
                }
            }
        },
        "AutoLaunch": {
            "type": "boolean"
        },
        "ServerGroupLaunchConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerGroupLaunchConfiguration"
            }
        },
        "ServerGroupLaunchConfiguration": {
            "type": "object",
            "properties": {
                "serverGroupId": {
                    "$ref": "#/$defs/ServerGroupId"
                },
                "launchOrder": {
                    "$ref": "#/$defs/LaunchOrder"
                },
                "serverLaunchConfigurations": {
                    "$ref": "#/$defs/ServerLaunchConfigurations"
                }
            }
        },
        "LaunchOrder": {
            "type": "integer",
            "format": "int32"
        },
        "ServerLaunchConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerLaunchConfiguration"
            }
        },
        "ServerLaunchConfiguration": {
            "type": "object",
            "properties": {
                "server": {
                    "$ref": "#/$defs/Server"
                },
                "logicalId": {
                    "$ref": "#/$defs/LogicalId"
                },
                "vpc": {
                    "$ref": "#/$defs/VPC"
                },
                "subnet": {
                    "$ref": "#/$defs/Subnet"
                },
                "securityGroup": {
                    "$ref": "#/$defs/SecurityGroup"
                },
                "ec2KeyName": {
                    "$ref": "#/$defs/EC2KeyName"
                },
                "userData": {
                    "$ref": "#/$defs/UserData"
                },
                "instanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "associatePublicIpAddress": {
                    "$ref": "#/$defs/AssociatePublicIpAddress"
                },
                "iamInstanceProfileName": {
                    "$ref": "#/$defs/RoleName"
                },
                "configureScript": {
                    "$ref": "#/$defs/S3Location"
                },
                "configureScriptType": {
                    "$ref": "#/$defs/ScriptType"
                }
            }
        },
        "LogicalId": {
            "type": "string"
        },
        "VPC": {
            "type": "string"
        },
        "Subnet": {
            "type": "string"
        },
        "SecurityGroup": {
            "type": "string"
        },
        "EC2KeyName": {
            "type": "string"
        },
        "UserData": {
            "type": "object",
            "properties": {
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "InstanceType": {
            "type": "string"
        },
        "AssociatePublicIpAddress": {
            "type": "boolean"
        },
        "ScriptType": {
            "enum": [
                "SHELL_SCRIPT",
                "POWERSHELL_SCRIPT"
            ]
        },
        "GetAppLaunchConfigurationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "GetAppReplicationConfigurationResponse": {
            "type": "object",
            "properties": {
                "serverGroupReplicationConfigurations": {
                    "$ref": "#/$defs/ServerGroupReplicationConfigurations"
                }
            }
        },
        "ServerGroupReplicationConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerGroupReplicationConfiguration"
            }
        },
        "ServerGroupReplicationConfiguration": {
            "type": "object",
            "properties": {
                "serverGroupId": {
                    "$ref": "#/$defs/ServerGroupId"
                },
                "serverReplicationConfigurations": {
                    "$ref": "#/$defs/ServerReplicationConfigurations"
                }
            }
        },
        "ServerReplicationConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerReplicationConfiguration"
            }
        },
        "ServerReplicationConfiguration": {
            "type": "object",
            "properties": {
                "server": {
                    "$ref": "#/$defs/Server"
                },
                "serverReplicationParameters": {
                    "$ref": "#/$defs/ServerReplicationParameters"
                }
            }
        },
        "ServerReplicationParameters": {
            "type": "object",
            "properties": {
                "seedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "frequency": {
                    "$ref": "#/$defs/Frequency"
                },
                "runOnce": {
                    "$ref": "#/$defs/RunOnce"
                },
                "licenseType": {
                    "$ref": "#/$defs/LicenseType"
                },
                "numberOfRecentAmisToKeep": {
                    "$ref": "#/$defs/NumberOfRecentAmisToKeep"
                },
                "encrypted": {
                    "$ref": "#/$defs/Encrypted"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "GetAppReplicationConfigurationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "GetAppValidationConfigurationResponse": {
            "type": "object",
            "properties": {
                "appValidationConfigurations": {
                    "$ref": "#/$defs/AppValidationConfigurations"
                },
                "serverGroupValidationConfigurations": {
                    "$ref": "#/$defs/ServerGroupValidationConfigurations"
                }
            }
        },
        "AppValidationConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AppValidationConfiguration"
            }
        },
        "AppValidationConfiguration": {
            "type": "object",
            "properties": {
                "validationId": {
                    "$ref": "#/$defs/ValidationId"
                },
                "name": {
                    "$ref": "#/$defs/NonEmptyStringWithMaxLen255"
                },
                "appValidationStrategy": {
                    "$ref": "#/$defs/AppValidationStrategy"
                },
                "ssmValidationParameters": {
                    "$ref": "#/$defs/SSMValidationParameters"
                }
            }
        },
        "ValidationId": {
            "type": "string"
        },
        "NonEmptyStringWithMaxLen255": {
            "type": "string"
        },
        "AppValidationStrategy": {
            "enum": [
                "SSM"
            ]
        },
        "SSMValidationParameters": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/Source"
                },
                "instanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "scriptType": {
                    "$ref": "#/$defs/ScriptType"
                },
                "command": {
                    "$ref": "#/$defs/Command"
                },
                "executionTimeoutSeconds": {
                    "$ref": "#/$defs/ExecutionTimeoutSeconds"
                },
                "outputS3BucketName": {
                    "$ref": "#/$defs/BucketName"
                }
            }
        },
        "Source": {
            "type": "object",
            "properties": {
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "InstanceId": {
            "type": "string"
        },
        "Command": {
            "type": "string"
        },
        "ExecutionTimeoutSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "BucketName": {
            "type": "string"
        },
        "ServerGroupValidationConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerGroupValidationConfiguration"
            }
        },
        "ServerGroupValidationConfiguration": {
            "type": "object",
            "properties": {
                "serverGroupId": {
                    "$ref": "#/$defs/ServerGroupId"
                },
                "serverValidationConfigurations": {
                    "$ref": "#/$defs/ServerValidationConfigurations"
                }
            }
        },
        "ServerValidationConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServerValidationConfiguration"
            }
        },
        "ServerValidationConfiguration": {
            "type": "object",
            "properties": {
                "server": {
                    "$ref": "#/$defs/Server"
                },
                "validationId": {
                    "$ref": "#/$defs/ValidationId"
                },
                "name": {
                    "$ref": "#/$defs/NonEmptyStringWithMaxLen255"
                },
                "serverValidationStrategy": {
                    "$ref": "#/$defs/ServerValidationStrategy"
                },
                "userDataValidationParameters": {
                    "$ref": "#/$defs/UserDataValidationParameters"
                }
            }
        },
        "ServerValidationStrategy": {
            "enum": [
                "USERDATA"
            ]
        },
        "UserDataValidationParameters": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/Source"
                },
                "scriptType": {
                    "$ref": "#/$defs/ScriptType"
                }
            }
        },
        "GetAppValidationConfigurationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppIdWithValidation"
                }
            }
        },
        "GetAppValidationOutputResponse": {
            "type": "object",
            "properties": {
                "validationOutputList": {
                    "$ref": "#/$defs/ValidationOutputList"
                }
            }
        },
        "ValidationOutputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValidationOutput"
            }
        },
        "ValidationOutput": {
            "type": "object",
            "properties": {
                "validationId": {
                    "$ref": "#/$defs/ValidationId"
                },
                "name": {
                    "$ref": "#/$defs/NonEmptyStringWithMaxLen255"
                },
                "status": {
                    "$ref": "#/$defs/ValidationStatus"
                },
                "statusMessage": {
                    "$ref": "#/$defs/ValidationStatusMessage"
                },
                "latestValidationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "appValidationOutput": {
                    "$ref": "#/$defs/AppValidationOutput"
                },
                "serverValidationOutput": {
                    "$ref": "#/$defs/ServerValidationOutput"
                }
            }
        },
        "ValidationStatus": {
            "enum": [
                "ReadyForValidation",
                "Pending",
                "InProgress",
                "Succeeded",
                "Failed"
            ]
        },
        "ValidationStatusMessage": {
            "type": "string"
        },
        "AppValidationOutput": {
            "type": "object",
            "properties": {
                "ssmOutput": {
                    "$ref": "#/$defs/SSMOutput"
                }
            }
        },
        "SSMOutput": {
            "type": "object",
            "properties": {
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "ServerValidationOutput": {
            "type": "object",
            "properties": {
                "server": {
                    "$ref": "#/$defs/Server"
                }
            }
        },
        "GetAppValidationOutputRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppIdWithValidation"
                }
            }
        },
        "GetConnectorsResponse": {
            "type": "object",
            "properties": {
                "connectorList": {
                    "$ref": "#/$defs/ConnectorList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ConnectorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Connector"
            }
        },
        "Connector": {
            "type": "object",
            "properties": {
                "connectorId": {
                    "$ref": "#/$defs/ConnectorId"
                },
                "version": {
                    "$ref": "#/$defs/ConnectorVersion"
                },
                "status": {
                    "$ref": "#/$defs/ConnectorStatus"
                },
                "capabilityList": {
                    "$ref": "#/$defs/ConnectorCapabilityList"
                },
                "vmManagerName": {
                    "$ref": "#/$defs/VmManagerName"
                },
                "vmManagerType": {
                    "$ref": "#/$defs/VmManagerType"
                },
                "vmManagerId": {
                    "$ref": "#/$defs/VmManagerId"
                },
                "ipAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "macAddress": {
                    "$ref": "#/$defs/MacAddress"
                },
                "associatedOn": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ConnectorVersion": {
            "type": "string"
        },
        "ConnectorStatus": {
            "enum": [
                "Healthy",
                "Unhealthy"
            ]
        },
        "ConnectorCapabilityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConnectorCapability"
            }
        },
        "ConnectorCapability": {
            "enum": [
                "vSphere",
                "scvmm",
                "hyperVManager",
                "snapshotBatching",
                "smsOptimized"
            ]
        },
        "IpAddress": {
            "type": "string"
        },
        "MacAddress": {
            "type": "string"
        },
        "NextToken": {
            "type": "string"
        },
        "GetConnectorsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetReplicationJobsResponse": {
            "type": "object",
            "properties": {
                "replicationJobList": {
                    "$ref": "#/$defs/ReplicationJobList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ReplicationJobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicationJob"
            }
        },
        "ReplicationJob": {
            "type": "object",
            "properties": {
                "replicationJobId": {
                    "$ref": "#/$defs/ReplicationJobId"
                },
                "serverId": {
                    "$ref": "#/$defs/ServerId"
                },
                "serverType": {
                    "$ref": "#/$defs/ServerType"
                },
                "vmServer": {
                    "$ref": "#/$defs/VmServer"
                },
                "seedReplicationTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "frequency": {
                    "$ref": "#/$defs/Frequency"
                },
                "runOnce": {
                    "$ref": "#/$defs/RunOnce"
                },
                "nextReplicationRunStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "licenseType": {
                    "$ref": "#/$defs/LicenseType"
                },
                "roleName": {
                    "$ref": "#/$defs/RoleName"
                },
                "latestAmiId": {
                    "$ref": "#/$defs/AmiId"
                },
                "state": {
                    "$ref": "#/$defs/ReplicationJobState"
                },
                "statusMessage": {
                    "$ref": "#/$defs/ReplicationJobStatusMessage"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "numberOfRecentAmisToKeep": {
                    "$ref": "#/$defs/NumberOfRecentAmisToKeep"
                },
                "encrypted": {
                    "$ref": "#/$defs/Encrypted"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "replicationRunList": {
                    "$ref": "#/$defs/ReplicationRunList"
                }
            }
        },
        "AmiId": {
            "type": "string"
        },
        "ReplicationJobState": {
            "enum": [
                "Pending",
                "Active",
                "Failed",
                "Deleting",
                "Deleted",
                "Completed",
                "PausedOnFailure",
                "Failing"
            ]
        },
        "ReplicationJobStatusMessage": {
            "type": "string"
        },
        "ReplicationRunList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplicationRun"
            }
        },
        "ReplicationRun": {
            "type": "object",
            "properties": {
                "replicationRunId": {
                    "$ref": "#/$defs/ReplicationRunId"
                },
                "state": {
                    "$ref": "#/$defs/ReplicationRunState"
                },
                "type": {
                    "$ref": "#/$defs/ReplicationRunType"
                },
                "stageDetails": {
                    "$ref": "#/$defs/ReplicationRunStageDetails"
                },
                "statusMessage": {
                    "$ref": "#/$defs/ReplicationRunStatusMessage"
                },
                "amiId": {
                    "$ref": "#/$defs/AmiId"
                },
                "scheduledStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "completedTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "encrypted": {
                    "$ref": "#/$defs/Encrypted"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "ReplicationRunId": {
            "type": "string"
        },
        "ReplicationRunState": {
            "enum": [
                "Pending",
                "Missed",
                "Active",
                "Failed",
                "Completed",
                "Deleting",
                "Deleted"
            ]
        },
        "ReplicationRunType": {
            "enum": [
                "OnDemand",
                "Automatic"
            ]
        },
        "ReplicationRunStageDetails": {
            "type": "object",
            "properties": {
                "stage": {
                    "$ref": "#/$defs/ReplicationRunStage"
                },
                "stageProgress": {
                    "$ref": "#/$defs/ReplicationRunStageProgress"
                }
            }
        },
        "ReplicationRunStage": {
            "type": "string"
        },
        "ReplicationRunStageProgress": {
            "type": "string"
        },
        "ReplicationRunStatusMessage": {
            "type": "string"
        },
        "GetReplicationJobsRequest": {
            "type": "object",
            "properties": {
                "replicationJobId": {
                    "$ref": "#/$defs/ReplicationJobId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "GetReplicationRunsResponse": {
            "type": "object",
            "properties": {
                "replicationJob": {
                    "$ref": "#/$defs/ReplicationJob"
                },
                "replicationRunList": {
                    "$ref": "#/$defs/ReplicationRunList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GetReplicationRunsRequest": {
            "type": "object",
            "properties": {
                "replicationJobId": {
                    "$ref": "#/$defs/ReplicationJobId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "GetServersResponse": {
            "type": "object",
            "properties": {
                "lastModifiedOn": {
                    "$ref": "#/$defs/Timestamp"
                },
                "serverCatalogStatus": {
                    "$ref": "#/$defs/ServerCatalogStatus"
                },
                "serverList": {
                    "$ref": "#/$defs/ServerList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ServerCatalogStatus": {
            "enum": [
                "NotImported",
                "Importing",
                "Available",
                "Deleted",
                "Expired"
            ]
        },
        "GetServersRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "vmServerAddressList": {
                    "$ref": "#/$defs/VmServerAddressList"
                }
            }
        },
        "VmServerAddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VmServerAddress"
            }
        },
        "ImportAppCatalogResponse": {
            "type": "object",
            "properties": {}
        },
        "ImportAppCatalogRequest": {
            "type": "object",
            "properties": {
                "roleName": {
                    "$ref": "#/$defs/RoleName"
                }
            }
        },
        "ImportServerCatalogResponse": {
            "type": "object",
            "properties": {}
        },
        "ImportServerCatalogRequest": {
            "type": "object",
            "properties": {}
        },
        "LaunchAppResponse": {
            "type": "object",
            "properties": {}
        },
        "LaunchAppRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "ListAppsResponse": {
            "type": "object",
            "properties": {
                "apps": {
                    "$ref": "#/$defs/Apps"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Apps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AppSummary"
            }
        },
        "ListAppsRequest": {
            "type": "object",
            "properties": {
                "appIds": {
                    "$ref": "#/$defs/AppIds"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "AppIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AppId"
            }
        },
        "NotifyAppValidationOutputResponse": {
            "type": "object",
            "properties": {}
        },
        "NotifyAppValidationOutputRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppIdWithValidation"
                },
                "notificationContext": {
                    "$ref": "#/$defs/NotificationContext"
                }
            }
        },
        "NotificationContext": {
            "type": "object",
            "properties": {
                "validationId": {
                    "$ref": "#/$defs/ValidationId"
                },
                "status": {
                    "$ref": "#/$defs/ValidationStatus"
                },
                "statusMessage": {
                    "$ref": "#/$defs/ValidationStatusMessage"
                }
            }
        },
        "PutAppLaunchConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAppLaunchConfigurationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "roleName": {
                    "$ref": "#/$defs/RoleName"
                },
                "autoLaunch": {
                    "$ref": "#/$defs/AutoLaunch"
                },
                "serverGroupLaunchConfigurations": {
                    "$ref": "#/$defs/ServerGroupLaunchConfigurations"
                }
            }
        },
        "PutAppReplicationConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAppReplicationConfigurationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "serverGroupReplicationConfigurations": {
                    "$ref": "#/$defs/ServerGroupReplicationConfigurations"
                }
            }
        },
        "PutAppValidationConfigurationResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAppValidationConfigurationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppIdWithValidation"
                },
                "appValidationConfigurations": {
                    "$ref": "#/$defs/AppValidationConfigurations"
                },
                "serverGroupValidationConfigurations": {
                    "$ref": "#/$defs/ServerGroupValidationConfigurations"
                }
            }
        },
        "StartAppReplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "StartAppReplicationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "StartOnDemandAppReplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "StartOnDemandAppReplicationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "StartOnDemandReplicationRunResponse": {
            "type": "object",
            "properties": {
                "replicationRunId": {
                    "$ref": "#/$defs/ReplicationRunId"
                }
            }
        },
        "StartOnDemandReplicationRunRequest": {
            "type": "object",
            "properties": {
                "replicationJobId": {
                    "$ref": "#/$defs/ReplicationJobId"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "StopAppReplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "StopAppReplicationRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "TerminateAppResponse": {
            "type": "object",
            "properties": {}
        },
        "TerminateAppRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                }
            }
        },
        "UpdateAppResponse": {
            "type": "object",
            "properties": {
                "appSummary": {
                    "$ref": "#/$defs/AppSummary"
                },
                "serverGroups": {
                    "$ref": "#/$defs/ServerGroups"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UpdateAppRequest": {
            "type": "object",
            "properties": {
                "appId": {
                    "$ref": "#/$defs/AppId"
                },
                "name": {
                    "$ref": "#/$defs/AppName"
                },
                "description": {
                    "$ref": "#/$defs/AppDescription"
                },
                "roleName": {
                    "$ref": "#/$defs/RoleName"
                },
                "serverGroups": {
                    "$ref": "#/$defs/ServerGroups"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UpdateReplicationJobResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateReplicationJobRequest": {
            "type": "object",
            "properties": {
                "replicationJobId": {
                    "$ref": "#/$defs/ReplicationJobId"
                },
                "frequency": {
                    "$ref": "#/$defs/Frequency"
                },
                "nextReplicationRunStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "licenseType": {
                    "$ref": "#/$defs/LicenseType"
                },
                "roleName": {
                    "$ref": "#/$defs/RoleName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "numberOfRecentAmisToKeep": {
                    "$ref": "#/$defs/NumberOfRecentAmisToKeep"
                },
                "encrypted": {
                    "$ref": "#/$defs/Encrypted"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "type": "tree",
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "type": "tree",
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                                    "type": "error"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": {
                                            "ref": "Endpoint"
                                        },
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ]
                        }
                    ]
                },
                {
                    "conditions": [],
                    "type": "tree",
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ]
                                }
                            ],
                            "type": "tree",
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "aws.partition",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                }
                                            ],
                                            "assign": "PartitionResult"
                                        }
                                    ],
                                    "type": "tree",
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "type": "tree",
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "type": "tree",
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "type": "tree",
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://sms-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                                    "type": "error"
                                                }
                                            ]
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseFIPS"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "type": "tree",
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsFIPS"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "type": "tree",
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "type": "tree",
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://sms-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                    "type": "error"
                                                }
                                            ]
                                        },
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "ref": "UseDualStack"
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "type": "tree",
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "booleanEquals",
                                                            "argv": [
                                                                true,
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "supportsDualStack"
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "type": "tree",
                                                    "rules": [
                                                        {
                                                            "conditions": [],
                                                            "type": "tree",
                                                            "rules": [
                                                                {
                                                                    "conditions": [],
                                                                    "endpoint": {
                                                                        "url": "https://sms.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                        "properties": {},
                                                                        "headers": {}
                                                                    },
                                                                    "type": "endpoint"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                    "type": "error"
                                                }
                                            ]
                                        },
                                        {
                                            "conditions": [],
                                            "type": "tree",
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://sms.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "conditions": [],
                            "error": "Invalid Configuration: Missing Region",
                            "type": "error"
                        }
                    ]
                }
            ]
        }
    }
}