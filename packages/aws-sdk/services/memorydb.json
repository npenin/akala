{
    "name": "memorydb",
    "commands": [
        {
            "name": "BatchUpdateCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.BatchUpdateCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchUpdateClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchUpdateClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CopySnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.CopySnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CopySnapshotResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CopySnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateACL",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.CreateACL"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateACLResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateACLRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.CreateCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateMultiRegionCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.CreateMultiRegionCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMultiRegionClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateMultiRegionClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.CreateParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateParameterGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateParameterGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.CreateSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSnapshotResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSubnetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.CreateSubnetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSubnetGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSubnetGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.CreateUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteACL",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DeleteACL"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteACLResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteACLRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DeleteCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteMultiRegionCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DeleteMultiRegionCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteMultiRegionClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteMultiRegionClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DeleteParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteParameterGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteParameterGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DeleteSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSnapshotResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSubnetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DeleteSubnetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSubnetGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSubnetGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DeleteUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteUserRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeACLs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeACLs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeACLsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeACLsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeClusters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeClusters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClustersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClustersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEngineVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeEngineVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEngineVersionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEngineVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEvents",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeEvents"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEventsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEventsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeMultiRegionClusters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeMultiRegionClusters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMultiRegionClustersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMultiRegionClustersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeParameterGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeParameterGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeParameterGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeParameterGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeParameters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeParameters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeParametersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeParametersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservedNodes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeReservedNodes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservedNodesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservedNodesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservedNodesOfferings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeReservedNodesOfferings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservedNodesOfferingsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservedNodesOfferingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeServiceUpdates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeServiceUpdates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeServiceUpdatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeServiceUpdatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeSnapshots"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSnapshotsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSnapshotsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSubnetGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeSubnetGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSubnetGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSubnetGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeUsers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.DescribeUsers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeUsersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeUsersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "FailoverShard",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.FailoverShard"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/FailoverShardResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/FailoverShardRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAllowedMultiRegionClusterUpdates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.ListAllowedMultiRegionClusterUpdates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAllowedMultiRegionClusterUpdatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAllowedMultiRegionClusterUpdatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAllowedNodeTypeUpdates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.ListAllowedNodeTypeUpdates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAllowedNodeTypeUpdatesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAllowedNodeTypeUpdatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.ListTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PurchaseReservedNodesOffering",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.PurchaseReservedNodesOffering"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseReservedNodesOfferingResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PurchaseReservedNodesOfferingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.ResetParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetParameterGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetParameterGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateACL",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.UpdateACL"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateACLResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateACLRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.UpdateCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateMultiRegionCluster",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.UpdateMultiRegionCluster"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateMultiRegionClusterResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateMultiRegionClusterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateParameterGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.UpdateParameterGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateParameterGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateParameterGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSubnetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.UpdateSubnetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSubnetGroupResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSubnetGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateUser",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonMemoryDB.UpdateUser"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateUserRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchUpdateClusterResponse": {
            "type": "object",
            "properties": {
                "ProcessedClusters": {
                    "$ref": "#/$defs/ClusterList"
                },
                "UnprocessedClusters": {
                    "$ref": "#/$defs/UnprocessedClusterList"
                }
            }
        },
        "ClusterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Cluster"
            }
        },
        "Cluster": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "PendingUpdates": {
                    "$ref": "#/$defs/ClusterPendingUpdates"
                },
                "MultiRegionClusterName": {
                    "$ref": "#/$defs/String"
                },
                "NumberOfShards": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Shards": {
                    "$ref": "#/$defs/ShardList"
                },
                "AvailabilityMode": {
                    "$ref": "#/$defs/AZStatus"
                },
                "ClusterEndpoint": {
                    "$ref": "#/$defs/Endpoint"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "EnginePatchVersion": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroupStatus": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroupMembershipList"
                },
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "TLSEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                },
                "SnsTopicArn": {
                    "$ref": "#/$defs/String"
                },
                "SnsTopicStatus": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "MaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "ACLName": {
                    "$ref": "#/$defs/ACLName"
                },
                "AutoMinorVersionUpgrade": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "DataTiering": {
                    "$ref": "#/$defs/DataTieringStatus"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "ClusterPendingUpdates": {
            "type": "object",
            "properties": {
                "Resharding": {
                    "$ref": "#/$defs/ReshardingStatus"
                },
                "ACLs": {
                    "$ref": "#/$defs/ACLsUpdateStatus"
                },
                "ServiceUpdates": {
                    "$ref": "#/$defs/PendingModifiedServiceUpdateList"
                }
            }
        },
        "ReshardingStatus": {
            "type": "object",
            "properties": {
                "SlotMigration": {
                    "$ref": "#/$defs/SlotMigration"
                }
            }
        },
        "SlotMigration": {
            "type": "object",
            "properties": {
                "ProgressPercentage": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "ACLsUpdateStatus": {
            "type": "object",
            "properties": {
                "ACLToApply": {
                    "$ref": "#/$defs/ACLName"
                }
            }
        },
        "ACLName": {
            "type": "string"
        },
        "PendingModifiedServiceUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PendingModifiedServiceUpdate"
            }
        },
        "PendingModifiedServiceUpdate": {
            "type": "object",
            "properties": {
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ServiceUpdateStatus"
                }
            }
        },
        "ServiceUpdateStatus": {
            "enum": [
                "NOT_APPLIED",
                "IN_PROGRESS",
                "COMPLETE",
                "SCHEDULED"
            ]
        },
        "IntegerOptional": {
            "type": "integer",
            "format": "int32"
        },
        "ShardList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Shard"
            }
        },
        "Shard": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "Slots": {
                    "$ref": "#/$defs/String"
                },
                "Nodes": {
                    "$ref": "#/$defs/NodeList"
                },
                "NumberOfNodes": {
                    "$ref": "#/$defs/IntegerOptional"
                }
            }
        },
        "NodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Node"
            }
        },
        "Node": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "CreateTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "Endpoint": {
                    "$ref": "#/$defs/Endpoint"
                }
            }
        },
        "TStamp": {
            "type": "string",
            "format": "date-time"
        },
        "Endpoint": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "AZStatus": {
            "enum": [
                "SingleAZ",
                "MultiAZ"
            ]
        },
        "SecurityGroupMembershipList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupMembership"
            }
        },
        "SecurityGroupMembership": {
            "type": "object",
            "properties": {
                "SecurityGroupId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BooleanOptional": {
            "type": "boolean"
        },
        "DataTieringStatus": {
            "enum": [
                "TRUE",
                "FALSE"
            ]
        },
        "UnprocessedClusterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnprocessedCluster"
            }
        },
        "UnprocessedCluster": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "ErrorType": {
                    "$ref": "#/$defs/String"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BatchUpdateClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterNames": {
                    "$ref": "#/$defs/ClusterNameList"
                },
                "ServiceUpdate": {
                    "$ref": "#/$defs/ServiceUpdateRequest"
                }
            }
        },
        "ClusterNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ServiceUpdateRequest": {
            "type": "object",
            "properties": {
                "ServiceUpdateNameToApply": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CopySnapshotResponse": {
            "type": "object",
            "properties": {
                "Snapshot": {
                    "$ref": "#/$defs/Snapshot"
                }
            }
        },
        "Snapshot": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                },
                "ClusterConfiguration": {
                    "$ref": "#/$defs/ClusterConfiguration"
                },
                "DataTiering": {
                    "$ref": "#/$defs/DataTieringStatus"
                }
            }
        },
        "ClusterConfiguration": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "MaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "TopicArn": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "NumShards": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Shards": {
                    "$ref": "#/$defs/ShardDetails"
                },
                "MultiRegionParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "MultiRegionClusterName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ShardDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ShardDetail"
            }
        },
        "ShardDetail": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Configuration": {
                    "$ref": "#/$defs/ShardConfiguration"
                },
                "Size": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotCreationTime": {
                    "$ref": "#/$defs/TStamp"
                }
            }
        },
        "ShardConfiguration": {
            "type": "object",
            "properties": {
                "Slots": {
                    "$ref": "#/$defs/String"
                },
                "ReplicaCount": {
                    "$ref": "#/$defs/IntegerOptional"
                }
            }
        },
        "CopySnapshotRequest": {
            "type": "object",
            "properties": {
                "SourceSnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "TargetSnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "TargetBucket": {
                    "$ref": "#/$defs/TargetBucket"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TargetBucket": {
            "type": "string"
        },
        "KmsKeyId": {
            "type": "string"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateACLResponse": {
            "type": "object",
            "properties": {
                "ACL": {
                    "$ref": "#/$defs/ACL"
                }
            }
        },
        "ACL": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "UserNames": {
                    "$ref": "#/$defs/UserNameList"
                },
                "MinimumEngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "PendingChanges": {
                    "$ref": "#/$defs/ACLPendingChanges"
                },
                "Clusters": {
                    "$ref": "#/$defs/ACLClusterNameList"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UserNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserName"
            }
        },
        "UserName": {
            "type": "string"
        },
        "ACLPendingChanges": {
            "type": "object",
            "properties": {
                "UserNamesToRemove": {
                    "$ref": "#/$defs/UserNameList"
                },
                "UserNamesToAdd": {
                    "$ref": "#/$defs/UserNameList"
                }
            }
        },
        "ACLClusterNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CreateACLRequest": {
            "type": "object",
            "properties": {
                "ACLName": {
                    "$ref": "#/$defs/String"
                },
                "UserNames": {
                    "$ref": "#/$defs/UserNameListInput"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UserNameListInput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserName"
            }
        },
        "CreateClusterResponse": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "CreateClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "MultiRegionClusterName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "NumShards": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NumReplicasPerShard": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdsList"
                },
                "MaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "Port": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "SnsTopicArn": {
                    "$ref": "#/$defs/String"
                },
                "TLSEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotArns": {
                    "$ref": "#/$defs/SnapshotArnsList"
                },
                "SnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "ACLName": {
                    "$ref": "#/$defs/ACLName"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "AutoMinorVersionUpgrade": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "DataTiering": {
                    "$ref": "#/$defs/BooleanOptional"
                }
            }
        },
        "SecurityGroupIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "SnapshotArnsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CreateMultiRegionClusterResponse": {
            "type": "object",
            "properties": {
                "MultiRegionCluster": {
                    "$ref": "#/$defs/MultiRegionCluster"
                }
            }
        },
        "MultiRegionCluster": {
            "type": "object",
            "properties": {
                "MultiRegionClusterName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "NumberOfShards": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Clusters": {
                    "$ref": "#/$defs/RegionalClusterList"
                },
                "MultiRegionParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "TLSEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RegionalClusterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RegionalCluster"
            }
        },
        "RegionalCluster": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "Region": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateMultiRegionClusterRequest": {
            "type": "object",
            "properties": {
                "MultiRegionClusterNameSuffix": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "MultiRegionParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "NumShards": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "TLSEnabled": {
                    "$ref": "#/$defs/BooleanOptional"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateParameterGroupResponse": {
            "type": "object",
            "properties": {
                "ParameterGroup": {
                    "$ref": "#/$defs/ParameterGroup"
                }
            }
        },
        "ParameterGroup": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Family": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateParameterGroupRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Family": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateSnapshotResponse": {
            "type": "object",
            "properties": {
                "Snapshot": {
                    "$ref": "#/$defs/Snapshot"
                }
            }
        },
        "CreateSnapshotRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateSubnetGroupResponse": {
            "type": "object",
            "properties": {
                "SubnetGroup": {
                    "$ref": "#/$defs/SubnetGroup"
                }
            }
        },
        "SubnetGroup": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "Subnets": {
                    "$ref": "#/$defs/SubnetList"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubnetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Subnet"
            }
        },
        "Subnet": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZone"
                }
            }
        },
        "AvailabilityZone": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateSubnetGroupRequest": {
            "type": "object",
            "properties": {
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdentifierList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "SubnetIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CreateUserResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "AccessString": {
                    "$ref": "#/$defs/String"
                },
                "ACLNames": {
                    "$ref": "#/$defs/ACLNameList"
                },
                "MinimumEngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "Authentication": {
                    "$ref": "#/$defs/Authentication"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ACLNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ACLName"
            }
        },
        "Authentication": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/AuthenticationType"
                },
                "PasswordCount": {
                    "$ref": "#/$defs/IntegerOptional"
                }
            }
        },
        "AuthenticationType": {
            "enum": [
                "PASSWORD",
                "NO_PASSWORD",
                "IAM"
            ]
        },
        "CreateUserRequest": {
            "type": "object",
            "properties": {
                "UserName": {
                    "$ref": "#/$defs/UserName"
                },
                "AuthenticationMode": {
                    "$ref": "#/$defs/AuthenticationMode"
                },
                "AccessString": {
                    "$ref": "#/$defs/AccessString"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "AuthenticationMode": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/InputAuthenticationType"
                },
                "Passwords": {
                    "$ref": "#/$defs/PasswordListInput"
                }
            }
        },
        "InputAuthenticationType": {
            "enum": [
                "PASSWORD",
                "IAM"
            ]
        },
        "PasswordListInput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "AccessString": {
            "type": "string"
        },
        "DeleteACLResponse": {
            "type": "object",
            "properties": {
                "ACL": {
                    "$ref": "#/$defs/ACL"
                }
            }
        },
        "DeleteACLRequest": {
            "type": "object",
            "properties": {
                "ACLName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteClusterResponse": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "DeleteClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "MultiRegionClusterName": {
                    "$ref": "#/$defs/String"
                },
                "FinalSnapshotName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteMultiRegionClusterResponse": {
            "type": "object",
            "properties": {
                "MultiRegionCluster": {
                    "$ref": "#/$defs/MultiRegionCluster"
                }
            }
        },
        "DeleteMultiRegionClusterRequest": {
            "type": "object",
            "properties": {
                "MultiRegionClusterName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteParameterGroupResponse": {
            "type": "object",
            "properties": {
                "ParameterGroup": {
                    "$ref": "#/$defs/ParameterGroup"
                }
            }
        },
        "DeleteParameterGroupRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteSnapshotResponse": {
            "type": "object",
            "properties": {
                "Snapshot": {
                    "$ref": "#/$defs/Snapshot"
                }
            }
        },
        "DeleteSnapshotRequest": {
            "type": "object",
            "properties": {
                "SnapshotName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteSubnetGroupResponse": {
            "type": "object",
            "properties": {
                "SubnetGroup": {
                    "$ref": "#/$defs/SubnetGroup"
                }
            }
        },
        "DeleteSubnetGroupRequest": {
            "type": "object",
            "properties": {
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteUserResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        },
        "DeleteUserRequest": {
            "type": "object",
            "properties": {
                "UserName": {
                    "$ref": "#/$defs/UserName"
                }
            }
        },
        "DescribeACLsResponse": {
            "type": "object",
            "properties": {
                "ACLs": {
                    "$ref": "#/$defs/ACLList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ACLList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ACL"
            }
        },
        "DescribeACLsRequest": {
            "type": "object",
            "properties": {
                "ACLName": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeClustersResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Clusters": {
                    "$ref": "#/$defs/ClusterList"
                }
            }
        },
        "DescribeClustersRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ShowShardDetails": {
                    "$ref": "#/$defs/BooleanOptional"
                }
            }
        },
        "DescribeEngineVersionsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersions": {
                    "$ref": "#/$defs/EngineVersionInfoList"
                }
            }
        },
        "EngineVersionInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EngineVersionInfo"
            }
        },
        "EngineVersionInfo": {
            "type": "object",
            "properties": {
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "EnginePatchVersion": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroupFamily": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeEngineVersionsRequest": {
            "type": "object",
            "properties": {
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroupFamily": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DefaultOnly": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "DescribeEventsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Events": {
                    "$ref": "#/$defs/EventList"
                }
            }
        },
        "EventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Event"
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "SourceName": {
                    "$ref": "#/$defs/String"
                },
                "SourceType": {
                    "$ref": "#/$defs/SourceType"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                },
                "Date": {
                    "$ref": "#/$defs/TStamp"
                }
            }
        },
        "SourceType": {
            "enum": [
                "node",
                "parameter_group",
                "subnet_group",
                "cluster",
                "user",
                "acl"
            ]
        },
        "DescribeEventsRequest": {
            "type": "object",
            "properties": {
                "SourceName": {
                    "$ref": "#/$defs/String"
                },
                "SourceType": {
                    "$ref": "#/$defs/SourceType"
                },
                "StartTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "Duration": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeMultiRegionClustersResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MultiRegionClusters": {
                    "$ref": "#/$defs/MultiRegionClusterList"
                }
            }
        },
        "MultiRegionClusterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MultiRegionCluster"
            }
        },
        "DescribeMultiRegionClustersRequest": {
            "type": "object",
            "properties": {
                "MultiRegionClusterName": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ShowClusterDetails": {
                    "$ref": "#/$defs/BooleanOptional"
                }
            }
        },
        "DescribeParameterGroupsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroups": {
                    "$ref": "#/$defs/ParameterGroupList"
                }
            }
        },
        "ParameterGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ParameterGroup"
            }
        },
        "DescribeParameterGroupsRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeParametersResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Parameters": {
                    "$ref": "#/$defs/ParametersList"
                }
            }
        },
        "ParametersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Parameter"
            }
        },
        "Parameter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DataType": {
                    "$ref": "#/$defs/String"
                },
                "AllowedValues": {
                    "$ref": "#/$defs/String"
                },
                "MinimumEngineVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeParametersRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeReservedNodesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ReservedNodes": {
                    "$ref": "#/$defs/ReservedNodeList"
                }
            }
        },
        "ReservedNodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedNode"
            }
        },
        "ReservedNode": {
            "type": "object",
            "properties": {
                "ReservationId": {
                    "$ref": "#/$defs/String"
                },
                "ReservedNodesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "StartTime": {
                    "$ref": "#/$defs/TStamp"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/Double"
                },
                "NodeCount": {
                    "$ref": "#/$defs/Integer"
                },
                "OfferingType": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "RecurringCharges": {
                    "$ref": "#/$defs/RecurringChargeList"
                },
                "ARN": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RecurringChargeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecurringCharge"
            }
        },
        "RecurringCharge": {
            "type": "object",
            "properties": {
                "RecurringChargeAmount": {
                    "$ref": "#/$defs/Double"
                },
                "RecurringChargeFrequency": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeReservedNodesRequest": {
            "type": "object",
            "properties": {
                "ReservationId": {
                    "$ref": "#/$defs/String"
                },
                "ReservedNodesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Duration": {
                    "$ref": "#/$defs/String"
                },
                "OfferingType": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeReservedNodesOfferingsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ReservedNodesOfferings": {
                    "$ref": "#/$defs/ReservedNodesOfferingList"
                }
            }
        },
        "ReservedNodesOfferingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedNodesOffering"
            }
        },
        "ReservedNodesOffering": {
            "type": "object",
            "properties": {
                "ReservedNodesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/Double"
                },
                "OfferingType": {
                    "$ref": "#/$defs/String"
                },
                "RecurringCharges": {
                    "$ref": "#/$defs/RecurringChargeList"
                }
            }
        },
        "DescribeReservedNodesOfferingsRequest": {
            "type": "object",
            "properties": {
                "ReservedNodesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Duration": {
                    "$ref": "#/$defs/String"
                },
                "OfferingType": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeServiceUpdatesResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdates": {
                    "$ref": "#/$defs/ServiceUpdateList"
                }
            }
        },
        "ServiceUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceUpdate"
            }
        },
        "ServiceUpdate": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                },
                "ReleaseDate": {
                    "$ref": "#/$defs/TStamp"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ServiceUpdateStatus"
                },
                "Type": {
                    "$ref": "#/$defs/ServiceUpdateType"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "NodesUpdated": {
                    "$ref": "#/$defs/String"
                },
                "AutoUpdateStartDate": {
                    "$ref": "#/$defs/TStamp"
                }
            }
        },
        "ServiceUpdateType": {
            "enum": [
                "SECURITY_UPDATE"
            ]
        },
        "DescribeServiceUpdatesRequest": {
            "type": "object",
            "properties": {
                "ServiceUpdateName": {
                    "$ref": "#/$defs/String"
                },
                "ClusterNames": {
                    "$ref": "#/$defs/ClusterNameList"
                },
                "Status": {
                    "$ref": "#/$defs/ServiceUpdateStatusList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceUpdateStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceUpdateStatus"
            }
        },
        "DescribeSnapshotsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Snapshots": {
                    "$ref": "#/$defs/SnapshotList"
                }
            }
        },
        "SnapshotList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Snapshot"
            }
        },
        "DescribeSnapshotsRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotName": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "ShowDetail": {
                    "$ref": "#/$defs/BooleanOptional"
                }
            }
        },
        "DescribeSubnetGroupsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "SubnetGroups": {
                    "$ref": "#/$defs/SubnetGroupList"
                }
            }
        },
        "SubnetGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetGroup"
            }
        },
        "DescribeSubnetGroupsRequest": {
            "type": "object",
            "properties": {
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeUsersResponse": {
            "type": "object",
            "properties": {
                "Users": {
                    "$ref": "#/$defs/UserList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UserList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/User"
            }
        },
        "DescribeUsersRequest": {
            "type": "object",
            "properties": {
                "UserName": {
                    "$ref": "#/$defs/UserName"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FilterName"
                },
                "Values": {
                    "$ref": "#/$defs/FilterValueList"
                }
            }
        },
        "FilterName": {
            "type": "string"
        },
        "FilterValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterValue"
            }
        },
        "FilterValue": {
            "type": "string"
        },
        "FailoverShardResponse": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "FailoverShardRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "ShardName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListAllowedMultiRegionClusterUpdatesResponse": {
            "type": "object",
            "properties": {
                "ScaleUpNodeTypes": {
                    "$ref": "#/$defs/NodeTypeList"
                },
                "ScaleDownNodeTypes": {
                    "$ref": "#/$defs/NodeTypeList"
                }
            }
        },
        "NodeTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ListAllowedMultiRegionClusterUpdatesRequest": {
            "type": "object",
            "properties": {
                "MultiRegionClusterName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListAllowedNodeTypeUpdatesResponse": {
            "type": "object",
            "properties": {
                "ScaleUpNodeTypes": {
                    "$ref": "#/$defs/NodeTypeList"
                },
                "ScaleDownNodeTypes": {
                    "$ref": "#/$defs/NodeTypeList"
                }
            }
        },
        "ListAllowedNodeTypeUpdatesRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListTagsResponse": {
            "type": "object",
            "properties": {
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PurchaseReservedNodesOfferingResponse": {
            "type": "object",
            "properties": {
                "ReservedNode": {
                    "$ref": "#/$defs/ReservedNode"
                }
            }
        },
        "PurchaseReservedNodesOfferingRequest": {
            "type": "object",
            "properties": {
                "ReservedNodesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "ReservationId": {
                    "$ref": "#/$defs/String"
                },
                "NodeCount": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ResetParameterGroupResponse": {
            "type": "object",
            "properties": {
                "ParameterGroup": {
                    "$ref": "#/$defs/ParameterGroup"
                }
            }
        },
        "ResetParameterGroupRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "AllParameters": {
                    "$ref": "#/$defs/Boolean"
                },
                "ParameterNames": {
                    "$ref": "#/$defs/ParameterNameList"
                }
            }
        },
        "ParameterNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/String"
                },
                "TagKeys": {
                    "$ref": "#/$defs/KeyList"
                }
            }
        },
        "KeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "UpdateACLResponse": {
            "type": "object",
            "properties": {
                "ACL": {
                    "$ref": "#/$defs/ACL"
                }
            }
        },
        "UpdateACLRequest": {
            "type": "object",
            "properties": {
                "ACLName": {
                    "$ref": "#/$defs/String"
                },
                "UserNamesToAdd": {
                    "$ref": "#/$defs/UserNameListInput"
                },
                "UserNamesToRemove": {
                    "$ref": "#/$defs/UserNameListInput"
                }
            }
        },
        "UpdateClusterResponse": {
            "type": "object",
            "properties": {
                "Cluster": {
                    "$ref": "#/$defs/Cluster"
                }
            }
        },
        "UpdateClusterRequest": {
            "type": "object",
            "properties": {
                "ClusterName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdsList"
                },
                "MaintenanceWindow": {
                    "$ref": "#/$defs/String"
                },
                "SnsTopicArn": {
                    "$ref": "#/$defs/String"
                },
                "SnsTopicStatus": {
                    "$ref": "#/$defs/String"
                },
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotWindow": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotRetentionLimit": {
                    "$ref": "#/$defs/IntegerOptional"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Engine": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "ReplicaConfiguration": {
                    "$ref": "#/$defs/ReplicaConfigurationRequest"
                },
                "ShardConfiguration": {
                    "$ref": "#/$defs/ShardConfigurationRequest"
                },
                "ACLName": {
                    "$ref": "#/$defs/ACLName"
                }
            }
        },
        "ReplicaConfigurationRequest": {
            "type": "object",
            "properties": {
                "ReplicaCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ShardConfigurationRequest": {
            "type": "object",
            "properties": {
                "ShardCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "UpdateMultiRegionClusterResponse": {
            "type": "object",
            "properties": {
                "MultiRegionCluster": {
                    "$ref": "#/$defs/MultiRegionCluster"
                }
            }
        },
        "UpdateMultiRegionClusterRequest": {
            "type": "object",
            "properties": {
                "MultiRegionClusterName": {
                    "$ref": "#/$defs/String"
                },
                "NodeType": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "EngineVersion": {
                    "$ref": "#/$defs/String"
                },
                "ShardConfiguration": {
                    "$ref": "#/$defs/ShardConfigurationRequest"
                },
                "MultiRegionParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "UpdateStrategy": {
                    "$ref": "#/$defs/UpdateStrategy"
                }
            }
        },
        "UpdateStrategy": {
            "enum": [
                "COORDINATED",
                "UNCOORDINATED"
            ]
        },
        "UpdateParameterGroupResponse": {
            "type": "object",
            "properties": {
                "ParameterGroup": {
                    "$ref": "#/$defs/ParameterGroup"
                }
            }
        },
        "UpdateParameterGroupRequest": {
            "type": "object",
            "properties": {
                "ParameterGroupName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterNameValues": {
                    "$ref": "#/$defs/ParameterNameValueList"
                }
            }
        },
        "ParameterNameValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ParameterNameValue"
            }
        },
        "ParameterNameValue": {
            "type": "object",
            "properties": {
                "ParameterName": {
                    "$ref": "#/$defs/String"
                },
                "ParameterValue": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateSubnetGroupResponse": {
            "type": "object",
            "properties": {
                "SubnetGroup": {
                    "$ref": "#/$defs/SubnetGroup"
                }
            }
        },
        "UpdateSubnetGroupRequest": {
            "type": "object",
            "properties": {
                "SubnetGroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdentifierList"
                }
            }
        },
        "UpdateUserResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        },
        "UpdateUserRequest": {
            "type": "object",
            "properties": {
                "UserName": {
                    "$ref": "#/$defs/UserName"
                },
                "AuthenticationMode": {
                    "$ref": "#/$defs/AuthenticationMode"
                },
                "AccessString": {
                    "$ref": "#/$defs/AccessString"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://memory-db-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://memory-db-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://memory-db.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                {
                                                    "ref": "Region"
                                                },
                                                "fips"
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://memory-db-fips.us-west-1.amazonaws.com",
                                        "properties": {
                                            "authSchemes": [
                                                {
                                                    "name": "sigv4",
                                                    "signingName": "memorydb",
                                                    "signingRegion": "us-west-1"
                                                }
                                            ]
                                        },
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://memory-db.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}