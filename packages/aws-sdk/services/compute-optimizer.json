{
    "name": "compute-optimizer",
    "commands": [
        {
            "name": "DeleteRecommendationPreferences",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteRecommendationPreferences"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRecommendationPreferencesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRecommendationPreferencesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeRecommendationExportJobs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeRecommendationExportJobs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRecommendationExportJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRecommendationExportJobsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportAutoScalingGroupRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportAutoScalingGroupRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportAutoScalingGroupRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportAutoScalingGroupRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportEBSVolumeRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportEBSVolumeRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportEBSVolumeRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportEBSVolumeRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportEC2InstanceRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportEC2InstanceRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportEC2InstanceRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportEC2InstanceRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportECSServiceRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportECSServiceRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportECSServiceRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportECSServiceRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportLambdaFunctionRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportLambdaFunctionRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportLambdaFunctionRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportLambdaFunctionRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportLicenseRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportLicenseRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportLicenseRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportLicenseRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportRDSDatabaseRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportRDSDatabaseRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportRDSDatabaseRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportRDSDatabaseRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAutoScalingGroupRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetAutoScalingGroupRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAutoScalingGroupRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAutoScalingGroupRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEBSVolumeRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetEBSVolumeRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEBSVolumeRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEBSVolumeRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEC2InstanceRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetEC2InstanceRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEC2InstanceRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEC2InstanceRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEC2RecommendationProjectedMetrics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetEC2RecommendationProjectedMetrics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEC2RecommendationProjectedMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEC2RecommendationProjectedMetricsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetECSServiceRecommendationProjectedMetrics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetECSServiceRecommendationProjectedMetrics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetECSServiceRecommendationProjectedMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetECSServiceRecommendationProjectedMetricsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetECSServiceRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetECSServiceRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetECSServiceRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetECSServiceRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEffectiveRecommendationPreferences",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetEffectiveRecommendationPreferences"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEffectiveRecommendationPreferencesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEffectiveRecommendationPreferencesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEnrollmentStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetEnrollmentStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEnrollmentStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEnrollmentStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEnrollmentStatusesForOrganization",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetEnrollmentStatusesForOrganization"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEnrollmentStatusesForOrganizationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEnrollmentStatusesForOrganizationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLambdaFunctionRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetLambdaFunctionRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLambdaFunctionRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLambdaFunctionRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLicenseRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetLicenseRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLicenseRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLicenseRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRDSDatabaseRecommendationProjectedMetrics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetRDSDatabaseRecommendationProjectedMetrics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRDSDatabaseRecommendationProjectedMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRDSDatabaseRecommendationProjectedMetricsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRDSDatabaseRecommendations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetRDSDatabaseRecommendations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRDSDatabaseRecommendationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRDSDatabaseRecommendationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRecommendationPreferences",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetRecommendationPreferences"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRecommendationPreferencesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRecommendationPreferencesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRecommendationSummaries",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetRecommendationSummaries"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRecommendationSummariesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRecommendationSummariesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PutRecommendationPreferences",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutRecommendationPreferences"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutRecommendationPreferencesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutRecommendationPreferencesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateEnrollmentStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateEnrollmentStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEnrollmentStatusResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateEnrollmentStatusRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "DeleteRecommendationPreferencesResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteRecommendationPreferencesRequest": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "scope": {
                    "$ref": "#/$defs/Scope"
                },
                "recommendationPreferenceNames": {
                    "$ref": "#/$defs/RecommendationPreferenceNames"
                }
            }
        },
        "ResourceType": {
            "enum": [
                "EC2_INSTANCE",
                "AUTO_SCALING_GROUP",
                "EBS_VOLUME",
                "LAMBDA_FUNCTION",
                "NOT_APPLICABLE",
                "ECS_SERVICE",
                "LICENSE",
                "RDS_DB_INSTANCE"
            ]
        },
        "Scope": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ScopeName"
                },
                "value": {
                    "$ref": "#/$defs/ScopeValue"
                }
            }
        },
        "ScopeName": {
            "enum": [
                "ORGANIZATION",
                "ACCOUNT_ID",
                "RESOURCE_ARN"
            ]
        },
        "ScopeValue": {
            "type": "string"
        },
        "RecommendationPreferenceNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationPreferenceName"
            }
        },
        "RecommendationPreferenceName": {
            "enum": [
                "ENHANCED_INFRASTRUCTURE_METRICS",
                "INFERRED_WORKLOAD_TYPES",
                "EXTERNAL_METRICS_PREFERENCE",
                "LOOKBACK_PERIOD_PREFERENCE",
                "PREFERRED_RESOURCES",
                "UTILIZATION_PREFERENCES"
            ]
        },
        "DescribeRecommendationExportJobsResponse": {
            "type": "object",
            "properties": {
                "recommendationExportJobs": {
                    "$ref": "#/$defs/RecommendationExportJobs"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RecommendationExportJobs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationExportJob"
            }
        },
        "RecommendationExportJob": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "destination": {
                    "$ref": "#/$defs/ExportDestination"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "status": {
                    "$ref": "#/$defs/JobStatus"
                },
                "creationTimestamp": {
                    "$ref": "#/$defs/CreationTimestamp"
                },
                "lastUpdatedTimestamp": {
                    "$ref": "#/$defs/LastUpdatedTimestamp"
                },
                "failureReason": {
                    "$ref": "#/$defs/FailureReason"
                }
            }
        },
        "JobId": {
            "type": "string"
        },
        "ExportDestination": {
            "type": "object",
            "properties": {
                "s3": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "S3Destination": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/DestinationBucket"
                },
                "key": {
                    "$ref": "#/$defs/DestinationKey"
                },
                "metadataKey": {
                    "$ref": "#/$defs/MetadataKey"
                }
            }
        },
        "DestinationBucket": {
            "type": "string"
        },
        "DestinationKey": {
            "type": "string"
        },
        "MetadataKey": {
            "type": "string"
        },
        "JobStatus": {
            "enum": [
                "QUEUED",
                "IN_PROGRESS",
                "COMPLETE",
                "FAILED"
            ]
        },
        "CreationTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "LastUpdatedTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "FailureReason": {
            "type": "string"
        },
        "NextToken": {
            "type": "string"
        },
        "DescribeRecommendationExportJobsRequest": {
            "type": "object",
            "properties": {
                "jobIds": {
                    "$ref": "#/$defs/JobIds"
                },
                "filters": {
                    "$ref": "#/$defs/JobFilters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "JobIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobId"
            }
        },
        "JobFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobFilter"
            }
        },
        "JobFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/JobFilterName"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "JobFilterName": {
            "enum": [
                "RESOURCE_TYPE",
                "JOB_STATUS"
            ]
        },
        "FilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterValue"
            }
        },
        "FilterValue": {
            "type": "string"
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ExportAutoScalingGroupRecommendationsResponse": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "s3Destination": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "ExportAutoScalingGroupRecommendationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "filters": {
                    "$ref": "#/$defs/Filters"
                },
                "fieldsToExport": {
                    "$ref": "#/$defs/ExportableAutoScalingGroupFields"
                },
                "s3DestinationConfig": {
                    "$ref": "#/$defs/S3DestinationConfig"
                },
                "fileFormat": {
                    "$ref": "#/$defs/FileFormat"
                },
                "includeMemberAccounts": {
                    "$ref": "#/$defs/IncludeMemberAccounts"
                },
                "recommendationPreferences": {
                    "$ref": "#/$defs/RecommendationPreferences"
                }
            }
        },
        "AccountIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountId"
            }
        },
        "AccountId": {
            "type": "string"
        },
        "Filters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/FilterName"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "FilterName": {
            "enum": [
                "FINDING",
                "FINDING_REASON_CODES",
                "RECOMMENDATION_SOURCE_TYPE",
                "INFERRED_WORKLOAD_TYPES"
            ]
        },
        "ExportableAutoScalingGroupFields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportableAutoScalingGroupField"
            }
        },
        "ExportableAutoScalingGroupField": {
            "enum": [
                "ACCOUNT_ID",
                "AUTO_SCALING_GROUP_ARN",
                "AUTO_SCALING_GROUP_NAME",
                "FINDING",
                "UTILIZATION_METRICS_CPU_MAXIMUM",
                "UTILIZATION_METRICS_MEMORY_MAXIMUM",
                "UTILIZATION_METRICS_EBS_READ_OPS_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_EBS_WRITE_OPS_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_EBS_READ_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_EBS_WRITE_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_DISK_READ_OPS_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_DISK_WRITE_OPS_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_DISK_READ_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_DISK_WRITE_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_NETWORK_IN_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_NETWORK_OUT_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_NETWORK_PACKETS_IN_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_NETWORK_PACKETS_OUT_PER_SECOND_MAXIMUM",
                "LOOKBACK_PERIOD_IN_DAYS",
                "CURRENT_CONFIGURATION_INSTANCE_TYPE",
                "CURRENT_CONFIGURATION_DESIRED_CAPACITY",
                "CURRENT_CONFIGURATION_MIN_SIZE",
                "CURRENT_CONFIGURATION_MAX_SIZE",
                "CURRENT_ON_DEMAND_PRICE",
                "CURRENT_STANDARD_ONE_YEAR_NO_UPFRONT_RESERVED_PRICE",
                "CURRENT_STANDARD_THREE_YEAR_NO_UPFRONT_RESERVED_PRICE",
                "CURRENT_VCPUS",
                "CURRENT_MEMORY",
                "CURRENT_STORAGE",
                "CURRENT_NETWORK",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_INSTANCE_TYPE",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_DESIRED_CAPACITY",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_MIN_SIZE",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_MAX_SIZE",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_CPU_MAXIMUM",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_MEMORY_MAXIMUM",
                "RECOMMENDATION_OPTIONS_PERFORMANCE_RISK",
                "RECOMMENDATION_OPTIONS_ON_DEMAND_PRICE",
                "RECOMMENDATION_OPTIONS_STANDARD_ONE_YEAR_NO_UPFRONT_RESERVED_PRICE",
                "RECOMMENDATION_OPTIONS_STANDARD_THREE_YEAR_NO_UPFRONT_RESERVED_PRICE",
                "RECOMMENDATION_OPTIONS_VCPUS",
                "RECOMMENDATION_OPTIONS_MEMORY",
                "RECOMMENDATION_OPTIONS_STORAGE",
                "RECOMMENDATION_OPTIONS_NETWORK",
                "LAST_REFRESH_TIMESTAMP",
                "CURRENT_PERFORMANCE_RISK",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_CPU_VENDOR_ARCHITECTURES",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_ENHANCED_INFRASTRUCTURE_METRICS",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_INFERRED_WORKLOAD_TYPES",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_PREFERRED_RESOURCES",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_LOOKBACK_PERIOD",
                "INFERRED_WORKLOAD_TYPES",
                "RECOMMENDATION_OPTIONS_MIGRATION_EFFORT",
                "CURRENT_INSTANCE_GPU_INFO",
                "RECOMMENDATION_OPTIONS_INSTANCE_GPU_INFO",
                "UTILIZATION_METRICS_GPU_PERCENTAGE_MAXIMUM",
                "UTILIZATION_METRICS_GPU_MEMORY_PERCENTAGE_MAXIMUM",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_GPU_MAXIMUM",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_GPU_MEMORY_MAXIMUM",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS"
            ]
        },
        "S3DestinationConfig": {
            "type": "object",
            "properties": {
                "bucket": {
                    "$ref": "#/$defs/DestinationBucket"
                },
                "keyPrefix": {
                    "$ref": "#/$defs/DestinationKeyPrefix"
                }
            }
        },
        "DestinationKeyPrefix": {
            "type": "string"
        },
        "FileFormat": {
            "enum": [
                "CSV"
            ]
        },
        "IncludeMemberAccounts": {
            "type": "boolean"
        },
        "RecommendationPreferences": {
            "type": "object",
            "properties": {
                "cpuVendorArchitectures": {
                    "$ref": "#/$defs/CpuVendorArchitectures"
                }
            }
        },
        "CpuVendorArchitectures": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CpuVendorArchitecture"
            }
        },
        "CpuVendorArchitecture": {
            "enum": [
                "AWS_ARM64",
                "CURRENT"
            ]
        },
        "ExportEBSVolumeRecommendationsResponse": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "s3Destination": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "ExportEBSVolumeRecommendationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "filters": {
                    "$ref": "#/$defs/EBSFilters"
                },
                "fieldsToExport": {
                    "$ref": "#/$defs/ExportableVolumeFields"
                },
                "s3DestinationConfig": {
                    "$ref": "#/$defs/S3DestinationConfig"
                },
                "fileFormat": {
                    "$ref": "#/$defs/FileFormat"
                },
                "includeMemberAccounts": {
                    "$ref": "#/$defs/IncludeMemberAccounts"
                }
            }
        },
        "EBSFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EBSFilter"
            }
        },
        "EBSFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/EBSFilterName"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "EBSFilterName": {
            "enum": [
                "FINDING"
            ]
        },
        "ExportableVolumeFields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportableVolumeField"
            }
        },
        "ExportableVolumeField": {
            "enum": [
                "ACCOUNT_ID",
                "VOLUME_ARN",
                "FINDING",
                "UTILIZATION_METRICS_VOLUME_READ_OPS_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_VOLUME_WRITE_OPS_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_VOLUME_READ_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_VOLUME_WRITE_BYTES_PER_SECOND_MAXIMUM",
                "LOOKBACK_PERIOD_IN_DAYS",
                "CURRENT_CONFIGURATION_VOLUME_TYPE",
                "CURRENT_CONFIGURATION_VOLUME_BASELINE_IOPS",
                "CURRENT_CONFIGURATION_VOLUME_BASELINE_THROUGHPUT",
                "CURRENT_CONFIGURATION_VOLUME_BURST_IOPS",
                "CURRENT_CONFIGURATION_VOLUME_BURST_THROUGHPUT",
                "CURRENT_CONFIGURATION_VOLUME_SIZE",
                "CURRENT_MONTHLY_PRICE",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_TYPE",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_BASELINE_IOPS",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_BASELINE_THROUGHPUT",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_BURST_IOPS",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_BURST_THROUGHPUT",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_VOLUME_SIZE",
                "RECOMMENDATION_OPTIONS_MONTHLY_PRICE",
                "RECOMMENDATION_OPTIONS_PERFORMANCE_RISK",
                "LAST_REFRESH_TIMESTAMP",
                "CURRENT_PERFORMANCE_RISK",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE",
                "TAGS",
                "ROOT_VOLUME",
                "CURRENT_CONFIGURATION_ROOT_VOLUME",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS"
            ]
        },
        "ExportEC2InstanceRecommendationsResponse": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "s3Destination": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "ExportEC2InstanceRecommendationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "filters": {
                    "$ref": "#/$defs/Filters"
                },
                "fieldsToExport": {
                    "$ref": "#/$defs/ExportableInstanceFields"
                },
                "s3DestinationConfig": {
                    "$ref": "#/$defs/S3DestinationConfig"
                },
                "fileFormat": {
                    "$ref": "#/$defs/FileFormat"
                },
                "includeMemberAccounts": {
                    "$ref": "#/$defs/IncludeMemberAccounts"
                },
                "recommendationPreferences": {
                    "$ref": "#/$defs/RecommendationPreferences"
                }
            }
        },
        "ExportableInstanceFields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportableInstanceField"
            }
        },
        "ExportableInstanceField": {
            "enum": [
                "ACCOUNT_ID",
                "INSTANCE_ARN",
                "INSTANCE_NAME",
                "FINDING",
                "Finding_Reason_Codes",
                "LOOKBACK_PERIOD_IN_DAYS",
                "CURRENT_INSTANCE_TYPE",
                "UTILIZATION_METRICS_CPU_MAXIMUM",
                "UTILIZATION_METRICS_MEMORY_MAXIMUM",
                "UTILIZATION_METRICS_EBS_READ_OPS_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_EBS_WRITE_OPS_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_EBS_READ_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_EBS_WRITE_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_DISK_READ_OPS_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_DISK_WRITE_OPS_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_DISK_READ_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_DISK_WRITE_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_NETWORK_IN_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_NETWORK_OUT_BYTES_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_NETWORK_PACKETS_IN_PER_SECOND_MAXIMUM",
                "UTILIZATION_METRICS_NETWORK_PACKETS_OUT_PER_SECOND_MAXIMUM",
                "CURRENT_ON_DEMAND_PRICE",
                "CURRENT_STANDARD_ONE_YEAR_NO_UPFRONT_RESERVED_PRICE",
                "CURRENT_STANDARD_THREE_YEAR_NO_UPFRONT_RESERVED_PRICE",
                "CURRENT_VCPUS",
                "CURRENT_MEMORY",
                "CURRENT_STORAGE",
                "CURRENT_NETWORK",
                "RECOMMENDATION_OPTIONS_INSTANCE_TYPE",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_CPU_MAXIMUM",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_MEMORY_MAXIMUM",
                "RECOMMENDATION_OPTIONS_PLATFORM_DIFFERENCES",
                "RECOMMENDATION_OPTIONS_PERFORMANCE_RISK",
                "RECOMMENDATION_OPTIONS_VCPUS",
                "RECOMMENDATION_OPTIONS_MEMORY",
                "RECOMMENDATION_OPTIONS_STORAGE",
                "RECOMMENDATION_OPTIONS_NETWORK",
                "RECOMMENDATION_OPTIONS_ON_DEMAND_PRICE",
                "RECOMMENDATION_OPTIONS_STANDARD_ONE_YEAR_NO_UPFRONT_RESERVED_PRICE",
                "RECOMMENDATION_OPTIONS_STANDARD_THREE_YEAR_NO_UPFRONT_RESERVED_PRICE",
                "RECOMMENDATIONS_SOURCES_RECOMMENDATION_SOURCE_ARN",
                "RECOMMENDATIONS_SOURCES_RECOMMENDATION_SOURCE_TYPE",
                "LAST_REFRESH_TIMESTAMP",
                "CURRENT_PERFORMANCE_RISK",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_CPU_VENDOR_ARCHITECTURES",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_ENHANCED_INFRASTRUCTURE_METRICS",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_INFERRED_WORKLOAD_TYPES",
                "INFERRED_WORKLOAD_TYPES",
                "RECOMMENDATION_OPTIONS_MIGRATION_EFFORT",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_EXTERNAL_METRICS_SOURCE",
                "TAGS",
                "INSTANCE_STATE",
                "EXTERNAL_METRIC_STATUS_CODE",
                "EXTERNAL_METRIC_STATUS_REASON",
                "CURRENT_INSTANCE_GPU_INFO",
                "RECOMMENDATION_OPTIONS_INSTANCE_GPU_INFO",
                "UTILIZATION_METRICS_GPU_PERCENTAGE_MAXIMUM",
                "UTILIZATION_METRICS_GPU_MEMORY_PERCENTAGE_MAXIMUM",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_GPU_PERCENTAGE_MAXIMUM",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_GPU_MEMORY_PERCENTAGE_MAXIMUM",
                "IDLE",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_PREFERRED_RESOURCES",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_LOOKBACK_PERIOD",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_UTILIZATION_PREFERENCES",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS"
            ]
        },
        "ExportECSServiceRecommendationsResponse": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "s3Destination": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "ExportECSServiceRecommendationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "filters": {
                    "$ref": "#/$defs/ECSServiceRecommendationFilters"
                },
                "fieldsToExport": {
                    "$ref": "#/$defs/ExportableECSServiceFields"
                },
                "s3DestinationConfig": {
                    "$ref": "#/$defs/S3DestinationConfig"
                },
                "fileFormat": {
                    "$ref": "#/$defs/FileFormat"
                },
                "includeMemberAccounts": {
                    "$ref": "#/$defs/IncludeMemberAccounts"
                }
            }
        },
        "ECSServiceRecommendationFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ECSServiceRecommendationFilter"
            }
        },
        "ECSServiceRecommendationFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ECSServiceRecommendationFilterName"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "ECSServiceRecommendationFilterName": {
            "enum": [
                "FINDING",
                "FINDING_REASON_CODE"
            ]
        },
        "ExportableECSServiceFields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportableECSServiceField"
            }
        },
        "ExportableECSServiceField": {
            "enum": [
                "ACCOUNT_ID",
                "SERVICE_ARN",
                "LOOKBACK_PERIOD_IN_DAYS",
                "LAST_REFRESH_TIMESTAMP",
                "LAUNCH_TYPE",
                "CURRENT_PERFORMANCE_RISK",
                "CURRENT_SERVICE_CONFIGURATION_MEMORY",
                "CURRENT_SERVICE_CONFIGURATION_CPU",
                "CURRENT_SERVICE_CONFIGURATION_TASK_DEFINITION_ARN",
                "CURRENT_SERVICE_CONFIGURATION_AUTO_SCALING_CONFIGURATION",
                "CURRENT_SERVICE_CONTAINER_CONFIGURATIONS",
                "UTILIZATION_METRICS_CPU_MAXIMUM",
                "UTILIZATION_METRICS_MEMORY_MAXIMUM",
                "FINDING",
                "FINDING_REASON_CODES",
                "RECOMMENDATION_OPTIONS_MEMORY",
                "RECOMMENDATION_OPTIONS_CPU",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE",
                "RECOMMENDATION_OPTIONS_CONTAINER_RECOMMENDATIONS",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_CPU_MAXIMUM",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_MEMORY_MAXIMUM",
                "TAGS",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS"
            ]
        },
        "ExportLambdaFunctionRecommendationsResponse": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "s3Destination": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "ExportLambdaFunctionRecommendationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "filters": {
                    "$ref": "#/$defs/LambdaFunctionRecommendationFilters"
                },
                "fieldsToExport": {
                    "$ref": "#/$defs/ExportableLambdaFunctionFields"
                },
                "s3DestinationConfig": {
                    "$ref": "#/$defs/S3DestinationConfig"
                },
                "fileFormat": {
                    "$ref": "#/$defs/FileFormat"
                },
                "includeMemberAccounts": {
                    "$ref": "#/$defs/IncludeMemberAccounts"
                }
            }
        },
        "LambdaFunctionRecommendationFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LambdaFunctionRecommendationFilter"
            }
        },
        "LambdaFunctionRecommendationFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/LambdaFunctionRecommendationFilterName"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "LambdaFunctionRecommendationFilterName": {
            "enum": [
                "FINDING",
                "FINDING_REASON_CODE"
            ]
        },
        "ExportableLambdaFunctionFields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportableLambdaFunctionField"
            }
        },
        "ExportableLambdaFunctionField": {
            "enum": [
                "ACCOUNT_ID",
                "FUNCTION_ARN",
                "FUNCTION_VERSION",
                "FINDING",
                "FINDING_REASON_CODES",
                "NUMBER_OF_INVOCATIONS",
                "UTILIZATION_METRICS_DURATION_MAXIMUM",
                "UTILIZATION_METRICS_DURATION_AVERAGE",
                "UTILIZATION_METRICS_MEMORY_MAXIMUM",
                "UTILIZATION_METRICS_MEMORY_AVERAGE",
                "LOOKBACK_PERIOD_IN_DAYS",
                "CURRENT_CONFIGURATION_MEMORY_SIZE",
                "CURRENT_CONFIGURATION_TIMEOUT",
                "CURRENT_COST_TOTAL",
                "CURRENT_COST_AVERAGE",
                "RECOMMENDATION_OPTIONS_CONFIGURATION_MEMORY_SIZE",
                "RECOMMENDATION_OPTIONS_COST_LOW",
                "RECOMMENDATION_OPTIONS_COST_HIGH",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_DURATION_LOWER_BOUND",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_DURATION_UPPER_BOUND",
                "RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_DURATION_EXPECTED",
                "LAST_REFRESH_TIMESTAMP",
                "CURRENT_PERFORMANCE_RISK",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE",
                "TAGS",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS"
            ]
        },
        "ExportLicenseRecommendationsResponse": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "s3Destination": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "ExportLicenseRecommendationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "filters": {
                    "$ref": "#/$defs/LicenseRecommendationFilters"
                },
                "fieldsToExport": {
                    "$ref": "#/$defs/ExportableLicenseFields"
                },
                "s3DestinationConfig": {
                    "$ref": "#/$defs/S3DestinationConfig"
                },
                "fileFormat": {
                    "$ref": "#/$defs/FileFormat"
                },
                "includeMemberAccounts": {
                    "$ref": "#/$defs/IncludeMemberAccounts"
                }
            }
        },
        "LicenseRecommendationFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LicenseRecommendationFilter"
            }
        },
        "LicenseRecommendationFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/LicenseRecommendationFilterName"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "LicenseRecommendationFilterName": {
            "enum": [
                "LICENSE_FINDING",
                "LICENSE_FINDING_REASON_CODE",
                "LICENSE_NAME"
            ]
        },
        "ExportableLicenseFields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportableLicenseField"
            }
        },
        "ExportableLicenseField": {
            "enum": [
                "ACCOUNT_ID",
                "RESOURCE_ARN",
                "LOOKBACK_PERIOD_IN_DAYS",
                "LAST_REFRESH_TIMESTAMP",
                "LICENSE_FINDING",
                "LICENSE_FINDING_REASON_CODES",
                "CURRENT_LICENSE_CONFIGURATION_NUMBER_OF_CORES",
                "CURRENT_LICENSE_CONFIGURATION_INSTANCE_TYPE",
                "CURRENT_LICENSE_CONFIGURATION_OPERATING_SYSTEM",
                "CURRENT_LICENSE_CONFIGURATION_LICENSE_NAME",
                "CURRENT_LICENSE_CONFIGURATION_LICENSE_EDITION",
                "CURRENT_LICENSE_CONFIGURATION_LICENSE_MODEL",
                "CURRENT_LICENSE_CONFIGURATION_LICENSE_VERSION",
                "CURRENT_LICENSE_CONFIGURATION_METRICS_SOURCE",
                "RECOMMENDATION_OPTIONS_OPERATING_SYSTEM",
                "RECOMMENDATION_OPTIONS_LICENSE_EDITION",
                "RECOMMENDATION_OPTIONS_LICENSE_MODEL",
                "RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY",
                "RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE",
                "TAGS"
            ]
        },
        "ExportRDSDatabaseRecommendationsResponse": {
            "type": "object",
            "properties": {
                "jobId": {
                    "$ref": "#/$defs/JobId"
                },
                "s3Destination": {
                    "$ref": "#/$defs/S3Destination"
                }
            }
        },
        "ExportRDSDatabaseRecommendationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "filters": {
                    "$ref": "#/$defs/RDSDBRecommendationFilters"
                },
                "fieldsToExport": {
                    "$ref": "#/$defs/ExportableRDSDBFields"
                },
                "s3DestinationConfig": {
                    "$ref": "#/$defs/S3DestinationConfig"
                },
                "fileFormat": {
                    "$ref": "#/$defs/FileFormat"
                },
                "includeMemberAccounts": {
                    "$ref": "#/$defs/IncludeMemberAccounts"
                },
                "recommendationPreferences": {
                    "$ref": "#/$defs/RecommendationPreferences"
                }
            }
        },
        "RDSDBRecommendationFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RDSDBRecommendationFilter"
            }
        },
        "RDSDBRecommendationFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/RDSDBRecommendationFilterName"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "RDSDBRecommendationFilterName": {
            "enum": [
                "INSTANCE_FINDING",
                "INSTANCE_FINDING_REASON_CODE",
                "STORAGE_FINDING",
                "STORAGE_FINDING_REASON_CODE",
                "IDLE"
            ]
        },
        "ExportableRDSDBFields": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportableRDSDBField"
            }
        },
        "ExportableRDSDBField": {
            "enum": [
                "RESOURCE_ARN",
                "ACCOUNT_ID",
                "ENGINE",
                "ENGINE_VERSION",
                "IDLE",
                "MULTI_AZ_DB_INSTANCE",
                "CURRENT_DB_INSTANCE_CLASS",
                "CURRENT_STORAGE_CONFIGURATION_STORAGE_TYPE",
                "CURRENT_STORAGE_CONFIGURATION_ALLOCATED_STORAGE",
                "CURRENT_STORAGE_CONFIGURATION_MAX_ALLOCATED_STORAGE",
                "CURRENT_STORAGE_CONFIGURATION_IOPS",
                "CURRENT_STORAGE_CONFIGURATION_STORAGE_THROUGHPUT",
                "CURRENT_INSTANCE_ON_DEMAND_HOURLY_PRICE",
                "CURRENT_STORAGE_ON_DEMAND_MONTHLY_PRICE",
                "LOOKBACK_PERIOD_IN_DAYS",
                "UTILIZATION_METRICS_CPU_MAXIMUM",
                "UTILIZATION_METRICS_MEMORY_MAXIMUM",
                "UTILIZATION_METRICS_EBS_VOLUME_STORAGE_SPACE_UTILIZATION_MAXIMUM",
                "UTILIZATION_METRICS_NETWORK_RECEIVE_THROUGHPUT_MAXIMUM",
                "UTILIZATION_METRICS_NETWORK_TRANSMIT_THROUGHPUT_MAXIMUM",
                "UTILIZATION_METRICS_EBS_VOLUME_READ_IOPS_MAXIMUM",
                "UTILIZATION_METRICS_EBS_VOLUME_WRITE_IOPS_MAXIMUM",
                "UTILIZATION_METRICS_EBS_VOLUME_READ_THROUGHPUT_MAXIMUM",
                "UTILIZATION_METRICS_EBS_VOLUME_WRITE_THROUGHPUT_MAXIMUM",
                "UTILIZATION_METRICS_DATABASE_CONNECTIONS_MAXIMUM",
                "INSTANCE_FINDING",
                "INSTANCE_FINDING_REASON_CODES",
                "STORAGE_FINDING",
                "STORAGE_FINDING_REASON_CODES",
                "INSTANCE_RECOMMENDATION_OPTIONS_DB_INSTANCE_CLASS",
                "INSTANCE_RECOMMENDATION_OPTIONS_RANK",
                "INSTANCE_RECOMMENDATION_OPTIONS_PERFORMANCE_RISK",
                "INSTANCE_RECOMMENDATION_OPTIONS_PROJECTED_UTILIZATION_METRICS_CPU_MAXIMUM",
                "STORAGE_RECOMMENDATION_OPTIONS_STORAGE_TYPE",
                "STORAGE_RECOMMENDATION_OPTIONS_ALLOCATED_STORAGE",
                "STORAGE_RECOMMENDATION_OPTIONS_MAX_ALLOCATED_STORAGE",
                "STORAGE_RECOMMENDATION_OPTIONS_IOPS",
                "STORAGE_RECOMMENDATION_OPTIONS_STORAGE_THROUGHPUT",
                "STORAGE_RECOMMENDATION_OPTIONS_RANK",
                "INSTANCE_RECOMMENDATION_OPTIONS_INSTANCE_ON_DEMAND_HOURLY_PRICE",
                "INSTANCE_RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE",
                "INSTANCE_RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY",
                "INSTANCE_RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE",
                "INSTANCE_RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE",
                "INSTANCE_RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS",
                "INSTANCE_RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS",
                "STORAGE_RECOMMENDATION_OPTIONS_ON_DEMAND_MONTHLY_PRICE",
                "STORAGE_RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_PERCENTAGE",
                "STORAGE_RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY",
                "STORAGE_RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE",
                "STORAGE_RECOMMENDATION_OPTIONS_SAVINGS_OPPORTUNITY_AFTER_DISCOUNTS_PERCENTAGE",
                "STORAGE_RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_CURRENCY_AFTER_DISCOUNTS",
                "STORAGE_RECOMMENDATION_OPTIONS_ESTIMATED_MONTHLY_SAVINGS_VALUE_AFTER_DISCOUNTS",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_CPU_VENDOR_ARCHITECTURES",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_ENHANCED_INFRASTRUCTURE_METRICS",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_LOOKBACK_PERIOD",
                "EFFECTIVE_RECOMMENDATION_PREFERENCES_SAVINGS_ESTIMATION_MODE",
                "LAST_REFRESH_TIMESTAMP",
                "TAGS"
            ]
        },
        "GetAutoScalingGroupRecommendationsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "autoScalingGroupRecommendations": {
                    "$ref": "#/$defs/AutoScalingGroupRecommendations"
                },
                "errors": {
                    "$ref": "#/$defs/GetRecommendationErrors"
                }
            }
        },
        "AutoScalingGroupRecommendations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoScalingGroupRecommendation"
            }
        },
        "AutoScalingGroupRecommendation": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "autoScalingGroupArn": {
                    "$ref": "#/$defs/AutoScalingGroupArn"
                },
                "autoScalingGroupName": {
                    "$ref": "#/$defs/AutoScalingGroupName"
                },
                "finding": {
                    "$ref": "#/$defs/Finding"
                },
                "utilizationMetrics": {
                    "$ref": "#/$defs/UtilizationMetrics"
                },
                "lookBackPeriodInDays": {
                    "$ref": "#/$defs/LookBackPeriodInDays"
                },
                "currentConfiguration": {
                    "$ref": "#/$defs/AutoScalingGroupConfiguration"
                },
                "currentInstanceGpuInfo": {
                    "$ref": "#/$defs/GpuInfo"
                },
                "recommendationOptions": {
                    "$ref": "#/$defs/AutoScalingGroupRecommendationOptions"
                },
                "lastRefreshTimestamp": {
                    "$ref": "#/$defs/LastRefreshTimestamp"
                },
                "currentPerformanceRisk": {
                    "$ref": "#/$defs/CurrentPerformanceRisk"
                },
                "effectiveRecommendationPreferences": {
                    "$ref": "#/$defs/EffectiveRecommendationPreferences"
                },
                "inferredWorkloadTypes": {
                    "$ref": "#/$defs/InferredWorkloadTypes"
                }
            }
        },
        "AutoScalingGroupArn": {
            "type": "string"
        },
        "AutoScalingGroupName": {
            "type": "string"
        },
        "Finding": {
            "enum": [
                "UNDER_PROVISIONED",
                "OVER_PROVISIONED",
                "OPTIMIZED",
                "NOT_OPTIMIZED"
            ]
        },
        "UtilizationMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UtilizationMetric"
            }
        },
        "UtilizationMetric": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/MetricName"
                },
                "statistic": {
                    "$ref": "#/$defs/MetricStatistic"
                },
                "value": {
                    "$ref": "#/$defs/MetricValue"
                }
            }
        },
        "MetricName": {
            "enum": [
                "CPU",
                "MEMORY",
                "EBS_READ_OPS_PER_SECOND",
                "EBS_WRITE_OPS_PER_SECOND",
                "EBS_READ_BYTES_PER_SECOND",
                "EBS_WRITE_BYTES_PER_SECOND",
                "DISK_READ_OPS_PER_SECOND",
                "DISK_WRITE_OPS_PER_SECOND",
                "DISK_READ_BYTES_PER_SECOND",
                "DISK_WRITE_BYTES_PER_SECOND",
                "NETWORK_IN_BYTES_PER_SECOND",
                "NETWORK_OUT_BYTES_PER_SECOND",
                "NETWORK_PACKETS_IN_PER_SECOND",
                "NETWORK_PACKETS_OUT_PER_SECOND",
                "GPU_PERCENTAGE",
                "GPU_MEMORY_PERCENTAGE"
            ]
        },
        "MetricStatistic": {
            "enum": [
                "MAXIMUM",
                "AVERAGE"
            ]
        },
        "MetricValue": {
            "type": "number",
            "format": "double"
        },
        "LookBackPeriodInDays": {
            "type": "number",
            "format": "double"
        },
        "AutoScalingGroupConfiguration": {
            "type": "object",
            "properties": {
                "desiredCapacity": {
                    "$ref": "#/$defs/DesiredCapacity"
                },
                "minSize": {
                    "$ref": "#/$defs/MinSize"
                },
                "maxSize": {
                    "$ref": "#/$defs/MaxSize"
                },
                "instanceType": {
                    "$ref": "#/$defs/InstanceType"
                }
            }
        },
        "DesiredCapacity": {
            "type": "integer",
            "format": "int32"
        },
        "MinSize": {
            "type": "integer",
            "format": "int32"
        },
        "MaxSize": {
            "type": "integer",
            "format": "int32"
        },
        "InstanceType": {
            "type": "string"
        },
        "GpuInfo": {
            "type": "object",
            "properties": {
                "gpus": {
                    "$ref": "#/$defs/Gpus"
                }
            }
        },
        "Gpus": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Gpu"
            }
        },
        "Gpu": {
            "type": "object",
            "properties": {
                "gpuCount": {
                    "$ref": "#/$defs/GpuCount"
                },
                "gpuMemorySizeInMiB": {
                    "$ref": "#/$defs/GpuMemorySizeInMiB"
                }
            }
        },
        "GpuCount": {
            "type": "integer",
            "format": "int32"
        },
        "GpuMemorySizeInMiB": {
            "type": "integer",
            "format": "int32"
        },
        "AutoScalingGroupRecommendationOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoScalingGroupRecommendationOption"
            }
        },
        "AutoScalingGroupRecommendationOption": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/$defs/AutoScalingGroupConfiguration"
                },
                "instanceGpuInfo": {
                    "$ref": "#/$defs/GpuInfo"
                },
                "projectedUtilizationMetrics": {
                    "$ref": "#/$defs/ProjectedUtilizationMetrics"
                },
                "performanceRisk": {
                    "$ref": "#/$defs/PerformanceRisk"
                },
                "rank": {
                    "$ref": "#/$defs/Rank"
                },
                "savingsOpportunity": {
                    "$ref": "#/$defs/SavingsOpportunity"
                },
                "savingsOpportunityAfterDiscounts": {
                    "$ref": "#/$defs/AutoScalingGroupSavingsOpportunityAfterDiscounts"
                },
                "migrationEffort": {
                    "$ref": "#/$defs/MigrationEffort"
                }
            }
        },
        "ProjectedUtilizationMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UtilizationMetric"
            }
        },
        "PerformanceRisk": {
            "type": "number",
            "format": "double"
        },
        "Rank": {
            "type": "integer",
            "format": "int32"
        },
        "SavingsOpportunity": {
            "type": "object",
            "properties": {
                "savingsOpportunityPercentage": {
                    "$ref": "#/$defs/SavingsOpportunityPercentage"
                },
                "estimatedMonthlySavings": {
                    "$ref": "#/$defs/EstimatedMonthlySavings"
                }
            }
        },
        "SavingsOpportunityPercentage": {
            "type": "number",
            "format": "double"
        },
        "EstimatedMonthlySavings": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "Currency": {
            "enum": [
                "USD",
                "CNY"
            ]
        },
        "Value": {
            "type": "number",
            "format": "double"
        },
        "AutoScalingGroupSavingsOpportunityAfterDiscounts": {
            "type": "object",
            "properties": {
                "savingsOpportunityPercentage": {
                    "$ref": "#/$defs/SavingsOpportunityPercentage"
                },
                "estimatedMonthlySavings": {
                    "$ref": "#/$defs/AutoScalingGroupEstimatedMonthlySavings"
                }
            }
        },
        "AutoScalingGroupEstimatedMonthlySavings": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "MigrationEffort": {
            "enum": [
                "VERY_LOW",
                "LOW",
                "MEDIUM",
                "HIGH"
            ]
        },
        "LastRefreshTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "CurrentPerformanceRisk": {
            "enum": [
                "VERY_LOW",
                "LOW",
                "MEDIUM",
                "HIGH"
            ]
        },
        "EffectiveRecommendationPreferences": {
            "type": "object",
            "properties": {
                "cpuVendorArchitectures": {
                    "$ref": "#/$defs/CpuVendorArchitectures"
                },
                "enhancedInfrastructureMetrics": {
                    "$ref": "#/$defs/EnhancedInfrastructureMetrics"
                },
                "inferredWorkloadTypes": {
                    "$ref": "#/$defs/InferredWorkloadTypesPreference"
                },
                "externalMetricsPreference": {
                    "$ref": "#/$defs/ExternalMetricsPreference"
                },
                "lookBackPeriod": {
                    "$ref": "#/$defs/LookBackPeriodPreference"
                },
                "utilizationPreferences": {
                    "$ref": "#/$defs/UtilizationPreferences"
                },
                "preferredResources": {
                    "$ref": "#/$defs/EffectivePreferredResources"
                },
                "savingsEstimationMode": {
                    "$ref": "#/$defs/InstanceSavingsEstimationMode"
                }
            }
        },
        "EnhancedInfrastructureMetrics": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "InferredWorkloadTypesPreference": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "ExternalMetricsPreference": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/ExternalMetricsSource"
                }
            }
        },
        "ExternalMetricsSource": {
            "enum": [
                "DATADOG",
                "DYNATRACE",
                "NEWRELIC",
                "INSTANA"
            ]
        },
        "LookBackPeriodPreference": {
            "enum": [
                "DAYS_14",
                "DAYS_32",
                "DAYS_93"
            ]
        },
        "UtilizationPreferences": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UtilizationPreference"
            }
        },
        "UtilizationPreference": {
            "type": "object",
            "properties": {
                "metricName": {
                    "$ref": "#/$defs/CustomizableMetricName"
                },
                "metricParameters": {
                    "$ref": "#/$defs/CustomizableMetricParameters"
                }
            }
        },
        "CustomizableMetricName": {
            "enum": [
                "CPU_UTILIZATION",
                "MEMORY_UTILIZATION"
            ]
        },
        "CustomizableMetricParameters": {
            "type": "object",
            "properties": {
                "threshold": {
                    "$ref": "#/$defs/CustomizableMetricThreshold"
                },
                "headroom": {
                    "$ref": "#/$defs/CustomizableMetricHeadroom"
                }
            }
        },
        "CustomizableMetricThreshold": {
            "enum": [
                "P90",
                "P95",
                "P99_5"
            ]
        },
        "CustomizableMetricHeadroom": {
            "enum": [
                "PERCENT_30",
                "PERCENT_20",
                "PERCENT_10",
                "PERCENT_0"
            ]
        },
        "EffectivePreferredResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EffectivePreferredResource"
            }
        },
        "EffectivePreferredResource": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/PreferredResourceName"
                },
                "includeList": {
                    "$ref": "#/$defs/PreferredResourceValues"
                },
                "effectiveIncludeList": {
                    "$ref": "#/$defs/PreferredResourceValues"
                },
                "excludeList": {
                    "$ref": "#/$defs/PreferredResourceValues"
                }
            }
        },
        "PreferredResourceName": {
            "enum": [
                "EC2_INSTANCE_TYPES"
            ]
        },
        "PreferredResourceValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PreferredResourceValue"
            }
        },
        "PreferredResourceValue": {
            "type": "string"
        },
        "InstanceSavingsEstimationMode": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/InstanceSavingsEstimationModeSource"
                }
            }
        },
        "InstanceSavingsEstimationModeSource": {
            "enum": [
                "PUBLIC_PRICING",
                "COST_EXPLORER_RIGHTSIZING",
                "COST_OPTIMIZATION_HUB"
            ]
        },
        "InferredWorkloadTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InferredWorkloadType"
            }
        },
        "InferredWorkloadType": {
            "enum": [
                "AMAZON_EMR",
                "APACHE_CASSANDRA",
                "APACHE_HADOOP",
                "MEMCACHED",
                "NGINX",
                "POSTGRE_SQL",
                "REDIS",
                "KAFKA",
                "SQLSERVER"
            ]
        },
        "GetRecommendationErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GetRecommendationError"
            }
        },
        "GetRecommendationError": {
            "type": "object",
            "properties": {
                "identifier": {
                    "$ref": "#/$defs/Identifier"
                },
                "code": {
                    "$ref": "#/$defs/Code"
                },
                "message": {
                    "$ref": "#/$defs/Message"
                }
            }
        },
        "Identifier": {
            "type": "string"
        },
        "Code": {
            "type": "string"
        },
        "Message": {
            "type": "string"
        },
        "GetAutoScalingGroupRecommendationsRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "autoScalingGroupArns": {
                    "$ref": "#/$defs/AutoScalingGroupArns"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "filters": {
                    "$ref": "#/$defs/Filters"
                },
                "recommendationPreferences": {
                    "$ref": "#/$defs/RecommendationPreferences"
                }
            }
        },
        "AutoScalingGroupArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AutoScalingGroupArn"
            }
        },
        "GetEBSVolumeRecommendationsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "volumeRecommendations": {
                    "$ref": "#/$defs/VolumeRecommendations"
                },
                "errors": {
                    "$ref": "#/$defs/GetRecommendationErrors"
                }
            }
        },
        "VolumeRecommendations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeRecommendation"
            }
        },
        "VolumeRecommendation": {
            "type": "object",
            "properties": {
                "volumeArn": {
                    "$ref": "#/$defs/VolumeArn"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "currentConfiguration": {
                    "$ref": "#/$defs/VolumeConfiguration"
                },
                "finding": {
                    "$ref": "#/$defs/EBSFinding"
                },
                "utilizationMetrics": {
                    "$ref": "#/$defs/EBSUtilizationMetrics"
                },
                "lookBackPeriodInDays": {
                    "$ref": "#/$defs/LookBackPeriodInDays"
                },
                "volumeRecommendationOptions": {
                    "$ref": "#/$defs/VolumeRecommendationOptions"
                },
                "lastRefreshTimestamp": {
                    "$ref": "#/$defs/LastRefreshTimestamp"
                },
                "currentPerformanceRisk": {
                    "$ref": "#/$defs/CurrentPerformanceRisk"
                },
                "effectiveRecommendationPreferences": {
                    "$ref": "#/$defs/EBSEffectiveRecommendationPreferences"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "VolumeArn": {
            "type": "string"
        },
        "VolumeConfiguration": {
            "type": "object",
            "properties": {
                "volumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "volumeSize": {
                    "$ref": "#/$defs/VolumeSize"
                },
                "volumeBaselineIOPS": {
                    "$ref": "#/$defs/VolumeBaselineIOPS"
                },
                "volumeBurstIOPS": {
                    "$ref": "#/$defs/VolumeBurstIOPS"
                },
                "volumeBaselineThroughput": {
                    "$ref": "#/$defs/VolumeBaselineThroughput"
                },
                "volumeBurstThroughput": {
                    "$ref": "#/$defs/VolumeBurstThroughput"
                },
                "rootVolume": {
                    "$ref": "#/$defs/RootVolume"
                }
            }
        },
        "VolumeType": {
            "type": "string"
        },
        "VolumeSize": {
            "type": "integer",
            "format": "int32"
        },
        "VolumeBaselineIOPS": {
            "type": "integer",
            "format": "int32"
        },
        "VolumeBurstIOPS": {
            "type": "integer",
            "format": "int32"
        },
        "VolumeBaselineThroughput": {
            "type": "integer",
            "format": "int32"
        },
        "VolumeBurstThroughput": {
            "type": "integer",
            "format": "int32"
        },
        "RootVolume": {
            "type": "boolean"
        },
        "EBSFinding": {
            "enum": [
                "OPTIMIZED",
                "NOT_OPTIMIZED"
            ]
        },
        "EBSUtilizationMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EBSUtilizationMetric"
            }
        },
        "EBSUtilizationMetric": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/EBSMetricName"
                },
                "statistic": {
                    "$ref": "#/$defs/MetricStatistic"
                },
                "value": {
                    "$ref": "#/$defs/MetricValue"
                }
            }
        },
        "EBSMetricName": {
            "enum": [
                "VOLUME_READ_OPS_PER_SECOND",
                "VOLUME_WRITE_OPS_PER_SECOND",
                "VOLUME_READ_BYTES_PER_SECOND",
                "VOLUME_WRITE_BYTES_PER_SECOND"
            ]
        },
        "VolumeRecommendationOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeRecommendationOption"
            }
        },
        "VolumeRecommendationOption": {
            "type": "object",
            "properties": {
                "configuration": {
                    "$ref": "#/$defs/VolumeConfiguration"
                },
                "performanceRisk": {
                    "$ref": "#/$defs/PerformanceRisk"
                },
                "rank": {
                    "$ref": "#/$defs/Rank"
                },
                "savingsOpportunity": {
                    "$ref": "#/$defs/SavingsOpportunity"
                },
                "savingsOpportunityAfterDiscounts": {
                    "$ref": "#/$defs/EBSSavingsOpportunityAfterDiscounts"
                }
            }
        },
        "EBSSavingsOpportunityAfterDiscounts": {
            "type": "object",
            "properties": {
                "savingsOpportunityPercentage": {
                    "$ref": "#/$defs/SavingsOpportunityPercentage"
                },
                "estimatedMonthlySavings": {
                    "$ref": "#/$defs/EBSEstimatedMonthlySavings"
                }
            }
        },
        "EBSEstimatedMonthlySavings": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "EBSEffectiveRecommendationPreferences": {
            "type": "object",
            "properties": {
                "savingsEstimationMode": {
                    "$ref": "#/$defs/EBSSavingsEstimationMode"
                }
            }
        },
        "EBSSavingsEstimationMode": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/EBSSavingsEstimationModeSource"
                }
            }
        },
        "EBSSavingsEstimationModeSource": {
            "enum": [
                "PUBLIC_PRICING",
                "COST_EXPLORER_RIGHTSIZING",
                "COST_OPTIMIZATION_HUB"
            ]
        },
        "Tags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "GetEBSVolumeRecommendationsRequest": {
            "type": "object",
            "properties": {
                "volumeArns": {
                    "$ref": "#/$defs/VolumeArns"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "filters": {
                    "$ref": "#/$defs/EBSFilters"
                },
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "VolumeArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeArn"
            }
        },
        "GetEC2InstanceRecommendationsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "instanceRecommendations": {
                    "$ref": "#/$defs/InstanceRecommendations"
                },
                "errors": {
                    "$ref": "#/$defs/GetRecommendationErrors"
                }
            }
        },
        "InstanceRecommendations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceRecommendation"
            }
        },
        "InstanceRecommendation": {
            "type": "object",
            "properties": {
                "instanceArn": {
                    "$ref": "#/$defs/InstanceArn"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "instanceName": {
                    "$ref": "#/$defs/InstanceName"
                },
                "currentInstanceType": {
                    "$ref": "#/$defs/CurrentInstanceType"
                },
                "finding": {
                    "$ref": "#/$defs/Finding"
                },
                "findingReasonCodes": {
                    "$ref": "#/$defs/InstanceRecommendationFindingReasonCodes"
                },
                "utilizationMetrics": {
                    "$ref": "#/$defs/UtilizationMetrics"
                },
                "lookBackPeriodInDays": {
                    "$ref": "#/$defs/LookBackPeriodInDays"
                },
                "recommendationOptions": {
                    "$ref": "#/$defs/RecommendationOptions"
                },
                "recommendationSources": {
                    "$ref": "#/$defs/RecommendationSources"
                },
                "lastRefreshTimestamp": {
                    "$ref": "#/$defs/LastRefreshTimestamp"
                },
                "currentPerformanceRisk": {
                    "$ref": "#/$defs/CurrentPerformanceRisk"
                },
                "effectiveRecommendationPreferences": {
                    "$ref": "#/$defs/EffectiveRecommendationPreferences"
                },
                "inferredWorkloadTypes": {
                    "$ref": "#/$defs/InferredWorkloadTypes"
                },
                "instanceState": {
                    "$ref": "#/$defs/InstanceState"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                },
                "externalMetricStatus": {
                    "$ref": "#/$defs/ExternalMetricStatus"
                },
                "currentInstanceGpuInfo": {
                    "$ref": "#/$defs/GpuInfo"
                },
                "idle": {
                    "$ref": "#/$defs/InstanceIdle"
                }
            }
        },
        "InstanceArn": {
            "type": "string"
        },
        "InstanceName": {
            "type": "string"
        },
        "CurrentInstanceType": {
            "type": "string"
        },
        "InstanceRecommendationFindingReasonCodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceRecommendationFindingReasonCode"
            }
        },
        "InstanceRecommendationFindingReasonCode": {
            "enum": [
                "CPU_OVER_PROVISIONED",
                "CPU_UNDER_PROVISIONED",
                "MEMORY_OVER_PROVISIONED",
                "MEMORY_UNDER_PROVISIONED",
                "EBS_THROUGHPUT_OVER_PROVISIONED",
                "EBS_THROUGHPUT_UNDER_PROVISIONED",
                "EBS_IOPS_OVER_PROVISIONED",
                "EBS_IOPS_UNDER_PROVISIONED",
                "NETWORK_BANDWIDTH_OVER_PROVISIONED",
                "NETWORK_BANDWIDTH_UNDER_PROVISIONED",
                "NETWORK_PPS_OVER_PROVISIONED",
                "NETWORK_PPS_UNDER_PROVISIONED",
                "DISK_IOPS_OVER_PROVISIONED",
                "DISK_IOPS_UNDER_PROVISIONED",
                "DISK_THROUGHPUT_OVER_PROVISIONED",
                "DISK_THROUGHPUT_UNDER_PROVISIONED",
                "GPU_UNDER_PROVISIONED",
                "GPU_OVER_PROVISIONED",
                "GPU_MEMORY_UNDER_PROVISIONED",
                "GPU_MEMORY_OVER_PROVISIONED"
            ]
        },
        "RecommendationOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceRecommendationOption"
            }
        },
        "InstanceRecommendationOption": {
            "type": "object",
            "properties": {
                "instanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "instanceGpuInfo": {
                    "$ref": "#/$defs/GpuInfo"
                },
                "projectedUtilizationMetrics": {
                    "$ref": "#/$defs/ProjectedUtilizationMetrics"
                },
                "platformDifferences": {
                    "$ref": "#/$defs/PlatformDifferences"
                },
                "performanceRisk": {
                    "$ref": "#/$defs/PerformanceRisk"
                },
                "rank": {
                    "$ref": "#/$defs/Rank"
                },
                "savingsOpportunity": {
                    "$ref": "#/$defs/SavingsOpportunity"
                },
                "savingsOpportunityAfterDiscounts": {
                    "$ref": "#/$defs/InstanceSavingsOpportunityAfterDiscounts"
                },
                "migrationEffort": {
                    "$ref": "#/$defs/MigrationEffort"
                }
            }
        },
        "PlatformDifferences": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlatformDifference"
            }
        },
        "PlatformDifference": {
            "enum": [
                "HYPERVISOR",
                "NETWORK_INTERFACE",
                "STORAGE_INTERFACE",
                "INSTANCE_STORE_AVAILABILITY",
                "VIRTUALIZATION_TYPE",
                "ARCHITECTURE"
            ]
        },
        "InstanceSavingsOpportunityAfterDiscounts": {
            "type": "object",
            "properties": {
                "savingsOpportunityPercentage": {
                    "$ref": "#/$defs/SavingsOpportunityPercentage"
                },
                "estimatedMonthlySavings": {
                    "$ref": "#/$defs/InstanceEstimatedMonthlySavings"
                }
            }
        },
        "InstanceEstimatedMonthlySavings": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "RecommendationSources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationSource"
            }
        },
        "RecommendationSource": {
            "type": "object",
            "properties": {
                "recommendationSourceArn": {
                    "$ref": "#/$defs/RecommendationSourceArn"
                },
                "recommendationSourceType": {
                    "$ref": "#/$defs/RecommendationSourceType"
                }
            }
        },
        "RecommendationSourceArn": {
            "type": "string"
        },
        "RecommendationSourceType": {
            "enum": [
                "EC2_INSTANCE",
                "AUTO_SCALING_GROUP",
                "EBS_VOLUME",
                "LAMBDA_FUNCTION",
                "ECS_SERVICE",
                "LICENSE",
                "RDS_DB_INSTANCE",
                "RDS_DB_INSTANCE_STORAGE"
            ]
        },
        "InstanceState": {
            "enum": [
                "PENDING",
                "RUNNING",
                "SHUTTING_DOWN",
                "TERMINATED",
                "STOPPING",
                "STOPPED"
            ]
        },
        "ExternalMetricStatus": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "$ref": "#/$defs/ExternalMetricStatusCode"
                },
                "statusReason": {
                    "$ref": "#/$defs/ExternalMetricStatusReason"
                }
            }
        },
        "ExternalMetricStatusCode": {
            "enum": [
                "NO_EXTERNAL_METRIC_SET",
                "INTEGRATION_SUCCESS",
                "DATADOG_INTEGRATION_ERROR",
                "DYNATRACE_INTEGRATION_ERROR",
                "NEWRELIC_INTEGRATION_ERROR",
                "INSTANA_INTEGRATION_ERROR",
                "INSUFFICIENT_DATADOG_METRICS",
                "INSUFFICIENT_DYNATRACE_METRICS",
                "INSUFFICIENT_NEWRELIC_METRICS",
                "INSUFFICIENT_INSTANA_METRICS"
            ]
        },
        "ExternalMetricStatusReason": {
            "type": "string"
        },
        "InstanceIdle": {
            "enum": [
                "TRUE",
                "FALSE"
            ]
        },
        "GetEC2InstanceRecommendationsRequest": {
            "type": "object",
            "properties": {
                "instanceArns": {
                    "$ref": "#/$defs/InstanceArns"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "filters": {
                    "$ref": "#/$defs/Filters"
                },
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "recommendationPreferences": {
                    "$ref": "#/$defs/RecommendationPreferences"
                }
            }
        },
        "InstanceArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceArn"
            }
        },
        "GetEC2RecommendationProjectedMetricsResponse": {
            "type": "object",
            "properties": {
                "recommendedOptionProjectedMetrics": {
                    "$ref": "#/$defs/RecommendedOptionProjectedMetrics"
                }
            }
        },
        "RecommendedOptionProjectedMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendedOptionProjectedMetric"
            }
        },
        "RecommendedOptionProjectedMetric": {
            "type": "object",
            "properties": {
                "recommendedInstanceType": {
                    "$ref": "#/$defs/RecommendedInstanceType"
                },
                "rank": {
                    "$ref": "#/$defs/Rank"
                },
                "projectedMetrics": {
                    "$ref": "#/$defs/ProjectedMetrics"
                }
            }
        },
        "RecommendedInstanceType": {
            "type": "string"
        },
        "ProjectedMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProjectedMetric"
            }
        },
        "ProjectedMetric": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/MetricName"
                },
                "timestamps": {
                    "$ref": "#/$defs/Timestamps"
                },
                "values": {
                    "$ref": "#/$defs/MetricValues"
                }
            }
        },
        "Timestamps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Timestamp"
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "MetricValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricValue"
            }
        },
        "GetEC2RecommendationProjectedMetricsRequest": {
            "type": "object",
            "properties": {
                "instanceArn": {
                    "$ref": "#/$defs/InstanceArn"
                },
                "stat": {
                    "$ref": "#/$defs/MetricStatistic"
                },
                "period": {
                    "$ref": "#/$defs/Period"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "recommendationPreferences": {
                    "$ref": "#/$defs/RecommendationPreferences"
                }
            }
        },
        "Period": {
            "type": "integer",
            "format": "int32"
        },
        "GetECSServiceRecommendationProjectedMetricsResponse": {
            "type": "object",
            "properties": {
                "recommendedOptionProjectedMetrics": {
                    "$ref": "#/$defs/ECSServiceRecommendedOptionProjectedMetrics"
                }
            }
        },
        "ECSServiceRecommendedOptionProjectedMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ECSServiceRecommendedOptionProjectedMetric"
            }
        },
        "ECSServiceRecommendedOptionProjectedMetric": {
            "type": "object",
            "properties": {
                "recommendedCpuUnits": {
                    "$ref": "#/$defs/CpuSize"
                },
                "recommendedMemorySize": {
                    "$ref": "#/$defs/MemorySize"
                },
                "projectedMetrics": {
                    "$ref": "#/$defs/ECSServiceProjectedMetrics"
                }
            }
        },
        "CpuSize": {
            "type": "integer",
            "format": "int32"
        },
        "MemorySize": {
            "type": "integer",
            "format": "int32"
        },
        "ECSServiceProjectedMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ECSServiceProjectedMetric"
            }
        },
        "ECSServiceProjectedMetric": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ECSServiceMetricName"
                },
                "timestamps": {
                    "$ref": "#/$defs/Timestamps"
                },
                "upperBoundValues": {
                    "$ref": "#/$defs/MetricValues"
                },
                "lowerBoundValues": {
                    "$ref": "#/$defs/MetricValues"
                }
            }
        },
        "ECSServiceMetricName": {
            "enum": [
                "CPU",
                "MEMORY"
            ]
        },
        "GetECSServiceRecommendationProjectedMetricsRequest": {
            "type": "object",
            "properties": {
                "serviceArn": {
                    "$ref": "#/$defs/ServiceArn"
                },
                "stat": {
                    "$ref": "#/$defs/MetricStatistic"
                },
                "period": {
                    "$ref": "#/$defs/Period"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ServiceArn": {
            "type": "string"
        },
        "GetECSServiceRecommendationsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ecsServiceRecommendations": {
                    "$ref": "#/$defs/ECSServiceRecommendations"
                },
                "errors": {
                    "$ref": "#/$defs/GetRecommendationErrors"
                }
            }
        },
        "ECSServiceRecommendations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ECSServiceRecommendation"
            }
        },
        "ECSServiceRecommendation": {
            "type": "object",
            "properties": {
                "serviceArn": {
                    "$ref": "#/$defs/ServiceArn"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "currentServiceConfiguration": {
                    "$ref": "#/$defs/ServiceConfiguration"
                },
                "utilizationMetrics": {
                    "$ref": "#/$defs/ECSServiceUtilizationMetrics"
                },
                "lookbackPeriodInDays": {
                    "$ref": "#/$defs/LookBackPeriodInDays"
                },
                "launchType": {
                    "$ref": "#/$defs/ECSServiceLaunchType"
                },
                "lastRefreshTimestamp": {
                    "$ref": "#/$defs/LastRefreshTimestamp"
                },
                "finding": {
                    "$ref": "#/$defs/ECSServiceRecommendationFinding"
                },
                "findingReasonCodes": {
                    "$ref": "#/$defs/ECSServiceRecommendationFindingReasonCodes"
                },
                "serviceRecommendationOptions": {
                    "$ref": "#/$defs/ECSServiceRecommendationOptions"
                },
                "currentPerformanceRisk": {
                    "$ref": "#/$defs/CurrentPerformanceRisk"
                },
                "effectiveRecommendationPreferences": {
                    "$ref": "#/$defs/ECSEffectiveRecommendationPreferences"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ServiceConfiguration": {
            "type": "object",
            "properties": {
                "memory": {
                    "$ref": "#/$defs/NullableMemory"
                },
                "cpu": {
                    "$ref": "#/$defs/NullableCpu"
                },
                "containerConfigurations": {
                    "$ref": "#/$defs/ContainerConfigurations"
                },
                "autoScalingConfiguration": {
                    "$ref": "#/$defs/AutoScalingConfiguration"
                },
                "taskDefinitionArn": {
                    "$ref": "#/$defs/TaskDefinitionArn"
                }
            }
        },
        "NullableMemory": {
            "type": "integer",
            "format": "int32"
        },
        "NullableCpu": {
            "type": "integer",
            "format": "int32"
        },
        "ContainerConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerConfiguration"
            }
        },
        "ContainerConfiguration": {
            "type": "object",
            "properties": {
                "containerName": {
                    "$ref": "#/$defs/ContainerName"
                },
                "memorySizeConfiguration": {
                    "$ref": "#/$defs/MemorySizeConfiguration"
                },
                "cpu": {
                    "$ref": "#/$defs/NullableCpu"
                }
            }
        },
        "ContainerName": {
            "type": "string"
        },
        "MemorySizeConfiguration": {
            "type": "object",
            "properties": {
                "memory": {
                    "$ref": "#/$defs/NullableMemory"
                },
                "memoryReservation": {
                    "$ref": "#/$defs/NullableMemoryReservation"
                }
            }
        },
        "NullableMemoryReservation": {
            "type": "integer",
            "format": "int32"
        },
        "AutoScalingConfiguration": {
            "enum": [
                "TARGET_TRACKING_SCALING_CPU",
                "TARGET_TRACKING_SCALING_MEMORY"
            ]
        },
        "TaskDefinitionArn": {
            "type": "string"
        },
        "ECSServiceUtilizationMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ECSServiceUtilizationMetric"
            }
        },
        "ECSServiceUtilizationMetric": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ECSServiceMetricName"
                },
                "statistic": {
                    "$ref": "#/$defs/ECSServiceMetricStatistic"
                },
                "value": {
                    "$ref": "#/$defs/MetricValue"
                }
            }
        },
        "ECSServiceMetricStatistic": {
            "enum": [
                "MAXIMUM",
                "AVERAGE"
            ]
        },
        "ECSServiceLaunchType": {
            "enum": [
                "EC2",
                "FARGATE"
            ]
        },
        "ECSServiceRecommendationFinding": {
            "enum": [
                "OPTIMIZED",
                "UNDER_PROVISIONED",
                "OVER_PROVISIONED"
            ]
        },
        "ECSServiceRecommendationFindingReasonCodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ECSServiceRecommendationFindingReasonCode"
            }
        },
        "ECSServiceRecommendationFindingReasonCode": {
            "enum": [
                "MEMORY_OVER_PROVISIONED",
                "MEMORY_UNDER_PROVISIONED",
                "CPU_OVER_PROVISIONED",
                "CPU_UNDER_PROVISIONED"
            ]
        },
        "ECSServiceRecommendationOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ECSServiceRecommendationOption"
            }
        },
        "ECSServiceRecommendationOption": {
            "type": "object",
            "properties": {
                "memory": {
                    "$ref": "#/$defs/NullableMemory"
                },
                "cpu": {
                    "$ref": "#/$defs/NullableCpu"
                },
                "savingsOpportunity": {
                    "$ref": "#/$defs/SavingsOpportunity"
                },
                "savingsOpportunityAfterDiscounts": {
                    "$ref": "#/$defs/ECSSavingsOpportunityAfterDiscounts"
                },
                "projectedUtilizationMetrics": {
                    "$ref": "#/$defs/ECSServiceProjectedUtilizationMetrics"
                },
                "containerRecommendations": {
                    "$ref": "#/$defs/ContainerRecommendations"
                }
            }
        },
        "ECSSavingsOpportunityAfterDiscounts": {
            "type": "object",
            "properties": {
                "savingsOpportunityPercentage": {
                    "$ref": "#/$defs/SavingsOpportunityPercentage"
                },
                "estimatedMonthlySavings": {
                    "$ref": "#/$defs/ECSEstimatedMonthlySavings"
                }
            }
        },
        "ECSEstimatedMonthlySavings": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "ECSServiceProjectedUtilizationMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ECSServiceProjectedUtilizationMetric"
            }
        },
        "ECSServiceProjectedUtilizationMetric": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ECSServiceMetricName"
                },
                "statistic": {
                    "$ref": "#/$defs/ECSServiceMetricStatistic"
                },
                "lowerBoundValue": {
                    "$ref": "#/$defs/LowerBoundValue"
                },
                "upperBoundValue": {
                    "$ref": "#/$defs/UpperBoundValue"
                }
            }
        },
        "LowerBoundValue": {
            "type": "number",
            "format": "double"
        },
        "UpperBoundValue": {
            "type": "number",
            "format": "double"
        },
        "ContainerRecommendations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContainerRecommendation"
            }
        },
        "ContainerRecommendation": {
            "type": "object",
            "properties": {
                "containerName": {
                    "$ref": "#/$defs/ContainerName"
                },
                "memorySizeConfiguration": {
                    "$ref": "#/$defs/MemorySizeConfiguration"
                },
                "cpu": {
                    "$ref": "#/$defs/NullableCpu"
                }
            }
        },
        "ECSEffectiveRecommendationPreferences": {
            "type": "object",
            "properties": {
                "savingsEstimationMode": {
                    "$ref": "#/$defs/ECSSavingsEstimationMode"
                }
            }
        },
        "ECSSavingsEstimationMode": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/ECSSavingsEstimationModeSource"
                }
            }
        },
        "ECSSavingsEstimationModeSource": {
            "enum": [
                "PUBLIC_PRICING",
                "COST_EXPLORER_RIGHTSIZING",
                "COST_OPTIMIZATION_HUB"
            ]
        },
        "GetECSServiceRecommendationsRequest": {
            "type": "object",
            "properties": {
                "serviceArns": {
                    "$ref": "#/$defs/ServiceArns"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "filters": {
                    "$ref": "#/$defs/ECSServiceRecommendationFilters"
                },
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "ServiceArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceArn"
            }
        },
        "GetEffectiveRecommendationPreferencesResponse": {
            "type": "object",
            "properties": {
                "enhancedInfrastructureMetrics": {
                    "$ref": "#/$defs/EnhancedInfrastructureMetrics"
                },
                "externalMetricsPreference": {
                    "$ref": "#/$defs/ExternalMetricsPreference"
                },
                "lookBackPeriod": {
                    "$ref": "#/$defs/LookBackPeriodPreference"
                },
                "utilizationPreferences": {
                    "$ref": "#/$defs/UtilizationPreferences"
                },
                "preferredResources": {
                    "$ref": "#/$defs/EffectivePreferredResources"
                }
            }
        },
        "GetEffectiveRecommendationPreferencesRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "GetEnrollmentStatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "statusReason": {
                    "$ref": "#/$defs/StatusReason"
                },
                "memberAccountsEnrolled": {
                    "$ref": "#/$defs/MemberAccountsEnrolled"
                },
                "lastUpdatedTimestamp": {
                    "$ref": "#/$defs/LastUpdatedTimestamp"
                },
                "numberOfMemberAccountsOptedIn": {
                    "$ref": "#/$defs/NumberOfMemberAccountsOptedIn"
                }
            }
        },
        "Status": {
            "enum": [
                "ACTIVE",
                "INACTIVE",
                "PENDING",
                "FAILED"
            ]
        },
        "StatusReason": {
            "type": "string"
        },
        "MemberAccountsEnrolled": {
            "type": "boolean"
        },
        "NumberOfMemberAccountsOptedIn": {
            "type": "integer",
            "format": "int32"
        },
        "GetEnrollmentStatusRequest": {
            "type": "object",
            "properties": {}
        },
        "GetEnrollmentStatusesForOrganizationResponse": {
            "type": "object",
            "properties": {
                "accountEnrollmentStatuses": {
                    "$ref": "#/$defs/AccountEnrollmentStatuses"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AccountEnrollmentStatuses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountEnrollmentStatus"
            }
        },
        "AccountEnrollmentStatus": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "statusReason": {
                    "$ref": "#/$defs/StatusReason"
                },
                "lastUpdatedTimestamp": {
                    "$ref": "#/$defs/LastUpdatedTimestamp"
                }
            }
        },
        "GetEnrollmentStatusesForOrganizationRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/EnrollmentFilters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "EnrollmentFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnrollmentFilter"
            }
        },
        "EnrollmentFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/EnrollmentFilterName"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "EnrollmentFilterName": {
            "enum": [
                "STATUS"
            ]
        },
        "GetLambdaFunctionRecommendationsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "lambdaFunctionRecommendations": {
                    "$ref": "#/$defs/LambdaFunctionRecommendations"
                }
            }
        },
        "LambdaFunctionRecommendations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LambdaFunctionRecommendation"
            }
        },
        "LambdaFunctionRecommendation": {
            "type": "object",
            "properties": {
                "functionArn": {
                    "$ref": "#/$defs/FunctionArn"
                },
                "functionVersion": {
                    "$ref": "#/$defs/FunctionVersion"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "currentMemorySize": {
                    "$ref": "#/$defs/MemorySize"
                },
                "numberOfInvocations": {
                    "$ref": "#/$defs/NumberOfInvocations"
                },
                "utilizationMetrics": {
                    "$ref": "#/$defs/LambdaFunctionUtilizationMetrics"
                },
                "lookbackPeriodInDays": {
                    "$ref": "#/$defs/LookBackPeriodInDays"
                },
                "lastRefreshTimestamp": {
                    "$ref": "#/$defs/LastRefreshTimestamp"
                },
                "finding": {
                    "$ref": "#/$defs/LambdaFunctionRecommendationFinding"
                },
                "findingReasonCodes": {
                    "$ref": "#/$defs/LambdaFunctionRecommendationFindingReasonCodes"
                },
                "memorySizeRecommendationOptions": {
                    "$ref": "#/$defs/LambdaFunctionMemoryRecommendationOptions"
                },
                "currentPerformanceRisk": {
                    "$ref": "#/$defs/CurrentPerformanceRisk"
                },
                "effectiveRecommendationPreferences": {
                    "$ref": "#/$defs/LambdaEffectiveRecommendationPreferences"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "FunctionArn": {
            "type": "string"
        },
        "FunctionVersion": {
            "type": "string"
        },
        "NumberOfInvocations": {
            "type": "integer",
            "format": "int64"
        },
        "LambdaFunctionUtilizationMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LambdaFunctionUtilizationMetric"
            }
        },
        "LambdaFunctionUtilizationMetric": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/LambdaFunctionMetricName"
                },
                "statistic": {
                    "$ref": "#/$defs/LambdaFunctionMetricStatistic"
                },
                "value": {
                    "$ref": "#/$defs/MetricValue"
                }
            }
        },
        "LambdaFunctionMetricName": {
            "enum": [
                "DURATION",
                "MEMORY"
            ]
        },
        "LambdaFunctionMetricStatistic": {
            "enum": [
                "MAXIMUM",
                "AVERAGE"
            ]
        },
        "LambdaFunctionRecommendationFinding": {
            "enum": [
                "OPTIMIZED",
                "NOT_OPTIMIZED",
                "UNAVAILABLE"
            ]
        },
        "LambdaFunctionRecommendationFindingReasonCodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LambdaFunctionRecommendationFindingReasonCode"
            }
        },
        "LambdaFunctionRecommendationFindingReasonCode": {
            "enum": [
                "MEMORY_OVER_PROVISIONED",
                "MEMORY_UNDER_PROVISIONED",
                "INSUFFICIENT_DATA",
                "INCONCLUSIVE"
            ]
        },
        "LambdaFunctionMemoryRecommendationOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LambdaFunctionMemoryRecommendationOption"
            }
        },
        "LambdaFunctionMemoryRecommendationOption": {
            "type": "object",
            "properties": {
                "rank": {
                    "$ref": "#/$defs/Rank"
                },
                "memorySize": {
                    "$ref": "#/$defs/MemorySize"
                },
                "projectedUtilizationMetrics": {
                    "$ref": "#/$defs/LambdaFunctionMemoryProjectedMetrics"
                },
                "savingsOpportunity": {
                    "$ref": "#/$defs/SavingsOpportunity"
                },
                "savingsOpportunityAfterDiscounts": {
                    "$ref": "#/$defs/LambdaSavingsOpportunityAfterDiscounts"
                }
            }
        },
        "LambdaFunctionMemoryProjectedMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LambdaFunctionMemoryProjectedMetric"
            }
        },
        "LambdaFunctionMemoryProjectedMetric": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/LambdaFunctionMemoryMetricName"
                },
                "statistic": {
                    "$ref": "#/$defs/LambdaFunctionMemoryMetricStatistic"
                },
                "value": {
                    "$ref": "#/$defs/MetricValue"
                }
            }
        },
        "LambdaFunctionMemoryMetricName": {
            "enum": [
                "DURATION"
            ]
        },
        "LambdaFunctionMemoryMetricStatistic": {
            "enum": [
                "LOWER_BOUND",
                "UPPER_BOUND",
                "EXPECTED"
            ]
        },
        "LambdaSavingsOpportunityAfterDiscounts": {
            "type": "object",
            "properties": {
                "savingsOpportunityPercentage": {
                    "$ref": "#/$defs/SavingsOpportunityPercentage"
                },
                "estimatedMonthlySavings": {
                    "$ref": "#/$defs/LambdaEstimatedMonthlySavings"
                }
            }
        },
        "LambdaEstimatedMonthlySavings": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "LambdaEffectiveRecommendationPreferences": {
            "type": "object",
            "properties": {
                "savingsEstimationMode": {
                    "$ref": "#/$defs/LambdaSavingsEstimationMode"
                }
            }
        },
        "LambdaSavingsEstimationMode": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/LambdaSavingsEstimationModeSource"
                }
            }
        },
        "LambdaSavingsEstimationModeSource": {
            "enum": [
                "PUBLIC_PRICING",
                "COST_EXPLORER_RIGHTSIZING",
                "COST_OPTIMIZATION_HUB"
            ]
        },
        "GetLambdaFunctionRecommendationsRequest": {
            "type": "object",
            "properties": {
                "functionArns": {
                    "$ref": "#/$defs/FunctionArns"
                },
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "filters": {
                    "$ref": "#/$defs/LambdaFunctionRecommendationFilters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "FunctionArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FunctionArn"
            }
        },
        "GetLicenseRecommendationsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "licenseRecommendations": {
                    "$ref": "#/$defs/LicenseRecommendations"
                },
                "errors": {
                    "$ref": "#/$defs/GetRecommendationErrors"
                }
            }
        },
        "LicenseRecommendations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LicenseRecommendation"
            }
        },
        "LicenseRecommendation": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "currentLicenseConfiguration": {
                    "$ref": "#/$defs/LicenseConfiguration"
                },
                "lookbackPeriodInDays": {
                    "$ref": "#/$defs/LookBackPeriodInDays"
                },
                "lastRefreshTimestamp": {
                    "$ref": "#/$defs/LastRefreshTimestamp"
                },
                "finding": {
                    "$ref": "#/$defs/LicenseFinding"
                },
                "findingReasonCodes": {
                    "$ref": "#/$defs/LicenseFindingReasonCodes"
                },
                "licenseRecommendationOptions": {
                    "$ref": "#/$defs/LicenseRecommendationOptions"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "LicenseConfiguration": {
            "type": "object",
            "properties": {
                "numberOfCores": {
                    "$ref": "#/$defs/NumberOfCores"
                },
                "instanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "operatingSystem": {
                    "$ref": "#/$defs/OperatingSystem"
                },
                "licenseEdition": {
                    "$ref": "#/$defs/LicenseEdition"
                },
                "licenseName": {
                    "$ref": "#/$defs/LicenseName"
                },
                "licenseModel": {
                    "$ref": "#/$defs/LicenseModel"
                },
                "licenseVersion": {
                    "$ref": "#/$defs/LicenseVersion"
                },
                "metricsSource": {
                    "$ref": "#/$defs/MetricsSource"
                }
            }
        },
        "NumberOfCores": {
            "type": "integer",
            "format": "int32"
        },
        "OperatingSystem": {
            "type": "string"
        },
        "LicenseEdition": {
            "enum": [
                "ENTERPRISE",
                "STANDARD",
                "FREE",
                "NO_LICENSE_EDITION_FOUND"
            ]
        },
        "LicenseName": {
            "enum": [
                "SQLSERVER"
            ]
        },
        "LicenseModel": {
            "enum": [
                "LICENSE_INCLUDED",
                "BRING_YOUR_OWN_LICENSE"
            ]
        },
        "LicenseVersion": {
            "type": "string"
        },
        "MetricsSource": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricSource"
            }
        },
        "MetricSource": {
            "type": "object",
            "properties": {
                "provider": {
                    "$ref": "#/$defs/MetricSourceProvider"
                },
                "providerArn": {
                    "$ref": "#/$defs/MetricProviderArn"
                }
            }
        },
        "MetricSourceProvider": {
            "enum": [
                "CloudWatchAppInsights"
            ]
        },
        "MetricProviderArn": {
            "type": "string"
        },
        "LicenseFinding": {
            "enum": [
                "INSUFFICIENT_METRICS",
                "OPTIMIZED",
                "NOT_OPTIMIZED"
            ]
        },
        "LicenseFindingReasonCodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LicenseFindingReasonCode"
            }
        },
        "LicenseFindingReasonCode": {
            "enum": [
                "CW_APP_INSIGHTS_DISABLED",
                "CW_APP_INSIGHTS_ERROR",
                "LICENSE_OVER_PROVISIONED",
                "OPTIMIZED"
            ]
        },
        "LicenseRecommendationOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LicenseRecommendationOption"
            }
        },
        "LicenseRecommendationOption": {
            "type": "object",
            "properties": {
                "rank": {
                    "$ref": "#/$defs/Rank"
                },
                "operatingSystem": {
                    "$ref": "#/$defs/OperatingSystem"
                },
                "licenseEdition": {
                    "$ref": "#/$defs/LicenseEdition"
                },
                "licenseModel": {
                    "$ref": "#/$defs/LicenseModel"
                },
                "savingsOpportunity": {
                    "$ref": "#/$defs/SavingsOpportunity"
                }
            }
        },
        "GetLicenseRecommendationsRequest": {
            "type": "object",
            "properties": {
                "resourceArns": {
                    "$ref": "#/$defs/ResourceArns"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "filters": {
                    "$ref": "#/$defs/LicenseRecommendationFilters"
                },
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                }
            }
        },
        "ResourceArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceArn"
            }
        },
        "GetRDSDatabaseRecommendationProjectedMetricsResponse": {
            "type": "object",
            "properties": {
                "recommendedOptionProjectedMetrics": {
                    "$ref": "#/$defs/RDSDatabaseRecommendedOptionProjectedMetrics"
                }
            }
        },
        "RDSDatabaseRecommendedOptionProjectedMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RDSDatabaseRecommendedOptionProjectedMetric"
            }
        },
        "RDSDatabaseRecommendedOptionProjectedMetric": {
            "type": "object",
            "properties": {
                "recommendedDBInstanceClass": {
                    "$ref": "#/$defs/RecommendedDBInstanceClass"
                },
                "rank": {
                    "$ref": "#/$defs/Rank"
                },
                "projectedMetrics": {
                    "$ref": "#/$defs/RDSDatabaseProjectedMetrics"
                }
            }
        },
        "RecommendedDBInstanceClass": {
            "type": "string"
        },
        "RDSDatabaseProjectedMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RDSDatabaseProjectedMetric"
            }
        },
        "RDSDatabaseProjectedMetric": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/RDSDBMetricName"
                },
                "timestamps": {
                    "$ref": "#/$defs/Timestamps"
                },
                "values": {
                    "$ref": "#/$defs/MetricValues"
                }
            }
        },
        "RDSDBMetricName": {
            "enum": [
                "CPU",
                "MEMORY",
                "EBS_VOLUME_STORAGE_SPACE_UTILIZATION",
                "NETWORK_RECEIVE_THROUGHPUT",
                "NETWORK_TRANSMIT_THROUGHPUT",
                "EBS_VOLUME_READ_IOPS",
                "EBS_VOLUME_WRITE_IOPS",
                "EBS_VOLUME_READ_THROUGHPUT",
                "EBS_VOLUME_WRITE_THROUGHPUT",
                "DATABASE_CONNECTIONS"
            ]
        },
        "GetRDSDatabaseRecommendationProjectedMetricsRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "stat": {
                    "$ref": "#/$defs/MetricStatistic"
                },
                "period": {
                    "$ref": "#/$defs/Period"
                },
                "startTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "recommendationPreferences": {
                    "$ref": "#/$defs/RecommendationPreferences"
                }
            }
        },
        "GetRDSDatabaseRecommendationsResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "rdsDBRecommendations": {
                    "$ref": "#/$defs/RDSDBRecommendations"
                },
                "errors": {
                    "$ref": "#/$defs/GetRecommendationErrors"
                }
            }
        },
        "RDSDBRecommendations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RDSDBRecommendation"
            }
        },
        "RDSDBRecommendation": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "engine": {
                    "$ref": "#/$defs/Engine"
                },
                "engineVersion": {
                    "$ref": "#/$defs/EngineVersion"
                },
                "currentDBInstanceClass": {
                    "$ref": "#/$defs/CurrentDBInstanceClass"
                },
                "currentStorageConfiguration": {
                    "$ref": "#/$defs/DBStorageConfiguration"
                },
                "idle": {
                    "$ref": "#/$defs/Idle"
                },
                "instanceFinding": {
                    "$ref": "#/$defs/RDSInstanceFinding"
                },
                "storageFinding": {
                    "$ref": "#/$defs/RDSStorageFinding"
                },
                "instanceFindingReasonCodes": {
                    "$ref": "#/$defs/RDSInstanceFindingReasonCodes"
                },
                "storageFindingReasonCodes": {
                    "$ref": "#/$defs/RDSStorageFindingReasonCodes"
                },
                "instanceRecommendationOptions": {
                    "$ref": "#/$defs/RDSDBInstanceRecommendationOptions"
                },
                "storageRecommendationOptions": {
                    "$ref": "#/$defs/RDSDBStorageRecommendationOptions"
                },
                "utilizationMetrics": {
                    "$ref": "#/$defs/RDSDBUtilizationMetrics"
                },
                "effectiveRecommendationPreferences": {
                    "$ref": "#/$defs/RDSEffectiveRecommendationPreferences"
                },
                "lookbackPeriodInDays": {
                    "$ref": "#/$defs/LookBackPeriodInDays"
                },
                "lastRefreshTimestamp": {
                    "$ref": "#/$defs/LastRefreshTimestamp"
                },
                "tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "Engine": {
            "type": "string"
        },
        "EngineVersion": {
            "type": "string"
        },
        "CurrentDBInstanceClass": {
            "type": "string"
        },
        "DBStorageConfiguration": {
            "type": "object",
            "properties": {
                "storageType": {
                    "$ref": "#/$defs/StorageType"
                },
                "allocatedStorage": {
                    "$ref": "#/$defs/AllocatedStorage"
                },
                "iops": {
                    "$ref": "#/$defs/NullableIOPS"
                },
                "maxAllocatedStorage": {
                    "$ref": "#/$defs/NullableMaxAllocatedStorage"
                },
                "storageThroughput": {
                    "$ref": "#/$defs/NullableStorageThroughput"
                }
            }
        },
        "StorageType": {
            "type": "string"
        },
        "AllocatedStorage": {
            "type": "integer",
            "format": "int32"
        },
        "NullableIOPS": {
            "type": "integer",
            "format": "int32"
        },
        "NullableMaxAllocatedStorage": {
            "type": "integer",
            "format": "int32"
        },
        "NullableStorageThroughput": {
            "type": "integer",
            "format": "int32"
        },
        "Idle": {
            "enum": [
                "TRUE",
                "FALSE"
            ]
        },
        "RDSInstanceFinding": {
            "enum": [
                "OPTIMIZED",
                "UNDER_PROVISIONED",
                "OVER_PROVISIONED"
            ]
        },
        "RDSStorageFinding": {
            "enum": [
                "OPTIMIZED",
                "UNDER_PROVISIONED",
                "OVER_PROVISIONED"
            ]
        },
        "RDSInstanceFindingReasonCodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RDSInstanceFindingReasonCode"
            }
        },
        "RDSInstanceFindingReasonCode": {
            "enum": [
                "CPU_OVER_PROVISIONED",
                "NETWORK_BANDWIDTH_OVER_PROVISIONED",
                "EBS_IOPS_OVER_PROVISIONED",
                "EBS_THROUGHPUT_OVER_PROVISIONED",
                "CPU_UNDER_PROVISIONED",
                "NETWORK_BANDWIDTH_UNDER_PROVISIONED",
                "EBS_THROUGHPUT_UNDER_PROVISIONED",
                "NEW_GENERATION_DB_INSTANCE_CLASS_AVAILABLE",
                "NEW_ENGINE_VERSION_AVAILABLE"
            ]
        },
        "RDSStorageFindingReasonCodes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RDSStorageFindingReasonCode"
            }
        },
        "RDSStorageFindingReasonCode": {
            "enum": [
                "EBS_VOLUME_ALLOCATED_STORAGE_UNDER_PROVISIONED",
                "EBS_VOLUME_THROUGHPUT_UNDER_PROVISIONED",
                "EBS_VOLUME_IOPS_OVER_PROVISIONED",
                "EBS_VOLUME_THROUGHPUT_OVER_PROVISIONED",
                "NEW_GENERATION_STORAGE_TYPE_AVAILABLE"
            ]
        },
        "RDSDBInstanceRecommendationOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RDSDBInstanceRecommendationOption"
            }
        },
        "RDSDBInstanceRecommendationOption": {
            "type": "object",
            "properties": {
                "dbInstanceClass": {
                    "$ref": "#/$defs/DBInstanceClass"
                },
                "projectedUtilizationMetrics": {
                    "$ref": "#/$defs/RDSDBProjectedUtilizationMetrics"
                },
                "performanceRisk": {
                    "$ref": "#/$defs/PerformanceRisk"
                },
                "rank": {
                    "$ref": "#/$defs/Rank"
                },
                "savingsOpportunity": {
                    "$ref": "#/$defs/SavingsOpportunity"
                },
                "savingsOpportunityAfterDiscounts": {
                    "$ref": "#/$defs/RDSInstanceSavingsOpportunityAfterDiscounts"
                }
            }
        },
        "DBInstanceClass": {
            "type": "string"
        },
        "RDSDBProjectedUtilizationMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RDSDBUtilizationMetric"
            }
        },
        "RDSDBUtilizationMetric": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/RDSDBMetricName"
                },
                "statistic": {
                    "$ref": "#/$defs/RDSDBMetricStatistic"
                },
                "value": {
                    "$ref": "#/$defs/MetricValue"
                }
            }
        },
        "RDSDBMetricStatistic": {
            "enum": [
                "MAXIMUM",
                "MINIMUM",
                "AVERAGE"
            ]
        },
        "RDSInstanceSavingsOpportunityAfterDiscounts": {
            "type": "object",
            "properties": {
                "savingsOpportunityPercentage": {
                    "$ref": "#/$defs/SavingsOpportunityPercentage"
                },
                "estimatedMonthlySavings": {
                    "$ref": "#/$defs/RDSInstanceEstimatedMonthlySavings"
                }
            }
        },
        "RDSInstanceEstimatedMonthlySavings": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "RDSDBStorageRecommendationOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RDSDBStorageRecommendationOption"
            }
        },
        "RDSDBStorageRecommendationOption": {
            "type": "object",
            "properties": {
                "storageConfiguration": {
                    "$ref": "#/$defs/DBStorageConfiguration"
                },
                "rank": {
                    "$ref": "#/$defs/Rank"
                },
                "savingsOpportunity": {
                    "$ref": "#/$defs/SavingsOpportunity"
                },
                "savingsOpportunityAfterDiscounts": {
                    "$ref": "#/$defs/RDSStorageSavingsOpportunityAfterDiscounts"
                }
            }
        },
        "RDSStorageSavingsOpportunityAfterDiscounts": {
            "type": "object",
            "properties": {
                "savingsOpportunityPercentage": {
                    "$ref": "#/$defs/SavingsOpportunityPercentage"
                },
                "estimatedMonthlySavings": {
                    "$ref": "#/$defs/RDSStorageEstimatedMonthlySavings"
                }
            }
        },
        "RDSStorageEstimatedMonthlySavings": {
            "type": "object",
            "properties": {
                "currency": {
                    "$ref": "#/$defs/Currency"
                },
                "value": {
                    "$ref": "#/$defs/Value"
                }
            }
        },
        "RDSDBUtilizationMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RDSDBUtilizationMetric"
            }
        },
        "RDSEffectiveRecommendationPreferences": {
            "type": "object",
            "properties": {
                "cpuVendorArchitectures": {
                    "$ref": "#/$defs/CpuVendorArchitectures"
                },
                "enhancedInfrastructureMetrics": {
                    "$ref": "#/$defs/EnhancedInfrastructureMetrics"
                },
                "lookBackPeriod": {
                    "$ref": "#/$defs/LookBackPeriodPreference"
                },
                "savingsEstimationMode": {
                    "$ref": "#/$defs/RDSSavingsEstimationMode"
                }
            }
        },
        "RDSSavingsEstimationMode": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/RDSSavingsEstimationModeSource"
                }
            }
        },
        "RDSSavingsEstimationModeSource": {
            "enum": [
                "PUBLIC_PRICING",
                "COST_EXPLORER_RIGHTSIZING",
                "COST_OPTIMIZATION_HUB"
            ]
        },
        "GetRDSDatabaseRecommendationsRequest": {
            "type": "object",
            "properties": {
                "resourceArns": {
                    "$ref": "#/$defs/ResourceArns"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "filters": {
                    "$ref": "#/$defs/RDSDBRecommendationFilters"
                },
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "recommendationPreferences": {
                    "$ref": "#/$defs/RecommendationPreferences"
                }
            }
        },
        "GetRecommendationPreferencesResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "recommendationPreferencesDetails": {
                    "$ref": "#/$defs/RecommendationPreferencesDetails"
                }
            }
        },
        "RecommendationPreferencesDetails": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationPreferencesDetail"
            }
        },
        "RecommendationPreferencesDetail": {
            "type": "object",
            "properties": {
                "scope": {
                    "$ref": "#/$defs/Scope"
                },
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "enhancedInfrastructureMetrics": {
                    "$ref": "#/$defs/EnhancedInfrastructureMetrics"
                },
                "inferredWorkloadTypes": {
                    "$ref": "#/$defs/InferredWorkloadTypesPreference"
                },
                "externalMetricsPreference": {
                    "$ref": "#/$defs/ExternalMetricsPreference"
                },
                "lookBackPeriod": {
                    "$ref": "#/$defs/LookBackPeriodPreference"
                },
                "utilizationPreferences": {
                    "$ref": "#/$defs/UtilizationPreferences"
                },
                "preferredResources": {
                    "$ref": "#/$defs/EffectivePreferredResources"
                },
                "savingsEstimationMode": {
                    "$ref": "#/$defs/SavingsEstimationMode"
                }
            }
        },
        "SavingsEstimationMode": {
            "enum": [
                "AFTER_DISCOUNTS",
                "BEFORE_DISCOUNTS"
            ]
        },
        "GetRecommendationPreferencesRequest": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "scope": {
                    "$ref": "#/$defs/Scope"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "GetRecommendationSummariesResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "recommendationSummaries": {
                    "$ref": "#/$defs/RecommendationSummaries"
                }
            }
        },
        "RecommendationSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecommendationSummary"
            }
        },
        "RecommendationSummary": {
            "type": "object",
            "properties": {
                "summaries": {
                    "$ref": "#/$defs/Summaries"
                },
                "recommendationResourceType": {
                    "$ref": "#/$defs/RecommendationSourceType"
                },
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "savingsOpportunity": {
                    "$ref": "#/$defs/SavingsOpportunity"
                },
                "currentPerformanceRiskRatings": {
                    "$ref": "#/$defs/CurrentPerformanceRiskRatings"
                },
                "inferredWorkloadSavings": {
                    "$ref": "#/$defs/InferredWorkloadSavings"
                }
            }
        },
        "Summaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Summary"
            }
        },
        "Summary": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/Finding"
                },
                "value": {
                    "$ref": "#/$defs/SummaryValue"
                },
                "reasonCodeSummaries": {
                    "$ref": "#/$defs/ReasonCodeSummaries"
                }
            }
        },
        "SummaryValue": {
            "type": "number",
            "format": "double"
        },
        "ReasonCodeSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReasonCodeSummary"
            }
        },
        "ReasonCodeSummary": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/FindingReasonCode"
                },
                "value": {
                    "$ref": "#/$defs/SummaryValue"
                }
            }
        },
        "FindingReasonCode": {
            "enum": [
                "MEMORY_OVER_PROVISIONED",
                "MEMORY_UNDER_PROVISIONED"
            ]
        },
        "CurrentPerformanceRiskRatings": {
            "type": "object",
            "properties": {
                "high": {
                    "$ref": "#/$defs/High"
                },
                "medium": {
                    "$ref": "#/$defs/Medium"
                },
                "low": {
                    "$ref": "#/$defs/Low"
                },
                "veryLow": {
                    "$ref": "#/$defs/VeryLow"
                }
            }
        },
        "High": {
            "type": "integer",
            "format": "int64"
        },
        "Medium": {
            "type": "integer",
            "format": "int64"
        },
        "Low": {
            "type": "integer",
            "format": "int64"
        },
        "VeryLow": {
            "type": "integer",
            "format": "int64"
        },
        "InferredWorkloadSavings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InferredWorkloadSaving"
            }
        },
        "InferredWorkloadSaving": {
            "type": "object",
            "properties": {
                "inferredWorkloadTypes": {
                    "$ref": "#/$defs/InferredWorkloadTypes"
                },
                "estimatedMonthlySavings": {
                    "$ref": "#/$defs/EstimatedMonthlySavings"
                }
            }
        },
        "GetRecommendationSummariesRequest": {
            "type": "object",
            "properties": {
                "accountIds": {
                    "$ref": "#/$defs/AccountIds"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "PutRecommendationPreferencesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutRecommendationPreferencesRequest": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "scope": {
                    "$ref": "#/$defs/Scope"
                },
                "enhancedInfrastructureMetrics": {
                    "$ref": "#/$defs/EnhancedInfrastructureMetrics"
                },
                "inferredWorkloadTypes": {
                    "$ref": "#/$defs/InferredWorkloadTypesPreference"
                },
                "externalMetricsPreference": {
                    "$ref": "#/$defs/ExternalMetricsPreference"
                },
                "lookBackPeriod": {
                    "$ref": "#/$defs/LookBackPeriodPreference"
                },
                "utilizationPreferences": {
                    "$ref": "#/$defs/UtilizationPreferences"
                },
                "preferredResources": {
                    "$ref": "#/$defs/PreferredResources"
                },
                "savingsEstimationMode": {
                    "$ref": "#/$defs/SavingsEstimationMode"
                }
            }
        },
        "PreferredResources": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PreferredResource"
            }
        },
        "PreferredResource": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/PreferredResourceName"
                },
                "includeList": {
                    "$ref": "#/$defs/PreferredResourceValues"
                },
                "excludeList": {
                    "$ref": "#/$defs/PreferredResourceValues"
                }
            }
        },
        "UpdateEnrollmentStatusResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "statusReason": {
                    "$ref": "#/$defs/StatusReason"
                }
            }
        },
        "UpdateEnrollmentStatusRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "includeMemberAccounts": {
                    "$ref": "#/$defs/IncludeMemberAccounts"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://compute-optimizer-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://compute-optimizer-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://compute-optimizer.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://compute-optimizer.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}