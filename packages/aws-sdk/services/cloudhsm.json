{
    "name": "cloudhsm",
    "commands": [
        {
            "name": "AddTagsToResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.AddTagsToResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddTagsToResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddTagsToResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateHapg",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.CreateHapg"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateHapgResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateHapgRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateHsm",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.CreateHsm"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateHsmResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateHsmRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLunaClient",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.CreateLunaClient"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLunaClientResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLunaClientRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteHapg",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.DeleteHapg"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteHapgResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteHapgRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteHsm",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.DeleteHsm"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteHsmResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteHsmRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLunaClient",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.DeleteLunaClient"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLunaClientResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLunaClientRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeHapg",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.DescribeHapg"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeHapgResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeHapgRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeHsm",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.DescribeHsm"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeHsmResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeHsmRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLunaClient",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.DescribeLunaClient"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLunaClientResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLunaClientRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetConfig",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.GetConfig"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConfigResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConfigRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAvailableZones",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.ListAvailableZones"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAvailableZonesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAvailableZonesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListHapgs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.ListHapgs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListHapgsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListHapgsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListHsms",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.ListHsms"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListHsmsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListHsmsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListLunaClients",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.ListLunaClients"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListLunaClientsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListLunaClientsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyHapg",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.ModifyHapg"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyHapgResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyHapgRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyHsm",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.ModifyHsm"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyHsmResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyHsmRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyLunaClient",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.ModifyLunaClient"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyLunaClientResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyLunaClientRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveTagsFromResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CloudHsmFrontendService.RemoveTagsFromResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveTagsFromResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveTagsFromResourceRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddTagsToResourceResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "AddTagsToResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/String"
                },
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateHapgResponse": {
            "type": "object",
            "properties": {
                "HapgArn": {
                    "$ref": "#/$defs/HapgArn"
                }
            }
        },
        "HapgArn": {
            "type": "string"
        },
        "CreateHapgRequest": {
            "type": "object",
            "properties": {
                "Label": {
                    "$ref": "#/$defs/Label"
                }
            }
        },
        "Label": {
            "type": "string"
        },
        "CreateHsmResponse": {
            "type": "object",
            "properties": {
                "HsmArn": {
                    "$ref": "#/$defs/HsmArn"
                }
            }
        },
        "HsmArn": {
            "type": "string"
        },
        "CreateHsmRequest": {
            "type": "object",
            "properties": {
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "SshKey": {
                    "$ref": "#/$defs/SshKey"
                },
                "EniIp": {
                    "$ref": "#/$defs/IpAddress"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "ExternalId": {
                    "$ref": "#/$defs/ExternalId"
                },
                "SubscriptionType": {
                    "$ref": "#/$defs/SubscriptionType"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "SyslogIp": {
                    "$ref": "#/$defs/IpAddress"
                }
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "SshKey": {
            "type": "string"
        },
        "IpAddress": {
            "type": "string"
        },
        "IamRoleArn": {
            "type": "string"
        },
        "ExternalId": {
            "type": "string"
        },
        "SubscriptionType": {
            "enum": [
                "PRODUCTION"
            ]
        },
        "ClientToken": {
            "type": "string"
        },
        "CreateLunaClientResponse": {
            "type": "object",
            "properties": {
                "ClientArn": {
                    "$ref": "#/$defs/ClientArn"
                }
            }
        },
        "ClientArn": {
            "type": "string"
        },
        "CreateLunaClientRequest": {
            "type": "object",
            "properties": {
                "Label": {
                    "$ref": "#/$defs/ClientLabel"
                },
                "Certificate": {
                    "$ref": "#/$defs/Certificate"
                }
            }
        },
        "ClientLabel": {
            "type": "string"
        },
        "Certificate": {
            "type": "string"
        },
        "DeleteHapgResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteHapgRequest": {
            "type": "object",
            "properties": {
                "HapgArn": {
                    "$ref": "#/$defs/HapgArn"
                }
            }
        },
        "DeleteHsmResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteHsmRequest": {
            "type": "object",
            "properties": {
                "HsmArn": {
                    "$ref": "#/$defs/HsmArn"
                }
            }
        },
        "DeleteLunaClientResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteLunaClientRequest": {
            "type": "object",
            "properties": {
                "ClientArn": {
                    "$ref": "#/$defs/ClientArn"
                }
            }
        },
        "DescribeHapgResponse": {
            "type": "object",
            "properties": {
                "HapgArn": {
                    "$ref": "#/$defs/HapgArn"
                },
                "HapgSerial": {
                    "$ref": "#/$defs/String"
                },
                "HsmsLastActionFailed": {
                    "$ref": "#/$defs/HsmList"
                },
                "HsmsPendingDeletion": {
                    "$ref": "#/$defs/HsmList"
                },
                "HsmsPendingRegistration": {
                    "$ref": "#/$defs/HsmList"
                },
                "Label": {
                    "$ref": "#/$defs/Label"
                },
                "LastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "PartitionSerialList": {
                    "$ref": "#/$defs/PartitionSerialList"
                },
                "State": {
                    "$ref": "#/$defs/CloudHsmObjectState"
                }
            }
        },
        "HsmList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HsmArn"
            }
        },
        "Timestamp": {
            "type": "string"
        },
        "PartitionSerialList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionSerial"
            }
        },
        "PartitionSerial": {
            "type": "string"
        },
        "CloudHsmObjectState": {
            "enum": [
                "READY",
                "UPDATING",
                "DEGRADED"
            ]
        },
        "DescribeHapgRequest": {
            "type": "object",
            "properties": {
                "HapgArn": {
                    "$ref": "#/$defs/HapgArn"
                }
            }
        },
        "DescribeHsmResponse": {
            "type": "object",
            "properties": {
                "HsmArn": {
                    "$ref": "#/$defs/HsmArn"
                },
                "Status": {
                    "$ref": "#/$defs/HsmStatus"
                },
                "StatusDetails": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/AZ"
                },
                "EniId": {
                    "$ref": "#/$defs/EniId"
                },
                "EniIp": {
                    "$ref": "#/$defs/IpAddress"
                },
                "SubscriptionType": {
                    "$ref": "#/$defs/SubscriptionType"
                },
                "SubscriptionStartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "SubscriptionEndDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "SerialNumber": {
                    "$ref": "#/$defs/HsmSerialNumber"
                },
                "VendorName": {
                    "$ref": "#/$defs/String"
                },
                "HsmType": {
                    "$ref": "#/$defs/String"
                },
                "SoftwareVersion": {
                    "$ref": "#/$defs/String"
                },
                "SshPublicKey": {
                    "$ref": "#/$defs/SshKey"
                },
                "SshKeyLastUpdated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ServerCertUri": {
                    "$ref": "#/$defs/String"
                },
                "ServerCertLastUpdated": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Partitions": {
                    "$ref": "#/$defs/PartitionList"
                }
            }
        },
        "HsmStatus": {
            "enum": [
                "PENDING",
                "RUNNING",
                "UPDATING",
                "SUSPENDED",
                "TERMINATING",
                "TERMINATED",
                "DEGRADED"
            ]
        },
        "AZ": {
            "type": "string"
        },
        "EniId": {
            "type": "string"
        },
        "VpcId": {
            "type": "string"
        },
        "HsmSerialNumber": {
            "type": "string"
        },
        "PartitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PartitionArn"
            }
        },
        "PartitionArn": {
            "type": "string"
        },
        "DescribeHsmRequest": {
            "type": "object",
            "properties": {
                "HsmArn": {
                    "$ref": "#/$defs/HsmArn"
                },
                "HsmSerialNumber": {
                    "$ref": "#/$defs/HsmSerialNumber"
                }
            }
        },
        "DescribeLunaClientResponse": {
            "type": "object",
            "properties": {
                "ClientArn": {
                    "$ref": "#/$defs/ClientArn"
                },
                "Certificate": {
                    "$ref": "#/$defs/Certificate"
                },
                "CertificateFingerprint": {
                    "$ref": "#/$defs/CertificateFingerprint"
                },
                "LastModifiedTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Label": {
                    "$ref": "#/$defs/Label"
                }
            }
        },
        "CertificateFingerprint": {
            "type": "string"
        },
        "DescribeLunaClientRequest": {
            "type": "object",
            "properties": {
                "ClientArn": {
                    "$ref": "#/$defs/ClientArn"
                },
                "CertificateFingerprint": {
                    "$ref": "#/$defs/CertificateFingerprint"
                }
            }
        },
        "GetConfigResponse": {
            "type": "object",
            "properties": {
                "ConfigType": {
                    "$ref": "#/$defs/String"
                },
                "ConfigFile": {
                    "$ref": "#/$defs/String"
                },
                "ConfigCred": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetConfigRequest": {
            "type": "object",
            "properties": {
                "ClientArn": {
                    "$ref": "#/$defs/ClientArn"
                },
                "ClientVersion": {
                    "$ref": "#/$defs/ClientVersion"
                },
                "HapgList": {
                    "$ref": "#/$defs/HapgList"
                }
            }
        },
        "ClientVersion": {
            "enum": [
                "FIVE_ONE",
                "FIVE_THREE"
            ]
        },
        "HapgList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HapgArn"
            }
        },
        "ListAvailableZonesResponse": {
            "type": "object",
            "properties": {
                "AZList": {
                    "$ref": "#/$defs/AZList"
                }
            }
        },
        "AZList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AZ"
            }
        },
        "ListAvailableZonesRequest": {
            "type": "object",
            "properties": {}
        },
        "ListHapgsResponse": {
            "type": "object",
            "properties": {
                "HapgList": {
                    "$ref": "#/$defs/HapgList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "PaginationToken": {
            "type": "string"
        },
        "ListHapgsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ListHsmsResponse": {
            "type": "object",
            "properties": {
                "HsmList": {
                    "$ref": "#/$defs/HsmList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ListHsmsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ListLunaClientsResponse": {
            "type": "object",
            "properties": {
                "ClientList": {
                    "$ref": "#/$defs/ClientList"
                },
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ClientList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClientArn"
            }
        },
        "ListLunaClientsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/PaginationToken"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "TagList": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyHapgResponse": {
            "type": "object",
            "properties": {
                "HapgArn": {
                    "$ref": "#/$defs/HapgArn"
                }
            }
        },
        "ModifyHapgRequest": {
            "type": "object",
            "properties": {
                "HapgArn": {
                    "$ref": "#/$defs/HapgArn"
                },
                "Label": {
                    "$ref": "#/$defs/Label"
                },
                "PartitionSerialList": {
                    "$ref": "#/$defs/PartitionSerialList"
                }
            }
        },
        "ModifyHsmResponse": {
            "type": "object",
            "properties": {
                "HsmArn": {
                    "$ref": "#/$defs/HsmArn"
                }
            }
        },
        "ModifyHsmRequest": {
            "type": "object",
            "properties": {
                "HsmArn": {
                    "$ref": "#/$defs/HsmArn"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "EniIp": {
                    "$ref": "#/$defs/IpAddress"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IamRoleArn"
                },
                "ExternalId": {
                    "$ref": "#/$defs/ExternalId"
                },
                "SyslogIp": {
                    "$ref": "#/$defs/IpAddress"
                }
            }
        },
        "ModifyLunaClientResponse": {
            "type": "object",
            "properties": {
                "ClientArn": {
                    "$ref": "#/$defs/ClientArn"
                }
            }
        },
        "ModifyLunaClientRequest": {
            "type": "object",
            "properties": {
                "ClientArn": {
                    "$ref": "#/$defs/ClientArn"
                },
                "Certificate": {
                    "$ref": "#/$defs/Certificate"
                }
            }
        },
        "RemoveTagsFromResourceResponse": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RemoveTagsFromResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/String"
                },
                "TagKeyList": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://cloudhsm-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://cloudhsm-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://cloudhsm.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://cloudhsm.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}