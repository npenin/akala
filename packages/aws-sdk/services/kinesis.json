{
    "name": "kinesis",
    "commands": [
        {
            "name": "AddTagsToStream",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.AddTagsToStream"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/AddTagsToStreamInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateStream",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.CreateStream"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateStreamInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DecreaseStreamRetentionPeriod",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.DecreaseStreamRetentionPeriod"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DecreaseStreamRetentionPeriodInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.DeleteResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteResourcePolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteStream",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.DeleteStream"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteStreamInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterStreamConsumer",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.DeregisterStreamConsumer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeregisterStreamConsumerInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLimits",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.DescribeLimits"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLimitsOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeLimitsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStream",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.DescribeStream"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStreamOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeStreamInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStreamConsumer",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.DescribeStreamConsumer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStreamConsumerOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeStreamConsumerInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStreamSummary",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.DescribeStreamSummary"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStreamSummaryOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeStreamSummaryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableEnhancedMonitoring",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.DisableEnhancedMonitoring"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnhancedMonitoringOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DisableEnhancedMonitoringInput"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableEnhancedMonitoring",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.EnableEnhancedMonitoring"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnhancedMonitoringOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/EnableEnhancedMonitoringInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRecords",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.GetRecords"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRecordsOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetRecordsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.GetResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcePolicyOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetResourcePolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetShardIterator",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.GetShardIterator"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetShardIteratorOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetShardIteratorInput"
                        }
                    }
                }
            }
        },
        {
            "name": "IncreaseStreamRetentionPeriod",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.IncreaseStreamRetentionPeriod"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/IncreaseStreamRetentionPeriodInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListShards",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.ListShards"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListShardsOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListShardsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStreamConsumers",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.ListStreamConsumers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStreamConsumersOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListStreamConsumersInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListStreams",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.ListStreams"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListStreamsOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListStreamsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForStream",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.ListTagsForStream"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForStreamOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForStreamInput"
                        }
                    }
                }
            }
        },
        {
            "name": "MergeShards",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.MergeShards"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/MergeShardsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutRecord",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.PutRecord"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutRecordOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutRecordInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutRecords",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.PutRecords"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutRecordsOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutRecordsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutResourcePolicy",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.PutResourcePolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/PutResourcePolicyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterStreamConsumer",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.RegisterStreamConsumer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterStreamConsumerOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RegisterStreamConsumerInput"
                        }
                    }
                }
            }
        },
        {
            "name": "RemoveTagsFromStream",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.RemoveTagsFromStream"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/RemoveTagsFromStreamInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SplitShard",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.SplitShard"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SplitShardInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StartStreamEncryption",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.StartStreamEncryption"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StartStreamEncryptionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StopStreamEncryption",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.StopStreamEncryption"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/StopStreamEncryptionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SubscribeToShard",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.SubscribeToShard"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SubscribeToShardOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/SubscribeToShardInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateShardCount",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.UpdateShardCount"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateShardCountOutput"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateShardCountInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateStreamMode",
            "config": {
                "http": {
                    "inject": [
                        "params.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Kinesis_20131202.UpdateStreamMode"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateStreamModeInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AddTagsToStreamInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "StreamName": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "StreamARN": {
            "type": "string"
        },
        "CreateStreamInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "ShardCount": {
                    "$ref": "#/$defs/PositiveIntegerObject"
                },
                "StreamModeDetails": {
                    "$ref": "#/$defs/StreamModeDetails"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "PositiveIntegerObject": {
            "type": "integer",
            "format": "int32"
        },
        "StreamModeDetails": {
            "type": "object",
            "properties": {
                "StreamMode": {
                    "$ref": "#/$defs/StreamMode"
                }
            }
        },
        "StreamMode": {
            "enum": [
                "PROVISIONED",
                "ON_DEMAND"
            ]
        },
        "DecreaseStreamRetentionPeriodInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "RetentionPeriodHours": {
                    "$ref": "#/$defs/RetentionPeriodHours"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "RetentionPeriodHours": {
            "type": "integer",
            "format": "int32"
        },
        "DeleteResourcePolicyInput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "ResourceARN": {
            "type": "string"
        },
        "DeleteStreamInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "EnforceConsumerDeletion": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "BooleanObject": {
            "type": "boolean"
        },
        "DeregisterStreamConsumerInput": {
            "type": "object",
            "properties": {
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                },
                "ConsumerName": {
                    "$ref": "#/$defs/ConsumerName"
                },
                "ConsumerARN": {
                    "$ref": "#/$defs/ConsumerARN"
                }
            }
        },
        "ConsumerName": {
            "type": "string"
        },
        "ConsumerARN": {
            "type": "string"
        },
        "DescribeLimitsOutput": {
            "type": "object",
            "properties": {
                "ShardLimit": {
                    "$ref": "#/$defs/ShardCountObject"
                },
                "OpenShardCount": {
                    "$ref": "#/$defs/ShardCountObject"
                },
                "OnDemandStreamCount": {
                    "$ref": "#/$defs/OnDemandStreamCountObject"
                },
                "OnDemandStreamCountLimit": {
                    "$ref": "#/$defs/OnDemandStreamCountLimitObject"
                }
            }
        },
        "ShardCountObject": {
            "type": "integer",
            "format": "int32"
        },
        "OnDemandStreamCountObject": {
            "type": "integer",
            "format": "int32"
        },
        "OnDemandStreamCountLimitObject": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeLimitsInput": {
            "type": "object",
            "properties": {}
        },
        "DescribeStreamOutput": {
            "type": "object",
            "properties": {
                "StreamDescription": {
                    "$ref": "#/$defs/StreamDescription"
                }
            }
        },
        "StreamDescription": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                },
                "StreamStatus": {
                    "$ref": "#/$defs/StreamStatus"
                },
                "StreamModeDetails": {
                    "$ref": "#/$defs/StreamModeDetails"
                },
                "Shards": {
                    "$ref": "#/$defs/ShardList"
                },
                "HasMoreShards": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "RetentionPeriodHours": {
                    "$ref": "#/$defs/RetentionPeriodHours"
                },
                "StreamCreationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EnhancedMonitoring": {
                    "$ref": "#/$defs/EnhancedMonitoringList"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/EncryptionType"
                },
                "KeyId": {
                    "$ref": "#/$defs/KeyId"
                }
            }
        },
        "StreamStatus": {
            "enum": [
                "CREATING",
                "DELETING",
                "ACTIVE",
                "UPDATING"
            ]
        },
        "ShardList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Shard"
            }
        },
        "Shard": {
            "type": "object",
            "properties": {
                "ShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "ParentShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "AdjacentParentShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "HashKeyRange": {
                    "$ref": "#/$defs/HashKeyRange"
                },
                "SequenceNumberRange": {
                    "$ref": "#/$defs/SequenceNumberRange"
                }
            }
        },
        "ShardId": {
            "type": "string"
        },
        "HashKeyRange": {
            "type": "object",
            "properties": {
                "StartingHashKey": {
                    "$ref": "#/$defs/HashKey"
                },
                "EndingHashKey": {
                    "$ref": "#/$defs/HashKey"
                }
            }
        },
        "HashKey": {
            "type": "string"
        },
        "SequenceNumberRange": {
            "type": "object",
            "properties": {
                "StartingSequenceNumber": {
                    "$ref": "#/$defs/SequenceNumber"
                },
                "EndingSequenceNumber": {
                    "$ref": "#/$defs/SequenceNumber"
                }
            }
        },
        "SequenceNumber": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "EnhancedMonitoringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnhancedMetrics"
            }
        },
        "EnhancedMetrics": {
            "type": "object",
            "properties": {
                "ShardLevelMetrics": {
                    "$ref": "#/$defs/MetricsNameList"
                }
            }
        },
        "MetricsNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricsName"
            }
        },
        "MetricsName": {
            "enum": [
                "INCOMING_BYTES",
                "INCOMING_RECORDS",
                "OUTGOING_BYTES",
                "OUTGOING_RECORDS",
                "WRITE_PROVISIONED_THROUGHPUT_EXCEEDED",
                "READ_PROVISIONED_THROUGHPUT_EXCEEDED",
                "ITERATOR_AGE_MILLISECONDS",
                "ALL"
            ]
        },
        "EncryptionType": {
            "enum": [
                "NONE",
                "KMS"
            ]
        },
        "KeyId": {
            "type": "string"
        },
        "DescribeStreamInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "Limit": {
                    "$ref": "#/$defs/DescribeStreamInputLimit"
                },
                "ExclusiveStartShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "DescribeStreamInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeStreamConsumerOutput": {
            "type": "object",
            "properties": {
                "ConsumerDescription": {
                    "$ref": "#/$defs/ConsumerDescription"
                }
            }
        },
        "ConsumerDescription": {
            "type": "object",
            "properties": {
                "ConsumerName": {
                    "$ref": "#/$defs/ConsumerName"
                },
                "ConsumerARN": {
                    "$ref": "#/$defs/ConsumerARN"
                },
                "ConsumerStatus": {
                    "$ref": "#/$defs/ConsumerStatus"
                },
                "ConsumerCreationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "ConsumerStatus": {
            "enum": [
                "CREATING",
                "DELETING",
                "ACTIVE"
            ]
        },
        "DescribeStreamConsumerInput": {
            "type": "object",
            "properties": {
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                },
                "ConsumerName": {
                    "$ref": "#/$defs/ConsumerName"
                },
                "ConsumerARN": {
                    "$ref": "#/$defs/ConsumerARN"
                }
            }
        },
        "DescribeStreamSummaryOutput": {
            "type": "object",
            "properties": {
                "StreamDescriptionSummary": {
                    "$ref": "#/$defs/StreamDescriptionSummary"
                }
            }
        },
        "StreamDescriptionSummary": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                },
                "StreamStatus": {
                    "$ref": "#/$defs/StreamStatus"
                },
                "StreamModeDetails": {
                    "$ref": "#/$defs/StreamModeDetails"
                },
                "RetentionPeriodHours": {
                    "$ref": "#/$defs/RetentionPeriodHours"
                },
                "StreamCreationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EnhancedMonitoring": {
                    "$ref": "#/$defs/EnhancedMonitoringList"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/EncryptionType"
                },
                "KeyId": {
                    "$ref": "#/$defs/KeyId"
                },
                "OpenShardCount": {
                    "$ref": "#/$defs/ShardCountObject"
                },
                "ConsumerCount": {
                    "$ref": "#/$defs/ConsumerCountObject"
                }
            }
        },
        "ConsumerCountObject": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeStreamSummaryInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "EnhancedMonitoringOutput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "CurrentShardLevelMetrics": {
                    "$ref": "#/$defs/MetricsNameList"
                },
                "DesiredShardLevelMetrics": {
                    "$ref": "#/$defs/MetricsNameList"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "DisableEnhancedMonitoringInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "ShardLevelMetrics": {
                    "$ref": "#/$defs/MetricsNameList"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "EnableEnhancedMonitoringInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "ShardLevelMetrics": {
                    "$ref": "#/$defs/MetricsNameList"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "GetRecordsOutput": {
            "type": "object",
            "properties": {
                "Records": {
                    "$ref": "#/$defs/RecordList"
                },
                "NextShardIterator": {
                    "$ref": "#/$defs/ShardIterator"
                },
                "MillisBehindLatest": {
                    "$ref": "#/$defs/MillisBehindLatest"
                },
                "ChildShards": {
                    "$ref": "#/$defs/ChildShardList"
                }
            }
        },
        "RecordList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Record"
            }
        },
        "Record": {
            "type": "object",
            "properties": {
                "SequenceNumber": {
                    "$ref": "#/$defs/SequenceNumber"
                },
                "ApproximateArrivalTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Data": {
                    "$ref": "#/$defs/Data"
                },
                "PartitionKey": {
                    "$ref": "#/$defs/PartitionKey"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/EncryptionType"
                }
            }
        },
        "Data": {
            "type": "string",
            "format": "binary"
        },
        "PartitionKey": {
            "type": "string"
        },
        "ShardIterator": {
            "type": "string"
        },
        "MillisBehindLatest": {
            "type": "integer",
            "format": "int64"
        },
        "ChildShardList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ChildShard"
            }
        },
        "ChildShard": {
            "type": "object",
            "properties": {
                "ShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "ParentShards": {
                    "$ref": "#/$defs/ShardIdList"
                },
                "HashKeyRange": {
                    "$ref": "#/$defs/HashKeyRange"
                }
            }
        },
        "ShardIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ShardId"
            }
        },
        "GetRecordsInput": {
            "type": "object",
            "properties": {
                "ShardIterator": {
                    "$ref": "#/$defs/ShardIterator"
                },
                "Limit": {
                    "$ref": "#/$defs/GetRecordsInputLimit"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "GetRecordsInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "GetResourcePolicyOutput": {
            "type": "object",
            "properties": {
                "Policy": {
                    "$ref": "#/$defs/Policy"
                }
            }
        },
        "Policy": {
            "type": "string"
        },
        "GetResourcePolicyInput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                }
            }
        },
        "GetShardIteratorOutput": {
            "type": "object",
            "properties": {
                "ShardIterator": {
                    "$ref": "#/$defs/ShardIterator"
                }
            }
        },
        "GetShardIteratorInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "ShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "ShardIteratorType": {
                    "$ref": "#/$defs/ShardIteratorType"
                },
                "StartingSequenceNumber": {
                    "$ref": "#/$defs/SequenceNumber"
                },
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "ShardIteratorType": {
            "enum": [
                "AT_SEQUENCE_NUMBER",
                "AFTER_SEQUENCE_NUMBER",
                "TRIM_HORIZON",
                "LATEST",
                "AT_TIMESTAMP"
            ]
        },
        "IncreaseStreamRetentionPeriodInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "RetentionPeriodHours": {
                    "$ref": "#/$defs/RetentionPeriodHours"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "ListShardsOutput": {
            "type": "object",
            "properties": {
                "Shards": {
                    "$ref": "#/$defs/ShardList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListShardsInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "ExclusiveStartShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListShardsInputLimit"
                },
                "StreamCreationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ShardFilter": {
                    "$ref": "#/$defs/ShardFilter"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "ListShardsInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ShardFilter": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ShardFilterType"
                },
                "ShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ShardFilterType": {
            "enum": [
                "AFTER_SHARD_ID",
                "AT_TRIM_HORIZON",
                "FROM_TRIM_HORIZON",
                "AT_LATEST",
                "AT_TIMESTAMP",
                "FROM_TIMESTAMP"
            ]
        },
        "ListStreamConsumersOutput": {
            "type": "object",
            "properties": {
                "Consumers": {
                    "$ref": "#/$defs/ConsumerList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ConsumerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Consumer"
            }
        },
        "Consumer": {
            "type": "object",
            "properties": {
                "ConsumerName": {
                    "$ref": "#/$defs/ConsumerName"
                },
                "ConsumerARN": {
                    "$ref": "#/$defs/ConsumerARN"
                },
                "ConsumerStatus": {
                    "$ref": "#/$defs/ConsumerStatus"
                },
                "ConsumerCreationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListStreamConsumersInput": {
            "type": "object",
            "properties": {
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListStreamConsumersInputLimit"
                },
                "StreamCreationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListStreamConsumersInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ListStreamsOutput": {
            "type": "object",
            "properties": {
                "StreamNames": {
                    "$ref": "#/$defs/StreamNameList"
                },
                "HasMoreStreams": {
                    "$ref": "#/$defs/BooleanObject"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "StreamSummaries": {
                    "$ref": "#/$defs/StreamSummaryList"
                }
            }
        },
        "StreamNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StreamName"
            }
        },
        "StreamSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StreamSummary"
            }
        },
        "StreamSummary": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                },
                "StreamStatus": {
                    "$ref": "#/$defs/StreamStatus"
                },
                "StreamModeDetails": {
                    "$ref": "#/$defs/StreamModeDetails"
                },
                "StreamCreationTimestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListStreamsInput": {
            "type": "object",
            "properties": {
                "Limit": {
                    "$ref": "#/$defs/ListStreamsInputLimit"
                },
                "ExclusiveStartStreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListStreamsInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "ListTagsForStreamOutput": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "HasMoreTags": {
                    "$ref": "#/$defs/BooleanObject"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "ListTagsForStreamInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "ExclusiveStartTagKey": {
                    "$ref": "#/$defs/TagKey"
                },
                "Limit": {
                    "$ref": "#/$defs/ListTagsForStreamInputLimit"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "ListTagsForStreamInputLimit": {
            "type": "integer",
            "format": "int32"
        },
        "MergeShardsInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "ShardToMerge": {
                    "$ref": "#/$defs/ShardId"
                },
                "AdjacentShardToMerge": {
                    "$ref": "#/$defs/ShardId"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "PutRecordOutput": {
            "type": "object",
            "properties": {
                "ShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "SequenceNumber": {
                    "$ref": "#/$defs/SequenceNumber"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/EncryptionType"
                }
            }
        },
        "PutRecordInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "Data": {
                    "$ref": "#/$defs/Data"
                },
                "PartitionKey": {
                    "$ref": "#/$defs/PartitionKey"
                },
                "ExplicitHashKey": {
                    "$ref": "#/$defs/HashKey"
                },
                "SequenceNumberForOrdering": {
                    "$ref": "#/$defs/SequenceNumber"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "PutRecordsOutput": {
            "type": "object",
            "properties": {
                "FailedRecordCount": {
                    "$ref": "#/$defs/PositiveIntegerObject"
                },
                "Records": {
                    "$ref": "#/$defs/PutRecordsResultEntryList"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/EncryptionType"
                }
            }
        },
        "PutRecordsResultEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PutRecordsResultEntry"
            }
        },
        "PutRecordsResultEntry": {
            "type": "object",
            "properties": {
                "SequenceNumber": {
                    "$ref": "#/$defs/SequenceNumber"
                },
                "ShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorCode": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "PutRecordsInput": {
            "type": "object",
            "properties": {
                "Records": {
                    "$ref": "#/$defs/PutRecordsRequestEntryList"
                },
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "PutRecordsRequestEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PutRecordsRequestEntry"
            }
        },
        "PutRecordsRequestEntry": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/$defs/Data"
                },
                "ExplicitHashKey": {
                    "$ref": "#/$defs/HashKey"
                },
                "PartitionKey": {
                    "$ref": "#/$defs/PartitionKey"
                }
            }
        },
        "PutResourcePolicyInput": {
            "type": "object",
            "properties": {
                "ResourceARN": {
                    "$ref": "#/$defs/ResourceARN"
                },
                "Policy": {
                    "$ref": "#/$defs/Policy"
                }
            }
        },
        "RegisterStreamConsumerOutput": {
            "type": "object",
            "properties": {
                "Consumer": {
                    "$ref": "#/$defs/Consumer"
                }
            }
        },
        "RegisterStreamConsumerInput": {
            "type": "object",
            "properties": {
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                },
                "ConsumerName": {
                    "$ref": "#/$defs/ConsumerName"
                }
            }
        },
        "RemoveTagsFromStreamInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "SplitShardInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "ShardToSplit": {
                    "$ref": "#/$defs/ShardId"
                },
                "NewStartingHashKey": {
                    "$ref": "#/$defs/HashKey"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "StartStreamEncryptionInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/EncryptionType"
                },
                "KeyId": {
                    "$ref": "#/$defs/KeyId"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "StopStreamEncryptionInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "EncryptionType": {
                    "$ref": "#/$defs/EncryptionType"
                },
                "KeyId": {
                    "$ref": "#/$defs/KeyId"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "SubscribeToShardOutput": {
            "type": "object",
            "properties": {
                "EventStream": {
                    "$ref": "#/$defs/SubscribeToShardEventStream"
                }
            }
        },
        "SubscribeToShardEventStream": {
            "type": "object",
            "properties": {
                "SubscribeToShardEvent": {
                    "$ref": "#/$defs/SubscribeToShardEvent"
                },
                "ResourceNotFoundException": {
                    "$ref": "#/$defs/ResourceNotFoundException"
                },
                "ResourceInUseException": {
                    "$ref": "#/$defs/ResourceInUseException"
                },
                "KMSDisabledException": {
                    "$ref": "#/$defs/KMSDisabledException"
                },
                "KMSInvalidStateException": {
                    "$ref": "#/$defs/KMSInvalidStateException"
                },
                "KMSAccessDeniedException": {
                    "$ref": "#/$defs/KMSAccessDeniedException"
                },
                "KMSNotFoundException": {
                    "$ref": "#/$defs/KMSNotFoundException"
                },
                "KMSOptInRequired": {
                    "$ref": "#/$defs/KMSOptInRequired"
                },
                "KMSThrottlingException": {
                    "$ref": "#/$defs/KMSThrottlingException"
                },
                "InternalFailureException": {
                    "$ref": "#/$defs/InternalFailureException"
                }
            }
        },
        "SubscribeToShardEvent": {
            "type": "object",
            "properties": {
                "Records": {
                    "$ref": "#/$defs/RecordList"
                },
                "ContinuationSequenceNumber": {
                    "$ref": "#/$defs/SequenceNumber"
                },
                "MillisBehindLatest": {
                    "$ref": "#/$defs/MillisBehindLatest"
                },
                "ChildShards": {
                    "$ref": "#/$defs/ChildShardList"
                }
            }
        },
        "ResourceNotFoundException": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ResourceInUseException": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "KMSDisabledException": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "KMSInvalidStateException": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "KMSAccessDeniedException": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "KMSNotFoundException": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "KMSOptInRequired": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "KMSThrottlingException": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "InternalFailureException": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "SubscribeToShardInput": {
            "type": "object",
            "properties": {
                "ConsumerARN": {
                    "$ref": "#/$defs/ConsumerARN"
                },
                "ShardId": {
                    "$ref": "#/$defs/ShardId"
                },
                "StartingPosition": {
                    "$ref": "#/$defs/StartingPosition"
                }
            }
        },
        "StartingPosition": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ShardIteratorType"
                },
                "SequenceNumber": {
                    "$ref": "#/$defs/SequenceNumber"
                },
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UpdateShardCountOutput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "CurrentShardCount": {
                    "$ref": "#/$defs/PositiveIntegerObject"
                },
                "TargetShardCount": {
                    "$ref": "#/$defs/PositiveIntegerObject"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "UpdateShardCountInput": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "$ref": "#/$defs/StreamName"
                },
                "TargetShardCount": {
                    "$ref": "#/$defs/PositiveIntegerObject"
                },
                "ScalingType": {
                    "$ref": "#/$defs/ScalingType"
                },
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                }
            }
        },
        "ScalingType": {
            "enum": [
                "UNIFORM_SCALING"
            ]
        },
        "UpdateStreamModeInput": {
            "type": "object",
            "properties": {
                "StreamARN": {
                    "$ref": "#/$defs/StreamARN"
                },
                "StreamModeDetails": {
                    "$ref": "#/$defs/StreamModeDetails"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                },
                "StreamARN": {
                    "required": false,
                    "documentation": "The ARN of the Kinesis stream",
                    "type": "String"
                },
                "OperationType": {
                    "required": false,
                    "documentation": "Internal parameter to distinguish between Control/Data plane API and accordingly generate control/data plane endpoint",
                    "type": "String"
                },
                "ConsumerARN": {
                    "required": false,
                    "documentation": "The ARN of the Kinesis consumer",
                    "type": "String"
                },
                "ResourceARN": {
                    "required": false,
                    "documentation": "The ARN of the Kinesis resource",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "StreamARN"
                                }
                            ]
                        },
                        {
                            "fn": "not",
                            "argv": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Endpoint"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        },
                        {
                            "fn": "aws.partition",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ],
                            "assign": "PartitionResult"
                        },
                        {
                            "fn": "not",
                            "argv": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "fn": "getAttr",
                                            "argv": [
                                                {
                                                    "ref": "PartitionResult"
                                                },
                                                "name"
                                            ]
                                        },
                                        "aws-iso"
                                    ]
                                }
                            ]
                        },
                        {
                            "fn": "not",
                            "argv": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "fn": "getAttr",
                                            "argv": [
                                                {
                                                    "ref": "PartitionResult"
                                                },
                                                "name"
                                            ]
                                        },
                                        "aws-iso-b"
                                    ]
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.parseArn",
                                    "argv": [
                                        {
                                            "ref": "StreamARN"
                                        }
                                    ],
                                    "assign": "arn"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "isValidHostLabel",
                                            "argv": [
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "arn"
                                                        },
                                                        "accountId"
                                                    ]
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "isValidHostLabel",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "arn"
                                                                },
                                                                "region"
                                                            ]
                                                        },
                                                        false
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "arn"
                                                                        },
                                                                        "service"
                                                                    ]
                                                                },
                                                                "kinesis"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "arn"
                                                                        },
                                                                        "resourceId[0]"
                                                                    ],
                                                                    "assign": "arnType"
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "arnType"
                                                                                },
                                                                                ""
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "arnType"
                                                                                },
                                                                                "stream"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "stringEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "fn": "getAttr",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "PartitionResult"
                                                                                                },
                                                                                                "name"
                                                                                            ]
                                                                                        },
                                                                                        "{arn#partition}"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "rules": [
                                                                                {
                                                                                    "conditions": [
                                                                                        {
                                                                                            "fn": "isSet",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "OperationType"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "rules": [
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseFIPS"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseDualStack"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "booleanEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "PartitionResult"
                                                                                                                        },
                                                                                                                        "supportsFIPS"
                                                                                                                    ]
                                                                                                                },
                                                                                                                true
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [
                                                                                                                {
                                                                                                                    "fn": "booleanEquals",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "fn": "getAttr",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "ref": "PartitionResult"
                                                                                                                                },
                                                                                                                                "supportsDualStack"
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        true
                                                                                                                    ]
                                                                                                                }
                                                                                                            ],
                                                                                                            "rules": [
                                                                                                                {
                                                                                                                    "conditions": [],
                                                                                                                    "endpoint": {
                                                                                                                        "url": "https://{arn#accountId}.{OperationType}-kinesis-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                                                                        "properties": {},
                                                                                                                        "headers": {}
                                                                                                                    },
                                                                                                                    "type": "endpoint"
                                                                                                                }
                                                                                                            ],
                                                                                                            "type": "tree"
                                                                                                        },
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "error": "DualStack is enabled, but this partition does not support DualStack.",
                                                                                                            "type": "error"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "FIPS is enabled, but this partition does not support FIPS.",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseFIPS"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "booleanEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "PartitionResult"
                                                                                                                        },
                                                                                                                        "supportsFIPS"
                                                                                                                    ]
                                                                                                                },
                                                                                                                true
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "endpoint": {
                                                                                                                "url": "https://{arn#accountId}.{OperationType}-kinesis-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                                                                "properties": {},
                                                                                                                "headers": {}
                                                                                                            },
                                                                                                            "type": "endpoint"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseDualStack"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "booleanEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "PartitionResult"
                                                                                                                        },
                                                                                                                        "supportsDualStack"
                                                                                                                    ]
                                                                                                                },
                                                                                                                true
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "endpoint": {
                                                                                                                "url": "https://{arn#accountId}.{OperationType}-kinesis.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                                                                "properties": {},
                                                                                                                "headers": {}
                                                                                                            },
                                                                                                            "type": "endpoint"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [],
                                                                                            "endpoint": {
                                                                                                "url": "https://{arn#accountId}.{OperationType}-kinesis.{Region}.{PartitionResult#dnsSuffix}",
                                                                                                "properties": {},
                                                                                                "headers": {}
                                                                                            },
                                                                                            "type": "endpoint"
                                                                                        }
                                                                                    ],
                                                                                    "type": "tree"
                                                                                },
                                                                                {
                                                                                    "conditions": [],
                                                                                    "error": "Operation Type is not set. Please contact service team for resolution.",
                                                                                    "type": "error"
                                                                                }
                                                                            ],
                                                                            "type": "tree"
                                                                        },
                                                                        {
                                                                            "conditions": [],
                                                                            "error": "Partition: {arn#partition} from ARN doesn't match with partition name: {PartitionResult#name}.",
                                                                            "type": "error"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "error": "Invalid ARN: Kinesis ARNs don't support `{arnType}` arn types.",
                                                                    "type": "error"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "error": "Invalid ARN: No ARN type specified",
                                                            "type": "error"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "Invalid ARN: The ARN was not for the Kinesis service, found: {arn#service}.",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "Invalid ARN: Invalid region.",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "error": "Invalid ARN: Invalid account id.",
                                    "type": "error"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid ARN: Failed to parse ARN.",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "ConsumerARN"
                                }
                            ]
                        },
                        {
                            "fn": "not",
                            "argv": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Endpoint"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        },
                        {
                            "fn": "aws.partition",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ],
                            "assign": "PartitionResult"
                        },
                        {
                            "fn": "not",
                            "argv": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "fn": "getAttr",
                                            "argv": [
                                                {
                                                    "ref": "PartitionResult"
                                                },
                                                "name"
                                            ]
                                        },
                                        "aws-iso"
                                    ]
                                }
                            ]
                        },
                        {
                            "fn": "not",
                            "argv": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "fn": "getAttr",
                                            "argv": [
                                                {
                                                    "ref": "PartitionResult"
                                                },
                                                "name"
                                            ]
                                        },
                                        "aws-iso-b"
                                    ]
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.parseArn",
                                    "argv": [
                                        {
                                            "ref": "ConsumerARN"
                                        }
                                    ],
                                    "assign": "arn"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "isValidHostLabel",
                                            "argv": [
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "arn"
                                                        },
                                                        "accountId"
                                                    ]
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "isValidHostLabel",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "arn"
                                                                },
                                                                "region"
                                                            ]
                                                        },
                                                        false
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "arn"
                                                                        },
                                                                        "service"
                                                                    ]
                                                                },
                                                                "kinesis"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "arn"
                                                                        },
                                                                        "resourceId[0]"
                                                                    ],
                                                                    "assign": "arnType"
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "arnType"
                                                                                },
                                                                                ""
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "arnType"
                                                                                },
                                                                                "stream"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "stringEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "fn": "getAttr",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "PartitionResult"
                                                                                                },
                                                                                                "name"
                                                                                            ]
                                                                                        },
                                                                                        "{arn#partition}"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "rules": [
                                                                                {
                                                                                    "conditions": [
                                                                                        {
                                                                                            "fn": "isSet",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "OperationType"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "rules": [
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseFIPS"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseDualStack"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "booleanEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "PartitionResult"
                                                                                                                        },
                                                                                                                        "supportsFIPS"
                                                                                                                    ]
                                                                                                                },
                                                                                                                true
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [
                                                                                                                {
                                                                                                                    "fn": "booleanEquals",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "fn": "getAttr",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "ref": "PartitionResult"
                                                                                                                                },
                                                                                                                                "supportsDualStack"
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        true
                                                                                                                    ]
                                                                                                                }
                                                                                                            ],
                                                                                                            "rules": [
                                                                                                                {
                                                                                                                    "conditions": [],
                                                                                                                    "endpoint": {
                                                                                                                        "url": "https://{arn#accountId}.{OperationType}-kinesis-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                                                                        "properties": {},
                                                                                                                        "headers": {}
                                                                                                                    },
                                                                                                                    "type": "endpoint"
                                                                                                                }
                                                                                                            ],
                                                                                                            "type": "tree"
                                                                                                        },
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "error": "DualStack is enabled, but this partition does not support DualStack.",
                                                                                                            "type": "error"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "FIPS is enabled, but this partition does not support FIPS.",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseFIPS"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "booleanEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "PartitionResult"
                                                                                                                        },
                                                                                                                        "supportsFIPS"
                                                                                                                    ]
                                                                                                                },
                                                                                                                true
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "endpoint": {
                                                                                                                "url": "https://{arn#accountId}.{OperationType}-kinesis-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                                                                "properties": {},
                                                                                                                "headers": {}
                                                                                                            },
                                                                                                            "type": "endpoint"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseDualStack"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "booleanEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "PartitionResult"
                                                                                                                        },
                                                                                                                        "supportsDualStack"
                                                                                                                    ]
                                                                                                                },
                                                                                                                true
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "endpoint": {
                                                                                                                "url": "https://{arn#accountId}.{OperationType}-kinesis.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                                                                "properties": {},
                                                                                                                "headers": {}
                                                                                                            },
                                                                                                            "type": "endpoint"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [],
                                                                                            "endpoint": {
                                                                                                "url": "https://{arn#accountId}.{OperationType}-kinesis.{Region}.{PartitionResult#dnsSuffix}",
                                                                                                "properties": {},
                                                                                                "headers": {}
                                                                                            },
                                                                                            "type": "endpoint"
                                                                                        }
                                                                                    ],
                                                                                    "type": "tree"
                                                                                },
                                                                                {
                                                                                    "conditions": [],
                                                                                    "error": "Operation Type is not set. Please contact service team for resolution.",
                                                                                    "type": "error"
                                                                                }
                                                                            ],
                                                                            "type": "tree"
                                                                        },
                                                                        {
                                                                            "conditions": [],
                                                                            "error": "Partition: {arn#partition} from ARN doesn't match with partition name: {PartitionResult#name}.",
                                                                            "type": "error"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "error": "Invalid ARN: Kinesis ARNs don't support `{arnType}` arn types.",
                                                                    "type": "error"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "error": "Invalid ARN: No ARN type specified",
                                                            "type": "error"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "Invalid ARN: The ARN was not for the Kinesis service, found: {arn#service}.",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "Invalid ARN: Invalid region.",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "error": "Invalid ARN: Invalid account id.",
                                    "type": "error"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid ARN: Failed to parse ARN.",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "ResourceARN"
                                }
                            ]
                        },
                        {
                            "fn": "not",
                            "argv": [
                                {
                                    "fn": "isSet",
                                    "argv": [
                                        {
                                            "ref": "Endpoint"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        },
                        {
                            "fn": "aws.partition",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ],
                            "assign": "PartitionResult"
                        },
                        {
                            "fn": "not",
                            "argv": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "fn": "getAttr",
                                            "argv": [
                                                {
                                                    "ref": "PartitionResult"
                                                },
                                                "name"
                                            ]
                                        },
                                        "aws-iso"
                                    ]
                                }
                            ]
                        },
                        {
                            "fn": "not",
                            "argv": [
                                {
                                    "fn": "stringEquals",
                                    "argv": [
                                        {
                                            "fn": "getAttr",
                                            "argv": [
                                                {
                                                    "ref": "PartitionResult"
                                                },
                                                "name"
                                            ]
                                        },
                                        "aws-iso-b"
                                    ]
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.parseArn",
                                    "argv": [
                                        {
                                            "ref": "ResourceARN"
                                        }
                                    ],
                                    "assign": "arn"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "isValidHostLabel",
                                            "argv": [
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "arn"
                                                        },
                                                        "accountId"
                                                    ]
                                                },
                                                false
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "isValidHostLabel",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "arn"
                                                                },
                                                                "region"
                                                            ]
                                                        },
                                                        false
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "arn"
                                                                        },
                                                                        "service"
                                                                    ]
                                                                },
                                                                "kinesis"
                                                            ]
                                                        }
                                                    ],
                                                    "rules": [
                                                        {
                                                            "conditions": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "arn"
                                                                        },
                                                                        "resourceId[0]"
                                                                    ],
                                                                    "assign": "arnType"
                                                                },
                                                                {
                                                                    "fn": "not",
                                                                    "argv": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "arnType"
                                                                                },
                                                                                ""
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            ],
                                                            "rules": [
                                                                {
                                                                    "conditions": [
                                                                        {
                                                                            "fn": "stringEquals",
                                                                            "argv": [
                                                                                {
                                                                                    "ref": "arnType"
                                                                                },
                                                                                "stream"
                                                                            ]
                                                                        }
                                                                    ],
                                                                    "rules": [
                                                                        {
                                                                            "conditions": [
                                                                                {
                                                                                    "fn": "stringEquals",
                                                                                    "argv": [
                                                                                        {
                                                                                            "fn": "getAttr",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "PartitionResult"
                                                                                                },
                                                                                                "name"
                                                                                            ]
                                                                                        },
                                                                                        "{arn#partition}"
                                                                                    ]
                                                                                }
                                                                            ],
                                                                            "rules": [
                                                                                {
                                                                                    "conditions": [
                                                                                        {
                                                                                            "fn": "isSet",
                                                                                            "argv": [
                                                                                                {
                                                                                                    "ref": "OperationType"
                                                                                                }
                                                                                            ]
                                                                                        }
                                                                                    ],
                                                                                    "rules": [
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseFIPS"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                },
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseDualStack"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "booleanEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "PartitionResult"
                                                                                                                        },
                                                                                                                        "supportsFIPS"
                                                                                                                    ]
                                                                                                                },
                                                                                                                true
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [
                                                                                                                {
                                                                                                                    "fn": "booleanEquals",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "fn": "getAttr",
                                                                                                                            "argv": [
                                                                                                                                {
                                                                                                                                    "ref": "PartitionResult"
                                                                                                                                },
                                                                                                                                "supportsDualStack"
                                                                                                                            ]
                                                                                                                        },
                                                                                                                        true
                                                                                                                    ]
                                                                                                                }
                                                                                                            ],
                                                                                                            "rules": [
                                                                                                                {
                                                                                                                    "conditions": [],
                                                                                                                    "endpoint": {
                                                                                                                        "url": "https://{arn#accountId}.{OperationType}-kinesis-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                                                                        "properties": {},
                                                                                                                        "headers": {}
                                                                                                                    },
                                                                                                                    "type": "endpoint"
                                                                                                                }
                                                                                                            ],
                                                                                                            "type": "tree"
                                                                                                        },
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "error": "DualStack is enabled, but this partition does not support DualStack.",
                                                                                                            "type": "error"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "FIPS is enabled, but this partition does not support FIPS.",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseFIPS"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "booleanEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "PartitionResult"
                                                                                                                        },
                                                                                                                        "supportsFIPS"
                                                                                                                    ]
                                                                                                                },
                                                                                                                true
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "endpoint": {
                                                                                                                "url": "https://{arn#accountId}.{OperationType}-kinesis-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                                                                                "properties": {},
                                                                                                                "headers": {}
                                                                                                            },
                                                                                                            "type": "endpoint"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "FIPS is enabled but this partition does not support FIPS",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [
                                                                                                {
                                                                                                    "fn": "booleanEquals",
                                                                                                    "argv": [
                                                                                                        {
                                                                                                            "ref": "UseDualStack"
                                                                                                        },
                                                                                                        true
                                                                                                    ]
                                                                                                }
                                                                                            ],
                                                                                            "rules": [
                                                                                                {
                                                                                                    "conditions": [
                                                                                                        {
                                                                                                            "fn": "booleanEquals",
                                                                                                            "argv": [
                                                                                                                {
                                                                                                                    "fn": "getAttr",
                                                                                                                    "argv": [
                                                                                                                        {
                                                                                                                            "ref": "PartitionResult"
                                                                                                                        },
                                                                                                                        "supportsDualStack"
                                                                                                                    ]
                                                                                                                },
                                                                                                                true
                                                                                                            ]
                                                                                                        }
                                                                                                    ],
                                                                                                    "rules": [
                                                                                                        {
                                                                                                            "conditions": [],
                                                                                                            "endpoint": {
                                                                                                                "url": "https://{arn#accountId}.{OperationType}-kinesis.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                                                                                "properties": {},
                                                                                                                "headers": {}
                                                                                                            },
                                                                                                            "type": "endpoint"
                                                                                                        }
                                                                                                    ],
                                                                                                    "type": "tree"
                                                                                                },
                                                                                                {
                                                                                                    "conditions": [],
                                                                                                    "error": "DualStack is enabled but this partition does not support DualStack",
                                                                                                    "type": "error"
                                                                                                }
                                                                                            ],
                                                                                            "type": "tree"
                                                                                        },
                                                                                        {
                                                                                            "conditions": [],
                                                                                            "endpoint": {
                                                                                                "url": "https://{arn#accountId}.{OperationType}-kinesis.{Region}.{PartitionResult#dnsSuffix}",
                                                                                                "properties": {},
                                                                                                "headers": {}
                                                                                            },
                                                                                            "type": "endpoint"
                                                                                        }
                                                                                    ],
                                                                                    "type": "tree"
                                                                                },
                                                                                {
                                                                                    "conditions": [],
                                                                                    "error": "Operation Type is not set. Please contact service team for resolution.",
                                                                                    "type": "error"
                                                                                }
                                                                            ],
                                                                            "type": "tree"
                                                                        },
                                                                        {
                                                                            "conditions": [],
                                                                            "error": "Partition: {arn#partition} from ARN doesn't match with partition name: {PartitionResult#name}.",
                                                                            "type": "error"
                                                                        }
                                                                    ],
                                                                    "type": "tree"
                                                                },
                                                                {
                                                                    "conditions": [],
                                                                    "error": "Invalid ARN: Kinesis ARNs don't support `{arnType}` arn types.",
                                                                    "type": "error"
                                                                }
                                                            ],
                                                            "type": "tree"
                                                        },
                                                        {
                                                            "conditions": [],
                                                            "error": "Invalid ARN: No ARN type specified",
                                                            "type": "error"
                                                        }
                                                    ],
                                                    "type": "tree"
                                                },
                                                {
                                                    "conditions": [],
                                                    "error": "Invalid ARN: The ARN was not for the Kinesis service, found: {arn#service}.",
                                                    "type": "error"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "Invalid ARN: Invalid region.",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "error": "Invalid ARN: Invalid account id.",
                                    "type": "error"
                                }
                            ],
                            "type": "tree"
                        },
                        {
                            "conditions": [],
                            "error": "Invalid ARN: Failed to parse ARN.",
                            "type": "error"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kinesis-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://kinesis.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kinesis-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://kinesis.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://kinesis.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
