{
    "name": "s3-outposts",
    "commands": [
        {
            "name": "CreateEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/S3Outposts/CreateEndpoint"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "OutpostId": {},
                        "SubnetId": {},
                        "SecurityGroupId": {},
                        "AccessType": {},
                        "CustomerOwnedIpv4Pool": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/S3Outposts/DeleteEndpoint"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEndpointRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "EndpointId": {},
                        "OutpostId": {}
                    }
                }
            }
        },
        {
            "name": "ListEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/S3Outposts/ListEndpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEndpointsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEndpointsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListOutpostsWithS3",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/S3Outposts/ListOutpostsWithS3"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListOutpostsWithS3Result"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListOutpostsWithS3Request"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListSharedEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/S3Outposts/ListSharedEndpoints"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSharedEndpointsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSharedEndpointsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {},
                        "OutpostId": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateEndpointRequest": {
            "type": "object",
            "properties": {
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "SecurityGroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "AccessType": {
                    "$ref": "#/$defs/EndpointAccessType"
                },
                "CustomerOwnedIpv4Pool": {
                    "$ref": "#/$defs/CustomerOwnedIpv4Pool"
                }
            }
        },
        "OutpostId": {
            "type": "string"
        },
        "SubnetId": {
            "type": "string"
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "EndpointAccessType": {
            "enum": [
                "PRIVATE",
                "CUSTOMER_OWNED_IP"
            ]
        },
        "CustomerOwnedIpv4Pool": {
            "type": "string"
        },
        "CreateEndpointResult": {
            "type": "object",
            "properties": {
                "EndpointArn": {
                    "$ref": "#/$defs/EndpointArn"
                }
            }
        },
        "EndpointArn": {
            "type": "string"
        },
        "DeleteEndpointRequest": {
            "type": "object",
            "properties": {
                "EndpointId": {
                    "$ref": "#/$defs/EndpointId"
                },
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                }
            }
        },
        "EndpointId": {
            "type": "string"
        },
        "ListEndpointsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListEndpointsResult": {
            "type": "object",
            "properties": {
                "Endpoints": {
                    "$ref": "#/$defs/Endpoints"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Endpoints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Endpoint"
            }
        },
        "Endpoint": {
            "type": "object",
            "properties": {
                "EndpointArn": {
                    "$ref": "#/$defs/EndpointArn"
                },
                "OutpostsId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "CidrBlock": {
                    "$ref": "#/$defs/CidrBlock"
                },
                "Status": {
                    "$ref": "#/$defs/EndpointStatus"
                },
                "CreationTime": {
                    "$ref": "#/$defs/CreationTime"
                },
                "NetworkInterfaces": {
                    "$ref": "#/$defs/NetworkInterfaces"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "SecurityGroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "AccessType": {
                    "$ref": "#/$defs/EndpointAccessType"
                },
                "CustomerOwnedIpv4Pool": {
                    "$ref": "#/$defs/CustomerOwnedIpv4Pool"
                },
                "FailedReason": {
                    "$ref": "#/$defs/FailedReason"
                }
            }
        },
        "CidrBlock": {
            "type": "string"
        },
        "EndpointStatus": {
            "enum": [
                "PENDING",
                "AVAILABLE",
                "DELETING",
                "CREATE_FAILED",
                "DELETE_FAILED"
            ]
        },
        "CreationTime": {
            "type": "string",
            "format": "date-time"
        },
        "NetworkInterfaces": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterface"
            }
        },
        "NetworkInterface": {
            "type": "object",
            "properties": {
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                }
            }
        },
        "NetworkInterfaceId": {
            "type": "string"
        },
        "VpcId": {
            "type": "string"
        },
        "FailedReason": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/Message"
                }
            }
        },
        "ErrorCode": {
            "type": "string"
        },
        "Message": {
            "type": "string"
        },
        "ListOutpostsWithS3Request": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListOutpostsWithS3Result": {
            "type": "object",
            "properties": {
                "Outposts": {
                    "$ref": "#/$defs/Outposts"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Outposts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Outpost"
            }
        },
        "Outpost": {
            "type": "object",
            "properties": {
                "OutpostArn": {
                    "$ref": "#/$defs/OutpostArn"
                },
                "S3OutpostArn": {
                    "$ref": "#/$defs/S3OutpostArn"
                },
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                },
                "OwnerId": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "CapacityInBytes": {
                    "$ref": "#/$defs/CapacityInBytes"
                }
            }
        },
        "OutpostArn": {
            "type": "string"
        },
        "S3OutpostArn": {
            "type": "string"
        },
        "AwsAccountId": {
            "type": "string"
        },
        "CapacityInBytes": {
            "type": "integer",
            "format": "int64"
        },
        "ListSharedEndpointsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "OutpostId": {
                    "$ref": "#/$defs/OutpostId"
                }
            }
        },
        "ListSharedEndpointsResult": {
            "type": "object",
            "properties": {
                "Endpoints": {
                    "$ref": "#/$defs/Endpoints"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://s3-outposts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://s3-outposts-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://s3-outposts.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://s3-outposts.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}