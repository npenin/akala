{
    "name": "iotfleethub",
    "commands": [
        {
            "name": "CreateApplication",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/applications"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateApplicationResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "applicationName": {},
                        "applicationDescription": {},
                        "clientToken": {},
                        "roleArn": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteApplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "applicationId": "route.applicationId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/applications/{applicationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteApplicationResponse"
                    },
                    "inject": [
                        "params.0.applicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "applicationId": {},
                        "clientToken": {}
                    }
                }
            }
        },
        {
            "name": "DescribeApplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "applicationId": "route.applicationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/applications/{applicationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeApplicationResponse"
                    },
                    "inject": [
                        "params.0.applicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DescribeApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "applicationId": {}
                    }
                }
            }
        },
        {
            "name": "ListApplications",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/applications"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListApplicationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "resourceArn": "route.resourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{resourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0.resourceArn",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceArn": {},
                        "tagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateApplication",
            "config": {
                "http": {
                    "inject": [
                        {
                            "applicationId": "route.applicationId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/applications/{applicationId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateApplicationResponse"
                    },
                    "inject": [
                        "params.0.applicationId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateApplicationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "applicationId": {},
                        "applicationName": {},
                        "applicationDescription": {},
                        "clientToken": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateApplicationRequest": {
            "type": "object",
            "properties": {
                "applicationName": {
                    "$ref": "#/$defs/Name"
                },
                "applicationDescription": {
                    "$ref": "#/$defs/Description"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "roleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "Name": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "ClientRequestToken": {
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "CreateApplicationResponse": {
            "type": "object",
            "properties": {
                "applicationId": {
                    "$ref": "#/$defs/Id"
                },
                "applicationArn": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "Id": {
            "type": "string"
        },
        "DeleteApplicationRequest": {
            "type": "object",
            "properties": {
                "applicationId": {
                    "$ref": "#/$defs/Id"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "DeleteApplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "DescribeApplicationRequest": {
            "type": "object",
            "properties": {
                "applicationId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "DescribeApplicationResponse": {
            "type": "object",
            "properties": {
                "applicationId": {
                    "$ref": "#/$defs/Id"
                },
                "applicationArn": {
                    "$ref": "#/$defs/Arn"
                },
                "applicationName": {
                    "$ref": "#/$defs/Name"
                },
                "applicationDescription": {
                    "$ref": "#/$defs/Description"
                },
                "applicationUrl": {
                    "$ref": "#/$defs/Url"
                },
                "applicationState": {
                    "$ref": "#/$defs/ApplicationState"
                },
                "applicationCreationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "applicationLastUpdateDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "roleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "ssoClientId": {
                    "$ref": "#/$defs/SsoClientId"
                },
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "Url": {
            "type": "string"
        },
        "ApplicationState": {
            "enum": [
                "CREATING",
                "DELETING",
                "ACTIVE",
                "CREATE_FAILED",
                "DELETE_FAILED"
            ]
        },
        "Timestamp": {
            "type": "integer",
            "format": "int64"
        },
        "SsoClientId": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "ListApplicationsRequest": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "ListApplicationsResponse": {
            "type": "object",
            "properties": {
                "applicationSummaries": {
                    "$ref": "#/$defs/ApplicationSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ApplicationSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationSummary"
            }
        },
        "ApplicationSummary": {
            "type": "object",
            "properties": {
                "applicationId": {
                    "$ref": "#/$defs/Id"
                },
                "applicationName": {
                    "$ref": "#/$defs/Name"
                },
                "applicationDescription": {
                    "$ref": "#/$defs/Description"
                },
                "applicationUrl": {
                    "$ref": "#/$defs/Url"
                },
                "applicationCreationDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "applicationLastUpdateDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "applicationState": {
                    "$ref": "#/$defs/ApplicationState"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateApplicationRequest": {
            "type": "object",
            "properties": {
                "applicationId": {
                    "$ref": "#/$defs/Id"
                },
                "applicationName": {
                    "$ref": "#/$defs/Name"
                },
                "applicationDescription": {
                    "$ref": "#/$defs/Description"
                },
                "clientToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "UpdateApplicationResponse": {
            "type": "object",
            "properties": {}
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://api.fleethub.iot-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://api.fleethub.iot-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://api.fleethub.iot.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://api.fleethub.iot.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
