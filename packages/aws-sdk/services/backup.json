{
    "name": "backup",
    "commands": [
        {
            "name": "CancelLegalHold",
            "config": {
                "http": {
                    "inject": [
                        {
                            "LegalHoldId": "route.LegalHoldId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/legal-holds/{LegalHoldId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelLegalHoldOutput"
                    },
                    "inject": [
                        "param.0.LegalHoldId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelLegalHoldInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateBackupPlan",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/backup/plans"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBackupPlanOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBackupPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateBackupSelection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupPlanId": "route.BackupPlanId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/backup/plans/{BackupPlanId}/selections"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBackupSelectionOutput"
                    },
                    "inject": [
                        "param.0.BackupPlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBackupSelectionInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateBackupVault",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/backup-vaults/{BackupVaultName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateBackupVaultOutput"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBackupVaultInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateFramework",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/audit/frameworks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFrameworkOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFrameworkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateLegalHold",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/legal-holds"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLegalHoldOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLegalHoldInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateLogicallyAirGappedBackupVault",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/logically-air-gapped-backup-vaults/{BackupVaultName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLogicallyAirGappedBackupVaultOutput"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLogicallyAirGappedBackupVaultInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateReportPlan",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/audit/report-plans"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateReportPlanOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateReportPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateRestoreTestingPlan",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/restore-testing/plans"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRestoreTestingPlanOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRestoreTestingPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateRestoreTestingSelection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreTestingPlanName": "route.RestoreTestingPlanName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restore-testing/plans/{RestoreTestingPlanName}/selections"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRestoreTestingSelectionOutput"
                    },
                    "inject": [
                        "param.0.RestoreTestingPlanName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRestoreTestingSelectionInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBackupPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupPlanId": "route.BackupPlanId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/backup/plans/{BackupPlanId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBackupPlanOutput"
                    },
                    "inject": [
                        "param.0.BackupPlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBackupPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBackupSelection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupPlanId": "route.BackupPlanId",
                            "SelectionId": "route.SelectionId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/backup/plans/{BackupPlanId}/selections/{SelectionId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupPlanId",
                        "param.0.SelectionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBackupSelectionInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBackupVault",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/backup-vaults/{BackupVaultName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBackupVaultInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBackupVaultAccessPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/backup-vaults/{BackupVaultName}/access-policy"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBackupVaultAccessPolicyInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBackupVaultLockConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/backup-vaults/{BackupVaultName}/vault-lock"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBackupVaultLockConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteBackupVaultNotifications",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/backup-vaults/{BackupVaultName}/notification-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBackupVaultNotificationsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteFramework",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FrameworkName": "route.FrameworkName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/audit/frameworks/{FrameworkName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.FrameworkName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFrameworkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRecoveryPoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "RecoveryPointArn": "route.RecoveryPointArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0.RecoveryPointArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRecoveryPointInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteReportPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReportPlanName": "route.ReportPlanName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/audit/report-plans/{ReportPlanName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ReportPlanName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteReportPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRestoreTestingPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreTestingPlanName": "route.RestoreTestingPlanName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restore-testing/plans/{RestoreTestingPlanName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.RestoreTestingPlanName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRestoreTestingPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteRestoreTestingSelection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreTestingPlanName": "route.RestoreTestingPlanName",
                            "RestoreTestingSelectionName": "route.RestoreTestingSelectionName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/restore-testing/plans/{RestoreTestingPlanName}/selections/{RestoreTestingSelectionName}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.RestoreTestingPlanName",
                        "param.0.RestoreTestingSelectionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRestoreTestingSelectionInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeBackupJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupJobId": "route.BackupJobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup-jobs/{BackupJobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeBackupJobOutput"
                    },
                    "inject": [
                        "param.0.BackupJobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeBackupJobInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeBackupVault",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup-vaults/{BackupVaultName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeBackupVaultOutput"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeBackupVaultInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeCopyJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "CopyJobId": "route.CopyJobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/copy-jobs/{CopyJobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCopyJobOutput"
                    },
                    "inject": [
                        "param.0.CopyJobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCopyJobInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeFramework",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FrameworkName": "route.FrameworkName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/audit/frameworks/{FrameworkName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFrameworkOutput"
                    },
                    "inject": [
                        "param.0.FrameworkName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFrameworkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeGlobalSettings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/global-settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeGlobalSettingsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeGlobalSettingsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeProtectedResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/resources/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeProtectedResourceOutput"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeProtectedResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeRecoveryPoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "RecoveryPointArn": "route.RecoveryPointArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRecoveryPointOutput"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0.RecoveryPointArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRecoveryPointInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeRegionSettings",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/account-settings"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRegionSettingsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRegionSettingsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeReportJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReportJobId": "route.ReportJobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/audit/report-jobs/{ReportJobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReportJobOutput"
                    },
                    "inject": [
                        "param.0.ReportJobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReportJobInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeReportPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReportPlanName": "route.ReportPlanName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/audit/report-plans/{ReportPlanName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReportPlanOutput"
                    },
                    "inject": [
                        "param.0.ReportPlanName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReportPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DescribeRestoreJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreJobId": "route.RestoreJobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restore-jobs/{RestoreJobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRestoreJobOutput"
                    },
                    "inject": [
                        "param.0.RestoreJobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRestoreJobInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DisassociateRecoveryPoint",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "RecoveryPointArn": "route.RecoveryPointArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}/disassociate"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0.RecoveryPointArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateRecoveryPointInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DisassociateRecoveryPointFromParent",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "RecoveryPointArn": "route.RecoveryPointArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}/parentAssociation"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0.RecoveryPointArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateRecoveryPointFromParentInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ExportBackupPlanTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupPlanId": "route.BackupPlanId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup/plans/{BackupPlanId}/toTemplate"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportBackupPlanTemplateOutput"
                    },
                    "inject": [
                        "param.0.BackupPlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportBackupPlanTemplateInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBackupPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupPlanId": "route.BackupPlanId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup/plans/{BackupPlanId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackupPlanOutput"
                    },
                    "inject": [
                        "param.0.BackupPlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBackupPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBackupPlanFromJSON",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/backup/template/json/toPlan"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackupPlanFromJSONOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBackupPlanFromJSONInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBackupPlanFromTemplate",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupPlanTemplateId": "route.BackupPlanTemplateId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup/template/plans/{BackupPlanTemplateId}/toPlan"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackupPlanFromTemplateOutput"
                    },
                    "inject": [
                        "param.0.BackupPlanTemplateId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBackupPlanFromTemplateInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBackupSelection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupPlanId": "route.BackupPlanId",
                            "SelectionId": "route.SelectionId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup/plans/{BackupPlanId}/selections/{SelectionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackupSelectionOutput"
                    },
                    "inject": [
                        "param.0.BackupPlanId",
                        "param.0.SelectionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBackupSelectionInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBackupVaultAccessPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup-vaults/{BackupVaultName}/access-policy"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackupVaultAccessPolicyOutput"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBackupVaultAccessPolicyInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBackupVaultNotifications",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup-vaults/{BackupVaultName}/notification-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBackupVaultNotificationsOutput"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBackupVaultNotificationsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetLegalHold",
            "config": {
                "http": {
                    "inject": [
                        {
                            "LegalHoldId": "route.LegalHoldId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/legal-holds/{LegalHoldId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLegalHoldOutput"
                    },
                    "inject": [
                        "param.0.LegalHoldId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLegalHoldInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetRecoveryPointRestoreMetadata",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "RecoveryPointArn": "route.RecoveryPointArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}/restore-metadata"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRecoveryPointRestoreMetadataOutput"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0.RecoveryPointArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRecoveryPointRestoreMetadataInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetRestoreJobMetadata",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreJobId": "route.RestoreJobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restore-jobs/{RestoreJobId}/metadata"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRestoreJobMetadataOutput"
                    },
                    "inject": [
                        "param.0.RestoreJobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRestoreJobMetadataInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetRestoreTestingInferredMetadata",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/restore-testing/inferred-metadata"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRestoreTestingInferredMetadataOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRestoreTestingInferredMetadataInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetRestoreTestingPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreTestingPlanName": "route.RestoreTestingPlanName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restore-testing/plans/{RestoreTestingPlanName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRestoreTestingPlanOutput"
                    },
                    "inject": [
                        "param.0.RestoreTestingPlanName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRestoreTestingPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetRestoreTestingSelection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreTestingPlanName": "route.RestoreTestingPlanName",
                            "RestoreTestingSelectionName": "route.RestoreTestingSelectionName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restore-testing/plans/{RestoreTestingPlanName}/selections/{RestoreTestingSelectionName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRestoreTestingSelectionOutput"
                    },
                    "inject": [
                        "param.0.RestoreTestingPlanName",
                        "param.0.RestoreTestingSelectionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRestoreTestingSelectionInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetSupportedResourceTypes",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/supported-resource-types"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSupportedResourceTypesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "ListBackupJobs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/backup-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBackupJobsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBackupJobsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListBackupJobSummaries",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/backup-job-summaries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBackupJobSummariesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBackupJobSummariesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListBackupPlans",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/backup/plans"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBackupPlansOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBackupPlansInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListBackupPlanTemplates",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/backup/template/plans"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBackupPlanTemplatesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBackupPlanTemplatesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListBackupPlanVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupPlanId": "route.BackupPlanId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup/plans/{BackupPlanId}/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBackupPlanVersionsOutput"
                    },
                    "inject": [
                        "param.0.BackupPlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBackupPlanVersionsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListBackupSelections",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupPlanId": "route.BackupPlanId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup/plans/{BackupPlanId}/selections"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBackupSelectionsOutput"
                    },
                    "inject": [
                        "param.0.BackupPlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBackupSelectionsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListBackupVaults",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/backup-vaults"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBackupVaultsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBackupVaultsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCopyJobs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/copy-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCopyJobsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCopyJobsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListCopyJobSummaries",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/copy-job-summaries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListCopyJobSummariesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListCopyJobSummariesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListFrameworks",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/frameworks"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFrameworksOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFrameworksInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListLegalHolds",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/legal-holds"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListLegalHoldsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListLegalHoldsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListProtectedResources",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/resources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProtectedResourcesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProtectedResourcesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListProtectedResourcesByBackupVault",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup-vaults/{BackupVaultName}/resources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListProtectedResourcesByBackupVaultOutput"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListProtectedResourcesByBackupVaultInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRecoveryPointsByBackupVault",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/backup-vaults/{BackupVaultName}/recovery-points"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRecoveryPointsByBackupVaultOutput"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRecoveryPointsByBackupVaultInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRecoveryPointsByLegalHold",
            "config": {
                "http": {
                    "inject": [
                        {
                            "LegalHoldId": "route.LegalHoldId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/legal-holds/{LegalHoldId}/recovery-points"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRecoveryPointsByLegalHoldOutput"
                    },
                    "inject": [
                        "param.0.LegalHoldId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRecoveryPointsByLegalHoldInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRecoveryPointsByResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/resources/{ResourceArn}/recovery-points"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRecoveryPointsByResourceOutput"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRecoveryPointsByResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListReportJobs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/report-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListReportJobsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListReportJobsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListReportPlans",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/report-plans"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListReportPlansOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListReportPlansInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRestoreJobs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/restore-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRestoreJobsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRestoreJobsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRestoreJobsByProtectedResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/resources/{ResourceArn}/restore-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRestoreJobsByProtectedResourceOutput"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRestoreJobsByProtectedResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRestoreJobSummaries",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/audit/restore-job-summaries"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRestoreJobSummariesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRestoreJobSummariesInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRestoreTestingPlans",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/restore-testing/plans"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRestoreTestingPlansOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRestoreTestingPlansInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListRestoreTestingSelections",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreTestingPlanName": "route.RestoreTestingPlanName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/restore-testing/plans/{RestoreTestingPlanName}/selections"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRestoreTestingSelectionsOutput"
                    },
                    "inject": [
                        "param.0.RestoreTestingPlanName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRestoreTestingSelectionsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTags",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsOutput"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutBackupVaultAccessPolicy",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/backup-vaults/{BackupVaultName}/access-policy"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutBackupVaultAccessPolicyInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutBackupVaultLockConfiguration",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/backup-vaults/{BackupVaultName}/vault-lock"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutBackupVaultLockConfigurationInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutBackupVaultNotifications",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/backup-vaults/{BackupVaultName}/notification-configuration"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutBackupVaultNotificationsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutRestoreValidationResult",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreJobId": "route.RestoreJobId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restore-jobs/{RestoreJobId}/validations"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.RestoreJobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutRestoreValidationResultInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartBackupJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/backup-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartBackupJobOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartBackupJobInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartCopyJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/copy-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartCopyJobOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartCopyJobInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartReportJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReportPlanName": "route.ReportPlanName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/audit/report-jobs/{ReportPlanName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartReportJobOutput"
                    },
                    "inject": [
                        "param.0.ReportPlanName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartReportJobInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StartRestoreJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/restore-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartRestoreJobOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartRestoreJobInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "StopBackupJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupJobId": "route.BackupJobId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backup-jobs/{BackupJobId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.BackupJobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopBackupJobInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/untag/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateBackupPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupPlanId": "route.BackupPlanId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backup/plans/{BackupPlanId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateBackupPlanOutput"
                    },
                    "inject": [
                        "param.0.BackupPlanId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateBackupPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateFramework",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FrameworkName": "route.FrameworkName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/audit/frameworks/{FrameworkName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateFrameworkOutput"
                    },
                    "inject": [
                        "param.0.FrameworkName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFrameworkInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateGlobalSettings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/global-settings"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateGlobalSettingsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRecoveryPointLifecycle",
            "config": {
                "http": {
                    "inject": [
                        {
                            "BackupVaultName": "route.BackupVaultName",
                            "RecoveryPointArn": "route.RecoveryPointArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRecoveryPointLifecycleOutput"
                    },
                    "inject": [
                        "param.0.BackupVaultName",
                        "param.0.RecoveryPointArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRecoveryPointLifecycleInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRegionSettings",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/account-settings"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRegionSettingsInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateReportPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReportPlanName": "route.ReportPlanName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/audit/report-plans/{ReportPlanName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateReportPlanOutput"
                    },
                    "inject": [
                        "param.0.ReportPlanName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateReportPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRestoreTestingPlan",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreTestingPlanName": "route.RestoreTestingPlanName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restore-testing/plans/{RestoreTestingPlanName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRestoreTestingPlanOutput"
                    },
                    "inject": [
                        "param.0.RestoreTestingPlanName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRestoreTestingPlanInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateRestoreTestingSelection",
            "config": {
                "http": {
                    "inject": [
                        {
                            "RestoreTestingPlanName": "route.RestoreTestingPlanName",
                            "RestoreTestingSelectionName": "route.RestoreTestingSelectionName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/restore-testing/plans/{RestoreTestingPlanName}/selections/{RestoreTestingSelectionName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRestoreTestingSelectionOutput"
                    },
                    "inject": [
                        "param.0.RestoreTestingPlanName",
                        "param.0.RestoreTestingSelectionName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRestoreTestingSelectionInput"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CancelLegalHoldOutput": {
            "type": "object",
            "properties": {}
        },
        "CancelLegalHoldInput": {
            "type": "object",
            "properties": {
                "LegalHoldId": {
                    "$ref": "#/$defs/string"
                },
                "CancelDescription": {
                    "$ref": "#/$defs/string"
                },
                "RetainRecordInDays": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "string": {
            "type": "string"
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "CreateBackupPlanOutput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "VersionId": {
                    "$ref": "#/$defs/string"
                },
                "AdvancedBackupSettings": {
                    "$ref": "#/$defs/AdvancedBackupSettings"
                }
            }
        },
        "ARN": {
            "type": "string"
        },
        "timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "AdvancedBackupSettings": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdvancedBackupSetting"
            }
        },
        "AdvancedBackupSetting": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "BackupOptions": {
                    "$ref": "#/$defs/BackupOptions"
                }
            }
        },
        "ResourceType": {
            "type": "string"
        },
        "BackupOptions": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/BackupOptionValue"
            }
        },
        "BackupOptionValue": {
            "type": "string"
        },
        "CreateBackupPlanInput": {
            "type": "object",
            "properties": {
                "BackupPlan": {
                    "$ref": "#/$defs/BackupPlanInput"
                },
                "BackupPlanTags": {
                    "$ref": "#/$defs/Tags"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BackupPlanInput": {
            "type": "object",
            "properties": {
                "BackupPlanName": {
                    "$ref": "#/$defs/BackupPlanName"
                },
                "Rules": {
                    "$ref": "#/$defs/BackupRulesInput"
                },
                "AdvancedBackupSettings": {
                    "$ref": "#/$defs/AdvancedBackupSettings"
                }
            }
        },
        "BackupPlanName": {
            "type": "string"
        },
        "BackupRulesInput": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupRuleInput"
            }
        },
        "BackupRuleInput": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/BackupRuleName"
                },
                "TargetBackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "ScheduleExpression": {
                    "$ref": "#/$defs/CronExpression"
                },
                "StartWindowMinutes": {
                    "$ref": "#/$defs/WindowMinutes"
                },
                "CompletionWindowMinutes": {
                    "$ref": "#/$defs/WindowMinutes"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/Lifecycle"
                },
                "RecoveryPointTags": {
                    "$ref": "#/$defs/Tags"
                },
                "CopyActions": {
                    "$ref": "#/$defs/CopyActions"
                },
                "EnableContinuousBackup": {
                    "$ref": "#/$defs/Boolean"
                },
                "ScheduleExpressionTimezone": {
                    "$ref": "#/$defs/Timezone"
                }
            }
        },
        "BackupRuleName": {
            "type": "string"
        },
        "BackupVaultName": {
            "type": "string"
        },
        "CronExpression": {
            "type": "string"
        },
        "WindowMinutes": {
            "type": "integer",
            "format": "int64"
        },
        "Lifecycle": {
            "type": "object",
            "properties": {
                "MoveToColdStorageAfterDays": {
                    "$ref": "#/$defs/Long"
                },
                "DeleteAfterDays": {
                    "$ref": "#/$defs/Long"
                },
                "OptInToArchiveForSupportedResources": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "Tags": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "CopyActions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CopyAction"
            }
        },
        "CopyAction": {
            "type": "object",
            "properties": {
                "Lifecycle": {
                    "$ref": "#/$defs/Lifecycle"
                },
                "DestinationBackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "Timezone": {
            "type": "string"
        },
        "CreateBackupSelectionOutput": {
            "type": "object",
            "properties": {
                "SelectionId": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "CreateBackupSelectionInput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "BackupSelection": {
                    "$ref": "#/$defs/BackupSelection"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BackupSelection": {
            "type": "object",
            "properties": {
                "SelectionName": {
                    "$ref": "#/$defs/BackupSelectionName"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "Resources": {
                    "$ref": "#/$defs/ResourceArns"
                },
                "ListOfTags": {
                    "$ref": "#/$defs/ListOfTags"
                },
                "NotResources": {
                    "$ref": "#/$defs/ResourceArns"
                },
                "Conditions": {
                    "$ref": "#/$defs/Conditions"
                }
            }
        },
        "BackupSelectionName": {
            "type": "string"
        },
        "IAMRoleArn": {
            "type": "string"
        },
        "ResourceArns": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ARN"
            }
        },
        "ListOfTags": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Condition"
            }
        },
        "Condition": {
            "type": "object",
            "properties": {
                "ConditionType": {
                    "$ref": "#/$defs/ConditionType"
                },
                "ConditionKey": {
                    "$ref": "#/$defs/ConditionKey"
                },
                "ConditionValue": {
                    "$ref": "#/$defs/ConditionValue"
                }
            }
        },
        "ConditionType": {
            "enum": [
                "STRINGEQUALS"
            ]
        },
        "ConditionKey": {
            "type": "string"
        },
        "ConditionValue": {
            "type": "string"
        },
        "Conditions": {
            "type": "object",
            "properties": {
                "StringEquals": {
                    "$ref": "#/$defs/ConditionParameters"
                },
                "StringNotEquals": {
                    "$ref": "#/$defs/ConditionParameters"
                },
                "StringLike": {
                    "$ref": "#/$defs/ConditionParameters"
                },
                "StringNotLike": {
                    "$ref": "#/$defs/ConditionParameters"
                }
            }
        },
        "ConditionParameters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConditionParameter"
            }
        },
        "ConditionParameter": {
            "type": "object",
            "properties": {
                "ConditionKey": {
                    "$ref": "#/$defs/ConditionKey"
                },
                "ConditionValue": {
                    "$ref": "#/$defs/ConditionValue"
                }
            }
        },
        "CreateBackupVaultOutput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "CreateBackupVaultInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultTags": {
                    "$ref": "#/$defs/Tags"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CreateFrameworkOutput": {
            "type": "object",
            "properties": {
                "FrameworkName": {
                    "$ref": "#/$defs/FrameworkName"
                },
                "FrameworkArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "FrameworkName": {
            "type": "string"
        },
        "CreateFrameworkInput": {
            "type": "object",
            "properties": {
                "FrameworkName": {
                    "$ref": "#/$defs/FrameworkName"
                },
                "FrameworkDescription": {
                    "$ref": "#/$defs/FrameworkDescription"
                },
                "FrameworkControls": {
                    "$ref": "#/$defs/FrameworkControls"
                },
                "IdempotencyToken": {
                    "$ref": "#/$defs/string"
                },
                "FrameworkTags": {
                    "$ref": "#/$defs/stringMap"
                }
            }
        },
        "FrameworkDescription": {
            "type": "string"
        },
        "FrameworkControls": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FrameworkControl"
            }
        },
        "FrameworkControl": {
            "type": "object",
            "properties": {
                "ControlName": {
                    "$ref": "#/$defs/ControlName"
                },
                "ControlInputParameters": {
                    "$ref": "#/$defs/ControlInputParameters"
                },
                "ControlScope": {
                    "$ref": "#/$defs/ControlScope"
                }
            }
        },
        "ControlName": {
            "type": "string"
        },
        "ControlInputParameters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ControlInputParameter"
            }
        },
        "ControlInputParameter": {
            "type": "object",
            "properties": {
                "ParameterName": {
                    "$ref": "#/$defs/ParameterName"
                },
                "ParameterValue": {
                    "$ref": "#/$defs/ParameterValue"
                }
            }
        },
        "ParameterName": {
            "type": "string"
        },
        "ParameterValue": {
            "type": "string"
        },
        "ControlScope": {
            "type": "object",
            "properties": {
                "ComplianceResourceIds": {
                    "$ref": "#/$defs/ComplianceResourceIdList"
                },
                "ComplianceResourceTypes": {
                    "$ref": "#/$defs/ResourceTypeList"
                },
                "Tags": {
                    "$ref": "#/$defs/stringMap"
                }
            }
        },
        "ComplianceResourceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "ResourceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ARN"
            }
        },
        "stringMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/string"
            }
        },
        "CreateLegalHoldOutput": {
            "type": "object",
            "properties": {
                "Title": {
                    "$ref": "#/$defs/string"
                },
                "Status": {
                    "$ref": "#/$defs/LegalHoldStatus"
                },
                "Description": {
                    "$ref": "#/$defs/string"
                },
                "LegalHoldId": {
                    "$ref": "#/$defs/string"
                },
                "LegalHoldArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "RecoveryPointSelection": {
                    "$ref": "#/$defs/RecoveryPointSelection"
                }
            }
        },
        "LegalHoldStatus": {
            "enum": [
                "CREATING",
                "ACTIVE",
                "CANCELING",
                "CANCELED"
            ]
        },
        "RecoveryPointSelection": {
            "type": "object",
            "properties": {
                "VaultNames": {
                    "$ref": "#/$defs/VaultNames"
                },
                "ResourceIdentifiers": {
                    "$ref": "#/$defs/ResourceIdentifiers"
                },
                "DateRange": {
                    "$ref": "#/$defs/DateRange"
                }
            }
        },
        "VaultNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "ResourceIdentifiers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "DateRange": {
            "type": "object",
            "properties": {
                "FromDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "ToDate": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "CreateLegalHoldInput": {
            "type": "object",
            "properties": {
                "Title": {
                    "$ref": "#/$defs/string"
                },
                "Description": {
                    "$ref": "#/$defs/string"
                },
                "IdempotencyToken": {
                    "$ref": "#/$defs/string"
                },
                "RecoveryPointSelection": {
                    "$ref": "#/$defs/RecoveryPointSelection"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "CreateLogicallyAirGappedBackupVaultOutput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "VaultState": {
                    "$ref": "#/$defs/VaultState"
                }
            }
        },
        "VaultState": {
            "enum": [
                "CREATING",
                "AVAILABLE",
                "FAILED"
            ]
        },
        "CreateLogicallyAirGappedBackupVaultInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultTags": {
                    "$ref": "#/$defs/Tags"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/string"
                },
                "MinRetentionDays": {
                    "$ref": "#/$defs/Long"
                },
                "MaxRetentionDays": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "CreateReportPlanOutput": {
            "type": "object",
            "properties": {
                "ReportPlanName": {
                    "$ref": "#/$defs/ReportPlanName"
                },
                "ReportPlanArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "ReportPlanName": {
            "type": "string"
        },
        "CreateReportPlanInput": {
            "type": "object",
            "properties": {
                "ReportPlanName": {
                    "$ref": "#/$defs/ReportPlanName"
                },
                "ReportPlanDescription": {
                    "$ref": "#/$defs/ReportPlanDescription"
                },
                "ReportDeliveryChannel": {
                    "$ref": "#/$defs/ReportDeliveryChannel"
                },
                "ReportSetting": {
                    "$ref": "#/$defs/ReportSetting"
                },
                "ReportPlanTags": {
                    "$ref": "#/$defs/stringMap"
                },
                "IdempotencyToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ReportPlanDescription": {
            "type": "string"
        },
        "ReportDeliveryChannel": {
            "type": "object",
            "properties": {
                "S3BucketName": {
                    "$ref": "#/$defs/string"
                },
                "S3KeyPrefix": {
                    "$ref": "#/$defs/string"
                },
                "Formats": {
                    "$ref": "#/$defs/FormatList"
                }
            }
        },
        "FormatList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "ReportSetting": {
            "type": "object",
            "properties": {
                "ReportTemplate": {
                    "$ref": "#/$defs/string"
                },
                "FrameworkArns": {
                    "$ref": "#/$defs/stringList"
                },
                "NumberOfFrameworks": {
                    "$ref": "#/$defs/integer"
                },
                "Accounts": {
                    "$ref": "#/$defs/stringList"
                },
                "OrganizationUnits": {
                    "$ref": "#/$defs/stringList"
                },
                "Regions": {
                    "$ref": "#/$defs/stringList"
                }
            }
        },
        "stringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "integer": {
            "type": "integer",
            "format": "int32"
        },
        "CreateRestoreTestingPlanOutput": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "RestoreTestingPlanArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "CreateRestoreTestingPlanInput": {
            "type": "object",
            "properties": {
                "CreatorRequestId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlan": {
                    "$ref": "#/$defs/RestoreTestingPlanForCreate"
                },
                "Tags": {
                    "$ref": "#/$defs/SensitiveStringMap"
                }
            }
        },
        "RestoreTestingPlanForCreate": {
            "type": "object",
            "properties": {
                "RecoveryPointSelection": {
                    "$ref": "#/$defs/RestoreTestingRecoveryPointSelection"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ScheduleExpression": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ScheduleExpressionTimezone": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "StartWindowHours": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "RestoreTestingRecoveryPointSelection": {
            "type": "object",
            "properties": {
                "Algorithm": {
                    "$ref": "#/$defs/RestoreTestingRecoveryPointSelectionAlgorithm"
                },
                "ExcludeVaults": {
                    "$ref": "#/$defs/stringList"
                },
                "IncludeVaults": {
                    "$ref": "#/$defs/stringList"
                },
                "RecoveryPointTypes": {
                    "$ref": "#/$defs/RestoreTestingRecoveryPointTypeList"
                },
                "SelectionWindowDays": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "RestoreTestingRecoveryPointSelectionAlgorithm": {
            "enum": [
                "LATEST_WITHIN_WINDOW",
                "RANDOM_WITHIN_WINDOW"
            ]
        },
        "RestoreTestingRecoveryPointTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RestoreTestingRecoveryPointType"
            }
        },
        "RestoreTestingRecoveryPointType": {
            "enum": [
                "CONTINUOUS",
                "SNAPSHOT"
            ]
        },
        "SensitiveStringMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/smithy.api#String"
            }
        },
        "CreateRestoreTestingSelectionOutput": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "RestoreTestingPlanArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingSelectionName": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "CreateRestoreTestingSelectionInput": {
            "type": "object",
            "properties": {
                "CreatorRequestId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingSelection": {
                    "$ref": "#/$defs/RestoreTestingSelectionForCreate"
                }
            }
        },
        "RestoreTestingSelectionForCreate": {
            "type": "object",
            "properties": {
                "IamRoleArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ProtectedResourceArns": {
                    "$ref": "#/$defs/stringList"
                },
                "ProtectedResourceConditions": {
                    "$ref": "#/$defs/ProtectedResourceConditions"
                },
                "ProtectedResourceType": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreMetadataOverrides": {
                    "$ref": "#/$defs/SensitiveStringMap"
                },
                "RestoreTestingSelectionName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ValidationWindowHours": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ProtectedResourceConditions": {
            "type": "object",
            "properties": {
                "StringEquals": {
                    "$ref": "#/$defs/KeyValueList"
                },
                "StringNotEquals": {
                    "$ref": "#/$defs/KeyValueList"
                }
            }
        },
        "KeyValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyValue"
            }
        },
        "KeyValue": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "Value": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "DeleteBackupPlanOutput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanArn": {
                    "$ref": "#/$defs/ARN"
                },
                "DeletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "VersionId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteBackupPlanInput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteBackupSelectionInput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "SelectionId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteBackupVaultInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DeleteBackupVaultAccessPolicyInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                }
            }
        },
        "DeleteBackupVaultLockConfigurationInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                }
            }
        },
        "DeleteBackupVaultNotificationsInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                }
            }
        },
        "DeleteFrameworkInput": {
            "type": "object",
            "properties": {
                "FrameworkName": {
                    "$ref": "#/$defs/FrameworkName"
                }
            }
        },
        "DeleteRecoveryPointInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "DeleteReportPlanInput": {
            "type": "object",
            "properties": {
                "ReportPlanName": {
                    "$ref": "#/$defs/ReportPlanName"
                }
            }
        },
        "DeleteRestoreTestingPlanInput": {
            "type": "object",
            "properties": {
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "DeleteRestoreTestingSelectionInput": {
            "type": "object",
            "properties": {
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingSelectionName": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "DescribeBackupJobOutput": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "BackupJobId": {
                    "$ref": "#/$defs/string"
                },
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CompletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "State": {
                    "$ref": "#/$defs/BackupJobState"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "PercentDone": {
                    "$ref": "#/$defs/string"
                },
                "BackupSizeInBytes": {
                    "$ref": "#/$defs/Long"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/RecoveryPointCreator"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "BytesTransferred": {
                    "$ref": "#/$defs/Long"
                },
                "ExpectedCompletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "StartBy": {
                    "$ref": "#/$defs/timestamp"
                },
                "BackupOptions": {
                    "$ref": "#/$defs/BackupOptions"
                },
                "BackupType": {
                    "$ref": "#/$defs/string"
                },
                "ParentJobId": {
                    "$ref": "#/$defs/string"
                },
                "IsParent": {
                    "$ref": "#/$defs/Boolean2"
                },
                "NumberOfChildJobs": {
                    "$ref": "#/$defs/Long"
                },
                "ChildJobsInState": {
                    "$ref": "#/$defs/BackupJobChildJobsInState"
                },
                "ResourceName": {
                    "$ref": "#/$defs/string"
                },
                "InitiationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "MessageCategory": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "AccountId": {
            "type": "string"
        },
        "BackupJobState": {
            "enum": [
                "CREATED",
                "PENDING",
                "RUNNING",
                "ABORTING",
                "ABORTED",
                "COMPLETED",
                "FAILED",
                "EXPIRED",
                "PARTIAL"
            ]
        },
        "RecoveryPointCreator": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanArn": {
                    "$ref": "#/$defs/ARN"
                },
                "BackupPlanVersion": {
                    "$ref": "#/$defs/string"
                },
                "BackupRuleId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "Boolean2": {
            "type": "boolean"
        },
        "BackupJobChildJobsInState": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Long"
            }
        },
        "DescribeBackupJobInput": {
            "type": "object",
            "properties": {
                "BackupJobId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DescribeBackupVaultOutput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/string"
                },
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "VaultType": {
                    "$ref": "#/$defs/VaultType"
                },
                "VaultState": {
                    "$ref": "#/$defs/VaultState"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/string"
                },
                "NumberOfRecoveryPoints": {
                    "$ref": "#/$defs/Long2"
                },
                "Locked": {
                    "$ref": "#/$defs/Boolean"
                },
                "MinRetentionDays": {
                    "$ref": "#/$defs/Long"
                },
                "MaxRetentionDays": {
                    "$ref": "#/$defs/Long"
                },
                "LockDate": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "VaultType": {
            "enum": [
                "BACKUP_VAULT",
                "LOGICALLY_AIR_GAPPED_BACKUP_VAULT"
            ]
        },
        "Long2": {
            "type": "integer",
            "format": "int64"
        },
        "DescribeBackupVaultInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/string"
                },
                "BackupVaultAccountId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DescribeCopyJobOutput": {
            "type": "object",
            "properties": {
                "CopyJob": {
                    "$ref": "#/$defs/CopyJob"
                }
            }
        },
        "CopyJob": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "CopyJobId": {
                    "$ref": "#/$defs/string"
                },
                "SourceBackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "SourceRecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "DestinationBackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "DestinationRecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CompletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "State": {
                    "$ref": "#/$defs/CopyJobState"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "BackupSizeInBytes": {
                    "$ref": "#/$defs/Long"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/RecoveryPointCreator"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ParentJobId": {
                    "$ref": "#/$defs/string"
                },
                "IsParent": {
                    "$ref": "#/$defs/Boolean2"
                },
                "CompositeMemberIdentifier": {
                    "$ref": "#/$defs/string"
                },
                "NumberOfChildJobs": {
                    "$ref": "#/$defs/Long"
                },
                "ChildJobsInState": {
                    "$ref": "#/$defs/CopyJobChildJobsInState"
                },
                "ResourceName": {
                    "$ref": "#/$defs/string"
                },
                "MessageCategory": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CopyJobState": {
            "enum": [
                "CREATED",
                "RUNNING",
                "COMPLETED",
                "FAILED",
                "PARTIAL"
            ]
        },
        "CopyJobChildJobsInState": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Long"
            }
        },
        "DescribeCopyJobInput": {
            "type": "object",
            "properties": {
                "CopyJobId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DescribeFrameworkOutput": {
            "type": "object",
            "properties": {
                "FrameworkName": {
                    "$ref": "#/$defs/FrameworkName"
                },
                "FrameworkArn": {
                    "$ref": "#/$defs/ARN"
                },
                "FrameworkDescription": {
                    "$ref": "#/$defs/FrameworkDescription"
                },
                "FrameworkControls": {
                    "$ref": "#/$defs/FrameworkControls"
                },
                "CreationTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "DeploymentStatus": {
                    "$ref": "#/$defs/string"
                },
                "FrameworkStatus": {
                    "$ref": "#/$defs/string"
                },
                "IdempotencyToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "DescribeFrameworkInput": {
            "type": "object",
            "properties": {
                "FrameworkName": {
                    "$ref": "#/$defs/FrameworkName"
                }
            }
        },
        "DescribeGlobalSettingsOutput": {
            "type": "object",
            "properties": {
                "GlobalSettings": {
                    "$ref": "#/$defs/GlobalSettings"
                },
                "LastUpdateTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "GlobalSettings": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/GlobalSettingsValue"
            }
        },
        "GlobalSettingsValue": {
            "type": "string"
        },
        "DescribeGlobalSettingsInput": {
            "type": "object",
            "properties": {}
        },
        "DescribeProtectedResourceOutput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "LastBackupTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "ResourceName": {
                    "$ref": "#/$defs/string"
                },
                "LastBackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "LastRecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "LatestRestoreExecutionTimeMinutes": {
                    "$ref": "#/$defs/Long"
                },
                "LatestRestoreJobCreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "LatestRestoreRecoveryPointCreationDate": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "DescribeProtectedResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "DescribeRecoveryPointOutput": {
            "type": "object",
            "properties": {
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "SourceBackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/RecoveryPointCreator"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "Status": {
                    "$ref": "#/$defs/RecoveryPointStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CompletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "BackupSizeInBytes": {
                    "$ref": "#/$defs/Long"
                },
                "CalculatedLifecycle": {
                    "$ref": "#/$defs/CalculatedLifecycle"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/Lifecycle"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/ARN"
                },
                "IsEncrypted": {
                    "$ref": "#/$defs/Boolean2"
                },
                "StorageClass": {
                    "$ref": "#/$defs/StorageClass"
                },
                "LastRestoreTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "ParentRecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CompositeMemberIdentifier": {
                    "$ref": "#/$defs/string"
                },
                "IsParent": {
                    "$ref": "#/$defs/Boolean2"
                },
                "ResourceName": {
                    "$ref": "#/$defs/string"
                },
                "VaultType": {
                    "$ref": "#/$defs/VaultType"
                }
            }
        },
        "RecoveryPointStatus": {
            "enum": [
                "COMPLETED",
                "PARTIAL",
                "DELETING",
                "EXPIRED"
            ]
        },
        "CalculatedLifecycle": {
            "type": "object",
            "properties": {
                "MoveToColdStorageAt": {
                    "$ref": "#/$defs/timestamp"
                },
                "DeleteAt": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "StorageClass": {
            "enum": [
                "WARM",
                "COLD",
                "DELETED"
            ]
        },
        "DescribeRecoveryPointInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "BackupVaultAccountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "DescribeRegionSettingsOutput": {
            "type": "object",
            "properties": {
                "ResourceTypeOptInPreference": {
                    "$ref": "#/$defs/ResourceTypeOptInPreference"
                },
                "ResourceTypeManagementPreference": {
                    "$ref": "#/$defs/ResourceTypeManagementPreference"
                }
            }
        },
        "ResourceTypeOptInPreference": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/IsEnabled"
            }
        },
        "IsEnabled": {
            "type": "boolean"
        },
        "ResourceTypeManagementPreference": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/IsEnabled"
            }
        },
        "DescribeRegionSettingsInput": {
            "type": "object",
            "properties": {}
        },
        "DescribeReportJobOutput": {
            "type": "object",
            "properties": {
                "ReportJob": {
                    "$ref": "#/$defs/ReportJob"
                }
            }
        },
        "ReportJob": {
            "type": "object",
            "properties": {
                "ReportJobId": {
                    "$ref": "#/$defs/ReportJobId"
                },
                "ReportPlanArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ReportTemplate": {
                    "$ref": "#/$defs/string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "CompletionTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/string"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "ReportDestination": {
                    "$ref": "#/$defs/ReportDestination"
                }
            }
        },
        "ReportJobId": {
            "type": "string"
        },
        "ReportDestination": {
            "type": "object",
            "properties": {
                "S3BucketName": {
                    "$ref": "#/$defs/string"
                },
                "S3Keys": {
                    "$ref": "#/$defs/stringList"
                }
            }
        },
        "DescribeReportJobInput": {
            "type": "object",
            "properties": {
                "ReportJobId": {
                    "$ref": "#/$defs/ReportJobId"
                }
            }
        },
        "DescribeReportPlanOutput": {
            "type": "object",
            "properties": {
                "ReportPlan": {
                    "$ref": "#/$defs/ReportPlan"
                }
            }
        },
        "ReportPlan": {
            "type": "object",
            "properties": {
                "ReportPlanArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ReportPlanName": {
                    "$ref": "#/$defs/ReportPlanName"
                },
                "ReportPlanDescription": {
                    "$ref": "#/$defs/ReportPlanDescription"
                },
                "ReportSetting": {
                    "$ref": "#/$defs/ReportSetting"
                },
                "ReportDeliveryChannel": {
                    "$ref": "#/$defs/ReportDeliveryChannel"
                },
                "DeploymentStatus": {
                    "$ref": "#/$defs/string"
                },
                "CreationTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastAttemptedExecutionTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastSuccessfulExecutionTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "DescribeReportPlanInput": {
            "type": "object",
            "properties": {
                "ReportPlanName": {
                    "$ref": "#/$defs/ReportPlanName"
                }
            }
        },
        "DescribeRestoreJobOutput": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "RestoreJobId": {
                    "$ref": "#/$defs/string"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CompletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/RestoreJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "PercentDone": {
                    "$ref": "#/$defs/string"
                },
                "BackupSizeInBytes": {
                    "$ref": "#/$defs/Long"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "ExpectedCompletionTimeMinutes": {
                    "$ref": "#/$defs/Long"
                },
                "CreatedResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "RecoveryPointCreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/RestoreJobCreator"
                },
                "ValidationStatus": {
                    "$ref": "#/$defs/RestoreValidationStatus"
                },
                "ValidationStatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "DeletionStatus": {
                    "$ref": "#/$defs/RestoreDeletionStatus"
                },
                "DeletionStatusMessage": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RestoreJobStatus": {
            "enum": [
                "PENDING",
                "RUNNING",
                "COMPLETED",
                "ABORTED",
                "FAILED"
            ]
        },
        "RestoreJobCreator": {
            "type": "object",
            "properties": {
                "RestoreTestingPlanArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "RestoreValidationStatus": {
            "enum": [
                "FAILED",
                "SUCCESSFUL",
                "TIMED_OUT",
                "VALIDATING"
            ]
        },
        "RestoreDeletionStatus": {
            "enum": [
                "DELETING",
                "FAILED",
                "SUCCESSFUL"
            ]
        },
        "DescribeRestoreJobInput": {
            "type": "object",
            "properties": {
                "RestoreJobId": {
                    "$ref": "#/$defs/RestoreJobId"
                }
            }
        },
        "RestoreJobId": {
            "type": "string"
        },
        "DisassociateRecoveryPointInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "DisassociateRecoveryPointFromParentInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "ExportBackupPlanTemplateOutput": {
            "type": "object",
            "properties": {
                "BackupPlanTemplateJson": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ExportBackupPlanTemplateInput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetBackupPlanOutput": {
            "type": "object",
            "properties": {
                "BackupPlan": {
                    "$ref": "#/$defs/BackupPlan"
                },
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanArn": {
                    "$ref": "#/$defs/ARN"
                },
                "VersionId": {
                    "$ref": "#/$defs/string"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/string"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "DeletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "LastExecutionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "AdvancedBackupSettings": {
                    "$ref": "#/$defs/AdvancedBackupSettings"
                }
            }
        },
        "BackupPlan": {
            "type": "object",
            "properties": {
                "BackupPlanName": {
                    "$ref": "#/$defs/BackupPlanName"
                },
                "Rules": {
                    "$ref": "#/$defs/BackupRules"
                },
                "AdvancedBackupSettings": {
                    "$ref": "#/$defs/AdvancedBackupSettings"
                }
            }
        },
        "BackupRules": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupRule"
            }
        },
        "BackupRule": {
            "type": "object",
            "properties": {
                "RuleName": {
                    "$ref": "#/$defs/BackupRuleName"
                },
                "TargetBackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "ScheduleExpression": {
                    "$ref": "#/$defs/CronExpression"
                },
                "StartWindowMinutes": {
                    "$ref": "#/$defs/WindowMinutes"
                },
                "CompletionWindowMinutes": {
                    "$ref": "#/$defs/WindowMinutes"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/Lifecycle"
                },
                "RecoveryPointTags": {
                    "$ref": "#/$defs/Tags"
                },
                "RuleId": {
                    "$ref": "#/$defs/string"
                },
                "CopyActions": {
                    "$ref": "#/$defs/CopyActions"
                },
                "EnableContinuousBackup": {
                    "$ref": "#/$defs/Boolean"
                },
                "ScheduleExpressionTimezone": {
                    "$ref": "#/$defs/Timezone"
                }
            }
        },
        "GetBackupPlanInput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "VersionId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetBackupPlanFromJSONOutput": {
            "type": "object",
            "properties": {
                "BackupPlan": {
                    "$ref": "#/$defs/BackupPlan"
                }
            }
        },
        "GetBackupPlanFromJSONInput": {
            "type": "object",
            "properties": {
                "BackupPlanTemplateJson": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetBackupPlanFromTemplateOutput": {
            "type": "object",
            "properties": {
                "BackupPlanDocument": {
                    "$ref": "#/$defs/BackupPlan"
                }
            }
        },
        "GetBackupPlanFromTemplateInput": {
            "type": "object",
            "properties": {
                "BackupPlanTemplateId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetBackupSelectionOutput": {
            "type": "object",
            "properties": {
                "BackupSelection": {
                    "$ref": "#/$defs/BackupSelection"
                },
                "SelectionId": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetBackupSelectionInput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "SelectionId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetBackupVaultAccessPolicyOutput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "Policy": {
                    "$ref": "#/$defs/IAMPolicy"
                }
            }
        },
        "IAMPolicy": {
            "type": "string"
        },
        "GetBackupVaultAccessPolicyInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                }
            }
        },
        "GetBackupVaultNotificationsOutput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "SNSTopicArn": {
                    "$ref": "#/$defs/ARN"
                },
                "BackupVaultEvents": {
                    "$ref": "#/$defs/BackupVaultEvents"
                }
            }
        },
        "BackupVaultEvents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupVaultEvent"
            }
        },
        "BackupVaultEvent": {
            "enum": [
                "BACKUP_JOB_STARTED",
                "BACKUP_JOB_COMPLETED",
                "BACKUP_JOB_SUCCESSFUL",
                "BACKUP_JOB_FAILED",
                "BACKUP_JOB_EXPIRED",
                "RESTORE_JOB_STARTED",
                "RESTORE_JOB_COMPLETED",
                "RESTORE_JOB_SUCCESSFUL",
                "RESTORE_JOB_FAILED",
                "COPY_JOB_STARTED",
                "COPY_JOB_SUCCESSFUL",
                "COPY_JOB_FAILED",
                "RECOVERY_POINT_MODIFIED",
                "BACKUP_PLAN_CREATED",
                "BACKUP_PLAN_MODIFIED",
                "S3_BACKUP_OBJECT_FAILED",
                "S3_RESTORE_OBJECT_FAILED"
            ]
        },
        "GetBackupVaultNotificationsInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                }
            }
        },
        "GetLegalHoldOutput": {
            "type": "object",
            "properties": {
                "Title": {
                    "$ref": "#/$defs/string"
                },
                "Status": {
                    "$ref": "#/$defs/LegalHoldStatus"
                },
                "Description": {
                    "$ref": "#/$defs/string"
                },
                "CancelDescription": {
                    "$ref": "#/$defs/string"
                },
                "LegalHoldId": {
                    "$ref": "#/$defs/string"
                },
                "LegalHoldArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CancellationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "RetainRecordUntil": {
                    "$ref": "#/$defs/timestamp"
                },
                "RecoveryPointSelection": {
                    "$ref": "#/$defs/RecoveryPointSelection"
                }
            }
        },
        "GetLegalHoldInput": {
            "type": "object",
            "properties": {
                "LegalHoldId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "GetRecoveryPointRestoreMetadataOutput": {
            "type": "object",
            "properties": {
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "RestoreMetadata": {
                    "$ref": "#/$defs/Metadata"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "Metadata": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/MetadataValue"
            }
        },
        "MetadataValue": {
            "type": "string"
        },
        "GetRecoveryPointRestoreMetadataInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "BackupVaultAccountId": {
                    "$ref": "#/$defs/AccountId"
                }
            }
        },
        "GetRestoreJobMetadataOutput": {
            "type": "object",
            "properties": {
                "RestoreJobId": {
                    "$ref": "#/$defs/RestoreJobId"
                },
                "Metadata": {
                    "$ref": "#/$defs/Metadata"
                }
            }
        },
        "GetRestoreJobMetadataInput": {
            "type": "object",
            "properties": {
                "RestoreJobId": {
                    "$ref": "#/$defs/RestoreJobId"
                }
            }
        },
        "GetRestoreTestingInferredMetadataOutput": {
            "type": "object",
            "properties": {
                "InferredMetadata": {
                    "$ref": "#/$defs/stringMap"
                }
            }
        },
        "GetRestoreTestingInferredMetadataInput": {
            "type": "object",
            "properties": {
                "BackupVaultAccountId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "BackupVaultName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "GetRestoreTestingPlanOutput": {
            "type": "object",
            "properties": {
                "RestoreTestingPlan": {
                    "$ref": "#/$defs/RestoreTestingPlanForGet"
                }
            }
        },
        "RestoreTestingPlanForGet": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "LastExecutionTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "LastUpdateTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "RecoveryPointSelection": {
                    "$ref": "#/$defs/RestoreTestingRecoveryPointSelection"
                },
                "RestoreTestingPlanArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ScheduleExpression": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ScheduleExpressionTimezone": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "StartWindowHours": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "GetRestoreTestingPlanInput": {
            "type": "object",
            "properties": {
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "GetRestoreTestingSelectionOutput": {
            "type": "object",
            "properties": {
                "RestoreTestingSelection": {
                    "$ref": "#/$defs/RestoreTestingSelectionForGet"
                }
            }
        },
        "RestoreTestingSelectionForGet": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ProtectedResourceArns": {
                    "$ref": "#/$defs/stringList"
                },
                "ProtectedResourceConditions": {
                    "$ref": "#/$defs/ProtectedResourceConditions"
                },
                "ProtectedResourceType": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreMetadataOverrides": {
                    "$ref": "#/$defs/SensitiveStringMap"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingSelectionName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ValidationWindowHours": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "GetRestoreTestingSelectionInput": {
            "type": "object",
            "properties": {
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingSelectionName": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "GetSupportedResourceTypesOutput": {
            "type": "object",
            "properties": {
                "ResourceTypes": {
                    "$ref": "#/$defs/ResourceTypes"
                }
            }
        },
        "ResourceTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceType"
            }
        },
        "ListBackupJobsOutput": {
            "type": "object",
            "properties": {
                "BackupJobs": {
                    "$ref": "#/$defs/BackupJobsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BackupJobsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupJob"
            }
        },
        "BackupJob": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "BackupJobId": {
                    "$ref": "#/$defs/string"
                },
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CompletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "State": {
                    "$ref": "#/$defs/BackupJobState"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "PercentDone": {
                    "$ref": "#/$defs/string"
                },
                "BackupSizeInBytes": {
                    "$ref": "#/$defs/Long"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/RecoveryPointCreator"
                },
                "ExpectedCompletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "StartBy": {
                    "$ref": "#/$defs/timestamp"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "BytesTransferred": {
                    "$ref": "#/$defs/Long"
                },
                "BackupOptions": {
                    "$ref": "#/$defs/BackupOptions"
                },
                "BackupType": {
                    "$ref": "#/$defs/string"
                },
                "ParentJobId": {
                    "$ref": "#/$defs/string"
                },
                "IsParent": {
                    "$ref": "#/$defs/Boolean2"
                },
                "ResourceName": {
                    "$ref": "#/$defs/string"
                },
                "InitiationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "MessageCategory": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListBackupJobsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ByResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ByState": {
                    "$ref": "#/$defs/BackupJobState"
                },
                "ByBackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "ByCreatedBefore": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByCreatedAfter": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ByCompleteAfter": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByCompleteBefore": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByParentJobId": {
                    "$ref": "#/$defs/string"
                },
                "ByMessageCategory": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListBackupJobSummariesOutput": {
            "type": "object",
            "properties": {
                "BackupJobSummaries": {
                    "$ref": "#/$defs/BackupJobSummaryList"
                },
                "AggregationPeriod": {
                    "$ref": "#/$defs/string"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BackupJobSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupJobSummary"
            }
        },
        "BackupJobSummary": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/Region"
                },
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "State": {
                    "$ref": "#/$defs/BackupJobStatus"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "MessageCategory": {
                    "$ref": "#/$defs/MessageCategory"
                },
                "Count": {
                    "$ref": "#/$defs/integer"
                },
                "StartTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "Region": {
            "type": "string"
        },
        "BackupJobStatus": {
            "enum": [
                "CREATED",
                "PENDING",
                "RUNNING",
                "ABORTING",
                "ABORTED",
                "COMPLETED",
                "FAILED",
                "EXPIRED",
                "PARTIAL",
                "AGGREGATE_ALL",
                "ANY"
            ]
        },
        "MessageCategory": {
            "type": "string"
        },
        "ListBackupJobSummariesInput": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "State": {
                    "$ref": "#/$defs/BackupJobStatus"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "MessageCategory": {
                    "$ref": "#/$defs/MessageCategory"
                },
                "AggregationPeriod": {
                    "$ref": "#/$defs/AggregationPeriod"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "AggregationPeriod": {
            "enum": [
                "ONE_DAY",
                "SEVEN_DAYS",
                "FOURTEEN_DAYS"
            ]
        },
        "ListBackupPlansOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlansList": {
                    "$ref": "#/$defs/BackupPlansList"
                }
            }
        },
        "BackupPlansList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupPlansListMember"
            }
        },
        "BackupPlansListMember": {
            "type": "object",
            "properties": {
                "BackupPlanArn": {
                    "$ref": "#/$defs/ARN"
                },
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "DeletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "VersionId": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanName": {
                    "$ref": "#/$defs/BackupPlanName"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/string"
                },
                "LastExecutionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "AdvancedBackupSettings": {
                    "$ref": "#/$defs/AdvancedBackupSettings"
                }
            }
        },
        "ListBackupPlansInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "IncludeDeleted": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ListBackupPlanTemplatesOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanTemplatesList": {
                    "$ref": "#/$defs/BackupPlanTemplatesList"
                }
            }
        },
        "BackupPlanTemplatesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupPlanTemplatesListMember"
            }
        },
        "BackupPlanTemplatesListMember": {
            "type": "object",
            "properties": {
                "BackupPlanTemplateId": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanTemplateName": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListBackupPlanTemplatesInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListBackupPlanVersionsOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanVersionsList": {
                    "$ref": "#/$defs/BackupPlanVersionsList"
                }
            }
        },
        "BackupPlanVersionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupPlansListMember"
            }
        },
        "ListBackupPlanVersionsInput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListBackupSelectionsOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "BackupSelectionsList": {
                    "$ref": "#/$defs/BackupSelectionsList"
                }
            }
        },
        "BackupSelectionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupSelectionsListMember"
            }
        },
        "BackupSelectionsListMember": {
            "type": "object",
            "properties": {
                "SelectionId": {
                    "$ref": "#/$defs/string"
                },
                "SelectionName": {
                    "$ref": "#/$defs/BackupSelectionName"
                },
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/string"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                }
            }
        },
        "ListBackupSelectionsInput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListBackupVaultsOutput": {
            "type": "object",
            "properties": {
                "BackupVaultList": {
                    "$ref": "#/$defs/BackupVaultList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "BackupVaultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BackupVaultListMember"
            }
        },
        "BackupVaultListMember": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "VaultType": {
                    "$ref": "#/$defs/VaultType"
                },
                "VaultState": {
                    "$ref": "#/$defs/VaultState"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreatorRequestId": {
                    "$ref": "#/$defs/string"
                },
                "NumberOfRecoveryPoints": {
                    "$ref": "#/$defs/Long2"
                },
                "Locked": {
                    "$ref": "#/$defs/Boolean"
                },
                "MinRetentionDays": {
                    "$ref": "#/$defs/Long"
                },
                "MaxRetentionDays": {
                    "$ref": "#/$defs/Long"
                },
                "LockDate": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "ListBackupVaultsInput": {
            "type": "object",
            "properties": {
                "ByVaultType": {
                    "$ref": "#/$defs/VaultType"
                },
                "ByShared": {
                    "$ref": "#/$defs/Boolean2"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListCopyJobsOutput": {
            "type": "object",
            "properties": {
                "CopyJobs": {
                    "$ref": "#/$defs/CopyJobsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CopyJobsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CopyJob"
            }
        },
        "ListCopyJobsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ByResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ByState": {
                    "$ref": "#/$defs/CopyJobState"
                },
                "ByCreatedBefore": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByCreatedAfter": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ByDestinationVaultArn": {
                    "$ref": "#/$defs/string"
                },
                "ByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ByCompleteBefore": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByCompleteAfter": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByParentJobId": {
                    "$ref": "#/$defs/string"
                },
                "ByMessageCategory": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListCopyJobSummariesOutput": {
            "type": "object",
            "properties": {
                "CopyJobSummaries": {
                    "$ref": "#/$defs/CopyJobSummaryList"
                },
                "AggregationPeriod": {
                    "$ref": "#/$defs/string"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "CopyJobSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CopyJobSummary"
            }
        },
        "CopyJobSummary": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/Region"
                },
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "State": {
                    "$ref": "#/$defs/CopyJobStatus"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "MessageCategory": {
                    "$ref": "#/$defs/MessageCategory"
                },
                "Count": {
                    "$ref": "#/$defs/integer"
                },
                "StartTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "CopyJobStatus": {
            "enum": [
                "CREATED",
                "RUNNING",
                "ABORTING",
                "ABORTED",
                "COMPLETING",
                "COMPLETED",
                "FAILING",
                "FAILED",
                "PARTIAL",
                "AGGREGATE_ALL",
                "ANY"
            ]
        },
        "ListCopyJobSummariesInput": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "State": {
                    "$ref": "#/$defs/CopyJobStatus"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "MessageCategory": {
                    "$ref": "#/$defs/MessageCategory"
                },
                "AggregationPeriod": {
                    "$ref": "#/$defs/AggregationPeriod"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListFrameworksOutput": {
            "type": "object",
            "properties": {
                "Frameworks": {
                    "$ref": "#/$defs/FrameworkList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "FrameworkList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Framework"
            }
        },
        "Framework": {
            "type": "object",
            "properties": {
                "FrameworkName": {
                    "$ref": "#/$defs/FrameworkName"
                },
                "FrameworkArn": {
                    "$ref": "#/$defs/ARN"
                },
                "FrameworkDescription": {
                    "$ref": "#/$defs/FrameworkDescription"
                },
                "NumberOfControls": {
                    "$ref": "#/$defs/integer"
                },
                "CreationTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "DeploymentStatus": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListFrameworksInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxFrameworkInputs"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "MaxFrameworkInputs": {
            "type": "integer",
            "format": "int32"
        },
        "ListLegalHoldsOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "LegalHolds": {
                    "$ref": "#/$defs/LegalHoldsList"
                }
            }
        },
        "LegalHoldsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LegalHold"
            }
        },
        "LegalHold": {
            "type": "object",
            "properties": {
                "Title": {
                    "$ref": "#/$defs/string"
                },
                "Status": {
                    "$ref": "#/$defs/LegalHoldStatus"
                },
                "Description": {
                    "$ref": "#/$defs/string"
                },
                "LegalHoldId": {
                    "$ref": "#/$defs/string"
                },
                "LegalHoldArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CancellationDate": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "ListLegalHoldsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListProtectedResourcesOutput": {
            "type": "object",
            "properties": {
                "Results": {
                    "$ref": "#/$defs/ProtectedResourcesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ProtectedResourcesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProtectedResource"
            }
        },
        "ProtectedResource": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "LastBackupTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "ResourceName": {
                    "$ref": "#/$defs/string"
                },
                "LastBackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "LastRecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "ListProtectedResourcesInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListProtectedResourcesByBackupVaultOutput": {
            "type": "object",
            "properties": {
                "Results": {
                    "$ref": "#/$defs/ProtectedResourcesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListProtectedResourcesByBackupVaultInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListRecoveryPointsByBackupVaultOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "RecoveryPoints": {
                    "$ref": "#/$defs/RecoveryPointByBackupVaultList"
                }
            }
        },
        "RecoveryPointByBackupVaultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecoveryPointByBackupVault"
            }
        },
        "RecoveryPointByBackupVault": {
            "type": "object",
            "properties": {
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "SourceBackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/RecoveryPointCreator"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "Status": {
                    "$ref": "#/$defs/RecoveryPointStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CompletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "BackupSizeInBytes": {
                    "$ref": "#/$defs/Long"
                },
                "CalculatedLifecycle": {
                    "$ref": "#/$defs/CalculatedLifecycle"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/Lifecycle"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/ARN"
                },
                "IsEncrypted": {
                    "$ref": "#/$defs/Boolean2"
                },
                "LastRestoreTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "ParentRecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CompositeMemberIdentifier": {
                    "$ref": "#/$defs/string"
                },
                "IsParent": {
                    "$ref": "#/$defs/Boolean2"
                },
                "ResourceName": {
                    "$ref": "#/$defs/string"
                },
                "VaultType": {
                    "$ref": "#/$defs/VaultType"
                }
            }
        },
        "ListRecoveryPointsByBackupVaultInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "BackupVaultAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ByResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ByResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ByBackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "ByCreatedBefore": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByCreatedAfter": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByParentRecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "ListRecoveryPointsByLegalHoldOutput": {
            "type": "object",
            "properties": {
                "RecoveryPoints": {
                    "$ref": "#/$defs/RecoveryPointsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RecoveryPointsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecoveryPointMember"
            }
        },
        "RecoveryPointMember": {
            "type": "object",
            "properties": {
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                }
            }
        },
        "ListRecoveryPointsByLegalHoldInput": {
            "type": "object",
            "properties": {
                "LegalHoldId": {
                    "$ref": "#/$defs/string"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListRecoveryPointsByResourceOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "RecoveryPoints": {
                    "$ref": "#/$defs/RecoveryPointByResourceList"
                }
            }
        },
        "RecoveryPointByResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecoveryPointByResource"
            }
        },
        "RecoveryPointByResource": {
            "type": "object",
            "properties": {
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/RecoveryPointStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "EncryptionKeyArn": {
                    "$ref": "#/$defs/ARN"
                },
                "BackupSizeBytes": {
                    "$ref": "#/$defs/Long"
                },
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "IsParent": {
                    "$ref": "#/$defs/Boolean2"
                },
                "ParentRecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceName": {
                    "$ref": "#/$defs/string"
                },
                "VaultType": {
                    "$ref": "#/$defs/VaultType"
                }
            }
        },
        "ListRecoveryPointsByResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ManagedByAWSBackupOnly": {
                    "$ref": "#/$defs/Boolean2"
                }
            }
        },
        "ListReportJobsOutput": {
            "type": "object",
            "properties": {
                "ReportJobs": {
                    "$ref": "#/$defs/ReportJobList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ReportJobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReportJob"
            }
        },
        "ListReportJobsInput": {
            "type": "object",
            "properties": {
                "ByReportPlanName": {
                    "$ref": "#/$defs/ReportPlanName"
                },
                "ByCreationBefore": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByCreationAfter": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByStatus": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListReportPlansOutput": {
            "type": "object",
            "properties": {
                "ReportPlans": {
                    "$ref": "#/$defs/ReportPlanList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ReportPlanList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReportPlan"
            }
        },
        "ListReportPlansInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListRestoreJobsOutput": {
            "type": "object",
            "properties": {
                "RestoreJobs": {
                    "$ref": "#/$defs/RestoreJobsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RestoreJobsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RestoreJobsListMember"
            }
        },
        "RestoreJobsListMember": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "RestoreJobId": {
                    "$ref": "#/$defs/string"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CompletionDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "Status": {
                    "$ref": "#/$defs/RestoreJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "PercentDone": {
                    "$ref": "#/$defs/string"
                },
                "BackupSizeInBytes": {
                    "$ref": "#/$defs/Long"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "ExpectedCompletionTimeMinutes": {
                    "$ref": "#/$defs/Long"
                },
                "CreatedResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "RecoveryPointCreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/RestoreJobCreator"
                },
                "ValidationStatus": {
                    "$ref": "#/$defs/RestoreValidationStatus"
                },
                "ValidationStatusMessage": {
                    "$ref": "#/$defs/string"
                },
                "DeletionStatus": {
                    "$ref": "#/$defs/RestoreDeletionStatus"
                },
                "DeletionStatusMessage": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListRestoreJobsInput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ByAccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "ByResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "ByCreatedBefore": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByCreatedAfter": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByStatus": {
                    "$ref": "#/$defs/RestoreJobStatus"
                },
                "ByCompleteBefore": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByCompleteAfter": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByRestoreTestingPlanArn": {
                    "$ref": "#/$defs/ARN"
                }
            }
        },
        "ListRestoreJobsByProtectedResourceOutput": {
            "type": "object",
            "properties": {
                "RestoreJobs": {
                    "$ref": "#/$defs/RestoreJobsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListRestoreJobsByProtectedResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "ByStatus": {
                    "$ref": "#/$defs/RestoreJobStatus"
                },
                "ByRecoveryPointCreationDateAfter": {
                    "$ref": "#/$defs/timestamp"
                },
                "ByRecoveryPointCreationDateBefore": {
                    "$ref": "#/$defs/timestamp"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListRestoreJobSummariesOutput": {
            "type": "object",
            "properties": {
                "RestoreJobSummaries": {
                    "$ref": "#/$defs/RestoreJobSummaryList"
                },
                "AggregationPeriod": {
                    "$ref": "#/$defs/string"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "RestoreJobSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RestoreJobSummary"
            }
        },
        "RestoreJobSummary": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/Region"
                },
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "State": {
                    "$ref": "#/$defs/RestoreJobState"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "Count": {
                    "$ref": "#/$defs/integer"
                },
                "StartTime": {
                    "$ref": "#/$defs/timestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "RestoreJobState": {
            "enum": [
                "CREATED",
                "PENDING",
                "RUNNING",
                "ABORTED",
                "COMPLETED",
                "FAILED",
                "AGGREGATE_ALL",
                "ANY"
            ]
        },
        "ListRestoreJobSummariesInput": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "State": {
                    "$ref": "#/$defs/RestoreJobState"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "AggregationPeriod": {
                    "$ref": "#/$defs/AggregationPeriod"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "ListRestoreTestingPlansOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlans": {
                    "$ref": "#/$defs/RestoreTestingPlans"
                }
            }
        },
        "RestoreTestingPlans": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RestoreTestingPlanForList"
            }
        },
        "RestoreTestingPlanForList": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "LastExecutionTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "LastUpdateTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "RestoreTestingPlanArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ScheduleExpression": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ScheduleExpressionTimezone": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "StartWindowHours": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListRestoreTestingPlansInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListRestoreTestingPlansInputMaxResultsInteger"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListRestoreTestingPlansInputMaxResultsInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ListRestoreTestingSelectionsOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingSelections": {
                    "$ref": "#/$defs/RestoreTestingSelections"
                }
            }
        },
        "RestoreTestingSelections": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RestoreTestingSelectionForList"
            }
        },
        "RestoreTestingSelectionForList": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ProtectedResourceType": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingSelectionName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ValidationWindowHours": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "ListRestoreTestingSelectionsInput": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListRestoreTestingSelectionsInputMaxResultsInteger"
                },
                "NextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListRestoreTestingSelectionsInputMaxResultsInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ListTagsOutput": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "ListTagsInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "NextToken": {
                    "$ref": "#/$defs/string"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "PutBackupVaultAccessPolicyInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "Policy": {
                    "$ref": "#/$defs/IAMPolicy"
                }
            }
        },
        "PutBackupVaultLockConfigurationInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "MinRetentionDays": {
                    "$ref": "#/$defs/Long"
                },
                "MaxRetentionDays": {
                    "$ref": "#/$defs/Long"
                },
                "ChangeableForDays": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "PutBackupVaultNotificationsInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "SNSTopicArn": {
                    "$ref": "#/$defs/ARN"
                },
                "BackupVaultEvents": {
                    "$ref": "#/$defs/BackupVaultEvents"
                }
            }
        },
        "PutRestoreValidationResultInput": {
            "type": "object",
            "properties": {
                "RestoreJobId": {
                    "$ref": "#/$defs/RestoreJobId"
                },
                "ValidationStatus": {
                    "$ref": "#/$defs/RestoreValidationStatus"
                },
                "ValidationStatusMessage": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "StartBackupJobOutput": {
            "type": "object",
            "properties": {
                "BackupJobId": {
                    "$ref": "#/$defs/string"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "IsParent": {
                    "$ref": "#/$defs/Boolean2"
                }
            }
        },
        "StartBackupJobInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "IdempotencyToken": {
                    "$ref": "#/$defs/string"
                },
                "StartWindowMinutes": {
                    "$ref": "#/$defs/WindowMinutes"
                },
                "CompleteWindowMinutes": {
                    "$ref": "#/$defs/WindowMinutes"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/Lifecycle"
                },
                "RecoveryPointTags": {
                    "$ref": "#/$defs/Tags"
                },
                "BackupOptions": {
                    "$ref": "#/$defs/BackupOptions"
                }
            }
        },
        "StartCopyJobOutput": {
            "type": "object",
            "properties": {
                "CopyJobId": {
                    "$ref": "#/$defs/string"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "IsParent": {
                    "$ref": "#/$defs/Boolean2"
                }
            }
        },
        "StartCopyJobInput": {
            "type": "object",
            "properties": {
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "SourceBackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "DestinationBackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "IdempotencyToken": {
                    "$ref": "#/$defs/string"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/Lifecycle"
                }
            }
        },
        "StartReportJobOutput": {
            "type": "object",
            "properties": {
                "ReportJobId": {
                    "$ref": "#/$defs/ReportJobId"
                }
            }
        },
        "StartReportJobInput": {
            "type": "object",
            "properties": {
                "ReportPlanName": {
                    "$ref": "#/$defs/ReportPlanName"
                },
                "IdempotencyToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "StartRestoreJobOutput": {
            "type": "object",
            "properties": {
                "RestoreJobId": {
                    "$ref": "#/$defs/RestoreJobId"
                }
            }
        },
        "StartRestoreJobInput": {
            "type": "object",
            "properties": {
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "Metadata": {
                    "$ref": "#/$defs/Metadata"
                },
                "IamRoleArn": {
                    "$ref": "#/$defs/IAMRoleArn"
                },
                "IdempotencyToken": {
                    "$ref": "#/$defs/string"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "CopySourceTagsToRestoredResource": {
                    "$ref": "#/$defs/Boolean2"
                }
            }
        },
        "StopBackupJobInput": {
            "type": "object",
            "properties": {
                "BackupJobId": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ARN"
                },
                "TagKeyList": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/string"
            }
        },
        "UpdateBackupPlanOutput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlanArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationDate": {
                    "$ref": "#/$defs/timestamp"
                },
                "VersionId": {
                    "$ref": "#/$defs/string"
                },
                "AdvancedBackupSettings": {
                    "$ref": "#/$defs/AdvancedBackupSettings"
                }
            }
        },
        "UpdateBackupPlanInput": {
            "type": "object",
            "properties": {
                "BackupPlanId": {
                    "$ref": "#/$defs/string"
                },
                "BackupPlan": {
                    "$ref": "#/$defs/BackupPlanInput"
                }
            }
        },
        "UpdateFrameworkOutput": {
            "type": "object",
            "properties": {
                "FrameworkName": {
                    "$ref": "#/$defs/FrameworkName"
                },
                "FrameworkArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "UpdateFrameworkInput": {
            "type": "object",
            "properties": {
                "FrameworkName": {
                    "$ref": "#/$defs/FrameworkName"
                },
                "FrameworkDescription": {
                    "$ref": "#/$defs/FrameworkDescription"
                },
                "FrameworkControls": {
                    "$ref": "#/$defs/FrameworkControls"
                },
                "IdempotencyToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateGlobalSettingsInput": {
            "type": "object",
            "properties": {
                "GlobalSettings": {
                    "$ref": "#/$defs/GlobalSettings"
                }
            }
        },
        "UpdateRecoveryPointLifecycleOutput": {
            "type": "object",
            "properties": {
                "BackupVaultArn": {
                    "$ref": "#/$defs/ARN"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/Lifecycle"
                },
                "CalculatedLifecycle": {
                    "$ref": "#/$defs/CalculatedLifecycle"
                }
            }
        },
        "UpdateRecoveryPointLifecycleInput": {
            "type": "object",
            "properties": {
                "BackupVaultName": {
                    "$ref": "#/$defs/BackupVaultName"
                },
                "RecoveryPointArn": {
                    "$ref": "#/$defs/ARN"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/Lifecycle"
                }
            }
        },
        "UpdateRegionSettingsInput": {
            "type": "object",
            "properties": {
                "ResourceTypeOptInPreference": {
                    "$ref": "#/$defs/ResourceTypeOptInPreference"
                },
                "ResourceTypeManagementPreference": {
                    "$ref": "#/$defs/ResourceTypeManagementPreference"
                }
            }
        },
        "UpdateReportPlanOutput": {
            "type": "object",
            "properties": {
                "ReportPlanName": {
                    "$ref": "#/$defs/ReportPlanName"
                },
                "ReportPlanArn": {
                    "$ref": "#/$defs/ARN"
                },
                "CreationTime": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "UpdateReportPlanInput": {
            "type": "object",
            "properties": {
                "ReportPlanName": {
                    "$ref": "#/$defs/ReportPlanName"
                },
                "ReportPlanDescription": {
                    "$ref": "#/$defs/ReportPlanDescription"
                },
                "ReportDeliveryChannel": {
                    "$ref": "#/$defs/ReportDeliveryChannel"
                },
                "ReportSetting": {
                    "$ref": "#/$defs/ReportSetting"
                },
                "IdempotencyToken": {
                    "$ref": "#/$defs/string"
                }
            }
        },
        "UpdateRestoreTestingPlanOutput": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "RestoreTestingPlanArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                }
            }
        },
        "UpdateRestoreTestingPlanInput": {
            "type": "object",
            "properties": {
                "RestoreTestingPlan": {
                    "$ref": "#/$defs/RestoreTestingPlanForUpdate"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "RestoreTestingPlanForUpdate": {
            "type": "object",
            "properties": {
                "RecoveryPointSelection": {
                    "$ref": "#/$defs/RestoreTestingRecoveryPointSelection"
                },
                "ScheduleExpression": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ScheduleExpressionTimezone": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "StartWindowHours": {
                    "$ref": "#/$defs/integer"
                }
            }
        },
        "UpdateRestoreTestingSelectionOutput": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "RestoreTestingPlanArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingSelectionName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                }
            }
        },
        "UpdateRestoreTestingSelectionInput": {
            "type": "object",
            "properties": {
                "RestoreTestingPlanName": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "RestoreTestingSelection": {
                    "$ref": "#/$defs/RestoreTestingSelectionForUpdate"
                },
                "RestoreTestingSelectionName": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "RestoreTestingSelectionForUpdate": {
            "type": "object",
            "properties": {
                "IamRoleArn": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "ProtectedResourceArns": {
                    "$ref": "#/$defs/stringList"
                },
                "ProtectedResourceConditions": {
                    "$ref": "#/$defs/ProtectedResourceConditions"
                },
                "RestoreMetadataOverrides": {
                    "$ref": "#/$defs/SensitiveStringMap"
                },
                "ValidationWindowHours": {
                    "$ref": "#/$defs/integer"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://backup-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://backup-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://backup.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://backup.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}