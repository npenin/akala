{
    "name": "pricing",
    "commands": [
        {
            "name": "DescribeServices",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeServices"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeServicesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeServicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAttributeValues",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetAttributeValues"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAttributeValuesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAttributeValuesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPriceListFileUrl",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetPriceListFileUrl"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPriceListFileUrlResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPriceListFileUrlRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetProducts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetProducts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetProductsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetProductsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPriceLists",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListPriceLists"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPriceListsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPriceListsRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "DescribeServicesResponse": {
            "type": "object",
            "properties": {
                "Services": {
                    "$ref": "#/$defs/ServiceList"
                },
                "FormatVersion": {
                    "$ref": "#/$defs/String"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Service"
            }
        },
        "Service": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/String"
                },
                "AttributeNames": {
                    "$ref": "#/$defs/AttributeNameList"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "AttributeNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeServicesRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/String"
                },
                "FormatVersion": {
                    "$ref": "#/$defs/String"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "BoxedInteger": {
            "type": "integer",
            "format": "int32"
        },
        "GetAttributeValuesResponse": {
            "type": "object",
            "properties": {
                "AttributeValues": {
                    "$ref": "#/$defs/AttributeValueList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AttributeValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "AttributeValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetAttributeValuesRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/String"
                },
                "AttributeName": {
                    "$ref": "#/$defs/String"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "GetPriceListFileUrlResponse": {
            "type": "object",
            "properties": {
                "Url": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetPriceListFileUrlRequest": {
            "type": "object",
            "properties": {
                "PriceListArn": {
                    "$ref": "#/$defs/PriceListArn"
                },
                "FileFormat": {
                    "$ref": "#/$defs/FileFormat"
                }
            }
        },
        "PriceListArn": {
            "type": "string"
        },
        "FileFormat": {
            "type": "string"
        },
        "GetProductsResponse": {
            "type": "object",
            "properties": {
                "FormatVersion": {
                    "$ref": "#/$defs/String"
                },
                "PriceList": {
                    "$ref": "#/$defs/PriceListJsonItems"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PriceListJsonItems": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SynthesizedJsonPriceListJsonItem"
            }
        },
        "SynthesizedJsonPriceListJsonItem": {
            "type": "string"
        },
        "GetProductsRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/String"
                },
                "Filters": {
                    "$ref": "#/$defs/Filters"
                },
                "FormatVersion": {
                    "$ref": "#/$defs/String"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/BoxedInteger"
                }
            }
        },
        "Filters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/FilterType"
                },
                "Field": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FilterType": {
            "enum": [
                "TERM_MATCH"
            ]
        },
        "ListPriceListsResponse": {
            "type": "object",
            "properties": {
                "PriceLists": {
                    "$ref": "#/$defs/PriceLists"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PriceLists": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PriceList"
            }
        },
        "PriceList": {
            "type": "object",
            "properties": {
                "PriceListArn": {
                    "$ref": "#/$defs/PriceListArn"
                },
                "RegionCode": {
                    "$ref": "#/$defs/RegionCode"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCode"
                },
                "FileFormats": {
                    "$ref": "#/$defs/FileFormats"
                }
            }
        },
        "RegionCode": {
            "type": "string"
        },
        "CurrencyCode": {
            "type": "string"
        },
        "FileFormats": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FileFormat"
            }
        },
        "ListPriceListsRequest": {
            "type": "object",
            "properties": {
                "ServiceCode": {
                    "$ref": "#/$defs/ServiceCode"
                },
                "EffectiveDate": {
                    "$ref": "#/$defs/EffectiveDate"
                },
                "RegionCode": {
                    "$ref": "#/$defs/RegionCode"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCode"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ServiceCode": {
            "type": "string"
        },
        "EffectiveDate": {
            "type": "string",
            "format": "date-time"
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://api.pricing-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://api.pricing-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://api.pricing.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "stringEquals",
                                            "argv": [
                                                "aws",
                                                {
                                                    "fn": "getAttr",
                                                    "argv": [
                                                        {
                                                            "ref": "PartitionResult"
                                                        },
                                                        "name"
                                                    ]
                                                }
                                            ]
                                        }
                                    ],
                                    "endpoint": {
                                        "url": "https://api.pricing.{Region}.amazonaws.com",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://api.pricing.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}