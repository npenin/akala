{
    "name": "resource-groups",
    "commands": [
        {
            "name": "CancelTagSyncTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CancelTagSyncTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelTagSyncTaskInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateGroupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteGroupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAccountSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetAccountSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAccountSettingsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "GetGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetGroupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetGroupConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetGroupConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetGroupConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetGroupConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetGroupQuery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetGroupQuery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetGroupQueryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetGroupQueryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTagsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTagsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTagSyncTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetTagSyncTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTagSyncTaskOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTagSyncTaskInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GroupResources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GroupResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GroupResourcesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GroupResourcesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListGroupingStatuses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListGroupingStatuses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGroupingStatusesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListGroupingStatusesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListGroupResources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListGroupResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGroupResourcesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListGroupResourcesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListGroupsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListGroupsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagSyncTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListTagSyncTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagSyncTasksOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagSyncTasksInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutGroupConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PutGroupConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutGroupConfigurationOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutGroupConfigurationInput"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchResources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "SearchResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchResourcesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchResourcesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "StartTagSyncTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartTagSyncTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartTagSyncTaskOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartTagSyncTaskInput"
                        }
                    }
                }
            }
        },
        {
            "name": "Tag",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Tag"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UngroupResources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UngroupResources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UngroupResourcesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UngroupResourcesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "Untag",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "Untag"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateAccountSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateAccountSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateAccountSettingsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateAccountSettingsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateGroupOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateGroupInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateGroupQuery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateGroupQuery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateGroupQueryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateGroupQueryInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CancelTagSyncTaskInput": {
            "type": "object",
            "properties": {
                "TaskArn": {
                    "$ref": "#/$defs/TagSyncTaskArn"
                }
            }
        },
        "TagSyncTaskArn": {
            "type": "string"
        },
        "CreateGroupOutput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/Group"
                },
                "ResourceQuery": {
                    "$ref": "#/$defs/ResourceQuery"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "GroupConfiguration": {
                    "$ref": "#/$defs/GroupConfiguration"
                }
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "GroupArn": {
                    "$ref": "#/$defs/GroupArnV2"
                },
                "Name": {
                    "$ref": "#/$defs/GroupName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Criticality": {
                    "$ref": "#/$defs/Criticality"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "DisplayName": {
                    "$ref": "#/$defs/DisplayName"
                },
                "ApplicationTag": {
                    "$ref": "#/$defs/ApplicationTag"
                }
            }
        },
        "GroupArnV2": {
            "type": "string"
        },
        "GroupName": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "Criticality": {
            "type": "integer",
            "format": "int32"
        },
        "Owner": {
            "type": "string"
        },
        "DisplayName": {
            "type": "string"
        },
        "ApplicationTag": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ApplicationArn"
            }
        },
        "ApplicationArn": {
            "type": "string"
        },
        "ResourceQuery": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/QueryType"
                },
                "Query": {
                    "$ref": "#/$defs/Query"
                }
            }
        },
        "QueryType": {
            "enum": [
                "TAG_FILTERS_1_0",
                "CLOUDFORMATION_STACK_1_0"
            ]
        },
        "Query": {
            "type": "string"
        },
        "Tags": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "GroupConfiguration": {
            "type": "object",
            "properties": {
                "Configuration": {
                    "$ref": "#/$defs/GroupConfigurationList"
                },
                "ProposedConfiguration": {
                    "$ref": "#/$defs/GroupConfigurationList"
                },
                "Status": {
                    "$ref": "#/$defs/GroupConfigurationStatus"
                },
                "FailureReason": {
                    "$ref": "#/$defs/GroupConfigurationFailureReason"
                }
            }
        },
        "GroupConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupConfigurationItem"
            }
        },
        "GroupConfigurationItem": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/GroupConfigurationType"
                },
                "Parameters": {
                    "$ref": "#/$defs/GroupParameterList"
                }
            }
        },
        "GroupConfigurationType": {
            "type": "string"
        },
        "GroupParameterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupConfigurationParameter"
            }
        },
        "GroupConfigurationParameter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/GroupConfigurationParameterName"
                },
                "Values": {
                    "$ref": "#/$defs/GroupConfigurationParameterValueList"
                }
            }
        },
        "GroupConfigurationParameterName": {
            "type": "string"
        },
        "GroupConfigurationParameterValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupConfigurationParameterValue"
            }
        },
        "GroupConfigurationParameterValue": {
            "type": "string"
        },
        "GroupConfigurationStatus": {
            "enum": [
                "UPDATING",
                "UPDATE_COMPLETE",
                "UPDATE_FAILED"
            ]
        },
        "GroupConfigurationFailureReason": {
            "type": "string"
        },
        "CreateGroupInput": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/CreateGroupName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "ResourceQuery": {
                    "$ref": "#/$defs/ResourceQuery"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                },
                "Configuration": {
                    "$ref": "#/$defs/GroupConfigurationList"
                },
                "Criticality": {
                    "$ref": "#/$defs/Criticality"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "DisplayName": {
                    "$ref": "#/$defs/DisplayName"
                }
            }
        },
        "CreateGroupName": {
            "type": "string"
        },
        "DeleteGroupOutput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/Group"
                }
            }
        },
        "DeleteGroupInput": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "Group": {
                    "$ref": "#/$defs/GroupStringV2"
                }
            }
        },
        "GroupStringV2": {
            "type": "string"
        },
        "GetAccountSettingsOutput": {
            "type": "object",
            "properties": {
                "AccountSettings": {
                    "$ref": "#/$defs/AccountSettings"
                }
            }
        },
        "AccountSettings": {
            "type": "object",
            "properties": {
                "GroupLifecycleEventsDesiredStatus": {
                    "$ref": "#/$defs/GroupLifecycleEventsDesiredStatus"
                },
                "GroupLifecycleEventsStatus": {
                    "$ref": "#/$defs/GroupLifecycleEventsStatus"
                },
                "GroupLifecycleEventsStatusMessage": {
                    "$ref": "#/$defs/GroupLifecycleEventsStatusMessage"
                }
            }
        },
        "GroupLifecycleEventsDesiredStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE"
            ]
        },
        "GroupLifecycleEventsStatus": {
            "enum": [
                "ACTIVE",
                "INACTIVE",
                "IN_PROGRESS",
                "ERROR"
            ]
        },
        "GroupLifecycleEventsStatusMessage": {
            "type": "string"
        },
        "GetGroupOutput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/Group"
                }
            }
        },
        "GetGroupInput": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "Group": {
                    "$ref": "#/$defs/GroupStringV2"
                }
            }
        },
        "GetGroupConfigurationOutput": {
            "type": "object",
            "properties": {
                "GroupConfiguration": {
                    "$ref": "#/$defs/GroupConfiguration"
                }
            }
        },
        "GetGroupConfigurationInput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/GroupString"
                }
            }
        },
        "GroupString": {
            "type": "string"
        },
        "GetGroupQueryOutput": {
            "type": "object",
            "properties": {
                "GroupQuery": {
                    "$ref": "#/$defs/GroupQuery"
                }
            }
        },
        "GroupQuery": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "ResourceQuery": {
                    "$ref": "#/$defs/ResourceQuery"
                }
            }
        },
        "GetGroupQueryInput": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "Group": {
                    "$ref": "#/$defs/GroupString"
                }
            }
        },
        "GetTagsOutput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/GroupArnV2"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "GetTagsInput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/GroupArnV2"
                }
            }
        },
        "GetTagSyncTaskOutput": {
            "type": "object",
            "properties": {
                "GroupArn": {
                    "$ref": "#/$defs/GroupArnV2"
                },
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "TaskArn": {
                    "$ref": "#/$defs/TagSyncTaskArn"
                },
                "TagKey": {
                    "$ref": "#/$defs/TagKey"
                },
                "TagValue": {
                    "$ref": "#/$defs/TagValue"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "Status": {
                    "$ref": "#/$defs/TagSyncTaskStatus"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "TagSyncTaskStatus": {
            "enum": [
                "ACTIVE",
                "ERROR"
            ]
        },
        "ErrorMessage": {
            "type": "string"
        },
        "timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "GetTagSyncTaskInput": {
            "type": "object",
            "properties": {
                "TaskArn": {
                    "$ref": "#/$defs/TagSyncTaskArn"
                }
            }
        },
        "GroupResourcesOutput": {
            "type": "object",
            "properties": {
                "Succeeded": {
                    "$ref": "#/$defs/ResourceArnList"
                },
                "Failed": {
                    "$ref": "#/$defs/FailedResourceList"
                },
                "Pending": {
                    "$ref": "#/$defs/PendingResourceList"
                }
            }
        },
        "ResourceArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceArn"
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "FailedResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FailedResource"
            }
        },
        "FailedResource": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                }
            }
        },
        "ErrorCode": {
            "type": "string"
        },
        "PendingResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PendingResource"
            }
        },
        "PendingResource": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "GroupResourcesInput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/GroupStringV2"
                },
                "ResourceArns": {
                    "$ref": "#/$defs/ResourceArnList"
                }
            }
        },
        "ListGroupingStatusesOutput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/GroupStringV2"
                },
                "GroupingStatuses": {
                    "$ref": "#/$defs/GroupingStatusesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GroupingStatusesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupingStatusesItem"
            }
        },
        "GroupingStatusesItem": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Action": {
                    "$ref": "#/$defs/GroupingType"
                },
                "Status": {
                    "$ref": "#/$defs/GroupingStatus"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "UpdatedAt": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "GroupingType": {
            "enum": [
                "GROUP",
                "UNGROUP"
            ]
        },
        "GroupingStatus": {
            "enum": [
                "SUCCESS",
                "FAILED",
                "IN_PROGRESS",
                "SKIPPED"
            ]
        },
        "NextToken": {
            "type": "string"
        },
        "ListGroupingStatusesInput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/GroupStringV2"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/ListGroupingStatusesFilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListGroupingStatusesFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListGroupingStatusesFilter"
            }
        },
        "ListGroupingStatusesFilter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ListGroupingStatusesFilterName"
                },
                "Values": {
                    "$ref": "#/$defs/ListGroupingStatusesFilterValues"
                }
            }
        },
        "ListGroupingStatusesFilterName": {
            "enum": [
                "Status",
                "ResourceArn"
            ]
        },
        "ListGroupingStatusesFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListGroupingStatusesFilterValue"
            }
        },
        "ListGroupingStatusesFilterValue": {
            "type": "string"
        },
        "ListGroupResourcesOutput": {
            "type": "object",
            "properties": {
                "Resources": {
                    "$ref": "#/$defs/ListGroupResourcesItemList"
                },
                "ResourceIdentifiers": {
                    "$ref": "#/$defs/ResourceIdentifierList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "QueryErrors": {
                    "$ref": "#/$defs/QueryErrorList"
                }
            }
        },
        "ListGroupResourcesItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListGroupResourcesItem"
            }
        },
        "ListGroupResourcesItem": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/ResourceIdentifier"
                },
                "Status": {
                    "$ref": "#/$defs/ResourceStatus"
                }
            }
        },
        "ResourceIdentifier": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                }
            }
        },
        "ResourceType": {
            "type": "string"
        },
        "ResourceStatus": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ResourceStatusValue"
                }
            }
        },
        "ResourceStatusValue": {
            "enum": [
                "Pending"
            ]
        },
        "ResourceIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceIdentifier"
            }
        },
        "QueryErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/QueryError"
            }
        },
        "QueryError": {
            "type": "object",
            "properties": {
                "ErrorCode": {
                    "$ref": "#/$defs/QueryErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/QueryErrorMessage"
                }
            }
        },
        "QueryErrorCode": {
            "enum": [
                "CLOUDFORMATION_STACK_INACTIVE",
                "CLOUDFORMATION_STACK_NOT_EXISTING",
                "CLOUDFORMATION_STACK_UNASSUMABLE_ROLE",
                "RESOURCE_TYPE_NOT_SUPPORTED"
            ]
        },
        "QueryErrorMessage": {
            "type": "string"
        },
        "ListGroupResourcesInput": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "Group": {
                    "$ref": "#/$defs/GroupStringV2"
                },
                "Filters": {
                    "$ref": "#/$defs/ResourceFilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ResourceFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceFilter"
            }
        },
        "ResourceFilter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ResourceFilterName"
                },
                "Values": {
                    "$ref": "#/$defs/ResourceFilterValues"
                }
            }
        },
        "ResourceFilterName": {
            "enum": [
                "ResourceType"
            ]
        },
        "ResourceFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceFilterValue"
            }
        },
        "ResourceFilterValue": {
            "type": "string"
        },
        "ListGroupsOutput": {
            "type": "object",
            "properties": {
                "GroupIdentifiers": {
                    "$ref": "#/$defs/GroupIdentifierList"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GroupIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupIdentifier"
            }
        },
        "GroupIdentifier": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "GroupArn": {
                    "$ref": "#/$defs/GroupArn"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Criticality": {
                    "$ref": "#/$defs/Criticality"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "DisplayName": {
                    "$ref": "#/$defs/DisplayName"
                }
            }
        },
        "GroupArn": {
            "type": "string"
        },
        "GroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Group"
            }
        },
        "ListGroupsInput": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/GroupFilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GroupFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupFilter"
            }
        },
        "GroupFilter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/GroupFilterName"
                },
                "Values": {
                    "$ref": "#/$defs/GroupFilterValues"
                }
            }
        },
        "GroupFilterName": {
            "enum": [
                "ResourceType",
                "ConfigurationType",
                "Owner",
                "DisplayName",
                "Criticality"
            ]
        },
        "GroupFilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupFilterValue"
            }
        },
        "GroupFilterValue": {
            "type": "string"
        },
        "ListTagSyncTasksOutput": {
            "type": "object",
            "properties": {
                "TagSyncTasks": {
                    "$ref": "#/$defs/TagSyncTaskList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TagSyncTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagSyncTaskItem"
            }
        },
        "TagSyncTaskItem": {
            "type": "object",
            "properties": {
                "GroupArn": {
                    "$ref": "#/$defs/GroupArnV2"
                },
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "TaskArn": {
                    "$ref": "#/$defs/TagSyncTaskArn"
                },
                "TagKey": {
                    "$ref": "#/$defs/TagKey"
                },
                "TagValue": {
                    "$ref": "#/$defs/TagValue"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "Status": {
                    "$ref": "#/$defs/TagSyncTaskStatus"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/timestamp"
                }
            }
        },
        "ListTagSyncTasksInput": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/ListTagSyncTasksFilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTagSyncTasksFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListTagSyncTasksFilter"
            }
        },
        "ListTagSyncTasksFilter": {
            "type": "object",
            "properties": {
                "GroupArn": {
                    "$ref": "#/$defs/GroupArnV2"
                },
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                }
            }
        },
        "PutGroupConfigurationOutput": {
            "type": "object",
            "properties": {}
        },
        "PutGroupConfigurationInput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/GroupString"
                },
                "Configuration": {
                    "$ref": "#/$defs/GroupConfigurationList"
                }
            }
        },
        "SearchResourcesOutput": {
            "type": "object",
            "properties": {
                "ResourceIdentifiers": {
                    "$ref": "#/$defs/ResourceIdentifierList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "QueryErrors": {
                    "$ref": "#/$defs/QueryErrorList"
                }
            }
        },
        "SearchResourcesInput": {
            "type": "object",
            "properties": {
                "ResourceQuery": {
                    "$ref": "#/$defs/ResourceQuery"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "StartTagSyncTaskOutput": {
            "type": "object",
            "properties": {
                "GroupArn": {
                    "$ref": "#/$defs/GroupArnV2"
                },
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "TaskArn": {
                    "$ref": "#/$defs/TagSyncTaskArn"
                },
                "TagKey": {
                    "$ref": "#/$defs/TagKey"
                },
                "TagValue": {
                    "$ref": "#/$defs/TagValue"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "StartTagSyncTaskInput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/GroupStringV2"
                },
                "TagKey": {
                    "$ref": "#/$defs/TagKey"
                },
                "TagValue": {
                    "$ref": "#/$defs/TagValue"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleArn"
                }
            }
        },
        "TagOutput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/GroupArnV2"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "TagInput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/GroupArnV2"
                },
                "Tags": {
                    "$ref": "#/$defs/Tags"
                }
            }
        },
        "UngroupResourcesOutput": {
            "type": "object",
            "properties": {
                "Succeeded": {
                    "$ref": "#/$defs/ResourceArnList"
                },
                "Failed": {
                    "$ref": "#/$defs/FailedResourceList"
                },
                "Pending": {
                    "$ref": "#/$defs/PendingResourceList"
                }
            }
        },
        "UngroupResourcesInput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/GroupStringV2"
                },
                "ResourceArns": {
                    "$ref": "#/$defs/ResourceArnList"
                }
            }
        },
        "UntagOutput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/GroupArnV2"
                },
                "Keys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UntagInput": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/GroupArnV2"
                },
                "Keys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "UpdateAccountSettingsOutput": {
            "type": "object",
            "properties": {
                "AccountSettings": {
                    "$ref": "#/$defs/AccountSettings"
                }
            }
        },
        "UpdateAccountSettingsInput": {
            "type": "object",
            "properties": {
                "GroupLifecycleEventsDesiredStatus": {
                    "$ref": "#/$defs/GroupLifecycleEventsDesiredStatus"
                }
            }
        },
        "UpdateGroupOutput": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/Group"
                }
            }
        },
        "UpdateGroupInput": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "Group": {
                    "$ref": "#/$defs/GroupStringV2"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Criticality": {
                    "$ref": "#/$defs/Criticality"
                },
                "Owner": {
                    "$ref": "#/$defs/Owner"
                },
                "DisplayName": {
                    "$ref": "#/$defs/DisplayName"
                }
            }
        },
        "UpdateGroupQueryOutput": {
            "type": "object",
            "properties": {
                "GroupQuery": {
                    "$ref": "#/$defs/GroupQuery"
                }
            }
        },
        "UpdateGroupQueryInput": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/GroupName"
                },
                "Group": {
                    "$ref": "#/$defs/GroupString"
                },
                "ResourceQuery": {
                    "$ref": "#/$defs/ResourceQuery"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://resource-groups-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [
                                                    {
                                                        "fn": "stringEquals",
                                                        "argv": [
                                                            {
                                                                "fn": "getAttr",
                                                                "argv": [
                                                                    {
                                                                        "ref": "PartitionResult"
                                                                    },
                                                                    "name"
                                                                ]
                                                            },
                                                            "aws-us-gov"
                                                        ]
                                                    }
                                                ],
                                                "endpoint": {
                                                    "url": "https://resource-groups.{Region}.amazonaws.com",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            },
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://resource-groups-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://resource-groups.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://resource-groups.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}