{
    "name": "ec2",
    "commands": [
        {
            "name": "AcceptAddressTransfer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AcceptAddressTransfer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptAddressTransferResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptAddressTransferRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AcceptCapacityReservationBillingOwnership",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AcceptCapacityReservationBillingOwnership"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptCapacityReservationBillingOwnershipResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptCapacityReservationBillingOwnershipRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AcceptReservedInstancesExchangeQuote",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AcceptReservedInstancesExchangeQuote"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptReservedInstancesExchangeQuoteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptReservedInstancesExchangeQuoteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AcceptTransitGatewayMulticastDomainAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AcceptTransitGatewayMulticastDomainAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptTransitGatewayMulticastDomainAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptTransitGatewayMulticastDomainAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AcceptTransitGatewayPeeringAttachment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AcceptTransitGatewayPeeringAttachment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptTransitGatewayPeeringAttachmentResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptTransitGatewayPeeringAttachmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AcceptTransitGatewayVpcAttachment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AcceptTransitGatewayVpcAttachment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptTransitGatewayVpcAttachmentResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptTransitGatewayVpcAttachmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AcceptVpcEndpointConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AcceptVpcEndpointConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptVpcEndpointConnectionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptVpcEndpointConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AcceptVpcPeeringConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AcceptVpcPeeringConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AcceptVpcPeeringConnectionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AcceptVpcPeeringConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AdvertiseByoipCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AdvertiseByoipCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AdvertiseByoipCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AdvertiseByoipCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AllocateAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AllocateAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AllocateAddressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AllocateAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AllocateHosts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AllocateHosts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AllocateHostsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AllocateHostsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AllocateIpamPoolCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AllocateIpamPoolCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AllocateIpamPoolCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AllocateIpamPoolCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ApplySecurityGroupsToClientVpnTargetNetwork",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ApplySecurityGroupsToClientVpnTargetNetwork"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ApplySecurityGroupsToClientVpnTargetNetworkResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ApplySecurityGroupsToClientVpnTargetNetworkRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssignIpv6Addresses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssignIpv6Addresses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssignIpv6AddressesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssignIpv6AddressesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssignPrivateIpAddresses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssignPrivateIpAddresses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssignPrivateIpAddressesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssignPrivateIpAddressesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssignPrivateNatGatewayAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssignPrivateNatGatewayAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssignPrivateNatGatewayAddressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssignPrivateNatGatewayAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateAddressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateCapacityReservationBillingOwner",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateCapacityReservationBillingOwner"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateCapacityReservationBillingOwnerResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateCapacityReservationBillingOwnerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateClientVpnTargetNetwork",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateClientVpnTargetNetwork"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateClientVpnTargetNetworkResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateClientVpnTargetNetworkRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateDhcpOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateDhcpOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateDhcpOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateEnclaveCertificateIamRole",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateEnclaveCertificateIamRole"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateEnclaveCertificateIamRoleResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateEnclaveCertificateIamRoleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateIamInstanceProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateIamInstanceProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateIamInstanceProfileResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateIamInstanceProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateInstanceEventWindow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateInstanceEventWindow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateInstanceEventWindowResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateInstanceEventWindowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateIpamByoasn",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateIpamByoasn"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateIpamByoasnResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateIpamByoasnRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateIpamResourceDiscovery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateIpamResourceDiscovery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateIpamResourceDiscoveryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateIpamResourceDiscoveryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateNatGatewayAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateNatGatewayAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateNatGatewayAddressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateNatGatewayAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateRouteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateRouteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateRouteTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateRouteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateSecurityGroupVpc",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateSecurityGroupVpc"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateSecurityGroupVpcResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateSecurityGroupVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateSubnetCidrBlock",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateSubnetCidrBlock"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateSubnetCidrBlockResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateSubnetCidrBlockRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateTransitGatewayMulticastDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateTransitGatewayMulticastDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateTransitGatewayMulticastDomainResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateTransitGatewayMulticastDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateTransitGatewayPolicyTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateTransitGatewayPolicyTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateTransitGatewayPolicyTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateTransitGatewayPolicyTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateTransitGatewayRouteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateTransitGatewayRouteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateTransitGatewayRouteTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateTransitGatewayRouteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateTrunkInterface",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateTrunkInterface"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateTrunkInterfaceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateTrunkInterfaceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AssociateVpcCidrBlock",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AssociateVpcCidrBlock"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateVpcCidrBlockResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateVpcCidrBlockRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachClassicLinkVpc",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AttachClassicLinkVpc"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachClassicLinkVpcResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachClassicLinkVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachInternetGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AttachInternetGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachInternetGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachNetworkInterface",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AttachNetworkInterface"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachNetworkInterfaceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachNetworkInterfaceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachVerifiedAccessTrustProvider",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AttachVerifiedAccessTrustProvider"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachVerifiedAccessTrustProviderResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachVerifiedAccessTrustProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachVolume",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AttachVolume"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/VolumeAttachment"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachVolumeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AttachVpnGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AttachVpnGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AttachVpnGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AttachVpnGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AuthorizeClientVpnIngress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AuthorizeClientVpnIngress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AuthorizeClientVpnIngressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AuthorizeClientVpnIngressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AuthorizeSecurityGroupEgress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AuthorizeSecurityGroupEgress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AuthorizeSecurityGroupEgressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AuthorizeSecurityGroupEgressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "AuthorizeSecurityGroupIngress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.AuthorizeSecurityGroupIngress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AuthorizeSecurityGroupIngressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AuthorizeSecurityGroupIngressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BundleInstance",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.BundleInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BundleInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BundleInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelBundleTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelBundleTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelBundleTaskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelBundleTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelCapacityReservationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelCapacityReservationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelCapacityReservationFleets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelCapacityReservationFleets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelCapacityReservationFleetsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelCapacityReservationFleetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelConversionTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelConversionTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelConversionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelDeclarativePoliciesReport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelDeclarativePoliciesReport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelDeclarativePoliciesReportResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelDeclarativePoliciesReportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelExportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelExportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelExportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelImageLaunchPermission",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelImageLaunchPermission"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelImageLaunchPermissionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelImageLaunchPermissionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelImportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelImportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelImportTaskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelImportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelReservedInstancesListing",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelReservedInstancesListing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelReservedInstancesListingResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelReservedInstancesListingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelSpotFleetRequests",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelSpotFleetRequests"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelSpotFleetRequestsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelSpotFleetRequestsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelSpotInstanceRequests",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CancelSpotInstanceRequests"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelSpotInstanceRequestsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelSpotInstanceRequestsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ConfirmProductInstance",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ConfirmProductInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ConfirmProductInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ConfirmProductInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CopyFpgaImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CopyFpgaImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CopyFpgaImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CopyFpgaImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CopyImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CopyImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CopyImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CopyImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CopySnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CopySnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CopySnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CopySnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCapacityReservationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCapacityReservationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCapacityReservationBySplitting",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateCapacityReservationBySplitting"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCapacityReservationBySplittingResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCapacityReservationBySplittingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCapacityReservationFleet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateCapacityReservationFleet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCapacityReservationFleetResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCapacityReservationFleetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCarrierGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateCarrierGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCarrierGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCarrierGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateClientVpnEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateClientVpnEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClientVpnEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClientVpnEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateClientVpnRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateClientVpnRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateClientVpnRouteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateClientVpnRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCoipCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateCoipCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCoipCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCoipCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCoipPool",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateCoipPool"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCoipPoolResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCoipPoolRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCustomerGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateCustomerGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCustomerGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCustomerGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDefaultSubnet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateDefaultSubnet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDefaultSubnetResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDefaultSubnetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDefaultVpc",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateDefaultVpc"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDefaultVpcResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDefaultVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateDhcpOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateDhcpOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDhcpOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDhcpOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateEgressOnlyInternetGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateEgressOnlyInternetGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEgressOnlyInternetGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEgressOnlyInternetGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFleet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateFleet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFleetResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFleetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFlowLogs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateFlowLogs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFlowLogsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFlowLogsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateFpgaImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateFpgaImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFpgaImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFpgaImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateInstanceConnectEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateInstanceConnectEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInstanceConnectEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInstanceConnectEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateInstanceEventWindow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateInstanceEventWindow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInstanceEventWindowResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInstanceEventWindowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateInstanceExportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateInstanceExportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInstanceExportTaskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInstanceExportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateInternetGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateInternetGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateInternetGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateInternetGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateIpam",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateIpam"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIpamResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateIpamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateIpamExternalResourceVerificationToken",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateIpamExternalResourceVerificationToken"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIpamExternalResourceVerificationTokenResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateIpamExternalResourceVerificationTokenRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateIpamPool",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateIpamPool"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIpamPoolResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateIpamPoolRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateIpamResourceDiscovery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateIpamResourceDiscovery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIpamResourceDiscoveryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateIpamResourceDiscoveryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateIpamScope",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateIpamScope"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateIpamScopeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateIpamScopeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateKeyPair",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateKeyPair"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/KeyPair"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateKeyPairRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLaunchTemplate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateLaunchTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLaunchTemplateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLaunchTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLaunchTemplateVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateLaunchTemplateVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLaunchTemplateVersionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLaunchTemplateVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLocalGatewayRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateLocalGatewayRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLocalGatewayRouteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLocalGatewayRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLocalGatewayRouteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateLocalGatewayRouteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLocalGatewayRouteTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLocalGatewayRouteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateLocalGatewayRouteTableVpcAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateLocalGatewayRouteTableVpcAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLocalGatewayRouteTableVpcAssociationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLocalGatewayRouteTableVpcAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateManagedPrefixList",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateManagedPrefixList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateManagedPrefixListResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateManagedPrefixListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateNatGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateNatGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNatGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNatGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateNetworkAcl",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateNetworkAcl"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNetworkAclResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNetworkAclRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateNetworkAclEntry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateNetworkAclEntry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNetworkAclEntryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateNetworkInsightsAccessScope",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateNetworkInsightsAccessScope"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNetworkInsightsAccessScopeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNetworkInsightsAccessScopeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateNetworkInsightsPath",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateNetworkInsightsPath"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNetworkInsightsPathResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNetworkInsightsPathRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateNetworkInterface",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateNetworkInterface"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNetworkInterfaceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNetworkInterfaceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateNetworkInterfacePermission",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateNetworkInterfacePermission"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNetworkInterfacePermissionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNetworkInterfacePermissionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePlacementGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreatePlacementGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePlacementGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePlacementGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePublicIpv4Pool",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreatePublicIpv4Pool"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePublicIpv4PoolResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePublicIpv4PoolRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateReplaceRootVolumeTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateReplaceRootVolumeTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateReplaceRootVolumeTaskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateReplaceRootVolumeTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateReservedInstancesListing",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateReservedInstancesListing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateReservedInstancesListingResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateReservedInstancesListingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRestoreImageTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateRestoreImageTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRestoreImageTaskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRestoreImageTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRouteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRouteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateRouteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRouteTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRouteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSecurityGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateSecurityGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSecurityGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSecurityGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Snapshot"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateSnapshots"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSnapshotsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSnapshotsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSpotDatafeedSubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateSpotDatafeedSubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSpotDatafeedSubscriptionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSpotDatafeedSubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateStoreImageTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateStoreImageTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateStoreImageTaskResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateStoreImageTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSubnet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateSubnet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSubnetResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSubnetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateSubnetCidrReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateSubnetCidrReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSubnetCidrReservationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateSubnetCidrReservationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTrafficMirrorFilter",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTrafficMirrorFilter"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTrafficMirrorFilterResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTrafficMirrorFilterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTrafficMirrorFilterRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTrafficMirrorFilterRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTrafficMirrorFilterRuleResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTrafficMirrorFilterRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTrafficMirrorSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTrafficMirrorSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTrafficMirrorSessionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTrafficMirrorSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTrafficMirrorTarget",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTrafficMirrorTarget"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTrafficMirrorTargetResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTrafficMirrorTargetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGatewayConnect",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGatewayConnect"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayConnectResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayConnectRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGatewayConnectPeer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGatewayConnectPeer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayConnectPeerResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayConnectPeerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGatewayMulticastDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGatewayMulticastDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayMulticastDomainResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayMulticastDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGatewayPeeringAttachment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGatewayPeeringAttachment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayPeeringAttachmentResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayPeeringAttachmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGatewayPolicyTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGatewayPolicyTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayPolicyTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayPolicyTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGatewayPrefixListReference",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGatewayPrefixListReference"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayPrefixListReferenceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayPrefixListReferenceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGatewayRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGatewayRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayRouteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGatewayRouteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGatewayRouteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayRouteTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayRouteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGatewayRouteTableAnnouncement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGatewayRouteTableAnnouncement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayRouteTableAnnouncementResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayRouteTableAnnouncementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTransitGatewayVpcAttachment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateTransitGatewayVpcAttachment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTransitGatewayVpcAttachmentResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTransitGatewayVpcAttachmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVerifiedAccessEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVerifiedAccessEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVerifiedAccessEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVerifiedAccessEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVerifiedAccessGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVerifiedAccessGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVerifiedAccessGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVerifiedAccessGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVerifiedAccessInstance",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVerifiedAccessInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVerifiedAccessInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVerifiedAccessInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVerifiedAccessTrustProvider",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVerifiedAccessTrustProvider"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVerifiedAccessTrustProviderResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVerifiedAccessTrustProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVolume",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVolume"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Volume"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVolumeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpc",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVpc"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpcBlockPublicAccessExclusion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVpcBlockPublicAccessExclusion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcBlockPublicAccessExclusionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcBlockPublicAccessExclusionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpcEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVpcEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpcEndpointConnectionNotification",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVpcEndpointConnectionNotification"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcEndpointConnectionNotificationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcEndpointConnectionNotificationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpcEndpointServiceConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVpcEndpointServiceConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcEndpointServiceConfigurationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcEndpointServiceConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpcPeeringConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVpcPeeringConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpcPeeringConnectionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpcPeeringConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpnConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVpnConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpnConnectionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpnConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpnConnectionRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVpnConnectionRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpnConnectionRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateVpnGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.CreateVpnGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateVpnGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateVpnGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCarrierGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteCarrierGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCarrierGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCarrierGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteClientVpnEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteClientVpnEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteClientVpnEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteClientVpnEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteClientVpnRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteClientVpnRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteClientVpnRouteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteClientVpnRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCoipCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteCoipCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCoipCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCoipCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCoipPool",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteCoipPool"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCoipPoolResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCoipPoolRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCustomerGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteCustomerGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCustomerGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteDhcpOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteDhcpOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDhcpOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteEgressOnlyInternetGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteEgressOnlyInternetGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEgressOnlyInternetGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEgressOnlyInternetGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFleets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteFleets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFleetsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFleetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFlowLogs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteFlowLogs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFlowLogsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFlowLogsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFpgaImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteFpgaImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFpgaImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFpgaImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteInstanceConnectEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteInstanceConnectEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInstanceConnectEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInstanceConnectEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteInstanceEventWindow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteInstanceEventWindow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteInstanceEventWindowResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInstanceEventWindowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteInternetGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteInternetGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteInternetGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteIpam",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteIpam"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIpamResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIpamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteIpamExternalResourceVerificationToken",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteIpamExternalResourceVerificationToken"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIpamExternalResourceVerificationTokenResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIpamExternalResourceVerificationTokenRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteIpamPool",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteIpamPool"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIpamPoolResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIpamPoolRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteIpamResourceDiscovery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteIpamResourceDiscovery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIpamResourceDiscoveryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIpamResourceDiscoveryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteIpamScope",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteIpamScope"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteIpamScopeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteIpamScopeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteKeyPair",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteKeyPair"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteKeyPairResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteKeyPairRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLaunchTemplate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteLaunchTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLaunchTemplateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLaunchTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLaunchTemplateVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteLaunchTemplateVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLaunchTemplateVersionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLaunchTemplateVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLocalGatewayRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteLocalGatewayRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLocalGatewayRouteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLocalGatewayRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLocalGatewayRouteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteLocalGatewayRouteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLocalGatewayRouteTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLocalGatewayRouteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteLocalGatewayRouteTableVpcAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteLocalGatewayRouteTableVpcAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLocalGatewayRouteTableVpcAssociationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLocalGatewayRouteTableVpcAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteManagedPrefixList",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteManagedPrefixList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteManagedPrefixListResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteManagedPrefixListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNatGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteNatGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNatGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNatGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNetworkAcl",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteNetworkAcl"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNetworkAclRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNetworkAclEntry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteNetworkAclEntry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNetworkAclEntryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNetworkInsightsAccessScope",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteNetworkInsightsAccessScope"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNetworkInsightsAccessScopeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNetworkInsightsAccessScopeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNetworkInsightsAccessScopeAnalysis",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteNetworkInsightsAccessScopeAnalysis"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNetworkInsightsAccessScopeAnalysisResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNetworkInsightsAccessScopeAnalysisRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNetworkInsightsAnalysis",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteNetworkInsightsAnalysis"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNetworkInsightsAnalysisResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNetworkInsightsAnalysisRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNetworkInsightsPath",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteNetworkInsightsPath"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNetworkInsightsPathResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNetworkInsightsPathRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNetworkInterface",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteNetworkInterface"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNetworkInterfaceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteNetworkInterfacePermission",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteNetworkInterfacePermission"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteNetworkInterfacePermissionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNetworkInterfacePermissionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePlacementGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeletePlacementGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePlacementGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePublicIpv4Pool",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeletePublicIpv4Pool"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePublicIpv4PoolResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePublicIpv4PoolRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteQueuedReservedInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteQueuedReservedInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteQueuedReservedInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteQueuedReservedInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRouteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteRouteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRouteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSecurityGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteSecurityGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSecurityGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSecurityGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSpotDatafeedSubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteSpotDatafeedSubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSpotDatafeedSubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSubnet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteSubnet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSubnetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteSubnetCidrReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteSubnetCidrReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSubnetCidrReservationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteSubnetCidrReservationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTrafficMirrorFilter",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTrafficMirrorFilter"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTrafficMirrorFilterResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTrafficMirrorFilterRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTrafficMirrorFilterRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTrafficMirrorFilterRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTrafficMirrorFilterRuleResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTrafficMirrorFilterRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTrafficMirrorSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTrafficMirrorSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTrafficMirrorSessionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTrafficMirrorSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTrafficMirrorTarget",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTrafficMirrorTarget"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTrafficMirrorTargetResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTrafficMirrorTargetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGatewayConnect",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGatewayConnect"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayConnectResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayConnectRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGatewayConnectPeer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGatewayConnectPeer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayConnectPeerResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayConnectPeerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGatewayMulticastDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGatewayMulticastDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayMulticastDomainResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayMulticastDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGatewayPeeringAttachment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGatewayPeeringAttachment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayPeeringAttachmentResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayPeeringAttachmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGatewayPolicyTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGatewayPolicyTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayPolicyTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayPolicyTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGatewayPrefixListReference",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGatewayPrefixListReference"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayPrefixListReferenceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayPrefixListReferenceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGatewayRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGatewayRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayRouteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGatewayRouteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGatewayRouteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayRouteTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayRouteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGatewayRouteTableAnnouncement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGatewayRouteTableAnnouncement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayRouteTableAnnouncementResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayRouteTableAnnouncementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTransitGatewayVpcAttachment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteTransitGatewayVpcAttachment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTransitGatewayVpcAttachmentResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTransitGatewayVpcAttachmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVerifiedAccessEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVerifiedAccessEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVerifiedAccessEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVerifiedAccessEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVerifiedAccessGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVerifiedAccessGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVerifiedAccessGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVerifiedAccessGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVerifiedAccessInstance",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVerifiedAccessInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVerifiedAccessInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVerifiedAccessInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVerifiedAccessTrustProvider",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVerifiedAccessTrustProvider"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVerifiedAccessTrustProviderResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVerifiedAccessTrustProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVolume",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVolume"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVolumeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpc",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVpc"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpcBlockPublicAccessExclusion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVpcBlockPublicAccessExclusion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVpcBlockPublicAccessExclusionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcBlockPublicAccessExclusionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpcEndpointConnectionNotifications",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVpcEndpointConnectionNotifications"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVpcEndpointConnectionNotificationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcEndpointConnectionNotificationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpcEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVpcEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVpcEndpointsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpcEndpointServiceConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVpcEndpointServiceConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVpcEndpointServiceConfigurationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcEndpointServiceConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpcPeeringConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVpcPeeringConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteVpcPeeringConnectionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpcPeeringConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpnConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVpnConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpnConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpnConnectionRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVpnConnectionRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpnConnectionRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteVpnGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeleteVpnGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteVpnGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeprovisionByoipCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeprovisionByoipCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeprovisionByoipCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeprovisionByoipCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeprovisionIpamByoasn",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeprovisionIpamByoasn"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeprovisionIpamByoasnResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeprovisionIpamByoasnRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeprovisionIpamPoolCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeprovisionIpamPoolCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeprovisionIpamPoolCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeprovisionIpamPoolCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeprovisionPublicIpv4PoolCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeprovisionPublicIpv4PoolCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeprovisionPublicIpv4PoolCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeprovisionPublicIpv4PoolCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeregisterImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterInstanceEventNotificationAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeregisterInstanceEventNotificationAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterInstanceEventNotificationAttributesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterInstanceEventNotificationAttributesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterTransitGatewayMulticastGroupMembers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeregisterTransitGatewayMulticastGroupMembers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterTransitGatewayMulticastGroupMembersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterTransitGatewayMulticastGroupMembersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeregisterTransitGatewayMulticastGroupSources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DeregisterTransitGatewayMulticastGroupSources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterTransitGatewayMulticastGroupSourcesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterTransitGatewayMulticastGroupSourcesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAccountAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeAccountAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAccountAttributesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAccountAttributesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAddresses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeAddresses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAddressesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAddressesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAddressesAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeAddressesAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAddressesAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAddressesAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAddressTransfers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeAddressTransfers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAddressTransfersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAddressTransfersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAggregateIdFormat",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeAggregateIdFormat"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAggregateIdFormatResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAggregateIdFormatRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAvailabilityZones",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeAvailabilityZones"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAvailabilityZonesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAvailabilityZonesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAwsNetworkPerformanceMetricSubscriptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeAwsNetworkPerformanceMetricSubscriptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAwsNetworkPerformanceMetricSubscriptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAwsNetworkPerformanceMetricSubscriptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeBundleTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeBundleTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeBundleTasksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeBundleTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeByoipCidrs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeByoipCidrs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeByoipCidrsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeByoipCidrsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCapacityBlockExtensionHistory",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeCapacityBlockExtensionHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCapacityBlockExtensionHistoryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCapacityBlockExtensionHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCapacityBlockExtensionOfferings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeCapacityBlockExtensionOfferings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCapacityBlockExtensionOfferingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCapacityBlockExtensionOfferingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCapacityBlockOfferings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeCapacityBlockOfferings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCapacityBlockOfferingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCapacityBlockOfferingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCapacityReservationBillingRequests",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeCapacityReservationBillingRequests"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCapacityReservationBillingRequestsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCapacityReservationBillingRequestsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCapacityReservationFleets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeCapacityReservationFleets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCapacityReservationFleetsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCapacityReservationFleetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCapacityReservations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeCapacityReservations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCapacityReservationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCapacityReservationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCarrierGateways",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeCarrierGateways"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCarrierGatewaysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCarrierGatewaysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeClassicLinkInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeClassicLinkInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClassicLinkInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClassicLinkInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeClientVpnAuthorizationRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeClientVpnAuthorizationRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClientVpnAuthorizationRulesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClientVpnAuthorizationRulesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeClientVpnConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeClientVpnConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClientVpnConnectionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClientVpnConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeClientVpnEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeClientVpnEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClientVpnEndpointsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClientVpnEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeClientVpnRoutes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeClientVpnRoutes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClientVpnRoutesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClientVpnRoutesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeClientVpnTargetNetworks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeClientVpnTargetNetworks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeClientVpnTargetNetworksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeClientVpnTargetNetworksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCoipPools",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeCoipPools"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCoipPoolsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCoipPoolsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeConversionTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeConversionTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeConversionTasksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeConversionTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeCustomerGateways",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeCustomerGateways"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCustomerGatewaysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCustomerGatewaysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDeclarativePoliciesReports",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeDeclarativePoliciesReports"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDeclarativePoliciesReportsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDeclarativePoliciesReportsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDhcpOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeDhcpOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDhcpOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDhcpOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeEgressOnlyInternetGateways",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeEgressOnlyInternetGateways"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeEgressOnlyInternetGatewaysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeEgressOnlyInternetGatewaysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeElasticGpus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeElasticGpus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeElasticGpusResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeElasticGpusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeExportImageTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeExportImageTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeExportImageTasksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeExportImageTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeExportTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeExportTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeExportTasksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeExportTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFastLaunchImages",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeFastLaunchImages"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFastLaunchImagesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFastLaunchImagesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFastSnapshotRestores",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeFastSnapshotRestores"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFastSnapshotRestoresResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFastSnapshotRestoresRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFleetHistory",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeFleetHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFleetHistoryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFleetHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFleetInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeFleetInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFleetInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFleetInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFleets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeFleets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFleetsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFleetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFlowLogs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeFlowLogs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFlowLogsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFlowLogsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFpgaImageAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeFpgaImageAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFpgaImageAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFpgaImageAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeFpgaImages",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeFpgaImages"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFpgaImagesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFpgaImagesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeHostReservationOfferings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeHostReservationOfferings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeHostReservationOfferingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeHostReservationOfferingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeHostReservations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeHostReservations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeHostReservationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeHostReservationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeHosts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeHosts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeHostsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeHostsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIamInstanceProfileAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIamInstanceProfileAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIamInstanceProfileAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIamInstanceProfileAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIdentityIdFormat",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIdentityIdFormat"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIdentityIdFormatResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIdentityIdFormatRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIdFormat",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIdFormat"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIdFormatResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIdFormatRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeImageAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeImageAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImageAttribute"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeImageAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeImages",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeImages"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeImagesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeImagesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeImportImageTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeImportImageTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeImportImageTasksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeImportImageTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeImportSnapshotTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeImportSnapshotTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeImportSnapshotTasksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeImportSnapshotTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstanceAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/InstanceAttribute"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceConnectEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstanceConnectEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceConnectEndpointsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceConnectEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceCreditSpecifications",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstanceCreditSpecifications"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceCreditSpecificationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceCreditSpecificationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceEventNotificationAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstanceEventNotificationAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceEventNotificationAttributesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceEventNotificationAttributesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceEventWindows",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstanceEventWindows"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceEventWindowsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceEventWindowsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceImageMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstanceImageMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceImageMetadataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceImageMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstanceStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceStatusResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceTopology",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstanceTopology"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceTopologyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceTopologyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceTypeOfferings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstanceTypeOfferings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceTypeOfferingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceTypeOfferingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInstanceTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInstanceTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInstanceTypesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInstanceTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeInternetGateways",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeInternetGateways"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeInternetGatewaysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeInternetGatewaysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIpamByoasn",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIpamByoasn"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIpamByoasnResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIpamByoasnRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIpamExternalResourceVerificationTokens",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIpamExternalResourceVerificationTokens"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIpamExternalResourceVerificationTokensResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIpamExternalResourceVerificationTokensRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIpamPools",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIpamPools"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIpamPoolsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIpamPoolsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIpamResourceDiscoveries",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIpamResourceDiscoveries"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIpamResourceDiscoveriesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIpamResourceDiscoveriesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIpamResourceDiscoveryAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIpamResourceDiscoveryAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIpamResourceDiscoveryAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIpamResourceDiscoveryAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIpams",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIpams"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIpamsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIpamsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIpamScopes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIpamScopes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIpamScopesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIpamScopesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeIpv6Pools",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeIpv6Pools"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeIpv6PoolsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeIpv6PoolsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeKeyPairs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeKeyPairs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeKeyPairsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeKeyPairsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLaunchTemplates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeLaunchTemplates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLaunchTemplatesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLaunchTemplatesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLaunchTemplateVersions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeLaunchTemplateVersions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLaunchTemplateVersionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLaunchTemplateVersionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLocalGatewayRouteTables",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeLocalGatewayRouteTables"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLocalGatewayRouteTablesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLocalGatewayRouteTablesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLocalGatewayRouteTableVpcAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeLocalGatewayRouteTableVpcAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLocalGatewayRouteTableVpcAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLocalGatewayRouteTableVpcAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLocalGateways",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeLocalGateways"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLocalGatewaysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLocalGatewaysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLocalGatewayVirtualInterfaceGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeLocalGatewayVirtualInterfaceGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLocalGatewayVirtualInterfaceGroupsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLocalGatewayVirtualInterfaceGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLocalGatewayVirtualInterfaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeLocalGatewayVirtualInterfaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLocalGatewayVirtualInterfacesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLocalGatewayVirtualInterfacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeLockedSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeLockedSnapshots"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeLockedSnapshotsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeLockedSnapshotsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeMacHosts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeMacHosts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMacHostsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMacHostsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeManagedPrefixLists",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeManagedPrefixLists"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeManagedPrefixListsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeManagedPrefixListsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeMovingAddresses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeMovingAddresses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMovingAddressesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMovingAddressesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNatGateways",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeNatGateways"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNatGatewaysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNatGatewaysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNetworkAcls",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeNetworkAcls"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNetworkAclsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNetworkAclsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNetworkInsightsAccessScopeAnalyses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeNetworkInsightsAccessScopeAnalyses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNetworkInsightsAccessScopeAnalysesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNetworkInsightsAccessScopeAnalysesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNetworkInsightsAccessScopes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeNetworkInsightsAccessScopes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNetworkInsightsAccessScopesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNetworkInsightsAccessScopesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNetworkInsightsAnalyses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeNetworkInsightsAnalyses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNetworkInsightsAnalysesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNetworkInsightsAnalysesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNetworkInsightsPaths",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeNetworkInsightsPaths"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNetworkInsightsPathsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNetworkInsightsPathsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNetworkInterfaceAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeNetworkInterfaceAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNetworkInterfaceAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNetworkInterfaceAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNetworkInterfacePermissions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeNetworkInterfacePermissions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNetworkInterfacePermissionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNetworkInterfacePermissionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeNetworkInterfaces",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeNetworkInterfaces"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNetworkInterfacesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNetworkInterfacesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribePlacementGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribePlacementGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePlacementGroupsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePlacementGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribePrefixLists",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribePrefixLists"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePrefixListsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePrefixListsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribePrincipalIdFormat",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribePrincipalIdFormat"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePrincipalIdFormatResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePrincipalIdFormatRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribePublicIpv4Pools",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribePublicIpv4Pools"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePublicIpv4PoolsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePublicIpv4PoolsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeRegions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeRegions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRegionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRegionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReplaceRootVolumeTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeReplaceRootVolumeTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReplaceRootVolumeTasksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReplaceRootVolumeTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservedInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeReservedInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservedInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservedInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservedInstancesListings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeReservedInstancesListings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservedInstancesListingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservedInstancesListingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservedInstancesModifications",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeReservedInstancesModifications"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservedInstancesModificationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservedInstancesModificationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeReservedInstancesOfferings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeReservedInstancesOfferings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeReservedInstancesOfferingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeReservedInstancesOfferingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeRouteTables",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeRouteTables"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRouteTablesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRouteTablesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeScheduledInstanceAvailability",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeScheduledInstanceAvailability"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeScheduledInstanceAvailabilityResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeScheduledInstanceAvailabilityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeScheduledInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeScheduledInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeScheduledInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeScheduledInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSecurityGroupReferences",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSecurityGroupReferences"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSecurityGroupReferencesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSecurityGroupReferencesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSecurityGroupRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSecurityGroupRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSecurityGroupRulesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSecurityGroupRulesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSecurityGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSecurityGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSecurityGroupsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSecurityGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSecurityGroupVpcAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSecurityGroupVpcAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSecurityGroupVpcAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSecurityGroupVpcAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSnapshotAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSnapshotAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSnapshotAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSnapshotAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSnapshots",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSnapshots"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSnapshotsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSnapshotsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSnapshotTierStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSnapshotTierStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSnapshotTierStatusResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSnapshotTierStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSpotDatafeedSubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSpotDatafeedSubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSpotDatafeedSubscriptionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSpotDatafeedSubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSpotFleetInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSpotFleetInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSpotFleetInstancesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSpotFleetInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSpotFleetRequestHistory",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSpotFleetRequestHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSpotFleetRequestHistoryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSpotFleetRequestHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSpotFleetRequests",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSpotFleetRequests"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSpotFleetRequestsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSpotFleetRequestsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSpotInstanceRequests",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSpotInstanceRequests"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSpotInstanceRequestsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSpotInstanceRequestsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSpotPriceHistory",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSpotPriceHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSpotPriceHistoryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSpotPriceHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStaleSecurityGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeStaleSecurityGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStaleSecurityGroupsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeStaleSecurityGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeStoreImageTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeStoreImageTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeStoreImageTasksResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeStoreImageTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeSubnets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeSubnets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeSubnetsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeSubnetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTagsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTrafficMirrorFilterRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTrafficMirrorFilterRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTrafficMirrorFilterRulesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTrafficMirrorFilterRulesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTrafficMirrorFilters",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTrafficMirrorFilters"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTrafficMirrorFiltersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTrafficMirrorFiltersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTrafficMirrorSessions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTrafficMirrorSessions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTrafficMirrorSessionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTrafficMirrorSessionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTrafficMirrorTargets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTrafficMirrorTargets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTrafficMirrorTargetsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTrafficMirrorTargetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTransitGatewayAttachments",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTransitGatewayAttachments"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransitGatewayAttachmentsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTransitGatewayAttachmentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTransitGatewayConnectPeers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTransitGatewayConnectPeers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransitGatewayConnectPeersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTransitGatewayConnectPeersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTransitGatewayConnects",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTransitGatewayConnects"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransitGatewayConnectsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTransitGatewayConnectsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTransitGatewayMulticastDomains",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTransitGatewayMulticastDomains"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransitGatewayMulticastDomainsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTransitGatewayMulticastDomainsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTransitGatewayPeeringAttachments",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTransitGatewayPeeringAttachments"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransitGatewayPeeringAttachmentsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTransitGatewayPeeringAttachmentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTransitGatewayPolicyTables",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTransitGatewayPolicyTables"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransitGatewayPolicyTablesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTransitGatewayPolicyTablesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTransitGatewayRouteTableAnnouncements",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTransitGatewayRouteTableAnnouncements"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransitGatewayRouteTableAnnouncementsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTransitGatewayRouteTableAnnouncementsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTransitGatewayRouteTables",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTransitGatewayRouteTables"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransitGatewayRouteTablesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTransitGatewayRouteTablesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTransitGateways",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTransitGateways"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransitGatewaysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTransitGatewaysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTransitGatewayVpcAttachments",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTransitGatewayVpcAttachments"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTransitGatewayVpcAttachmentsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTransitGatewayVpcAttachmentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTrunkInterfaceAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeTrunkInterfaceAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTrunkInterfaceAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTrunkInterfaceAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVerifiedAccessEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVerifiedAccessEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVerifiedAccessEndpointsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVerifiedAccessEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVerifiedAccessGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVerifiedAccessGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVerifiedAccessGroupsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVerifiedAccessGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVerifiedAccessInstanceLoggingConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVerifiedAccessInstanceLoggingConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVerifiedAccessInstanceLoggingConfigurationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVerifiedAccessInstanceLoggingConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVerifiedAccessInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVerifiedAccessInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVerifiedAccessInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVerifiedAccessInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVerifiedAccessTrustProviders",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVerifiedAccessTrustProviders"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVerifiedAccessTrustProvidersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVerifiedAccessTrustProvidersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVolumeAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVolumeAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVolumeAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVolumeAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVolumes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVolumes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVolumesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVolumesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVolumesModifications",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVolumesModifications"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVolumesModificationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVolumesModificationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVolumeStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVolumeStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVolumeStatusResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVolumeStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcBlockPublicAccessExclusions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcBlockPublicAccessExclusions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcBlockPublicAccessExclusionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcBlockPublicAccessExclusionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcBlockPublicAccessOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcBlockPublicAccessOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcBlockPublicAccessOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcBlockPublicAccessOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcClassicLink",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcClassicLink"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcClassicLinkResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcClassicLinkRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcClassicLinkDnsSupport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcClassicLinkDnsSupport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcClassicLinkDnsSupportResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcClassicLinkDnsSupportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcEndpointAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcEndpointAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcEndpointAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcEndpointAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcEndpointConnectionNotifications",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcEndpointConnectionNotifications"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcEndpointConnectionNotificationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcEndpointConnectionNotificationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcEndpointConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcEndpointConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcEndpointConnectionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcEndpointConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcEndpoints",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcEndpoints"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcEndpointsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcEndpointsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcEndpointServiceConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcEndpointServiceConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcEndpointServiceConfigurationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcEndpointServiceConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcEndpointServicePermissions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcEndpointServicePermissions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcEndpointServicePermissionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcEndpointServicePermissionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcEndpointServices",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcEndpointServices"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcEndpointServicesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcEndpointServicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcPeeringConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcPeeringConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcPeeringConnectionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcPeeringConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpcs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpcs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpcsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpcsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpnConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpnConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpnConnectionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpnConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeVpnGateways",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DescribeVpnGateways"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeVpnGatewaysResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeVpnGatewaysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachClassicLinkVpc",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DetachClassicLinkVpc"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachClassicLinkVpcResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachClassicLinkVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachInternetGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DetachInternetGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachInternetGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachNetworkInterface",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DetachNetworkInterface"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachNetworkInterfaceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachVerifiedAccessTrustProvider",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DetachVerifiedAccessTrustProvider"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DetachVerifiedAccessTrustProviderResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachVerifiedAccessTrustProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachVolume",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DetachVolume"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/VolumeAttachment"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachVolumeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DetachVpnGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DetachVpnGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DetachVpnGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableAddressTransfer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableAddressTransfer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableAddressTransferResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableAddressTransferRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableAllowedImagesSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableAllowedImagesSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableAllowedImagesSettingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableAllowedImagesSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableAwsNetworkPerformanceMetricSubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableAwsNetworkPerformanceMetricSubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableAwsNetworkPerformanceMetricSubscriptionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableAwsNetworkPerformanceMetricSubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableEbsEncryptionByDefault",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableEbsEncryptionByDefault"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableEbsEncryptionByDefaultResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableEbsEncryptionByDefaultRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableFastLaunch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableFastLaunch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableFastLaunchResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableFastLaunchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableFastSnapshotRestores",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableFastSnapshotRestores"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableFastSnapshotRestoresResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableFastSnapshotRestoresRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableImageBlockPublicAccess",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableImageBlockPublicAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableImageBlockPublicAccessResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableImageBlockPublicAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableImageDeprecation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableImageDeprecation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableImageDeprecationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableImageDeprecationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableImageDeregistrationProtection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableImageDeregistrationProtection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableImageDeregistrationProtectionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableImageDeregistrationProtectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableIpamOrganizationAdminAccount",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableIpamOrganizationAdminAccount"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableIpamOrganizationAdminAccountResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableIpamOrganizationAdminAccountRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableSerialConsoleAccess",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableSerialConsoleAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableSerialConsoleAccessResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableSerialConsoleAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableSnapshotBlockPublicAccess",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableSnapshotBlockPublicAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableSnapshotBlockPublicAccessResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableSnapshotBlockPublicAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableTransitGatewayRouteTablePropagation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableTransitGatewayRouteTablePropagation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableTransitGatewayRouteTablePropagationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableTransitGatewayRouteTablePropagationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableVgwRoutePropagation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableVgwRoutePropagation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableVgwRoutePropagationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableVpcClassicLink",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableVpcClassicLink"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableVpcClassicLinkResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableVpcClassicLinkRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisableVpcClassicLinkDnsSupport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisableVpcClassicLinkDnsSupport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisableVpcClassicLinkDnsSupportResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisableVpcClassicLinkDnsSupportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateCapacityReservationBillingOwner",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateCapacityReservationBillingOwner"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateCapacityReservationBillingOwnerResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateCapacityReservationBillingOwnerRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateClientVpnTargetNetwork",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateClientVpnTargetNetwork"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateClientVpnTargetNetworkResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateClientVpnTargetNetworkRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateEnclaveCertificateIamRole",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateEnclaveCertificateIamRole"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateEnclaveCertificateIamRoleResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateEnclaveCertificateIamRoleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateIamInstanceProfile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateIamInstanceProfile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateIamInstanceProfileResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateIamInstanceProfileRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateInstanceEventWindow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateInstanceEventWindow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateInstanceEventWindowResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateInstanceEventWindowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateIpamByoasn",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateIpamByoasn"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateIpamByoasnResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateIpamByoasnRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateIpamResourceDiscovery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateIpamResourceDiscovery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateIpamResourceDiscoveryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateIpamResourceDiscoveryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateNatGatewayAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateNatGatewayAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateNatGatewayAddressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateNatGatewayAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateRouteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateRouteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateRouteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateSecurityGroupVpc",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateSecurityGroupVpc"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateSecurityGroupVpcResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateSecurityGroupVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateSubnetCidrBlock",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateSubnetCidrBlock"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateSubnetCidrBlockResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateSubnetCidrBlockRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateTransitGatewayMulticastDomain",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateTransitGatewayMulticastDomain"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateTransitGatewayMulticastDomainResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateTransitGatewayMulticastDomainRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateTransitGatewayPolicyTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateTransitGatewayPolicyTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateTransitGatewayPolicyTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateTransitGatewayPolicyTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateTransitGatewayRouteTable",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateTransitGatewayRouteTable"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateTransitGatewayRouteTableResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateTransitGatewayRouteTableRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateTrunkInterface",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateTrunkInterface"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateTrunkInterfaceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateTrunkInterfaceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateVpcCidrBlock",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.DisassociateVpcCidrBlock"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateVpcCidrBlockResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateVpcCidrBlockRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableAddressTransfer",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableAddressTransfer"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableAddressTransferResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableAddressTransferRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableAllowedImagesSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableAllowedImagesSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableAllowedImagesSettingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableAllowedImagesSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableAwsNetworkPerformanceMetricSubscription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableAwsNetworkPerformanceMetricSubscription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableAwsNetworkPerformanceMetricSubscriptionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableAwsNetworkPerformanceMetricSubscriptionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableEbsEncryptionByDefault",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableEbsEncryptionByDefault"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableEbsEncryptionByDefaultResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableEbsEncryptionByDefaultRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableFastLaunch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableFastLaunch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableFastLaunchResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableFastLaunchRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableFastSnapshotRestores",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableFastSnapshotRestores"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableFastSnapshotRestoresResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableFastSnapshotRestoresRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableImageBlockPublicAccess",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableImageBlockPublicAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableImageBlockPublicAccessResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableImageBlockPublicAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableImageDeprecation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableImageDeprecation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableImageDeprecationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableImageDeprecationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableImageDeregistrationProtection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableImageDeregistrationProtection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableImageDeregistrationProtectionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableImageDeregistrationProtectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableIpamOrganizationAdminAccount",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableIpamOrganizationAdminAccount"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableIpamOrganizationAdminAccountResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableIpamOrganizationAdminAccountRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableReachabilityAnalyzerOrganizationSharing",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableReachabilityAnalyzerOrganizationSharing"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableReachabilityAnalyzerOrganizationSharingResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableReachabilityAnalyzerOrganizationSharingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableSerialConsoleAccess",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableSerialConsoleAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableSerialConsoleAccessResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableSerialConsoleAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableSnapshotBlockPublicAccess",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableSnapshotBlockPublicAccess"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableSnapshotBlockPublicAccessResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableSnapshotBlockPublicAccessRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableTransitGatewayRouteTablePropagation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableTransitGatewayRouteTablePropagation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableTransitGatewayRouteTablePropagationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableTransitGatewayRouteTablePropagationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableVgwRoutePropagation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableVgwRoutePropagation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableVgwRoutePropagationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableVolumeIO",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableVolumeIO"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableVolumeIORequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableVpcClassicLink",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableVpcClassicLink"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableVpcClassicLinkResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableVpcClassicLinkRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "EnableVpcClassicLinkDnsSupport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.EnableVpcClassicLinkDnsSupport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EnableVpcClassicLinkDnsSupportResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EnableVpcClassicLinkDnsSupportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportClientVpnClientCertificateRevocationList",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ExportClientVpnClientCertificateRevocationList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportClientVpnClientCertificateRevocationListResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportClientVpnClientCertificateRevocationListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportClientVpnClientConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ExportClientVpnClientConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportClientVpnClientConfigurationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportClientVpnClientConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ExportImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportTransitGatewayRoutes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ExportTransitGatewayRoutes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportTransitGatewayRoutesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportTransitGatewayRoutesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportVerifiedAccessInstanceClientConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ExportVerifiedAccessInstanceClientConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportVerifiedAccessInstanceClientConfigurationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ExportVerifiedAccessInstanceClientConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAllowedImagesSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetAllowedImagesSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAllowedImagesSettingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAllowedImagesSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAssociatedEnclaveCertificateIamRoles",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetAssociatedEnclaveCertificateIamRoles"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAssociatedEnclaveCertificateIamRolesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAssociatedEnclaveCertificateIamRolesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAssociatedIpv6PoolCidrs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetAssociatedIpv6PoolCidrs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAssociatedIpv6PoolCidrsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAssociatedIpv6PoolCidrsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetAwsNetworkPerformanceData",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetAwsNetworkPerformanceData"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAwsNetworkPerformanceDataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAwsNetworkPerformanceDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCapacityReservationUsage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetCapacityReservationUsage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCapacityReservationUsageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCapacityReservationUsageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCoipPoolUsage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetCoipPoolUsage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCoipPoolUsageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCoipPoolUsageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetConsoleOutput",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetConsoleOutput"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConsoleOutputResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConsoleOutputRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetConsoleScreenshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetConsoleScreenshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConsoleScreenshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConsoleScreenshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDeclarativePoliciesReportSummary",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetDeclarativePoliciesReportSummary"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDeclarativePoliciesReportSummaryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDeclarativePoliciesReportSummaryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDefaultCreditSpecification",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetDefaultCreditSpecification"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDefaultCreditSpecificationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDefaultCreditSpecificationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEbsDefaultKmsKeyId",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetEbsDefaultKmsKeyId"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEbsDefaultKmsKeyIdResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEbsDefaultKmsKeyIdRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetEbsEncryptionByDefault",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetEbsEncryptionByDefault"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEbsEncryptionByDefaultResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEbsEncryptionByDefaultRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFlowLogsIntegrationTemplate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetFlowLogsIntegrationTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFlowLogsIntegrationTemplateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFlowLogsIntegrationTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetGroupsForCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetGroupsForCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetGroupsForCapacityReservationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetGroupsForCapacityReservationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetHostReservationPurchasePreview",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetHostReservationPurchasePreview"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetHostReservationPurchasePreviewResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetHostReservationPurchasePreviewRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetImageBlockPublicAccessState",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetImageBlockPublicAccessState"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetImageBlockPublicAccessStateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetImageBlockPublicAccessStateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstanceMetadataDefaults",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetInstanceMetadataDefaults"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceMetadataDefaultsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceMetadataDefaultsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstanceTpmEkPub",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetInstanceTpmEkPub"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceTpmEkPubResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceTpmEkPubRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstanceTypesFromInstanceRequirements",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetInstanceTypesFromInstanceRequirements"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceTypesFromInstanceRequirementsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceTypesFromInstanceRequirementsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetInstanceUefiData",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetInstanceUefiData"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetInstanceUefiDataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetInstanceUefiDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIpamAddressHistory",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetIpamAddressHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIpamAddressHistoryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIpamAddressHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIpamDiscoveredAccounts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetIpamDiscoveredAccounts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIpamDiscoveredAccountsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIpamDiscoveredAccountsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIpamDiscoveredPublicAddresses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetIpamDiscoveredPublicAddresses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIpamDiscoveredPublicAddressesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIpamDiscoveredPublicAddressesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIpamDiscoveredResourceCidrs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetIpamDiscoveredResourceCidrs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIpamDiscoveredResourceCidrsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIpamDiscoveredResourceCidrsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIpamPoolAllocations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetIpamPoolAllocations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIpamPoolAllocationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIpamPoolAllocationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIpamPoolCidrs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetIpamPoolCidrs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIpamPoolCidrsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIpamPoolCidrsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetIpamResourceCidrs",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetIpamResourceCidrs"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetIpamResourceCidrsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetIpamResourceCidrsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetLaunchTemplateData",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetLaunchTemplateData"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetLaunchTemplateDataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetLaunchTemplateDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetManagedPrefixListAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetManagedPrefixListAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetManagedPrefixListAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetManagedPrefixListAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetManagedPrefixListEntries",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetManagedPrefixListEntries"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetManagedPrefixListEntriesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetManagedPrefixListEntriesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetNetworkInsightsAccessScopeAnalysisFindings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetNetworkInsightsAccessScopeAnalysisFindings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetNetworkInsightsAccessScopeAnalysisFindingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetNetworkInsightsAccessScopeAnalysisFindingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetNetworkInsightsAccessScopeContent",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetNetworkInsightsAccessScopeContent"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetNetworkInsightsAccessScopeContentResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetNetworkInsightsAccessScopeContentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPasswordData",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetPasswordData"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPasswordDataResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPasswordDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetReservedInstancesExchangeQuote",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetReservedInstancesExchangeQuote"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetReservedInstancesExchangeQuoteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetReservedInstancesExchangeQuoteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSecurityGroupsForVpc",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetSecurityGroupsForVpc"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSecurityGroupsForVpcResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSecurityGroupsForVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSerialConsoleAccessStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetSerialConsoleAccessStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSerialConsoleAccessStatusResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSerialConsoleAccessStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSnapshotBlockPublicAccessState",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetSnapshotBlockPublicAccessState"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSnapshotBlockPublicAccessStateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSnapshotBlockPublicAccessStateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSpotPlacementScores",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetSpotPlacementScores"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSpotPlacementScoresResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSpotPlacementScoresRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetSubnetCidrReservations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetSubnetCidrReservations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSubnetCidrReservationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetSubnetCidrReservationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTransitGatewayAttachmentPropagations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetTransitGatewayAttachmentPropagations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTransitGatewayAttachmentPropagationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTransitGatewayAttachmentPropagationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTransitGatewayMulticastDomainAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetTransitGatewayMulticastDomainAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTransitGatewayMulticastDomainAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTransitGatewayMulticastDomainAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTransitGatewayPolicyTableAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetTransitGatewayPolicyTableAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTransitGatewayPolicyTableAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTransitGatewayPolicyTableAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTransitGatewayPolicyTableEntries",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetTransitGatewayPolicyTableEntries"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTransitGatewayPolicyTableEntriesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTransitGatewayPolicyTableEntriesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTransitGatewayPrefixListReferences",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetTransitGatewayPrefixListReferences"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTransitGatewayPrefixListReferencesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTransitGatewayPrefixListReferencesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTransitGatewayRouteTableAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetTransitGatewayRouteTableAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTransitGatewayRouteTableAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTransitGatewayRouteTableAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTransitGatewayRouteTablePropagations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetTransitGatewayRouteTablePropagations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTransitGatewayRouteTablePropagationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTransitGatewayRouteTablePropagationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetVerifiedAccessEndpointPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetVerifiedAccessEndpointPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVerifiedAccessEndpointPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetVerifiedAccessEndpointPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetVerifiedAccessEndpointTargets",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetVerifiedAccessEndpointTargets"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVerifiedAccessEndpointTargetsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetVerifiedAccessEndpointTargetsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetVerifiedAccessGroupPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetVerifiedAccessGroupPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVerifiedAccessGroupPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetVerifiedAccessGroupPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetVpnConnectionDeviceSampleConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetVpnConnectionDeviceSampleConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVpnConnectionDeviceSampleConfigurationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetVpnConnectionDeviceSampleConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetVpnConnectionDeviceTypes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetVpnConnectionDeviceTypes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVpnConnectionDeviceTypesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetVpnConnectionDeviceTypesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetVpnTunnelReplacementStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.GetVpnTunnelReplacementStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetVpnTunnelReplacementStatusResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetVpnTunnelReplacementStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportClientVpnClientCertificateRevocationList",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ImportClientVpnClientCertificateRevocationList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportClientVpnClientCertificateRevocationListResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportClientVpnClientCertificateRevocationListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ImportImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportInstance",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ImportInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportKeyPair",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ImportKeyPair"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportKeyPairResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportKeyPairRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ImportSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ImportVolume",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ImportVolume"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ImportVolumeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ImportVolumeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListImagesInRecycleBin",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ListImagesInRecycleBin"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListImagesInRecycleBinResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListImagesInRecycleBinRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListSnapshotsInRecycleBin",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ListSnapshotsInRecycleBin"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSnapshotsInRecycleBinResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListSnapshotsInRecycleBinRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "LockSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.LockSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/LockSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/LockSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyAddressAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyAddressAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyAddressAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyAddressAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyAvailabilityZoneGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyAvailabilityZoneGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyAvailabilityZoneGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyAvailabilityZoneGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyCapacityReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyCapacityReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyCapacityReservationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyCapacityReservationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyCapacityReservationFleet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyCapacityReservationFleet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyCapacityReservationFleetResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyCapacityReservationFleetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyClientVpnEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyClientVpnEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyClientVpnEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyClientVpnEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyDefaultCreditSpecification",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyDefaultCreditSpecification"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyDefaultCreditSpecificationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyDefaultCreditSpecificationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyEbsDefaultKmsKeyId",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyEbsDefaultKmsKeyId"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyEbsDefaultKmsKeyIdResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyEbsDefaultKmsKeyIdRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyFleet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyFleet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyFleetResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyFleetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyFpgaImageAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyFpgaImageAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyFpgaImageAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyFpgaImageAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyHosts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyHosts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyHostsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyHostsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyIdentityIdFormat",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyIdentityIdFormat"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyIdentityIdFormatRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyIdFormat",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyIdFormat"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyIdFormatRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyImageAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyImageAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyImageAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstanceAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceCapacityReservationAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstanceCapacityReservationAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyInstanceCapacityReservationAttributesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceCapacityReservationAttributesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceCpuOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstanceCpuOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyInstanceCpuOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceCpuOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceCreditSpecification",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstanceCreditSpecification"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyInstanceCreditSpecificationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceCreditSpecificationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceEventStartTime",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstanceEventStartTime"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyInstanceEventStartTimeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceEventStartTimeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceEventWindow",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstanceEventWindow"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyInstanceEventWindowResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceEventWindowRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceMaintenanceOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstanceMaintenanceOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyInstanceMaintenanceOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceMaintenanceOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceMetadataDefaults",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstanceMetadataDefaults"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyInstanceMetadataDefaultsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceMetadataDefaultsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceMetadataOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstanceMetadataOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyInstanceMetadataOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceMetadataOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstanceNetworkPerformanceOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstanceNetworkPerformanceOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyInstanceNetworkPerformanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstanceNetworkPerformanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyInstancePlacement",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyInstancePlacement"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyInstancePlacementResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyInstancePlacementRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyIpam",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyIpam"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyIpamResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyIpamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyIpamPool",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyIpamPool"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyIpamPoolResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyIpamPoolRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyIpamResourceCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyIpamResourceCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyIpamResourceCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyIpamResourceCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyIpamResourceDiscovery",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyIpamResourceDiscovery"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyIpamResourceDiscoveryResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyIpamResourceDiscoveryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyIpamScope",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyIpamScope"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyIpamScopeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyIpamScopeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyLaunchTemplate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyLaunchTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyLaunchTemplateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyLaunchTemplateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyLocalGatewayRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyLocalGatewayRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyLocalGatewayRouteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyLocalGatewayRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyManagedPrefixList",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyManagedPrefixList"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyManagedPrefixListResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyManagedPrefixListRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyNetworkInterfaceAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyNetworkInterfaceAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyNetworkInterfaceAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyPrivateDnsNameOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyPrivateDnsNameOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyPrivateDnsNameOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyPrivateDnsNameOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyReservedInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyReservedInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyReservedInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyReservedInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifySecurityGroupRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifySecurityGroupRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifySecurityGroupRulesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifySecurityGroupRulesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifySnapshotAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifySnapshotAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifySnapshotAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifySnapshotTier",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifySnapshotTier"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifySnapshotTierResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifySnapshotTierRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifySpotFleetRequest",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifySpotFleetRequest"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifySpotFleetRequestResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifySpotFleetRequestRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifySubnetAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifySubnetAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifySubnetAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyTrafficMirrorFilterNetworkServices",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyTrafficMirrorFilterNetworkServices"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyTrafficMirrorFilterNetworkServicesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyTrafficMirrorFilterNetworkServicesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyTrafficMirrorFilterRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyTrafficMirrorFilterRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyTrafficMirrorFilterRuleResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyTrafficMirrorFilterRuleRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyTrafficMirrorSession",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyTrafficMirrorSession"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyTrafficMirrorSessionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyTrafficMirrorSessionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyTransitGateway",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyTransitGateway"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyTransitGatewayResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyTransitGatewayRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyTransitGatewayPrefixListReference",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyTransitGatewayPrefixListReference"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyTransitGatewayPrefixListReferenceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyTransitGatewayPrefixListReferenceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyTransitGatewayVpcAttachment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyTransitGatewayVpcAttachment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyTransitGatewayVpcAttachmentResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyTransitGatewayVpcAttachmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVerifiedAccessEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVerifiedAccessEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVerifiedAccessEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVerifiedAccessEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVerifiedAccessEndpointPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVerifiedAccessEndpointPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVerifiedAccessEndpointPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVerifiedAccessEndpointPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVerifiedAccessGroup",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVerifiedAccessGroup"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVerifiedAccessGroupResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVerifiedAccessGroupRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVerifiedAccessGroupPolicy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVerifiedAccessGroupPolicy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVerifiedAccessGroupPolicyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVerifiedAccessGroupPolicyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVerifiedAccessInstance",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVerifiedAccessInstance"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVerifiedAccessInstanceResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVerifiedAccessInstanceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVerifiedAccessInstanceLoggingConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVerifiedAccessInstanceLoggingConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVerifiedAccessInstanceLoggingConfigurationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVerifiedAccessInstanceLoggingConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVerifiedAccessTrustProvider",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVerifiedAccessTrustProvider"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVerifiedAccessTrustProviderResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVerifiedAccessTrustProviderRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVolume",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVolume"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVolumeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVolumeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVolumeAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVolumeAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVolumeAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpcAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpcAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpcAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpcBlockPublicAccessExclusion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpcBlockPublicAccessExclusion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpcBlockPublicAccessExclusionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpcBlockPublicAccessExclusionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpcBlockPublicAccessOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpcBlockPublicAccessOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpcBlockPublicAccessOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpcBlockPublicAccessOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpcEndpoint",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpcEndpoint"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpcEndpointResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpcEndpointRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpcEndpointConnectionNotification",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpcEndpointConnectionNotification"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpcEndpointConnectionNotificationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpcEndpointConnectionNotificationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpcEndpointServiceConfiguration",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpcEndpointServiceConfiguration"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpcEndpointServiceConfigurationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpcEndpointServiceConfigurationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpcEndpointServicePayerResponsibility",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpcEndpointServicePayerResponsibility"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpcEndpointServicePayerResponsibilityResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpcEndpointServicePayerResponsibilityRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpcEndpointServicePermissions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpcEndpointServicePermissions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpcEndpointServicePermissionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpcEndpointServicePermissionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpcPeeringConnectionOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpcPeeringConnectionOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpcPeeringConnectionOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpcPeeringConnectionOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpcTenancy",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpcTenancy"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpcTenancyResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpcTenancyRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpnConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpnConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpnConnectionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpnConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpnConnectionOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpnConnectionOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpnConnectionOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpnConnectionOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpnTunnelCertificate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpnTunnelCertificate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpnTunnelCertificateResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpnTunnelCertificateRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ModifyVpnTunnelOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ModifyVpnTunnelOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ModifyVpnTunnelOptionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ModifyVpnTunnelOptionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "MonitorInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.MonitorInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MonitorInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MonitorInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "MoveAddressToVpc",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.MoveAddressToVpc"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MoveAddressToVpcResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MoveAddressToVpcRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "MoveByoipCidrToIpam",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.MoveByoipCidrToIpam"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MoveByoipCidrToIpamResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MoveByoipCidrToIpamRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "MoveCapacityReservationInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.MoveCapacityReservationInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MoveCapacityReservationInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MoveCapacityReservationInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ProvisionByoipCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ProvisionByoipCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ProvisionByoipCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ProvisionByoipCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ProvisionIpamByoasn",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ProvisionIpamByoasn"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ProvisionIpamByoasnResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ProvisionIpamByoasnRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ProvisionIpamPoolCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ProvisionIpamPoolCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ProvisionIpamPoolCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ProvisionIpamPoolCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ProvisionPublicIpv4PoolCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ProvisionPublicIpv4PoolCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ProvisionPublicIpv4PoolCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ProvisionPublicIpv4PoolCidrRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PurchaseCapacityBlock",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.PurchaseCapacityBlock"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseCapacityBlockResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PurchaseCapacityBlockRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PurchaseCapacityBlockExtension",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.PurchaseCapacityBlockExtension"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseCapacityBlockExtensionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PurchaseCapacityBlockExtensionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PurchaseHostReservation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.PurchaseHostReservation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseHostReservationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PurchaseHostReservationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PurchaseReservedInstancesOffering",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.PurchaseReservedInstancesOffering"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseReservedInstancesOfferingResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PurchaseReservedInstancesOfferingRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "PurchaseScheduledInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.PurchaseScheduledInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PurchaseScheduledInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PurchaseScheduledInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RebootInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RebootInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RebootInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterImage",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RegisterImage"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterImageResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterImageRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterInstanceEventNotificationAttributes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RegisterInstanceEventNotificationAttributes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterInstanceEventNotificationAttributesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterInstanceEventNotificationAttributesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterTransitGatewayMulticastGroupMembers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RegisterTransitGatewayMulticastGroupMembers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterTransitGatewayMulticastGroupMembersResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterTransitGatewayMulticastGroupMembersRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RegisterTransitGatewayMulticastGroupSources",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RegisterTransitGatewayMulticastGroupSources"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterTransitGatewayMulticastGroupSourcesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterTransitGatewayMulticastGroupSourcesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RejectCapacityReservationBillingOwnership",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RejectCapacityReservationBillingOwnership"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectCapacityReservationBillingOwnershipResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RejectCapacityReservationBillingOwnershipRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RejectTransitGatewayMulticastDomainAssociations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RejectTransitGatewayMulticastDomainAssociations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectTransitGatewayMulticastDomainAssociationsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RejectTransitGatewayMulticastDomainAssociationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RejectTransitGatewayPeeringAttachment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RejectTransitGatewayPeeringAttachment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectTransitGatewayPeeringAttachmentResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RejectTransitGatewayPeeringAttachmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RejectTransitGatewayVpcAttachment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RejectTransitGatewayVpcAttachment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectTransitGatewayVpcAttachmentResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RejectTransitGatewayVpcAttachmentRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RejectVpcEndpointConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RejectVpcEndpointConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectVpcEndpointConnectionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RejectVpcEndpointConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RejectVpcPeeringConnection",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RejectVpcPeeringConnection"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RejectVpcPeeringConnectionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RejectVpcPeeringConnectionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReleaseAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReleaseAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReleaseAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReleaseHosts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReleaseHosts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReleaseHostsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReleaseHostsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReleaseIpamPoolAllocation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReleaseIpamPoolAllocation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReleaseIpamPoolAllocationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReleaseIpamPoolAllocationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplaceIamInstanceProfileAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReplaceIamInstanceProfileAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReplaceIamInstanceProfileAssociationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReplaceIamInstanceProfileAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplaceImageCriteriaInAllowedImagesSettings",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReplaceImageCriteriaInAllowedImagesSettings"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReplaceImageCriteriaInAllowedImagesSettingsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReplaceImageCriteriaInAllowedImagesSettingsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplaceNetworkAclAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReplaceNetworkAclAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReplaceNetworkAclAssociationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReplaceNetworkAclAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplaceNetworkAclEntry",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReplaceNetworkAclEntry"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReplaceNetworkAclEntryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplaceRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReplaceRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReplaceRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplaceRouteTableAssociation",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReplaceRouteTableAssociation"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReplaceRouteTableAssociationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReplaceRouteTableAssociationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplaceTransitGatewayRoute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReplaceTransitGatewayRoute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReplaceTransitGatewayRouteResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReplaceTransitGatewayRouteRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReplaceVpnTunnel",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReplaceVpnTunnel"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ReplaceVpnTunnelResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReplaceVpnTunnelRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ReportInstanceStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ReportInstanceStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ReportInstanceStatusRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RequestSpotFleet",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RequestSpotFleet"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RequestSpotFleetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RequestSpotFleetRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RequestSpotInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RequestSpotInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RequestSpotInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RequestSpotInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetAddressAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ResetAddressAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetAddressAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetAddressAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetEbsDefaultKmsKeyId",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ResetEbsDefaultKmsKeyId"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetEbsDefaultKmsKeyIdResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetEbsDefaultKmsKeyIdRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetFpgaImageAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ResetFpgaImageAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ResetFpgaImageAttributeResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetFpgaImageAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetImageAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ResetImageAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetImageAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetInstanceAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ResetInstanceAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetInstanceAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetNetworkInterfaceAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ResetNetworkInterfaceAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetNetworkInterfaceAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ResetSnapshotAttribute",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.ResetSnapshotAttribute"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ResetSnapshotAttributeRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RestoreAddressToClassic",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RestoreAddressToClassic"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestoreAddressToClassicResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestoreAddressToClassicRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RestoreImageFromRecycleBin",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RestoreImageFromRecycleBin"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestoreImageFromRecycleBinResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestoreImageFromRecycleBinRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RestoreManagedPrefixListVersion",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RestoreManagedPrefixListVersion"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestoreManagedPrefixListVersionResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestoreManagedPrefixListVersionRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RestoreSnapshotFromRecycleBin",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RestoreSnapshotFromRecycleBin"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestoreSnapshotFromRecycleBinResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestoreSnapshotFromRecycleBinRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RestoreSnapshotTier",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RestoreSnapshotTier"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RestoreSnapshotTierResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestoreSnapshotTierRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RevokeClientVpnIngress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RevokeClientVpnIngress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RevokeClientVpnIngressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RevokeClientVpnIngressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RevokeSecurityGroupEgress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RevokeSecurityGroupEgress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RevokeSecurityGroupEgressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RevokeSecurityGroupEgressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RevokeSecurityGroupIngress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RevokeSecurityGroupIngress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RevokeSecurityGroupIngressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RevokeSecurityGroupIngressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RunInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RunInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/Reservation"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RunInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "RunScheduledInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.RunScheduledInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RunScheduledInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RunScheduledInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchLocalGatewayRoutes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.SearchLocalGatewayRoutes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchLocalGatewayRoutesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchLocalGatewayRoutesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchTransitGatewayMulticastGroups",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.SearchTransitGatewayMulticastGroups"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchTransitGatewayMulticastGroupsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchTransitGatewayMulticastGroupsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SearchTransitGatewayRoutes",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.SearchTransitGatewayRoutes"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchTransitGatewayRoutesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchTransitGatewayRoutesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "SendDiagnosticInterrupt",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.SendDiagnosticInterrupt"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendDiagnosticInterruptRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartDeclarativePoliciesReport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.StartDeclarativePoliciesReport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDeclarativePoliciesReportResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDeclarativePoliciesReportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.StartInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartNetworkInsightsAccessScopeAnalysis",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.StartNetworkInsightsAccessScopeAnalysis"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartNetworkInsightsAccessScopeAnalysisResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartNetworkInsightsAccessScopeAnalysisRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartNetworkInsightsAnalysis",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.StartNetworkInsightsAnalysis"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartNetworkInsightsAnalysisResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartNetworkInsightsAnalysisRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartVpcEndpointServicePrivateDnsVerification",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.StartVpcEndpointServicePrivateDnsVerification"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartVpcEndpointServicePrivateDnsVerificationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartVpcEndpointServicePrivateDnsVerificationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.StopInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TerminateClientVpnConnections",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.TerminateClientVpnConnections"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TerminateClientVpnConnectionsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TerminateClientVpnConnectionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TerminateInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.TerminateInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TerminateInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TerminateInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UnassignIpv6Addresses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.UnassignIpv6Addresses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UnassignIpv6AddressesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UnassignIpv6AddressesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UnassignPrivateIpAddresses",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.UnassignPrivateIpAddresses"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UnassignPrivateIpAddressesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UnassignPrivateNatGatewayAddress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.UnassignPrivateNatGatewayAddress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UnassignPrivateNatGatewayAddressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UnassignPrivateNatGatewayAddressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UnlockSnapshot",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.UnlockSnapshot"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UnlockSnapshotResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UnlockSnapshotRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UnmonitorInstances",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.UnmonitorInstances"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UnmonitorInstancesResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UnmonitorInstancesRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSecurityGroupRuleDescriptionsEgress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.UpdateSecurityGroupRuleDescriptionsEgress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSecurityGroupRuleDescriptionsEgressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSecurityGroupRuleDescriptionsEgressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateSecurityGroupRuleDescriptionsIngress",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.UpdateSecurityGroupRuleDescriptionsIngress"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSecurityGroupRuleDescriptionsIngressResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateSecurityGroupRuleDescriptionsIngressRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "WithdrawByoipCidr",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AmazonEC2.WithdrawByoipCidr"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/WithdrawByoipCidrResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/WithdrawByoipCidrRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AcceptAddressTransferResult": {
            "type": "object",
            "properties": {
                "AddressTransfer": {
                    "$ref": "#/$defs/AddressTransfer"
                }
            }
        },
        "AddressTransfer": {
            "type": "object",
            "properties": {
                "PublicIp": {
                    "$ref": "#/$defs/String"
                },
                "AllocationId": {
                    "$ref": "#/$defs/String"
                },
                "TransferAccountId": {
                    "$ref": "#/$defs/String"
                },
                "TransferOfferExpirationTimestamp": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "TransferOfferAcceptedTimestamp": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "AddressTransferStatus": {
                    "$ref": "#/$defs/AddressTransferStatus"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "MillisecondDateTime": {
            "type": "string",
            "format": "date-time"
        },
        "AddressTransferStatus": {
            "enum": [
                "pending",
                "disabled",
                "accepted"
            ]
        },
        "AcceptAddressTransferRequest": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TagSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagSpecification"
            }
        },
        "TagSpecification": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ResourceType": {
            "enum": [
                "capacity_reservation",
                "client_vpn_endpoint",
                "customer_gateway",
                "carrier_gateway",
                "coip_pool",
                "declarative_policies_report",
                "dedicated_host",
                "dhcp_options",
                "egress_only_internet_gateway",
                "elastic_ip",
                "elastic_gpu",
                "export_image_task",
                "export_instance_task",
                "fleet",
                "fpga_image",
                "host_reservation",
                "image",
                "import_image_task",
                "import_snapshot_task",
                "instance",
                "instance_event_window",
                "internet_gateway",
                "ipam",
                "ipam_pool",
                "ipam_scope",
                "ipv4pool_ec2",
                "ipv6pool_ec2",
                "key_pair",
                "launch_template",
                "local_gateway",
                "local_gateway_route_table",
                "local_gateway_virtual_interface",
                "local_gateway_virtual_interface_group",
                "local_gateway_route_table_vpc_association",
                "local_gateway_route_table_virtual_interface_group_association",
                "natgateway",
                "network_acl",
                "network_interface",
                "network_insights_analysis",
                "network_insights_path",
                "network_insights_access_scope",
                "network_insights_access_scope_analysis",
                "placement_group",
                "prefix_list",
                "replace_root_volume_task",
                "reserved_instances",
                "route_table",
                "security_group",
                "security_group_rule",
                "snapshot",
                "spot_fleet_request",
                "spot_instances_request",
                "subnet",
                "subnet_cidr_reservation",
                "traffic_mirror_filter",
                "traffic_mirror_session",
                "traffic_mirror_target",
                "transit_gateway",
                "transit_gateway_attachment",
                "transit_gateway_connect_peer",
                "transit_gateway_multicast_domain",
                "transit_gateway_policy_table",
                "transit_gateway_route_table",
                "transit_gateway_route_table_announcement",
                "volume",
                "vpc",
                "vpc_endpoint",
                "vpc_endpoint_connection",
                "vpc_endpoint_service",
                "vpc_endpoint_service_permission",
                "vpc_peering_connection",
                "vpn_connection",
                "vpn_gateway",
                "vpc_flow_log",
                "capacity_reservation_fleet",
                "traffic_mirror_filter_rule",
                "vpc_endpoint_connection_device_type",
                "verified_access_instance",
                "verified_access_group",
                "verified_access_endpoint",
                "verified_access_policy",
                "verified_access_trust_provider",
                "vpn_connection_device_type",
                "vpc_block_public_access_exclusion",
                "ipam_resource_discovery",
                "ipam_resource_discovery_association",
                "instance_connect_endpoint",
                "verified_access_endpoint_target",
                "ipam_external_resource_verification_token"
            ]
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "AcceptCapacityReservationBillingOwnershipResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AcceptCapacityReservationBillingOwnershipRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                }
            }
        },
        "CapacityReservationId": {
            "type": "string"
        },
        "AcceptReservedInstancesExchangeQuoteResult": {
            "type": "object",
            "properties": {
                "ExchangeId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AcceptReservedInstancesExchangeQuoteRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ReservedInstanceIds": {
                    "$ref": "#/$defs/ReservedInstanceIdSet"
                },
                "TargetConfigurations": {
                    "$ref": "#/$defs/TargetConfigurationRequestSet"
                }
            }
        },
        "ReservedInstanceIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservationId"
            }
        },
        "ReservationId": {
            "type": "string"
        },
        "TargetConfigurationRequestSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetConfigurationRequest"
            }
        },
        "TargetConfigurationRequest": {
            "type": "object",
            "properties": {
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "OfferingId": {
                    "$ref": "#/$defs/ReservedInstancesOfferingId"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "ReservedInstancesOfferingId": {
            "type": "string"
        },
        "AcceptTransitGatewayMulticastDomainAssociationsResult": {
            "type": "object",
            "properties": {
                "Associations": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainAssociations"
                }
            }
        },
        "TransitGatewayMulticastDomainAssociations": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                },
                "ResourceOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Subnets": {
                    "$ref": "#/$defs/SubnetAssociationList"
                }
            }
        },
        "TransitGatewayAttachmentResourceType": {
            "enum": [
                "vpc",
                "vpn",
                "direct_connect_gateway",
                "connect",
                "peering",
                "tgw_peering"
            ]
        },
        "SubnetAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetAssociation"
            }
        },
        "SubnetAssociation": {
            "type": "object",
            "properties": {
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayMulitcastDomainAssociationState"
                }
            }
        },
        "TransitGatewayMulitcastDomainAssociationState": {
            "enum": [
                "pendingAcceptance",
                "associating",
                "associated",
                "disassociating",
                "disassociated",
                "rejected",
                "failed"
            ]
        },
        "AcceptTransitGatewayMulticastDomainAssociationsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayMulticastDomainId": {
            "type": "string"
        },
        "TransitGatewayAttachmentId": {
            "type": "string"
        },
        "ValueStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "AcceptTransitGatewayPeeringAttachmentResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPeeringAttachment": {
                    "$ref": "#/$defs/TransitGatewayPeeringAttachment"
                }
            }
        },
        "TransitGatewayPeeringAttachment": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "AccepterTransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "RequesterTgwInfo": {
                    "$ref": "#/$defs/PeeringTgwInfo"
                },
                "AccepterTgwInfo": {
                    "$ref": "#/$defs/PeeringTgwInfo"
                },
                "Options": {
                    "$ref": "#/$defs/TransitGatewayPeeringAttachmentOptions"
                },
                "Status": {
                    "$ref": "#/$defs/PeeringAttachmentStatus"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayAttachmentState"
                },
                "CreationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "PeeringTgwInfo": {
            "type": "object",
            "properties": {
                "TransitGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "CoreNetworkId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Region": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayPeeringAttachmentOptions": {
            "type": "object",
            "properties": {
                "DynamicRouting": {
                    "$ref": "#/$defs/DynamicRoutingValue"
                }
            }
        },
        "DynamicRoutingValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "PeeringAttachmentStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayAttachmentState": {
            "enum": [
                "initiating",
                "initiatingRequest",
                "pendingAcceptance",
                "rollingBack",
                "pending",
                "available",
                "modifying",
                "deleting",
                "deleted",
                "failed",
                "rejected",
                "rejecting",
                "failing"
            ]
        },
        "DateTime": {
            "type": "string",
            "format": "date-time"
        },
        "AcceptTransitGatewayPeeringAttachmentRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AcceptTransitGatewayVpcAttachmentResult": {
            "type": "object",
            "properties": {
                "TransitGatewayVpcAttachment": {
                    "$ref": "#/$defs/TransitGatewayVpcAttachment"
                }
            }
        },
        "TransitGatewayVpcAttachment": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "VpcOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayAttachmentState"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "CreationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Options": {
                    "$ref": "#/$defs/TransitGatewayVpcAttachmentOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TransitGatewayVpcAttachmentOptions": {
            "type": "object",
            "properties": {
                "DnsSupport": {
                    "$ref": "#/$defs/DnsSupportValue"
                },
                "SecurityGroupReferencingSupport": {
                    "$ref": "#/$defs/SecurityGroupReferencingSupportValue"
                },
                "Ipv6Support": {
                    "$ref": "#/$defs/Ipv6SupportValue"
                },
                "ApplianceModeSupport": {
                    "$ref": "#/$defs/ApplianceModeSupportValue"
                }
            }
        },
        "DnsSupportValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "SecurityGroupReferencingSupportValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "Ipv6SupportValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "ApplianceModeSupportValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "AcceptTransitGatewayVpcAttachmentRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AcceptVpcEndpointConnectionsResult": {
            "type": "object",
            "properties": {
                "Unsuccessful": {
                    "$ref": "#/$defs/UnsuccessfulItemSet"
                }
            }
        },
        "UnsuccessfulItemSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsuccessfulItem"
            }
        },
        "UnsuccessfulItem": {
            "type": "object",
            "properties": {
                "Error": {
                    "$ref": "#/$defs/UnsuccessfulItemError"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UnsuccessfulItemError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AcceptVpcEndpointConnectionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceId": {
                    "$ref": "#/$defs/VpcEndpointServiceId"
                },
                "VpcEndpointIds": {
                    "$ref": "#/$defs/VpcEndpointIdList"
                }
            }
        },
        "VpcEndpointServiceId": {
            "type": "string"
        },
        "VpcEndpointIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointId"
            }
        },
        "VpcEndpointId": {
            "type": "string"
        },
        "AcceptVpcPeeringConnectionResult": {
            "type": "object",
            "properties": {
                "VpcPeeringConnection": {
                    "$ref": "#/$defs/VpcPeeringConnection"
                }
            }
        },
        "VpcPeeringConnection": {
            "type": "object",
            "properties": {
                "AccepterVpcInfo": {
                    "$ref": "#/$defs/VpcPeeringConnectionVpcInfo"
                },
                "ExpirationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "RequesterVpcInfo": {
                    "$ref": "#/$defs/VpcPeeringConnectionVpcInfo"
                },
                "Status": {
                    "$ref": "#/$defs/VpcPeeringConnectionStateReason"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcPeeringConnectionVpcInfo": {
            "type": "object",
            "properties": {
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6CidrBlockSet": {
                    "$ref": "#/$defs/Ipv6CidrBlockSet"
                },
                "CidrBlockSet": {
                    "$ref": "#/$defs/CidrBlockSet"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "PeeringOptions": {
                    "$ref": "#/$defs/VpcPeeringConnectionOptionsDescription"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "Region": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv6CidrBlockSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv6CidrBlock"
            }
        },
        "Ipv6CidrBlock": {
            "type": "object",
            "properties": {
                "Ipv6CidrBlock": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CidrBlockSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CidrBlock"
            }
        },
        "CidrBlock": {
            "type": "object",
            "properties": {
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcPeeringConnectionOptionsDescription": {
            "type": "object",
            "properties": {
                "AllowDnsResolutionFromRemoteVpc": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllowEgressFromLocalClassicLinkToRemoteVpc": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllowEgressFromLocalVpcToRemoteClassicLink": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VpcPeeringConnectionStateReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/VpcPeeringConnectionStateReasonCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcPeeringConnectionStateReasonCode": {
            "enum": [
                "initiating_request",
                "pending_acceptance",
                "active",
                "deleted",
                "rejected",
                "failed",
                "expired",
                "provisioning",
                "deleting"
            ]
        },
        "AcceptVpcPeeringConnectionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/VpcPeeringConnectionIdWithResolver"
                }
            }
        },
        "VpcPeeringConnectionIdWithResolver": {
            "type": "string"
        },
        "AdvertiseByoipCidrResult": {
            "type": "object",
            "properties": {
                "ByoipCidr": {
                    "$ref": "#/$defs/ByoipCidr"
                }
            }
        },
        "ByoipCidr": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "AsnAssociations": {
                    "$ref": "#/$defs/AsnAssociationSet"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/ByoipCidrState"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AsnAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AsnAssociation"
            }
        },
        "AsnAssociation": {
            "type": "object",
            "properties": {
                "Asn": {
                    "$ref": "#/$defs/String"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/AsnAssociationState"
                }
            }
        },
        "AsnAssociationState": {
            "enum": [
                "disassociated",
                "failed_disassociation",
                "failed_association",
                "pending_disassociation",
                "pending_association",
                "associated"
            ]
        },
        "ByoipCidrState": {
            "enum": [
                "advertised",
                "deprovisioned",
                "failed_deprovision",
                "failed_provision",
                "pending_deprovision",
                "pending_provision",
                "provisioned",
                "provisioned_not_publicly_advertisable"
            ]
        },
        "AdvertiseByoipCidrRequest": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "Asn": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AllocateAddressResult": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/String"
                },
                "PublicIpv4Pool": {
                    "$ref": "#/$defs/String"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                },
                "Domain": {
                    "$ref": "#/$defs/DomainType"
                },
                "CustomerOwnedIp": {
                    "$ref": "#/$defs/String"
                },
                "CustomerOwnedIpv4Pool": {
                    "$ref": "#/$defs/String"
                },
                "CarrierIp": {
                    "$ref": "#/$defs/String"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DomainType": {
            "enum": [
                "vpc",
                "standard"
            ]
        },
        "AllocateAddressRequest": {
            "type": "object",
            "properties": {
                "Domain": {
                    "$ref": "#/$defs/DomainType"
                },
                "Address": {
                    "$ref": "#/$defs/PublicIpAddress"
                },
                "PublicIpv4Pool": {
                    "$ref": "#/$defs/Ipv4PoolEc2Id"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                },
                "CustomerOwnedIpv4Pool": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "PublicIpAddress": {
            "type": "string"
        },
        "Ipv4PoolEc2Id": {
            "type": "string"
        },
        "IpamPoolId": {
            "type": "string"
        },
        "AllocateHostsResult": {
            "type": "object",
            "properties": {
                "HostIds": {
                    "$ref": "#/$defs/ResponseHostIdList"
                }
            }
        },
        "ResponseHostIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "AllocateHostsRequest": {
            "type": "object",
            "properties": {
                "InstanceFamily": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "HostRecovery": {
                    "$ref": "#/$defs/HostRecovery"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "HostMaintenance": {
                    "$ref": "#/$defs/HostMaintenance"
                },
                "AssetIds": {
                    "$ref": "#/$defs/AssetIdList"
                },
                "AutoPlacement": {
                    "$ref": "#/$defs/AutoPlacement"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "Quantity": {
                    "$ref": "#/$defs/Integer"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "HostRecovery": {
            "enum": [
                "on",
                "off"
            ]
        },
        "HostMaintenance": {
            "enum": [
                "on",
                "off"
            ]
        },
        "AssetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssetId"
            }
        },
        "AssetId": {
            "type": "string"
        },
        "AutoPlacement": {
            "enum": [
                "on",
                "off"
            ]
        },
        "AllocateIpamPoolCidrResult": {
            "type": "object",
            "properties": {
                "IpamPoolAllocation": {
                    "$ref": "#/$defs/IpamPoolAllocation"
                }
            }
        },
        "IpamPoolAllocation": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "IpamPoolAllocationId": {
                    "$ref": "#/$defs/IpamPoolAllocationId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/IpamPoolAllocationResourceType"
                },
                "ResourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "ResourceOwner": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamPoolAllocationId": {
            "type": "string"
        },
        "IpamPoolAllocationResourceType": {
            "enum": [
                "ipam_pool",
                "vpc",
                "ec2_public_ipv4_pool",
                "custom",
                "subnet",
                "eip"
            ]
        },
        "AllocateIpamPoolCidrRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "NetmaskLength": {
                    "$ref": "#/$defs/Integer"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "PreviewNextCidr": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllowedCidrs": {
                    "$ref": "#/$defs/IpamPoolAllocationAllowedCidrs"
                },
                "DisallowedCidrs": {
                    "$ref": "#/$defs/IpamPoolAllocationDisallowedCidrs"
                }
            }
        },
        "IpamPoolAllocationAllowedCidrs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "IpamPoolAllocationDisallowedCidrs": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ApplySecurityGroupsToClientVpnTargetNetworkResult": {
            "type": "object",
            "properties": {
                "SecurityGroupIds": {
                    "$ref": "#/$defs/ClientVpnSecurityGroupIdSet"
                }
            }
        },
        "ClientVpnSecurityGroupIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "SecurityGroupId": {
            "type": "string"
        },
        "ApplySecurityGroupsToClientVpnTargetNetworkRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/ClientVpnSecurityGroupIdSet"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ClientVpnEndpointId": {
            "type": "string"
        },
        "VpcId": {
            "type": "string"
        },
        "AssignIpv6AddressesResult": {
            "type": "object",
            "properties": {
                "AssignedIpv6Addresses": {
                    "$ref": "#/$defs/Ipv6AddressList"
                },
                "AssignedIpv6Prefixes": {
                    "$ref": "#/$defs/IpPrefixList"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv6AddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "IpPrefixList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "AssignIpv6AddressesRequest": {
            "type": "object",
            "properties": {
                "Ipv6PrefixCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Prefixes": {
                    "$ref": "#/$defs/IpPrefixList"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "Ipv6Addresses": {
                    "$ref": "#/$defs/Ipv6AddressList"
                },
                "Ipv6AddressCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "NetworkInterfaceId": {
            "type": "string"
        },
        "AssignPrivateIpAddressesResult": {
            "type": "object",
            "properties": {
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "AssignedPrivateIpAddresses": {
                    "$ref": "#/$defs/AssignedPrivateIpAddressList"
                },
                "AssignedIpv4Prefixes": {
                    "$ref": "#/$defs/Ipv4PrefixesList"
                }
            }
        },
        "AssignedPrivateIpAddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssignedPrivateIpAddress"
            }
        },
        "AssignedPrivateIpAddress": {
            "type": "object",
            "properties": {
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv4PrefixesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv4PrefixSpecification"
            }
        },
        "Ipv4PrefixSpecification": {
            "type": "object",
            "properties": {
                "Ipv4Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AssignPrivateIpAddressesRequest": {
            "type": "object",
            "properties": {
                "Ipv4Prefixes": {
                    "$ref": "#/$defs/IpPrefixList"
                },
                "Ipv4PrefixCount": {
                    "$ref": "#/$defs/Integer"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/PrivateIpAddressStringList"
                },
                "SecondaryPrivateIpAddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "AllowReassignment": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "PrivateIpAddressStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "AssignPrivateNatGatewayAddressResult": {
            "type": "object",
            "properties": {
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                },
                "NatGatewayAddresses": {
                    "$ref": "#/$defs/NatGatewayAddressList"
                }
            }
        },
        "NatGatewayId": {
            "type": "string"
        },
        "NatGatewayAddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NatGatewayAddress"
            }
        },
        "NatGatewayAddress": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIp": {
                    "$ref": "#/$defs/String"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                },
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "IsPrimary": {
                    "$ref": "#/$defs/Boolean"
                },
                "FailureMessage": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/NatGatewayAddressStatus"
                }
            }
        },
        "NatGatewayAddressStatus": {
            "enum": [
                "ASSIGNING",
                "UNASSIGNING",
                "ASSOCIATING",
                "DISASSOCIATING",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "AssignPrivateNatGatewayAddressRequest": {
            "type": "object",
            "properties": {
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/IpList"
                },
                "PrivateIpAddressCount": {
                    "$ref": "#/$defs/PrivateIpAddressCount"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "IpList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "PrivateIpAddressCount": {
            "type": "integer",
            "format": "int32"
        },
        "AssociateAddressResult": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AssociateAddressRequest": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/AllocationId"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "PublicIp": {
                    "$ref": "#/$defs/EipAllocationPublicIp"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "AllowReassociation": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AllocationId": {
            "type": "string"
        },
        "InstanceId": {
            "type": "string"
        },
        "EipAllocationPublicIp": {
            "type": "string"
        },
        "AssociateCapacityReservationBillingOwnerResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AssociateCapacityReservationBillingOwnerRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "UnusedReservationBillingOwnerId": {
                    "$ref": "#/$defs/AccountID"
                }
            }
        },
        "AccountID": {
            "type": "string"
        },
        "AssociateClientVpnTargetNetworkResult": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/AssociationStatus"
                }
            }
        },
        "AssociationStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/AssociationStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AssociationStatusCode": {
            "enum": [
                "associating",
                "associated",
                "association_failed",
                "disassociating",
                "disassociated"
            ]
        },
        "AssociateClientVpnTargetNetworkRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SubnetId": {
            "type": "string"
        },
        "AssociateDhcpOptionsRequest": {
            "type": "object",
            "properties": {
                "DhcpOptionsId": {
                    "$ref": "#/$defs/DefaultingDhcpOptionsId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DefaultingDhcpOptionsId": {
            "type": "string"
        },
        "AssociateEnclaveCertificateIamRoleResult": {
            "type": "object",
            "properties": {
                "CertificateS3BucketName": {
                    "$ref": "#/$defs/String"
                },
                "CertificateS3ObjectKey": {
                    "$ref": "#/$defs/String"
                },
                "EncryptionKmsKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AssociateEnclaveCertificateIamRoleRequest": {
            "type": "object",
            "properties": {
                "CertificateArn": {
                    "$ref": "#/$defs/CertificateId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CertificateId": {
            "type": "string"
        },
        "RoleId": {
            "type": "string"
        },
        "AssociateIamInstanceProfileResult": {
            "type": "object",
            "properties": {
                "IamInstanceProfileAssociation": {
                    "$ref": "#/$defs/IamInstanceProfileAssociation"
                }
            }
        },
        "IamInstanceProfileAssociation": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/IamInstanceProfile"
                },
                "State": {
                    "$ref": "#/$defs/IamInstanceProfileAssociationState"
                },
                "Timestamp": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "IamInstanceProfile": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Id": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IamInstanceProfileAssociationState": {
            "enum": [
                "ASSOCIATING",
                "ASSOCIATED",
                "DISASSOCIATING",
                "DISASSOCIATED"
            ]
        },
        "AssociateIamInstanceProfileRequest": {
            "type": "object",
            "properties": {
                "IamInstanceProfile": {
                    "$ref": "#/$defs/IamInstanceProfileSpecification"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                }
            }
        },
        "IamInstanceProfileSpecification": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AssociateInstanceEventWindowResult": {
            "type": "object",
            "properties": {
                "InstanceEventWindow": {
                    "$ref": "#/$defs/InstanceEventWindow"
                }
            }
        },
        "InstanceEventWindow": {
            "type": "object",
            "properties": {
                "InstanceEventWindowId": {
                    "$ref": "#/$defs/InstanceEventWindowId"
                },
                "TimeRanges": {
                    "$ref": "#/$defs/InstanceEventWindowTimeRangeList"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "CronExpression": {
                    "$ref": "#/$defs/InstanceEventWindowCronExpression"
                },
                "AssociationTarget": {
                    "$ref": "#/$defs/InstanceEventWindowAssociationTarget"
                },
                "State": {
                    "$ref": "#/$defs/InstanceEventWindowState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "InstanceEventWindowId": {
            "type": "string"
        },
        "InstanceEventWindowTimeRangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceEventWindowTimeRange"
            }
        },
        "InstanceEventWindowTimeRange": {
            "type": "object",
            "properties": {
                "StartWeekDay": {
                    "$ref": "#/$defs/WeekDay"
                },
                "StartHour": {
                    "$ref": "#/$defs/Hour"
                },
                "EndWeekDay": {
                    "$ref": "#/$defs/WeekDay"
                },
                "EndHour": {
                    "$ref": "#/$defs/Hour"
                }
            }
        },
        "WeekDay": {
            "enum": [
                "sunday",
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday"
            ]
        },
        "Hour": {
            "type": "integer",
            "format": "int32"
        },
        "InstanceEventWindowCronExpression": {
            "type": "string"
        },
        "InstanceEventWindowAssociationTarget": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "DedicatedHostIds": {
                    "$ref": "#/$defs/DedicatedHostIdList"
                }
            }
        },
        "InstanceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceId"
            }
        },
        "DedicatedHostIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DedicatedHostId"
            }
        },
        "DedicatedHostId": {
            "type": "string"
        },
        "InstanceEventWindowState": {
            "enum": [
                "creating",
                "deleting",
                "active",
                "deleted"
            ]
        },
        "AssociateInstanceEventWindowRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceEventWindowId": {
                    "$ref": "#/$defs/InstanceEventWindowId"
                },
                "AssociationTarget": {
                    "$ref": "#/$defs/InstanceEventWindowAssociationRequest"
                }
            }
        },
        "InstanceEventWindowAssociationRequest": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdList"
                },
                "InstanceTags": {
                    "$ref": "#/$defs/TagList"
                },
                "DedicatedHostIds": {
                    "$ref": "#/$defs/DedicatedHostIdList"
                }
            }
        },
        "AssociateIpamByoasnResult": {
            "type": "object",
            "properties": {
                "AsnAssociation": {
                    "$ref": "#/$defs/AsnAssociation"
                }
            }
        },
        "AssociateIpamByoasnRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Asn": {
                    "$ref": "#/$defs/String"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AssociateIpamResourceDiscoveryResult": {
            "type": "object",
            "properties": {
                "IpamResourceDiscoveryAssociation": {
                    "$ref": "#/$defs/IpamResourceDiscoveryAssociation"
                }
            }
        },
        "IpamResourceDiscoveryAssociation": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "IpamResourceDiscoveryAssociationId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryAssociationId"
                },
                "IpamResourceDiscoveryAssociationArn": {
                    "$ref": "#/$defs/String"
                },
                "IpamResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "IpamArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "IpamRegion": {
                    "$ref": "#/$defs/String"
                },
                "IsDefault": {
                    "$ref": "#/$defs/Boolean"
                },
                "ResourceDiscoveryStatus": {
                    "$ref": "#/$defs/IpamAssociatedResourceDiscoveryStatus"
                },
                "State": {
                    "$ref": "#/$defs/IpamResourceDiscoveryAssociationState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "IpamResourceDiscoveryAssociationId": {
            "type": "string"
        },
        "IpamResourceDiscoveryId": {
            "type": "string"
        },
        "IpamId": {
            "type": "string"
        },
        "ResourceArn": {
            "type": "string"
        },
        "IpamAssociatedResourceDiscoveryStatus": {
            "enum": [
                "ACTIVE",
                "NOT_FOUND"
            ]
        },
        "IpamResourceDiscoveryAssociationState": {
            "enum": [
                "ASSOCIATE_IN_PROGRESS",
                "ASSOCIATE_COMPLETE",
                "ASSOCIATE_FAILED",
                "DISASSOCIATE_IN_PROGRESS",
                "DISASSOCIATE_COMPLETE",
                "DISASSOCIATE_FAILED",
                "ISOLATE_IN_PROGRESS",
                "ISOLATE_COMPLETE",
                "RESTORE_IN_PROGRESS"
            ]
        },
        "AssociateIpamResourceDiscoveryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "IpamResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AssociateNatGatewayAddressResult": {
            "type": "object",
            "properties": {
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                },
                "NatGatewayAddresses": {
                    "$ref": "#/$defs/NatGatewayAddressList"
                }
            }
        },
        "AssociateNatGatewayAddressRequest": {
            "type": "object",
            "properties": {
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                },
                "AllocationIds": {
                    "$ref": "#/$defs/AllocationIdList"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/IpList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AllocationIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllocationId"
            }
        },
        "AssociateRouteTableResult": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "AssociationState": {
                    "$ref": "#/$defs/RouteTableAssociationState"
                }
            }
        },
        "RouteTableAssociationState": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/RouteTableAssociationStateCode"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RouteTableAssociationStateCode": {
            "enum": [
                "associating",
                "associated",
                "disassociating",
                "disassociated",
                "failed"
            ]
        },
        "AssociateRouteTableRequest": {
            "type": "object",
            "properties": {
                "GatewayId": {
                    "$ref": "#/$defs/RouteGatewayId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "RouteTableId": {
                    "$ref": "#/$defs/RouteTableId"
                }
            }
        },
        "RouteGatewayId": {
            "type": "string"
        },
        "RouteTableId": {
            "type": "string"
        },
        "AssociateSecurityGroupVpcResult": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/SecurityGroupVpcAssociationState"
                }
            }
        },
        "SecurityGroupVpcAssociationState": {
            "enum": [
                "associating",
                "associated",
                "association_failed",
                "disassociating",
                "disassociated",
                "disassociation_failed"
            ]
        },
        "AssociateSecurityGroupVpcRequest": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AssociateSubnetCidrBlockResult": {
            "type": "object",
            "properties": {
                "Ipv6CidrBlockAssociation": {
                    "$ref": "#/$defs/SubnetIpv6CidrBlockAssociation"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubnetIpv6CidrBlockAssociation": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/SubnetCidrAssociationId"
                },
                "Ipv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6CidrBlockState": {
                    "$ref": "#/$defs/SubnetCidrBlockState"
                },
                "Ipv6AddressAttribute": {
                    "$ref": "#/$defs/Ipv6AddressAttribute"
                },
                "IpSource": {
                    "$ref": "#/$defs/IpSource"
                }
            }
        },
        "SubnetCidrAssociationId": {
            "type": "string"
        },
        "SubnetCidrBlockState": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/SubnetCidrBlockStateCode"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubnetCidrBlockStateCode": {
            "enum": [
                "associating",
                "associated",
                "disassociating",
                "disassociated",
                "failing",
                "failed"
            ]
        },
        "Ipv6AddressAttribute": {
            "enum": [
                "public",
                "private"
            ]
        },
        "IpSource": {
            "enum": [
                "amazon",
                "byoip",
                "none"
            ]
        },
        "AssociateSubnetCidrBlockRequest": {
            "type": "object",
            "properties": {
                "Ipv6IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Ipv6NetmaskLength": {
                    "$ref": "#/$defs/NetmaskLength"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "Ipv6CidrBlock": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetmaskLength": {
            "type": "integer",
            "format": "int32"
        },
        "AssociateTransitGatewayMulticastDomainResult": {
            "type": "object",
            "properties": {
                "Associations": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainAssociations"
                }
            }
        },
        "AssociateTransitGatewayMulticastDomainRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/TransitGatewaySubnetIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewaySubnetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "AssociateTransitGatewayPolicyTableResult": {
            "type": "object",
            "properties": {
                "Association": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableAssociation"
                }
            }
        },
        "TransitGatewayPolicyTableAssociation": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTableId": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayAssociationState"
                }
            }
        },
        "TransitGatewayPolicyTableId": {
            "type": "string"
        },
        "TransitGatewayAssociationState": {
            "enum": [
                "associating",
                "associated",
                "disassociating",
                "disassociated"
            ]
        },
        "AssociateTransitGatewayPolicyTableRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTableId": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AssociateTransitGatewayRouteTableResult": {
            "type": "object",
            "properties": {
                "Association": {
                    "$ref": "#/$defs/TransitGatewayAssociation"
                }
            }
        },
        "TransitGatewayAssociation": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayAssociationState"
                }
            }
        },
        "TransitGatewayRouteTableId": {
            "type": "string"
        },
        "AssociateTransitGatewayRouteTableRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AssociateTrunkInterfaceResult": {
            "type": "object",
            "properties": {
                "InterfaceAssociation": {
                    "$ref": "#/$defs/TrunkInterfaceAssociation"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrunkInterfaceAssociation": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/TrunkInterfaceAssociationId"
                },
                "BranchInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "TrunkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "InterfaceProtocol": {
                    "$ref": "#/$defs/InterfaceProtocolType"
                },
                "VlanId": {
                    "$ref": "#/$defs/Integer"
                },
                "GreKey": {
                    "$ref": "#/$defs/Integer"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TrunkInterfaceAssociationId": {
            "type": "string"
        },
        "InterfaceProtocolType": {
            "enum": [
                "VLAN",
                "GRE"
            ]
        },
        "AssociateTrunkInterfaceRequest": {
            "type": "object",
            "properties": {
                "BranchInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "TrunkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "VlanId": {
                    "$ref": "#/$defs/Integer"
                },
                "GreKey": {
                    "$ref": "#/$defs/Integer"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AssociateVpcCidrBlockResult": {
            "type": "object",
            "properties": {
                "Ipv6CidrBlockAssociation": {
                    "$ref": "#/$defs/VpcIpv6CidrBlockAssociation"
                },
                "CidrBlockAssociation": {
                    "$ref": "#/$defs/VpcCidrBlockAssociation"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcIpv6CidrBlockAssociation": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6CidrBlockState": {
                    "$ref": "#/$defs/VpcCidrBlockState"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6Pool": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6AddressAttribute": {
                    "$ref": "#/$defs/Ipv6AddressAttribute"
                },
                "IpSource": {
                    "$ref": "#/$defs/IpSource"
                }
            }
        },
        "VpcCidrBlockState": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/VpcCidrBlockStateCode"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcCidrBlockStateCode": {
            "enum": [
                "associating",
                "associated",
                "disassociating",
                "disassociated",
                "failing",
                "failed"
            ]
        },
        "VpcCidrBlockAssociation": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "CidrBlockState": {
                    "$ref": "#/$defs/VpcCidrBlockState"
                }
            }
        },
        "AssociateVpcCidrBlockRequest": {
            "type": "object",
            "properties": {
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6CidrBlockNetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6Pool": {
                    "$ref": "#/$defs/Ipv6PoolEc2Id"
                },
                "Ipv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Ipv4IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Ipv4NetmaskLength": {
                    "$ref": "#/$defs/NetmaskLength"
                },
                "Ipv6IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Ipv6NetmaskLength": {
                    "$ref": "#/$defs/NetmaskLength"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "AmazonProvidedIpv6CidrBlock": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Ipv6PoolEc2Id": {
            "type": "string"
        },
        "AttachClassicLinkVpcResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AttachClassicLinkVpcRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupIdStringList"
                }
            }
        },
        "GroupIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "AttachInternetGatewayRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InternetGatewayId": {
                    "$ref": "#/$defs/InternetGatewayId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "InternetGatewayId": {
            "type": "string"
        },
        "AttachNetworkInterfaceResult": {
            "type": "object",
            "properties": {
                "AttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkCardIndex": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "AttachNetworkInterfaceRequest": {
            "type": "object",
            "properties": {
                "NetworkCardIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "EnaSrdSpecification": {
                    "$ref": "#/$defs/EnaSrdSpecification"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "DeviceIndex": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "EnaSrdSpecification": {
            "type": "object",
            "properties": {
                "EnaSrdEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnaSrdUdpSpecification": {
                    "$ref": "#/$defs/EnaSrdUdpSpecification"
                }
            }
        },
        "EnaSrdUdpSpecification": {
            "type": "object",
            "properties": {
                "EnaSrdUdpEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AttachVerifiedAccessTrustProviderResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProvider": {
                    "$ref": "#/$defs/VerifiedAccessTrustProvider"
                },
                "VerifiedAccessInstance": {
                    "$ref": "#/$defs/VerifiedAccessInstance"
                }
            }
        },
        "VerifiedAccessTrustProvider": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProviderId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "TrustProviderType": {
                    "$ref": "#/$defs/TrustProviderType"
                },
                "UserTrustProviderType": {
                    "$ref": "#/$defs/UserTrustProviderType"
                },
                "DeviceTrustProviderType": {
                    "$ref": "#/$defs/DeviceTrustProviderType"
                },
                "OidcOptions": {
                    "$ref": "#/$defs/OidcOptions"
                },
                "DeviceOptions": {
                    "$ref": "#/$defs/DeviceOptions"
                },
                "PolicyReferenceName": {
                    "$ref": "#/$defs/String"
                },
                "CreationTime": {
                    "$ref": "#/$defs/String"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationResponse"
                },
                "NativeApplicationOidcOptions": {
                    "$ref": "#/$defs/NativeApplicationOidcOptions"
                }
            }
        },
        "TrustProviderType": {
            "enum": [
                "user",
                "device"
            ]
        },
        "UserTrustProviderType": {
            "enum": [
                "iam_identity_center",
                "oidc"
            ]
        },
        "DeviceTrustProviderType": {
            "enum": [
                "jamf",
                "crowdstrike",
                "jumpcloud"
            ]
        },
        "OidcOptions": {
            "type": "object",
            "properties": {
                "Issuer": {
                    "$ref": "#/$defs/String"
                },
                "AuthorizationEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "TokenEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "UserInfoEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "ClientId": {
                    "$ref": "#/$defs/String"
                },
                "ClientSecret": {
                    "$ref": "#/$defs/ClientSecretType"
                },
                "Scope": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientSecretType": {
            "type": "string"
        },
        "DeviceOptions": {
            "type": "object",
            "properties": {
                "TenantId": {
                    "$ref": "#/$defs/String"
                },
                "PublicSigningKeyUrl": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VerifiedAccessSseSpecificationResponse": {
            "type": "object",
            "properties": {
                "CustomerManagedKeyEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "KmsKeyArn": {
            "type": "string"
        },
        "NativeApplicationOidcOptions": {
            "type": "object",
            "properties": {
                "PublicSigningKeyEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "Issuer": {
                    "$ref": "#/$defs/String"
                },
                "AuthorizationEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "TokenEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "UserInfoEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "ClientId": {
                    "$ref": "#/$defs/String"
                },
                "Scope": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VerifiedAccessInstance": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "VerifiedAccessTrustProviders": {
                    "$ref": "#/$defs/VerifiedAccessTrustProviderCondensedList"
                },
                "CreationTime": {
                    "$ref": "#/$defs/String"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "FipsEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "CidrEndpointsCustomSubDomain": {
                    "$ref": "#/$defs/VerifiedAccessInstanceCustomSubDomain"
                }
            }
        },
        "VerifiedAccessTrustProviderCondensedList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessTrustProviderCondensed"
            }
        },
        "VerifiedAccessTrustProviderCondensed": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProviderId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "TrustProviderType": {
                    "$ref": "#/$defs/TrustProviderType"
                },
                "UserTrustProviderType": {
                    "$ref": "#/$defs/UserTrustProviderType"
                },
                "DeviceTrustProviderType": {
                    "$ref": "#/$defs/DeviceTrustProviderType"
                }
            }
        },
        "VerifiedAccessInstanceCustomSubDomain": {
            "type": "object",
            "properties": {
                "SubDomain": {
                    "$ref": "#/$defs/String"
                },
                "Nameservers": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "AttachVerifiedAccessTrustProviderRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/VerifiedAccessInstanceId"
                },
                "VerifiedAccessTrustProviderId": {
                    "$ref": "#/$defs/VerifiedAccessTrustProviderId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VerifiedAccessInstanceId": {
            "type": "string"
        },
        "VerifiedAccessTrustProviderId": {
            "type": "string"
        },
        "VolumeAttachment": {
            "type": "object",
            "properties": {
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "AssociatedResource": {
                    "$ref": "#/$defs/String"
                },
                "InstanceOwningService": {
                    "$ref": "#/$defs/String"
                },
                "VolumeId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Device": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/VolumeAttachmentState"
                },
                "AttachTime": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "VolumeAttachmentState": {
            "enum": [
                "attaching",
                "attached",
                "detaching",
                "detached",
                "busy"
            ]
        },
        "AttachVolumeRequest": {
            "type": "object",
            "properties": {
                "Device": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "VolumeId": {
                    "$ref": "#/$defs/VolumeId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VolumeId": {
            "type": "string"
        },
        "AttachVpnGatewayResult": {
            "type": "object",
            "properties": {
                "VpcAttachment": {
                    "$ref": "#/$defs/VpcAttachment"
                }
            }
        },
        "VpcAttachment": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/AttachmentStatus"
                }
            }
        },
        "AttachmentStatus": {
            "enum": [
                "attaching",
                "attached",
                "detaching",
                "detached"
            ]
        },
        "AttachVpnGatewayRequest": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "VpnGatewayId": {
                    "$ref": "#/$defs/VpnGatewayId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VpnGatewayId": {
            "type": "string"
        },
        "AuthorizeClientVpnIngressResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ClientVpnAuthorizationRuleStatus"
                }
            }
        },
        "ClientVpnAuthorizationRuleStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/ClientVpnAuthorizationRuleStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientVpnAuthorizationRuleStatusCode": {
            "enum": [
                "authorizing",
                "active",
                "failed",
                "revoking"
            ]
        },
        "AuthorizeClientVpnIngressRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "TargetNetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "AccessGroupId": {
                    "$ref": "#/$defs/String"
                },
                "AuthorizeAllGroups": {
                    "$ref": "#/$defs/Boolean"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AuthorizeSecurityGroupEgressResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                },
                "SecurityGroupRules": {
                    "$ref": "#/$defs/SecurityGroupRuleList"
                }
            }
        },
        "SecurityGroupRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupRule"
            }
        },
        "SecurityGroupRule": {
            "type": "object",
            "properties": {
                "SecurityGroupRuleId": {
                    "$ref": "#/$defs/SecurityGroupRuleId"
                },
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "GroupOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "IsEgress": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpProtocol": {
                    "$ref": "#/$defs/String"
                },
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                },
                "CidrIpv4": {
                    "$ref": "#/$defs/String"
                },
                "CidrIpv6": {
                    "$ref": "#/$defs/String"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "ReferencedGroupInfo": {
                    "$ref": "#/$defs/ReferencedSecurityGroup"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SecurityGroupRuleArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SecurityGroupRuleId": {
            "type": "string"
        },
        "PrefixListResourceId": {
            "type": "string"
        },
        "ReferencedSecurityGroup": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "PeeringStatus": {
                    "$ref": "#/$defs/String"
                },
                "UserId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AuthorizeSecurityGroupEgressRequest": {
            "type": "object",
            "properties": {
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "SourceSecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "SourceSecurityGroupOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "IpProtocol": {
                    "$ref": "#/$defs/String"
                },
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                },
                "CidrIp": {
                    "$ref": "#/$defs/String"
                },
                "IpPermissions": {
                    "$ref": "#/$defs/IpPermissionList"
                }
            }
        },
        "IpPermissionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpPermission"
            }
        },
        "IpPermission": {
            "type": "object",
            "properties": {
                "IpProtocol": {
                    "$ref": "#/$defs/String"
                },
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                },
                "UserIdGroupPairs": {
                    "$ref": "#/$defs/UserIdGroupPairList"
                },
                "IpRanges": {
                    "$ref": "#/$defs/IpRangeList"
                },
                "Ipv6Ranges": {
                    "$ref": "#/$defs/Ipv6RangeList"
                },
                "PrefixListIds": {
                    "$ref": "#/$defs/PrefixListIdList"
                }
            }
        },
        "UserIdGroupPairList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserIdGroupPair"
            }
        },
        "UserIdGroupPair": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "UserId": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/String"
                },
                "PeeringStatus": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpRangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpRange"
            }
        },
        "IpRange": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "CidrIp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv6RangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv6Range"
            }
        },
        "Ipv6Range": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "CidrIpv6": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PrefixListIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrefixListId"
            }
        },
        "PrefixListId": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AuthorizeSecurityGroupIngressResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                },
                "SecurityGroupRules": {
                    "$ref": "#/$defs/SecurityGroupRuleList"
                }
            }
        },
        "AuthorizeSecurityGroupIngressRequest": {
            "type": "object",
            "properties": {
                "CidrIp": {
                    "$ref": "#/$defs/String"
                },
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "GroupName": {
                    "$ref": "#/$defs/SecurityGroupName"
                },
                "IpPermissions": {
                    "$ref": "#/$defs/IpPermissionList"
                },
                "IpProtocol": {
                    "$ref": "#/$defs/String"
                },
                "SourceSecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "SourceSecurityGroupOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SecurityGroupName": {
            "type": "string"
        },
        "BundleInstanceResult": {
            "type": "object",
            "properties": {
                "BundleTask": {
                    "$ref": "#/$defs/BundleTask"
                }
            }
        },
        "BundleTask": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "BundleId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/BundleTaskState"
                },
                "StartTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Storage": {
                    "$ref": "#/$defs/Storage"
                },
                "Progress": {
                    "$ref": "#/$defs/String"
                },
                "BundleTaskError": {
                    "$ref": "#/$defs/BundleTaskError"
                }
            }
        },
        "BundleTaskState": {
            "enum": [
                "pending",
                "waiting_for_shutdown",
                "bundling",
                "storing",
                "cancelling",
                "complete",
                "failed"
            ]
        },
        "Storage": {
            "type": "object",
            "properties": {
                "S3": {
                    "$ref": "#/$defs/S3Storage"
                }
            }
        },
        "S3Storage": {
            "type": "object",
            "properties": {
                "AWSAccessKeyId": {
                    "$ref": "#/$defs/String"
                },
                "Bucket": {
                    "$ref": "#/$defs/String"
                },
                "Prefix": {
                    "$ref": "#/$defs/String"
                },
                "UploadPolicy": {
                    "$ref": "#/$defs/Blob"
                },
                "UploadPolicySignature": {
                    "$ref": "#/$defs/S3StorageUploadPolicySignature"
                }
            }
        },
        "Blob": {
            "type": "string",
            "format": "binary"
        },
        "S3StorageUploadPolicySignature": {
            "type": "string"
        },
        "BundleTaskError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BundleInstanceRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "Storage": {
                    "$ref": "#/$defs/Storage"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CancelBundleTaskResult": {
            "type": "object",
            "properties": {
                "BundleTask": {
                    "$ref": "#/$defs/BundleTask"
                }
            }
        },
        "CancelBundleTaskRequest": {
            "type": "object",
            "properties": {
                "BundleId": {
                    "$ref": "#/$defs/BundleId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "BundleId": {
            "type": "string"
        },
        "CancelCapacityReservationResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CancelCapacityReservationRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CancelCapacityReservationFleetsResult": {
            "type": "object",
            "properties": {
                "SuccessfulFleetCancellations": {
                    "$ref": "#/$defs/CapacityReservationFleetCancellationStateSet"
                },
                "FailedFleetCancellations": {
                    "$ref": "#/$defs/FailedCapacityReservationFleetCancellationResultSet"
                }
            }
        },
        "CapacityReservationFleetCancellationStateSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityReservationFleetCancellationState"
            }
        },
        "CapacityReservationFleetCancellationState": {
            "type": "object",
            "properties": {
                "CurrentFleetState": {
                    "$ref": "#/$defs/CapacityReservationFleetState"
                },
                "PreviousFleetState": {
                    "$ref": "#/$defs/CapacityReservationFleetState"
                },
                "CapacityReservationFleetId": {
                    "$ref": "#/$defs/CapacityReservationFleetId"
                }
            }
        },
        "CapacityReservationFleetState": {
            "enum": [
                "SUBMITTED",
                "MODIFYING",
                "ACTIVE",
                "PARTIALLY_FULFILLED",
                "EXPIRING",
                "EXPIRED",
                "CANCELLING",
                "CANCELLED",
                "FAILED"
            ]
        },
        "CapacityReservationFleetId": {
            "type": "string"
        },
        "FailedCapacityReservationFleetCancellationResultSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FailedCapacityReservationFleetCancellationResult"
            }
        },
        "FailedCapacityReservationFleetCancellationResult": {
            "type": "object",
            "properties": {
                "CapacityReservationFleetId": {
                    "$ref": "#/$defs/CapacityReservationFleetId"
                },
                "CancelCapacityReservationFleetError": {
                    "$ref": "#/$defs/CancelCapacityReservationFleetError"
                }
            }
        },
        "CancelCapacityReservationFleetError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/CancelCapacityReservationFleetErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/CancelCapacityReservationFleetErrorMessage"
                }
            }
        },
        "CancelCapacityReservationFleetErrorCode": {
            "type": "string"
        },
        "CancelCapacityReservationFleetErrorMessage": {
            "type": "string"
        },
        "CancelCapacityReservationFleetsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "CapacityReservationFleetIds": {
                    "$ref": "#/$defs/CapacityReservationFleetIdSet"
                }
            }
        },
        "CapacityReservationFleetIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityReservationFleetId"
            }
        },
        "CancelConversionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ConversionTaskId": {
                    "$ref": "#/$defs/ConversionTaskId"
                },
                "ReasonMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ConversionTaskId": {
            "type": "string"
        },
        "CancelDeclarativePoliciesReportResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CancelDeclarativePoliciesReportRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ReportId": {
                    "$ref": "#/$defs/DeclarativePoliciesReportId"
                }
            }
        },
        "DeclarativePoliciesReportId": {
            "type": "string"
        },
        "CancelExportTaskRequest": {
            "type": "object",
            "properties": {
                "ExportTaskId": {
                    "$ref": "#/$defs/ExportVmTaskId"
                }
            }
        },
        "ExportVmTaskId": {
            "type": "string"
        },
        "CancelImageLaunchPermissionResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CancelImageLaunchPermissionRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ImageId": {
            "type": "string"
        },
        "CancelImportTaskResult": {
            "type": "object",
            "properties": {
                "ImportTaskId": {
                    "$ref": "#/$defs/String"
                },
                "PreviousState": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CancelImportTaskRequest": {
            "type": "object",
            "properties": {
                "CancelReason": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ImportTaskId": {
                    "$ref": "#/$defs/ImportTaskId"
                }
            }
        },
        "ImportTaskId": {
            "type": "string"
        },
        "CancelReservedInstancesListingResult": {
            "type": "object",
            "properties": {
                "ReservedInstancesListings": {
                    "$ref": "#/$defs/ReservedInstancesListingList"
                }
            }
        },
        "ReservedInstancesListingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstancesListing"
            }
        },
        "ReservedInstancesListing": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "CreateDate": {
                    "$ref": "#/$defs/DateTime"
                },
                "InstanceCounts": {
                    "$ref": "#/$defs/InstanceCountList"
                },
                "PriceSchedules": {
                    "$ref": "#/$defs/PriceScheduleList"
                },
                "ReservedInstancesId": {
                    "$ref": "#/$defs/String"
                },
                "ReservedInstancesListingId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ListingStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "UpdateDate": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "InstanceCountList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceCount"
            }
        },
        "InstanceCount": {
            "type": "object",
            "properties": {
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "State": {
                    "$ref": "#/$defs/ListingState"
                }
            }
        },
        "ListingState": {
            "enum": [
                "available",
                "sold",
                "cancelled",
                "pending"
            ]
        },
        "PriceScheduleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PriceSchedule"
            }
        },
        "PriceSchedule": {
            "type": "object",
            "properties": {
                "Active": {
                    "$ref": "#/$defs/Boolean"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                },
                "Price": {
                    "$ref": "#/$defs/Double"
                },
                "Term": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "CurrencyCodeValues": {
            "enum": [
                "USD"
            ]
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "ListingStatus": {
            "enum": [
                "active",
                "pending",
                "cancelled",
                "closed"
            ]
        },
        "CancelReservedInstancesListingRequest": {
            "type": "object",
            "properties": {
                "ReservedInstancesListingId": {
                    "$ref": "#/$defs/ReservedInstancesListingId"
                }
            }
        },
        "ReservedInstancesListingId": {
            "type": "string"
        },
        "CancelSpotFleetRequestsResponse": {
            "type": "object",
            "properties": {
                "SuccessfulFleetRequests": {
                    "$ref": "#/$defs/CancelSpotFleetRequestsSuccessSet"
                },
                "UnsuccessfulFleetRequests": {
                    "$ref": "#/$defs/CancelSpotFleetRequestsErrorSet"
                }
            }
        },
        "CancelSpotFleetRequestsSuccessSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CancelSpotFleetRequestsSuccessItem"
            }
        },
        "CancelSpotFleetRequestsSuccessItem": {
            "type": "object",
            "properties": {
                "CurrentSpotFleetRequestState": {
                    "$ref": "#/$defs/BatchState"
                },
                "PreviousSpotFleetRequestState": {
                    "$ref": "#/$defs/BatchState"
                },
                "SpotFleetRequestId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BatchState": {
            "enum": [
                "SUBMITTED",
                "ACTIVE",
                "CANCELLED",
                "FAILED",
                "CANCELLED_RUNNING",
                "CANCELLED_TERMINATING_INSTANCES",
                "MODIFYING"
            ]
        },
        "CancelSpotFleetRequestsErrorSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CancelSpotFleetRequestsErrorItem"
            }
        },
        "CancelSpotFleetRequestsErrorItem": {
            "type": "object",
            "properties": {
                "Error": {
                    "$ref": "#/$defs/CancelSpotFleetRequestsError"
                },
                "SpotFleetRequestId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CancelSpotFleetRequestsError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/CancelBatchErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CancelBatchErrorCode": {
            "enum": [
                "FLEET_REQUEST_ID_DOES_NOT_EXIST",
                "FLEET_REQUEST_ID_MALFORMED",
                "FLEET_REQUEST_NOT_IN_CANCELLABLE_STATE",
                "UNEXPECTED_ERROR"
            ]
        },
        "CancelSpotFleetRequestsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SpotFleetRequestIds": {
                    "$ref": "#/$defs/SpotFleetRequestIdList"
                },
                "TerminateInstances": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SpotFleetRequestIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SpotFleetRequestId"
            }
        },
        "SpotFleetRequestId": {
            "type": "string"
        },
        "CancelSpotInstanceRequestsResult": {
            "type": "object",
            "properties": {
                "CancelledSpotInstanceRequests": {
                    "$ref": "#/$defs/CancelledSpotInstanceRequestList"
                }
            }
        },
        "CancelledSpotInstanceRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CancelledSpotInstanceRequest"
            }
        },
        "CancelledSpotInstanceRequest": {
            "type": "object",
            "properties": {
                "SpotInstanceRequestId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/CancelSpotInstanceRequestState"
                }
            }
        },
        "CancelSpotInstanceRequestState": {
            "enum": [
                "active",
                "open",
                "closed",
                "cancelled",
                "completed"
            ]
        },
        "CancelSpotInstanceRequestsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SpotInstanceRequestIds": {
                    "$ref": "#/$defs/SpotInstanceRequestIdList"
                }
            }
        },
        "SpotInstanceRequestIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SpotInstanceRequestId"
            }
        },
        "SpotInstanceRequestId": {
            "type": "string"
        },
        "ConfirmProductInstanceResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ConfirmProductInstanceRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "ProductCode": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CopyFpgaImageResult": {
            "type": "object",
            "properties": {
                "FpgaImageId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CopyFpgaImageRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SourceFpgaImageId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "SourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CopyImageResult": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CopyImageRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "SourceImageId": {
                    "$ref": "#/$defs/String"
                },
                "SourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "DestinationOutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "CopyImageTags": {
                    "$ref": "#/$defs/Boolean"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "SnapshotCopyCompletionDurationMinutes": {
                    "$ref": "#/$defs/Long"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "KmsKeyId": {
            "type": "string"
        },
        "CopySnapshotResult": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CopySnapshotRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DestinationOutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "DestinationRegion": {
                    "$ref": "#/$defs/String"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "PresignedUrl": {
                    "$ref": "#/$defs/CopySnapshotRequestPSU"
                },
                "SourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "SourceSnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "CompletionDurationMinutes": {
                    "$ref": "#/$defs/SnapshotCompletionDurationMinutesRequest"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CopySnapshotRequestPSU": {
            "type": "string"
        },
        "SnapshotCompletionDurationMinutesRequest": {
            "type": "integer",
            "format": "int32"
        },
        "CreateCapacityReservationResult": {
            "type": "object",
            "properties": {
                "CapacityReservation": {
                    "$ref": "#/$defs/CapacityReservation"
                }
            }
        },
        "CapacityReservation": {
            "type": "object",
            "properties": {
                "CapacityReservationId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "CapacityReservationArn": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "InstancePlatform": {
                    "$ref": "#/$defs/CapacityReservationInstancePlatform"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "Tenancy": {
                    "$ref": "#/$defs/CapacityReservationTenancy"
                },
                "TotalInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "AvailableInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "EphemeralStorage": {
                    "$ref": "#/$defs/Boolean"
                },
                "State": {
                    "$ref": "#/$defs/CapacityReservationState"
                },
                "StartDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EndDate": {
                    "$ref": "#/$defs/DateTime"
                },
                "EndDateType": {
                    "$ref": "#/$defs/EndDateType"
                },
                "InstanceMatchCriteria": {
                    "$ref": "#/$defs/InstanceMatchCriteria"
                },
                "CreateDate": {
                    "$ref": "#/$defs/DateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/OutpostArn"
                },
                "CapacityReservationFleetId": {
                    "$ref": "#/$defs/String"
                },
                "PlacementGroupArn": {
                    "$ref": "#/$defs/PlacementGroupArn"
                },
                "CapacityAllocations": {
                    "$ref": "#/$defs/CapacityAllocations"
                },
                "ReservationType": {
                    "$ref": "#/$defs/CapacityReservationType"
                },
                "UnusedReservationBillingOwnerId": {
                    "$ref": "#/$defs/AccountID"
                },
                "CommitmentInfo": {
                    "$ref": "#/$defs/CapacityReservationCommitmentInfo"
                },
                "DeliveryPreference": {
                    "$ref": "#/$defs/CapacityReservationDeliveryPreference"
                }
            }
        },
        "CapacityReservationInstancePlatform": {
            "enum": [
                "LINUX_UNIX",
                "RED_HAT_ENTERPRISE_LINUX",
                "SUSE_LINUX",
                "WINDOWS",
                "WINDOWS_WITH_SQL_SERVER",
                "WINDOWS_WITH_SQL_SERVER_ENTERPRISE",
                "WINDOWS_WITH_SQL_SERVER_STANDARD",
                "WINDOWS_WITH_SQL_SERVER_WEB",
                "LINUX_WITH_SQL_SERVER_STANDARD",
                "LINUX_WITH_SQL_SERVER_WEB",
                "LINUX_WITH_SQL_SERVER_ENTERPRISE",
                "RHEL_WITH_SQL_SERVER_STANDARD",
                "RHEL_WITH_SQL_SERVER_ENTERPRISE",
                "RHEL_WITH_SQL_SERVER_WEB",
                "RHEL_WITH_HA",
                "RHEL_WITH_HA_AND_SQL_SERVER_STANDARD",
                "RHEL_WITH_HA_AND_SQL_SERVER_ENTERPRISE",
                "UBUNTU_PRO_LINUX"
            ]
        },
        "CapacityReservationTenancy": {
            "enum": [
                "default",
                "dedicated"
            ]
        },
        "CapacityReservationState": {
            "enum": [
                "active",
                "expired",
                "cancelled",
                "pending",
                "failed",
                "scheduled",
                "payment_pending",
                "payment_failed",
                "assessing",
                "delayed",
                "unsupported"
            ]
        },
        "EndDateType": {
            "enum": [
                "unlimited",
                "limited"
            ]
        },
        "InstanceMatchCriteria": {
            "enum": [
                "open",
                "targeted"
            ]
        },
        "OutpostArn": {
            "type": "string"
        },
        "PlacementGroupArn": {
            "type": "string"
        },
        "CapacityAllocations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityAllocation"
            }
        },
        "CapacityAllocation": {
            "type": "object",
            "properties": {
                "AllocationType": {
                    "$ref": "#/$defs/AllocationType"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "AllocationType": {
            "enum": [
                "used",
                "future"
            ]
        },
        "CapacityReservationType": {
            "enum": [
                "DEFAULT",
                "CAPACITY_BLOCK"
            ]
        },
        "CapacityReservationCommitmentInfo": {
            "type": "object",
            "properties": {
                "CommittedInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "CommitmentEndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "CapacityReservationDeliveryPreference": {
            "enum": [
                "FIXED",
                "INCREMENTAL"
            ]
        },
        "CreateCapacityReservationRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "InstancePlatform": {
                    "$ref": "#/$defs/CapacityReservationInstancePlatform"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZoneName"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "Tenancy": {
                    "$ref": "#/$defs/CapacityReservationTenancy"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "EphemeralStorage": {
                    "$ref": "#/$defs/Boolean"
                },
                "EndDate": {
                    "$ref": "#/$defs/DateTime"
                },
                "EndDateType": {
                    "$ref": "#/$defs/EndDateType"
                },
                "InstanceMatchCriteria": {
                    "$ref": "#/$defs/InstanceMatchCriteria"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/OutpostArn"
                },
                "PlacementGroupArn": {
                    "$ref": "#/$defs/PlacementGroupArn"
                },
                "StartDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "CommitmentDuration": {
                    "$ref": "#/$defs/CapacityReservationCommitmentDuration"
                },
                "DeliveryPreference": {
                    "$ref": "#/$defs/CapacityReservationDeliveryPreference"
                }
            }
        },
        "AvailabilityZoneName": {
            "type": "string"
        },
        "AvailabilityZoneId": {
            "type": "string"
        },
        "CapacityReservationCommitmentDuration": {
            "type": "integer",
            "format": "int64"
        },
        "CreateCapacityReservationBySplittingResult": {
            "type": "object",
            "properties": {
                "SourceCapacityReservation": {
                    "$ref": "#/$defs/CapacityReservation"
                },
                "DestinationCapacityReservation": {
                    "$ref": "#/$defs/CapacityReservation"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "CreateCapacityReservationBySplittingRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "SourceCapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "CreateCapacityReservationFleetResult": {
            "type": "object",
            "properties": {
                "CapacityReservationFleetId": {
                    "$ref": "#/$defs/CapacityReservationFleetId"
                },
                "State": {
                    "$ref": "#/$defs/CapacityReservationFleetState"
                },
                "TotalTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "TotalFulfilledCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "InstanceMatchCriteria": {
                    "$ref": "#/$defs/FleetInstanceMatchCriteria"
                },
                "AllocationStrategy": {
                    "$ref": "#/$defs/String"
                },
                "CreateTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Tenancy": {
                    "$ref": "#/$defs/FleetCapacityReservationTenancy"
                },
                "FleetCapacityReservations": {
                    "$ref": "#/$defs/FleetCapacityReservationSet"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "FleetInstanceMatchCriteria": {
            "enum": [
                "open"
            ]
        },
        "FleetCapacityReservationTenancy": {
            "enum": [
                "default"
            ]
        },
        "FleetCapacityReservationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FleetCapacityReservation"
            }
        },
        "FleetCapacityReservation": {
            "type": "object",
            "properties": {
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "InstancePlatform": {
                    "$ref": "#/$defs/CapacityReservationInstancePlatform"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "TotalInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "FulfilledCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "CreateDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Weight": {
                    "$ref": "#/$defs/DoubleWithConstraints"
                },
                "Priority": {
                    "$ref": "#/$defs/IntegerWithConstraints"
                }
            }
        },
        "InstanceType": {
            "enum": [
                "a1_medium",
                "a1_large",
                "a1_xlarge",
                "a1_2xlarge",
                "a1_4xlarge",
                "a1_metal",
                "c1_medium",
                "c1_xlarge",
                "c3_large",
                "c3_xlarge",
                "c3_2xlarge",
                "c3_4xlarge",
                "c3_8xlarge",
                "c4_large",
                "c4_xlarge",
                "c4_2xlarge",
                "c4_4xlarge",
                "c4_8xlarge",
                "c5_large",
                "c5_xlarge",
                "c5_2xlarge",
                "c5_4xlarge",
                "c5_9xlarge",
                "c5_12xlarge",
                "c5_18xlarge",
                "c5_24xlarge",
                "c5_metal",
                "c5a_large",
                "c5a_xlarge",
                "c5a_2xlarge",
                "c5a_4xlarge",
                "c5a_8xlarge",
                "c5a_12xlarge",
                "c5a_16xlarge",
                "c5a_24xlarge",
                "c5ad_large",
                "c5ad_xlarge",
                "c5ad_2xlarge",
                "c5ad_4xlarge",
                "c5ad_8xlarge",
                "c5ad_12xlarge",
                "c5ad_16xlarge",
                "c5ad_24xlarge",
                "c5d_large",
                "c5d_xlarge",
                "c5d_2xlarge",
                "c5d_4xlarge",
                "c5d_9xlarge",
                "c5d_12xlarge",
                "c5d_18xlarge",
                "c5d_24xlarge",
                "c5d_metal",
                "c5n_large",
                "c5n_xlarge",
                "c5n_2xlarge",
                "c5n_4xlarge",
                "c5n_9xlarge",
                "c5n_18xlarge",
                "c5n_metal",
                "c6g_medium",
                "c6g_large",
                "c6g_xlarge",
                "c6g_2xlarge",
                "c6g_4xlarge",
                "c6g_8xlarge",
                "c6g_12xlarge",
                "c6g_16xlarge",
                "c6g_metal",
                "c6gd_medium",
                "c6gd_large",
                "c6gd_xlarge",
                "c6gd_2xlarge",
                "c6gd_4xlarge",
                "c6gd_8xlarge",
                "c6gd_12xlarge",
                "c6gd_16xlarge",
                "c6gd_metal",
                "c6gn_medium",
                "c6gn_large",
                "c6gn_xlarge",
                "c6gn_2xlarge",
                "c6gn_4xlarge",
                "c6gn_8xlarge",
                "c6gn_12xlarge",
                "c6gn_16xlarge",
                "c6i_large",
                "c6i_xlarge",
                "c6i_2xlarge",
                "c6i_4xlarge",
                "c6i_8xlarge",
                "c6i_12xlarge",
                "c6i_16xlarge",
                "c6i_24xlarge",
                "c6i_32xlarge",
                "c6i_metal",
                "cc1_4xlarge",
                "cc2_8xlarge",
                "cg1_4xlarge",
                "cr1_8xlarge",
                "d2_xlarge",
                "d2_2xlarge",
                "d2_4xlarge",
                "d2_8xlarge",
                "d3_xlarge",
                "d3_2xlarge",
                "d3_4xlarge",
                "d3_8xlarge",
                "d3en_xlarge",
                "d3en_2xlarge",
                "d3en_4xlarge",
                "d3en_6xlarge",
                "d3en_8xlarge",
                "d3en_12xlarge",
                "dl1_24xlarge",
                "f1_2xlarge",
                "f1_4xlarge",
                "f1_16xlarge",
                "g2_2xlarge",
                "g2_8xlarge",
                "g3_4xlarge",
                "g3_8xlarge",
                "g3_16xlarge",
                "g3s_xlarge",
                "g4ad_xlarge",
                "g4ad_2xlarge",
                "g4ad_4xlarge",
                "g4ad_8xlarge",
                "g4ad_16xlarge",
                "g4dn_xlarge",
                "g4dn_2xlarge",
                "g4dn_4xlarge",
                "g4dn_8xlarge",
                "g4dn_12xlarge",
                "g4dn_16xlarge",
                "g4dn_metal",
                "g5_xlarge",
                "g5_2xlarge",
                "g5_4xlarge",
                "g5_8xlarge",
                "g5_12xlarge",
                "g5_16xlarge",
                "g5_24xlarge",
                "g5_48xlarge",
                "g5g_xlarge",
                "g5g_2xlarge",
                "g5g_4xlarge",
                "g5g_8xlarge",
                "g5g_16xlarge",
                "g5g_metal",
                "hi1_4xlarge",
                "hpc6a_48xlarge",
                "hs1_8xlarge",
                "h1_2xlarge",
                "h1_4xlarge",
                "h1_8xlarge",
                "h1_16xlarge",
                "i2_xlarge",
                "i2_2xlarge",
                "i2_4xlarge",
                "i2_8xlarge",
                "i3_large",
                "i3_xlarge",
                "i3_2xlarge",
                "i3_4xlarge",
                "i3_8xlarge",
                "i3_16xlarge",
                "i3_metal",
                "i3en_large",
                "i3en_xlarge",
                "i3en_2xlarge",
                "i3en_3xlarge",
                "i3en_6xlarge",
                "i3en_12xlarge",
                "i3en_24xlarge",
                "i3en_metal",
                "im4gn_large",
                "im4gn_xlarge",
                "im4gn_2xlarge",
                "im4gn_4xlarge",
                "im4gn_8xlarge",
                "im4gn_16xlarge",
                "inf1_xlarge",
                "inf1_2xlarge",
                "inf1_6xlarge",
                "inf1_24xlarge",
                "is4gen_medium",
                "is4gen_large",
                "is4gen_xlarge",
                "is4gen_2xlarge",
                "is4gen_4xlarge",
                "is4gen_8xlarge",
                "m1_small",
                "m1_medium",
                "m1_large",
                "m1_xlarge",
                "m2_xlarge",
                "m2_2xlarge",
                "m2_4xlarge",
                "m3_medium",
                "m3_large",
                "m3_xlarge",
                "m3_2xlarge",
                "m4_large",
                "m4_xlarge",
                "m4_2xlarge",
                "m4_4xlarge",
                "m4_10xlarge",
                "m4_16xlarge",
                "m5_large",
                "m5_xlarge",
                "m5_2xlarge",
                "m5_4xlarge",
                "m5_8xlarge",
                "m5_12xlarge",
                "m5_16xlarge",
                "m5_24xlarge",
                "m5_metal",
                "m5a_large",
                "m5a_xlarge",
                "m5a_2xlarge",
                "m5a_4xlarge",
                "m5a_8xlarge",
                "m5a_12xlarge",
                "m5a_16xlarge",
                "m5a_24xlarge",
                "m5ad_large",
                "m5ad_xlarge",
                "m5ad_2xlarge",
                "m5ad_4xlarge",
                "m5ad_8xlarge",
                "m5ad_12xlarge",
                "m5ad_16xlarge",
                "m5ad_24xlarge",
                "m5d_large",
                "m5d_xlarge",
                "m5d_2xlarge",
                "m5d_4xlarge",
                "m5d_8xlarge",
                "m5d_12xlarge",
                "m5d_16xlarge",
                "m5d_24xlarge",
                "m5d_metal",
                "m5dn_large",
                "m5dn_xlarge",
                "m5dn_2xlarge",
                "m5dn_4xlarge",
                "m5dn_8xlarge",
                "m5dn_12xlarge",
                "m5dn_16xlarge",
                "m5dn_24xlarge",
                "m5dn_metal",
                "m5n_large",
                "m5n_xlarge",
                "m5n_2xlarge",
                "m5n_4xlarge",
                "m5n_8xlarge",
                "m5n_12xlarge",
                "m5n_16xlarge",
                "m5n_24xlarge",
                "m5n_metal",
                "m5zn_large",
                "m5zn_xlarge",
                "m5zn_2xlarge",
                "m5zn_3xlarge",
                "m5zn_6xlarge",
                "m5zn_12xlarge",
                "m5zn_metal",
                "m6a_large",
                "m6a_xlarge",
                "m6a_2xlarge",
                "m6a_4xlarge",
                "m6a_8xlarge",
                "m6a_12xlarge",
                "m6a_16xlarge",
                "m6a_24xlarge",
                "m6a_32xlarge",
                "m6a_48xlarge",
                "m6g_metal",
                "m6g_medium",
                "m6g_large",
                "m6g_xlarge",
                "m6g_2xlarge",
                "m6g_4xlarge",
                "m6g_8xlarge",
                "m6g_12xlarge",
                "m6g_16xlarge",
                "m6gd_metal",
                "m6gd_medium",
                "m6gd_large",
                "m6gd_xlarge",
                "m6gd_2xlarge",
                "m6gd_4xlarge",
                "m6gd_8xlarge",
                "m6gd_12xlarge",
                "m6gd_16xlarge",
                "m6i_large",
                "m6i_xlarge",
                "m6i_2xlarge",
                "m6i_4xlarge",
                "m6i_8xlarge",
                "m6i_12xlarge",
                "m6i_16xlarge",
                "m6i_24xlarge",
                "m6i_32xlarge",
                "m6i_metal",
                "mac1_metal",
                "p2_xlarge",
                "p2_8xlarge",
                "p2_16xlarge",
                "p3_2xlarge",
                "p3_8xlarge",
                "p3_16xlarge",
                "p3dn_24xlarge",
                "p4d_24xlarge",
                "r3_large",
                "r3_xlarge",
                "r3_2xlarge",
                "r3_4xlarge",
                "r3_8xlarge",
                "r4_large",
                "r4_xlarge",
                "r4_2xlarge",
                "r4_4xlarge",
                "r4_8xlarge",
                "r4_16xlarge",
                "r5_large",
                "r5_xlarge",
                "r5_2xlarge",
                "r5_4xlarge",
                "r5_8xlarge",
                "r5_12xlarge",
                "r5_16xlarge",
                "r5_24xlarge",
                "r5_metal",
                "r5a_large",
                "r5a_xlarge",
                "r5a_2xlarge",
                "r5a_4xlarge",
                "r5a_8xlarge",
                "r5a_12xlarge",
                "r5a_16xlarge",
                "r5a_24xlarge",
                "r5ad_large",
                "r5ad_xlarge",
                "r5ad_2xlarge",
                "r5ad_4xlarge",
                "r5ad_8xlarge",
                "r5ad_12xlarge",
                "r5ad_16xlarge",
                "r5ad_24xlarge",
                "r5b_large",
                "r5b_xlarge",
                "r5b_2xlarge",
                "r5b_4xlarge",
                "r5b_8xlarge",
                "r5b_12xlarge",
                "r5b_16xlarge",
                "r5b_24xlarge",
                "r5b_metal",
                "r5d_large",
                "r5d_xlarge",
                "r5d_2xlarge",
                "r5d_4xlarge",
                "r5d_8xlarge",
                "r5d_12xlarge",
                "r5d_16xlarge",
                "r5d_24xlarge",
                "r5d_metal",
                "r5dn_large",
                "r5dn_xlarge",
                "r5dn_2xlarge",
                "r5dn_4xlarge",
                "r5dn_8xlarge",
                "r5dn_12xlarge",
                "r5dn_16xlarge",
                "r5dn_24xlarge",
                "r5dn_metal",
                "r5n_large",
                "r5n_xlarge",
                "r5n_2xlarge",
                "r5n_4xlarge",
                "r5n_8xlarge",
                "r5n_12xlarge",
                "r5n_16xlarge",
                "r5n_24xlarge",
                "r5n_metal",
                "r6g_medium",
                "r6g_large",
                "r6g_xlarge",
                "r6g_2xlarge",
                "r6g_4xlarge",
                "r6g_8xlarge",
                "r6g_12xlarge",
                "r6g_16xlarge",
                "r6g_metal",
                "r6gd_medium",
                "r6gd_large",
                "r6gd_xlarge",
                "r6gd_2xlarge",
                "r6gd_4xlarge",
                "r6gd_8xlarge",
                "r6gd_12xlarge",
                "r6gd_16xlarge",
                "r6gd_metal",
                "r6i_large",
                "r6i_xlarge",
                "r6i_2xlarge",
                "r6i_4xlarge",
                "r6i_8xlarge",
                "r6i_12xlarge",
                "r6i_16xlarge",
                "r6i_24xlarge",
                "r6i_32xlarge",
                "r6i_metal",
                "t1_micro",
                "t2_nano",
                "t2_micro",
                "t2_small",
                "t2_medium",
                "t2_large",
                "t2_xlarge",
                "t2_2xlarge",
                "t3_nano",
                "t3_micro",
                "t3_small",
                "t3_medium",
                "t3_large",
                "t3_xlarge",
                "t3_2xlarge",
                "t3a_nano",
                "t3a_micro",
                "t3a_small",
                "t3a_medium",
                "t3a_large",
                "t3a_xlarge",
                "t3a_2xlarge",
                "t4g_nano",
                "t4g_micro",
                "t4g_small",
                "t4g_medium",
                "t4g_large",
                "t4g_xlarge",
                "t4g_2xlarge",
                "u_6tb1_56xlarge",
                "u_6tb1_112xlarge",
                "u_9tb1_112xlarge",
                "u_12tb1_112xlarge",
                "u_6tb1_metal",
                "u_9tb1_metal",
                "u_12tb1_metal",
                "u_18tb1_metal",
                "u_24tb1_metal",
                "vt1_3xlarge",
                "vt1_6xlarge",
                "vt1_24xlarge",
                "x1_16xlarge",
                "x1_32xlarge",
                "x1e_xlarge",
                "x1e_2xlarge",
                "x1e_4xlarge",
                "x1e_8xlarge",
                "x1e_16xlarge",
                "x1e_32xlarge",
                "x2iezn_2xlarge",
                "x2iezn_4xlarge",
                "x2iezn_6xlarge",
                "x2iezn_8xlarge",
                "x2iezn_12xlarge",
                "x2iezn_metal",
                "x2gd_medium",
                "x2gd_large",
                "x2gd_xlarge",
                "x2gd_2xlarge",
                "x2gd_4xlarge",
                "x2gd_8xlarge",
                "x2gd_12xlarge",
                "x2gd_16xlarge",
                "x2gd_metal",
                "z1d_large",
                "z1d_xlarge",
                "z1d_2xlarge",
                "z1d_3xlarge",
                "z1d_6xlarge",
                "z1d_12xlarge",
                "z1d_metal",
                "x2idn_16xlarge",
                "x2idn_24xlarge",
                "x2idn_32xlarge",
                "x2iedn_xlarge",
                "x2iedn_2xlarge",
                "x2iedn_4xlarge",
                "x2iedn_8xlarge",
                "x2iedn_16xlarge",
                "x2iedn_24xlarge",
                "x2iedn_32xlarge",
                "c6a_large",
                "c6a_xlarge",
                "c6a_2xlarge",
                "c6a_4xlarge",
                "c6a_8xlarge",
                "c6a_12xlarge",
                "c6a_16xlarge",
                "c6a_24xlarge",
                "c6a_32xlarge",
                "c6a_48xlarge",
                "c6a_metal",
                "m6a_metal",
                "i4i_large",
                "i4i_xlarge",
                "i4i_2xlarge",
                "i4i_4xlarge",
                "i4i_8xlarge",
                "i4i_16xlarge",
                "i4i_32xlarge",
                "i4i_metal",
                "x2idn_metal",
                "x2iedn_metal",
                "c7g_medium",
                "c7g_large",
                "c7g_xlarge",
                "c7g_2xlarge",
                "c7g_4xlarge",
                "c7g_8xlarge",
                "c7g_12xlarge",
                "c7g_16xlarge",
                "mac2_metal",
                "c6id_large",
                "c6id_xlarge",
                "c6id_2xlarge",
                "c6id_4xlarge",
                "c6id_8xlarge",
                "c6id_12xlarge",
                "c6id_16xlarge",
                "c6id_24xlarge",
                "c6id_32xlarge",
                "c6id_metal",
                "m6id_large",
                "m6id_xlarge",
                "m6id_2xlarge",
                "m6id_4xlarge",
                "m6id_8xlarge",
                "m6id_12xlarge",
                "m6id_16xlarge",
                "m6id_24xlarge",
                "m6id_32xlarge",
                "m6id_metal",
                "r6id_large",
                "r6id_xlarge",
                "r6id_2xlarge",
                "r6id_4xlarge",
                "r6id_8xlarge",
                "r6id_12xlarge",
                "r6id_16xlarge",
                "r6id_24xlarge",
                "r6id_32xlarge",
                "r6id_metal",
                "r6a_large",
                "r6a_xlarge",
                "r6a_2xlarge",
                "r6a_4xlarge",
                "r6a_8xlarge",
                "r6a_12xlarge",
                "r6a_16xlarge",
                "r6a_24xlarge",
                "r6a_32xlarge",
                "r6a_48xlarge",
                "r6a_metal",
                "p4de_24xlarge",
                "u_3tb1_56xlarge",
                "u_18tb1_112xlarge",
                "u_24tb1_112xlarge",
                "trn1_2xlarge",
                "trn1_32xlarge",
                "hpc6id_32xlarge",
                "c6in_large",
                "c6in_xlarge",
                "c6in_2xlarge",
                "c6in_4xlarge",
                "c6in_8xlarge",
                "c6in_12xlarge",
                "c6in_16xlarge",
                "c6in_24xlarge",
                "c6in_32xlarge",
                "m6in_large",
                "m6in_xlarge",
                "m6in_2xlarge",
                "m6in_4xlarge",
                "m6in_8xlarge",
                "m6in_12xlarge",
                "m6in_16xlarge",
                "m6in_24xlarge",
                "m6in_32xlarge",
                "m6idn_large",
                "m6idn_xlarge",
                "m6idn_2xlarge",
                "m6idn_4xlarge",
                "m6idn_8xlarge",
                "m6idn_12xlarge",
                "m6idn_16xlarge",
                "m6idn_24xlarge",
                "m6idn_32xlarge",
                "r6in_large",
                "r6in_xlarge",
                "r6in_2xlarge",
                "r6in_4xlarge",
                "r6in_8xlarge",
                "r6in_12xlarge",
                "r6in_16xlarge",
                "r6in_24xlarge",
                "r6in_32xlarge",
                "r6idn_large",
                "r6idn_xlarge",
                "r6idn_2xlarge",
                "r6idn_4xlarge",
                "r6idn_8xlarge",
                "r6idn_12xlarge",
                "r6idn_16xlarge",
                "r6idn_24xlarge",
                "r6idn_32xlarge",
                "c7g_metal",
                "m7g_medium",
                "m7g_large",
                "m7g_xlarge",
                "m7g_2xlarge",
                "m7g_4xlarge",
                "m7g_8xlarge",
                "m7g_12xlarge",
                "m7g_16xlarge",
                "m7g_metal",
                "r7g_medium",
                "r7g_large",
                "r7g_xlarge",
                "r7g_2xlarge",
                "r7g_4xlarge",
                "r7g_8xlarge",
                "r7g_12xlarge",
                "r7g_16xlarge",
                "r7g_metal",
                "c6in_metal",
                "m6in_metal",
                "m6idn_metal",
                "r6in_metal",
                "r6idn_metal",
                "inf2_xlarge",
                "inf2_8xlarge",
                "inf2_24xlarge",
                "inf2_48xlarge",
                "trn1n_32xlarge",
                "i4g_large",
                "i4g_xlarge",
                "i4g_2xlarge",
                "i4g_4xlarge",
                "i4g_8xlarge",
                "i4g_16xlarge",
                "hpc7g_4xlarge",
                "hpc7g_8xlarge",
                "hpc7g_16xlarge",
                "c7gn_medium",
                "c7gn_large",
                "c7gn_xlarge",
                "c7gn_2xlarge",
                "c7gn_4xlarge",
                "c7gn_8xlarge",
                "c7gn_12xlarge",
                "c7gn_16xlarge",
                "p5_48xlarge",
                "m7i_large",
                "m7i_xlarge",
                "m7i_2xlarge",
                "m7i_4xlarge",
                "m7i_8xlarge",
                "m7i_12xlarge",
                "m7i_16xlarge",
                "m7i_24xlarge",
                "m7i_48xlarge",
                "m7i_flex_large",
                "m7i_flex_xlarge",
                "m7i_flex_2xlarge",
                "m7i_flex_4xlarge",
                "m7i_flex_8xlarge",
                "m7a_medium",
                "m7a_large",
                "m7a_xlarge",
                "m7a_2xlarge",
                "m7a_4xlarge",
                "m7a_8xlarge",
                "m7a_12xlarge",
                "m7a_16xlarge",
                "m7a_24xlarge",
                "m7a_32xlarge",
                "m7a_48xlarge",
                "m7a_metal_48xl",
                "hpc7a_12xlarge",
                "hpc7a_24xlarge",
                "hpc7a_48xlarge",
                "hpc7a_96xlarge",
                "c7gd_medium",
                "c7gd_large",
                "c7gd_xlarge",
                "c7gd_2xlarge",
                "c7gd_4xlarge",
                "c7gd_8xlarge",
                "c7gd_12xlarge",
                "c7gd_16xlarge",
                "m7gd_medium",
                "m7gd_large",
                "m7gd_xlarge",
                "m7gd_2xlarge",
                "m7gd_4xlarge",
                "m7gd_8xlarge",
                "m7gd_12xlarge",
                "m7gd_16xlarge",
                "r7gd_medium",
                "r7gd_large",
                "r7gd_xlarge",
                "r7gd_2xlarge",
                "r7gd_4xlarge",
                "r7gd_8xlarge",
                "r7gd_12xlarge",
                "r7gd_16xlarge",
                "r7a_medium",
                "r7a_large",
                "r7a_xlarge",
                "r7a_2xlarge",
                "r7a_4xlarge",
                "r7a_8xlarge",
                "r7a_12xlarge",
                "r7a_16xlarge",
                "r7a_24xlarge",
                "r7a_32xlarge",
                "r7a_48xlarge",
                "c7i_large",
                "c7i_xlarge",
                "c7i_2xlarge",
                "c7i_4xlarge",
                "c7i_8xlarge",
                "c7i_12xlarge",
                "c7i_16xlarge",
                "c7i_24xlarge",
                "c7i_48xlarge",
                "mac2_m2pro_metal",
                "r7iz_large",
                "r7iz_xlarge",
                "r7iz_2xlarge",
                "r7iz_4xlarge",
                "r7iz_8xlarge",
                "r7iz_12xlarge",
                "r7iz_16xlarge",
                "r7iz_32xlarge",
                "c7a_medium",
                "c7a_large",
                "c7a_xlarge",
                "c7a_2xlarge",
                "c7a_4xlarge",
                "c7a_8xlarge",
                "c7a_12xlarge",
                "c7a_16xlarge",
                "c7a_24xlarge",
                "c7a_32xlarge",
                "c7a_48xlarge",
                "c7a_metal_48xl",
                "r7a_metal_48xl",
                "r7i_large",
                "r7i_xlarge",
                "r7i_2xlarge",
                "r7i_4xlarge",
                "r7i_8xlarge",
                "r7i_12xlarge",
                "r7i_16xlarge",
                "r7i_24xlarge",
                "r7i_48xlarge",
                "dl2q_24xlarge",
                "mac2_m2_metal",
                "i4i_12xlarge",
                "i4i_24xlarge",
                "c7i_metal_24xl",
                "c7i_metal_48xl",
                "m7i_metal_24xl",
                "m7i_metal_48xl",
                "r7i_metal_24xl",
                "r7i_metal_48xl",
                "r7iz_metal_16xl",
                "r7iz_metal_32xl",
                "c7gd_metal",
                "m7gd_metal",
                "r7gd_metal",
                "g6_xlarge",
                "g6_2xlarge",
                "g6_4xlarge",
                "g6_8xlarge",
                "g6_12xlarge",
                "g6_16xlarge",
                "g6_24xlarge",
                "g6_48xlarge",
                "gr6_4xlarge",
                "gr6_8xlarge",
                "c7i_flex_large",
                "c7i_flex_xlarge",
                "c7i_flex_2xlarge",
                "c7i_flex_4xlarge",
                "c7i_flex_8xlarge",
                "u7i_12tb_224xlarge",
                "u7in_16tb_224xlarge",
                "u7in_24tb_224xlarge",
                "u7in_32tb_224xlarge",
                "u7ib_12tb_224xlarge",
                "c7gn_metal",
                "r8g_medium",
                "r8g_large",
                "r8g_xlarge",
                "r8g_2xlarge",
                "r8g_4xlarge",
                "r8g_8xlarge",
                "r8g_12xlarge",
                "r8g_16xlarge",
                "r8g_24xlarge",
                "r8g_48xlarge",
                "r8g_metal_24xl",
                "r8g_metal_48xl",
                "mac2_m1ultra_metal",
                "g6e_xlarge",
                "g6e_2xlarge",
                "g6e_4xlarge",
                "g6e_8xlarge",
                "g6e_12xlarge",
                "g6e_16xlarge",
                "g6e_24xlarge",
                "g6e_48xlarge",
                "c8g_medium",
                "c8g_large",
                "c8g_xlarge",
                "c8g_2xlarge",
                "c8g_4xlarge",
                "c8g_8xlarge",
                "c8g_12xlarge",
                "c8g_16xlarge",
                "c8g_24xlarge",
                "c8g_48xlarge",
                "c8g_metal_24xl",
                "c8g_metal_48xl",
                "m8g_medium",
                "m8g_large",
                "m8g_xlarge",
                "m8g_2xlarge",
                "m8g_4xlarge",
                "m8g_8xlarge",
                "m8g_12xlarge",
                "m8g_16xlarge",
                "m8g_24xlarge",
                "m8g_48xlarge",
                "m8g_metal_24xl",
                "m8g_metal_48xl",
                "x8g_medium",
                "x8g_large",
                "x8g_xlarge",
                "x8g_2xlarge",
                "x8g_4xlarge",
                "x8g_8xlarge",
                "x8g_12xlarge",
                "x8g_16xlarge",
                "x8g_24xlarge",
                "x8g_48xlarge",
                "x8g_metal_24xl",
                "x8g_metal_48xl",
                "i7ie_large",
                "i7ie_xlarge",
                "i7ie_2xlarge",
                "i7ie_3xlarge",
                "i7ie_6xlarge",
                "i7ie_12xlarge",
                "i7ie_18xlarge",
                "i7ie_24xlarge",
                "i7ie_48xlarge",
                "i8g_large",
                "i8g_xlarge",
                "i8g_2xlarge",
                "i8g_4xlarge",
                "i8g_8xlarge",
                "i8g_12xlarge",
                "i8g_16xlarge",
                "i8g_24xlarge",
                "i8g_metal_24xl",
                "u7i_6tb_112xlarge",
                "u7i_8tb_112xlarge",
                "u7inh_32tb_480xlarge",
                "p5e_48xlarge",
                "p5en_48xlarge",
                "f2_12xlarge",
                "f2_48xlarge",
                "trn2_48xlarge"
            ]
        },
        "DoubleWithConstraints": {
            "type": "number",
            "format": "double"
        },
        "IntegerWithConstraints": {
            "type": "integer",
            "format": "int32"
        },
        "CreateCapacityReservationFleetRequest": {
            "type": "object",
            "properties": {
                "AllocationStrategy": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "InstanceTypeSpecifications": {
                    "$ref": "#/$defs/ReservationFleetInstanceSpecificationList"
                },
                "Tenancy": {
                    "$ref": "#/$defs/FleetCapacityReservationTenancy"
                },
                "TotalTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "EndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "InstanceMatchCriteria": {
                    "$ref": "#/$defs/FleetInstanceMatchCriteria"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ReservationFleetInstanceSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservationFleetInstanceSpecification"
            }
        },
        "ReservationFleetInstanceSpecification": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "InstancePlatform": {
                    "$ref": "#/$defs/CapacityReservationInstancePlatform"
                },
                "Weight": {
                    "$ref": "#/$defs/DoubleWithConstraints"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/String"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "Priority": {
                    "$ref": "#/$defs/IntegerWithConstraints"
                }
            }
        },
        "CreateCarrierGatewayResult": {
            "type": "object",
            "properties": {
                "CarrierGateway": {
                    "$ref": "#/$defs/CarrierGateway"
                }
            }
        },
        "CarrierGateway": {
            "type": "object",
            "properties": {
                "CarrierGatewayId": {
                    "$ref": "#/$defs/CarrierGatewayId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "State": {
                    "$ref": "#/$defs/CarrierGatewayState"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CarrierGatewayId": {
            "type": "string"
        },
        "CarrierGatewayState": {
            "enum": [
                "pending",
                "available",
                "deleting",
                "deleted"
            ]
        },
        "CreateCarrierGatewayRequest": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateClientVpnEndpointResult": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ClientVpnEndpointStatus"
                },
                "DnsName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientVpnEndpointStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/ClientVpnEndpointStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientVpnEndpointStatusCode": {
            "enum": [
                "pending_associate",
                "available",
                "deleting",
                "deleted"
            ]
        },
        "CreateClientVpnEndpointRequest": {
            "type": "object",
            "properties": {
                "ClientCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "ServerCertificateArn": {
                    "$ref": "#/$defs/String"
                },
                "AuthenticationOptions": {
                    "$ref": "#/$defs/ClientVpnAuthenticationRequestList"
                },
                "ConnectionLogOptions": {
                    "$ref": "#/$defs/ConnectionLogOptions"
                },
                "DnsServers": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "TransportProtocol": {
                    "$ref": "#/$defs/TransportProtocol"
                },
                "VpnPort": {
                    "$ref": "#/$defs/Integer"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "SplitTunnel": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/ClientVpnSecurityGroupIdSet"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SelfServicePortal": {
                    "$ref": "#/$defs/SelfServicePortal"
                },
                "ClientConnectOptions": {
                    "$ref": "#/$defs/ClientConnectOptions"
                },
                "SessionTimeoutHours": {
                    "$ref": "#/$defs/Integer"
                },
                "ClientLoginBannerOptions": {
                    "$ref": "#/$defs/ClientLoginBannerOptions"
                },
                "DisconnectOnSessionTimeout": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ClientVpnAuthenticationRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClientVpnAuthenticationRequest"
            }
        },
        "ClientVpnAuthenticationRequest": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ClientVpnAuthenticationType"
                },
                "ActiveDirectory": {
                    "$ref": "#/$defs/DirectoryServiceAuthenticationRequest"
                },
                "MutualAuthentication": {
                    "$ref": "#/$defs/CertificateAuthenticationRequest"
                },
                "FederatedAuthentication": {
                    "$ref": "#/$defs/FederatedAuthenticationRequest"
                }
            }
        },
        "ClientVpnAuthenticationType": {
            "enum": [
                "certificate_authentication",
                "directory_service_authentication",
                "federated_authentication"
            ]
        },
        "DirectoryServiceAuthenticationRequest": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CertificateAuthenticationRequest": {
            "type": "object",
            "properties": {
                "ClientRootCertificateChainArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FederatedAuthenticationRequest": {
            "type": "object",
            "properties": {
                "SAMLProviderArn": {
                    "$ref": "#/$defs/String"
                },
                "SelfServiceSAMLProviderArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ConnectionLogOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "CloudwatchLogGroup": {
                    "$ref": "#/$defs/String"
                },
                "CloudwatchLogStream": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransportProtocol": {
            "enum": [
                "tcp",
                "udp"
            ]
        },
        "SelfServicePortal": {
            "enum": [
                "enabled",
                "disabled"
            ]
        },
        "ClientConnectOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "LambdaFunctionArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientLoginBannerOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "BannerText": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateClientVpnRouteResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ClientVpnRouteStatus"
                }
            }
        },
        "ClientVpnRouteStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/ClientVpnRouteStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientVpnRouteStatusCode": {
            "enum": [
                "creating",
                "active",
                "failed",
                "deleting"
            ]
        },
        "CreateClientVpnRouteRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "TargetVpcSubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateCoipCidrResult": {
            "type": "object",
            "properties": {
                "CoipCidr": {
                    "$ref": "#/$defs/CoipCidr"
                }
            }
        },
        "CoipCidr": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "CoipPoolId": {
                    "$ref": "#/$defs/Ipv4PoolCoipId"
                },
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv4PoolCoipId": {
            "type": "string"
        },
        "CreateCoipCidrRequest": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "CoipPoolId": {
                    "$ref": "#/$defs/Ipv4PoolCoipId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateCoipPoolResult": {
            "type": "object",
            "properties": {
                "CoipPool": {
                    "$ref": "#/$defs/CoipPool"
                }
            }
        },
        "CoipPool": {
            "type": "object",
            "properties": {
                "PoolId": {
                    "$ref": "#/$defs/Ipv4PoolCoipId"
                },
                "PoolCidrs": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayRoutetableId"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "PoolArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "LocalGatewayRoutetableId": {
            "type": "string"
        },
        "CreateCoipPoolRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayRoutetableId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateCustomerGatewayResult": {
            "type": "object",
            "properties": {
                "CustomerGateway": {
                    "$ref": "#/$defs/CustomerGateway"
                }
            }
        },
        "CustomerGateway": {
            "type": "object",
            "properties": {
                "CertificateArn": {
                    "$ref": "#/$defs/String"
                },
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "BgpAsnExtended": {
                    "$ref": "#/$defs/String"
                },
                "CustomerGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "IpAddress": {
                    "$ref": "#/$defs/String"
                },
                "BgpAsn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateCustomerGatewayRequest": {
            "type": "object",
            "properties": {
                "BgpAsn": {
                    "$ref": "#/$defs/Integer"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                },
                "CertificateArn": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/GatewayType"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "IpAddress": {
                    "$ref": "#/$defs/String"
                },
                "BgpAsnExtended": {
                    "$ref": "#/$defs/Long"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GatewayType": {
            "enum": [
                "ipsec_1"
            ]
        },
        "CreateDefaultSubnetResult": {
            "type": "object",
            "properties": {
                "Subnet": {
                    "$ref": "#/$defs/Subnet"
                }
            }
        },
        "Subnet": {
            "type": "object",
            "properties": {
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/String"
                },
                "EnableLniAtDeviceIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "MapCustomerOwnedIpOnLaunch": {
                    "$ref": "#/$defs/Boolean"
                },
                "CustomerOwnedIpv4Pool": {
                    "$ref": "#/$defs/CoipPoolId"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "AssignIpv6AddressOnCreation": {
                    "$ref": "#/$defs/Boolean"
                },
                "Ipv6CidrBlockAssociationSet": {
                    "$ref": "#/$defs/SubnetIpv6CidrBlockAssociationSet"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SubnetArn": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "EnableDns64": {
                    "$ref": "#/$defs/Boolean"
                },
                "Ipv6Native": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrivateDnsNameOptionsOnLaunch": {
                    "$ref": "#/$defs/PrivateDnsNameOptionsOnLaunch"
                },
                "BlockPublicAccessStates": {
                    "$ref": "#/$defs/BlockPublicAccessStates"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/SubnetState"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "AvailableIpAddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "DefaultForAz": {
                    "$ref": "#/$defs/Boolean"
                },
                "MapPublicIpOnLaunch": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CoipPoolId": {
            "type": "string"
        },
        "SubnetIpv6CidrBlockAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetIpv6CidrBlockAssociation"
            }
        },
        "PrivateDnsNameOptionsOnLaunch": {
            "type": "object",
            "properties": {
                "HostnameType": {
                    "$ref": "#/$defs/HostnameType"
                },
                "EnableResourceNameDnsARecord": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnableResourceNameDnsAAAARecord": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "HostnameType": {
            "enum": [
                "ip_name",
                "resource_name"
            ]
        },
        "BlockPublicAccessStates": {
            "type": "object",
            "properties": {
                "InternetGatewayBlockMode": {
                    "$ref": "#/$defs/BlockPublicAccessMode"
                }
            }
        },
        "BlockPublicAccessMode": {
            "enum": [
                "off",
                "block_bidirectional",
                "block_ingress"
            ]
        },
        "SubnetState": {
            "enum": [
                "pending",
                "available",
                "unavailable"
            ]
        },
        "CreateDefaultSubnetRequest": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZoneName"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Ipv6Native": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateDefaultVpcResult": {
            "type": "object",
            "properties": {
                "Vpc": {
                    "$ref": "#/$defs/Vpc"
                }
            }
        },
        "Vpc": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceTenancy": {
                    "$ref": "#/$defs/Tenancy"
                },
                "Ipv6CidrBlockAssociationSet": {
                    "$ref": "#/$defs/VpcIpv6CidrBlockAssociationSet"
                },
                "CidrBlockAssociationSet": {
                    "$ref": "#/$defs/VpcCidrBlockAssociationSet"
                },
                "IsDefault": {
                    "$ref": "#/$defs/Boolean"
                },
                "EncryptionControl": {
                    "$ref": "#/$defs/VpcEncryptionControl"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "BlockPublicAccessStates": {
                    "$ref": "#/$defs/BlockPublicAccessStates"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/VpcState"
                },
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "DhcpOptionsId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Tenancy": {
            "enum": [
                "default",
                "dedicated",
                "host"
            ]
        },
        "VpcIpv6CidrBlockAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcIpv6CidrBlockAssociation"
            }
        },
        "VpcCidrBlockAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcCidrBlockAssociation"
            }
        },
        "VpcEncryptionControl": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "VpcEncryptionControlId": {
                    "$ref": "#/$defs/VpcEncryptionControlId"
                },
                "Mode": {
                    "$ref": "#/$defs/VpcEncryptionControlMode"
                },
                "State": {
                    "$ref": "#/$defs/VpcEncryptionControlState"
                },
                "StateMessage": {
                    "$ref": "#/$defs/String"
                },
                "ResourceExclusions": {
                    "$ref": "#/$defs/VpcEncryptionControlExclusions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "VpcEncryptionControlId": {
            "type": "string"
        },
        "VpcEncryptionControlMode": {
            "enum": [
                "monitor",
                "enforce"
            ]
        },
        "VpcEncryptionControlState": {
            "enum": [
                "enforce_in_progress",
                "monitor_in_progress",
                "enforce_failed",
                "monitor_failed",
                "deleting",
                "deleted",
                "available"
            ]
        },
        "VpcEncryptionControlExclusions": {
            "type": "object",
            "properties": {
                "InternetGateway": {
                    "$ref": "#/$defs/VpcEncryptionControlExclusion"
                },
                "EgressOnlyInternetGateway": {
                    "$ref": "#/$defs/VpcEncryptionControlExclusion"
                },
                "NatGateway": {
                    "$ref": "#/$defs/VpcEncryptionControlExclusion"
                },
                "VirtualPrivateGateway": {
                    "$ref": "#/$defs/VpcEncryptionControlExclusion"
                },
                "VpcPeering": {
                    "$ref": "#/$defs/VpcEncryptionControlExclusion"
                }
            }
        },
        "VpcEncryptionControlExclusion": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/VpcEncryptionControlExclusionState"
                },
                "StateMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcEncryptionControlExclusionState": {
            "enum": [
                "enabling",
                "enabled",
                "disabling",
                "disabled"
            ]
        },
        "VpcState": {
            "enum": [
                "pending",
                "available"
            ]
        },
        "CreateDefaultVpcRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateDhcpOptionsResult": {
            "type": "object",
            "properties": {
                "DhcpOptions": {
                    "$ref": "#/$defs/DhcpOptions"
                }
            }
        },
        "DhcpOptions": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "DhcpOptionsId": {
                    "$ref": "#/$defs/String"
                },
                "DhcpConfigurations": {
                    "$ref": "#/$defs/DhcpConfigurationList"
                }
            }
        },
        "DhcpConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DhcpConfiguration"
            }
        },
        "DhcpConfiguration": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Values": {
                    "$ref": "#/$defs/DhcpConfigurationValueList"
                }
            }
        },
        "DhcpConfigurationValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeValue"
            }
        },
        "AttributeValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateDhcpOptionsRequest": {
            "type": "object",
            "properties": {
                "DhcpConfigurations": {
                    "$ref": "#/$defs/NewDhcpConfigurationList"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "NewDhcpConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NewDhcpConfiguration"
            }
        },
        "NewDhcpConfiguration": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Values": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "CreateEgressOnlyInternetGatewayResult": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "EgressOnlyInternetGateway": {
                    "$ref": "#/$defs/EgressOnlyInternetGateway"
                }
            }
        },
        "EgressOnlyInternetGateway": {
            "type": "object",
            "properties": {
                "Attachments": {
                    "$ref": "#/$defs/InternetGatewayAttachmentList"
                },
                "EgressOnlyInternetGatewayId": {
                    "$ref": "#/$defs/EgressOnlyInternetGatewayId"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "InternetGatewayAttachmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InternetGatewayAttachment"
            }
        },
        "InternetGatewayAttachment": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/AttachmentStatus"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EgressOnlyInternetGatewayId": {
            "type": "string"
        },
        "CreateEgressOnlyInternetGatewayRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "CreateFleetResult": {
            "type": "object",
            "properties": {
                "FleetId": {
                    "$ref": "#/$defs/FleetId"
                },
                "Errors": {
                    "$ref": "#/$defs/CreateFleetErrorsSet"
                },
                "Instances": {
                    "$ref": "#/$defs/CreateFleetInstancesSet"
                }
            }
        },
        "FleetId": {
            "type": "string"
        },
        "CreateFleetErrorsSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CreateFleetError"
            }
        },
        "CreateFleetError": {
            "type": "object",
            "properties": {
                "LaunchTemplateAndOverrides": {
                    "$ref": "#/$defs/LaunchTemplateAndOverridesResponse"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/InstanceLifecycle"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/String"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateAndOverridesResponse": {
            "type": "object",
            "properties": {
                "LaunchTemplateSpecification": {
                    "$ref": "#/$defs/FleetLaunchTemplateSpecification"
                },
                "Overrides": {
                    "$ref": "#/$defs/FleetLaunchTemplateOverrides"
                }
            }
        },
        "FleetLaunchTemplateSpecification": {
            "type": "object",
            "properties": {
                "LaunchTemplateId": {
                    "$ref": "#/$defs/String"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                },
                "Version": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateName": {
            "type": "string"
        },
        "FleetLaunchTemplateOverrides": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "MaxPrice": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "WeightedCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "Priority": {
                    "$ref": "#/$defs/Double"
                },
                "Placement": {
                    "$ref": "#/$defs/PlacementResponse"
                },
                "InstanceRequirements": {
                    "$ref": "#/$defs/InstanceRequirements"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappingResponseList"
                }
            }
        },
        "PlacementResponse": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/PlacementGroupName"
                }
            }
        },
        "PlacementGroupName": {
            "type": "string"
        },
        "InstanceRequirements": {
            "type": "object",
            "properties": {
                "VCpuCount": {
                    "$ref": "#/$defs/VCpuCountRange"
                },
                "MemoryMiB": {
                    "$ref": "#/$defs/MemoryMiB"
                },
                "CpuManufacturers": {
                    "$ref": "#/$defs/CpuManufacturerSet"
                },
                "MemoryGiBPerVCpu": {
                    "$ref": "#/$defs/MemoryGiBPerVCpu"
                },
                "ExcludedInstanceTypes": {
                    "$ref": "#/$defs/ExcludedInstanceTypeSet"
                },
                "InstanceGenerations": {
                    "$ref": "#/$defs/InstanceGenerationSet"
                },
                "SpotMaxPricePercentageOverLowestPrice": {
                    "$ref": "#/$defs/Integer"
                },
                "OnDemandMaxPricePercentageOverLowestPrice": {
                    "$ref": "#/$defs/Integer"
                },
                "BareMetal": {
                    "$ref": "#/$defs/BareMetal"
                },
                "BurstablePerformance": {
                    "$ref": "#/$defs/BurstablePerformance"
                },
                "RequireHibernateSupport": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceCount": {
                    "$ref": "#/$defs/NetworkInterfaceCount"
                },
                "LocalStorage": {
                    "$ref": "#/$defs/LocalStorage"
                },
                "LocalStorageTypes": {
                    "$ref": "#/$defs/LocalStorageTypeSet"
                },
                "TotalLocalStorageGB": {
                    "$ref": "#/$defs/TotalLocalStorageGB"
                },
                "BaselineEbsBandwidthMbps": {
                    "$ref": "#/$defs/BaselineEbsBandwidthMbps"
                },
                "AcceleratorTypes": {
                    "$ref": "#/$defs/AcceleratorTypeSet"
                },
                "AcceleratorCount": {
                    "$ref": "#/$defs/AcceleratorCount"
                },
                "AcceleratorManufacturers": {
                    "$ref": "#/$defs/AcceleratorManufacturerSet"
                },
                "AcceleratorNames": {
                    "$ref": "#/$defs/AcceleratorNameSet"
                },
                "AcceleratorTotalMemoryMiB": {
                    "$ref": "#/$defs/AcceleratorTotalMemoryMiB"
                },
                "NetworkBandwidthGbps": {
                    "$ref": "#/$defs/NetworkBandwidthGbps"
                },
                "AllowedInstanceTypes": {
                    "$ref": "#/$defs/AllowedInstanceTypeSet"
                },
                "MaxSpotPriceAsPercentageOfOptimalOnDemandPrice": {
                    "$ref": "#/$defs/Integer"
                },
                "BaselinePerformanceFactors": {
                    "$ref": "#/$defs/BaselinePerformanceFactors"
                }
            }
        },
        "VCpuCountRange": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "MemoryMiB": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "CpuManufacturerSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CpuManufacturer"
            }
        },
        "CpuManufacturer": {
            "enum": [
                "INTEL",
                "AMD",
                "AMAZON_WEB_SERVICES",
                "APPLE"
            ]
        },
        "MemoryGiBPerVCpu": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Double"
                },
                "Max": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "ExcludedInstanceTypeSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExcludedInstanceType"
            }
        },
        "ExcludedInstanceType": {
            "type": "string"
        },
        "InstanceGenerationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceGeneration"
            }
        },
        "InstanceGeneration": {
            "enum": [
                "CURRENT",
                "PREVIOUS"
            ]
        },
        "BareMetal": {
            "enum": [
                "INCLUDED",
                "REQUIRED",
                "EXCLUDED"
            ]
        },
        "BurstablePerformance": {
            "enum": [
                "INCLUDED",
                "REQUIRED",
                "EXCLUDED"
            ]
        },
        "NetworkInterfaceCount": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "LocalStorage": {
            "enum": [
                "INCLUDED",
                "REQUIRED",
                "EXCLUDED"
            ]
        },
        "LocalStorageTypeSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalStorageType"
            }
        },
        "LocalStorageType": {
            "enum": [
                "HDD",
                "SSD"
            ]
        },
        "TotalLocalStorageGB": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Double"
                },
                "Max": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "BaselineEbsBandwidthMbps": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "AcceleratorTypeSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AcceleratorType"
            }
        },
        "AcceleratorType": {
            "enum": [
                "GPU",
                "FPGA",
                "INFERENCE"
            ]
        },
        "AcceleratorCount": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "AcceleratorManufacturerSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AcceleratorManufacturer"
            }
        },
        "AcceleratorManufacturer": {
            "enum": [
                "AMAZON_WEB_SERVICES",
                "AMD",
                "NVIDIA",
                "XILINX",
                "HABANA"
            ]
        },
        "AcceleratorNameSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AcceleratorName"
            }
        },
        "AcceleratorName": {
            "enum": [
                "A100",
                "INFERENTIA",
                "K520",
                "K80",
                "M60",
                "RADEON_PRO_V520",
                "T4",
                "VU9P",
                "V100",
                "A10G",
                "H100",
                "T4G"
            ]
        },
        "AcceleratorTotalMemoryMiB": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "NetworkBandwidthGbps": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Double"
                },
                "Max": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "AllowedInstanceTypeSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowedInstanceType"
            }
        },
        "AllowedInstanceType": {
            "type": "string"
        },
        "BaselinePerformanceFactors": {
            "type": "object",
            "properties": {
                "Cpu": {
                    "$ref": "#/$defs/CpuPerformanceFactor"
                }
            }
        },
        "CpuPerformanceFactor": {
            "type": "object",
            "properties": {
                "References": {
                    "$ref": "#/$defs/PerformanceFactorReferenceSet"
                }
            }
        },
        "PerformanceFactorReferenceSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PerformanceFactorReference"
            }
        },
        "PerformanceFactorReference": {
            "type": "object",
            "properties": {
                "InstanceFamily": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BlockDeviceMappingResponseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BlockDeviceMappingResponse"
            }
        },
        "BlockDeviceMappingResponse": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "VirtualName": {
                    "$ref": "#/$defs/String"
                },
                "Ebs": {
                    "$ref": "#/$defs/EbsBlockDeviceResponse"
                },
                "NoDevice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EbsBlockDeviceResponse": {
            "type": "object",
            "properties": {
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Iops": {
                    "$ref": "#/$defs/Integer"
                },
                "Throughput": {
                    "$ref": "#/$defs/Integer"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "VolumeType": {
                    "$ref": "#/$defs/VolumeType"
                }
            }
        },
        "SnapshotId": {
            "type": "string"
        },
        "VolumeType": {
            "enum": [
                "standard",
                "io1",
                "io2",
                "gp2",
                "sc1",
                "st1",
                "gp3"
            ]
        },
        "InstanceLifecycle": {
            "enum": [
                "SPOT",
                "ON_DEMAND"
            ]
        },
        "CreateFleetInstancesSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CreateFleetInstance"
            }
        },
        "CreateFleetInstance": {
            "type": "object",
            "properties": {
                "LaunchTemplateAndOverrides": {
                    "$ref": "#/$defs/LaunchTemplateAndOverridesResponse"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/InstanceLifecycle"
                },
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdsSet"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "Platform": {
                    "$ref": "#/$defs/PlatformValues"
                }
            }
        },
        "InstanceIdsSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceId"
            }
        },
        "PlatformValues": {
            "enum": [
                "Windows"
            ]
        },
        "CreateFleetRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "SpotOptions": {
                    "$ref": "#/$defs/SpotOptionsRequest"
                },
                "OnDemandOptions": {
                    "$ref": "#/$defs/OnDemandOptionsRequest"
                },
                "ExcessCapacityTerminationPolicy": {
                    "$ref": "#/$defs/FleetExcessCapacityTerminationPolicy"
                },
                "LaunchTemplateConfigs": {
                    "$ref": "#/$defs/FleetLaunchTemplateConfigListRequest"
                },
                "TargetCapacitySpecification": {
                    "$ref": "#/$defs/TargetCapacitySpecificationRequest"
                },
                "TerminateInstancesWithExpiration": {
                    "$ref": "#/$defs/Boolean"
                },
                "Type": {
                    "$ref": "#/$defs/FleetType"
                },
                "ValidFrom": {
                    "$ref": "#/$defs/DateTime"
                },
                "ValidUntil": {
                    "$ref": "#/$defs/DateTime"
                },
                "ReplaceUnhealthyInstances": {
                    "$ref": "#/$defs/Boolean"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "Context": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SpotOptionsRequest": {
            "type": "object",
            "properties": {
                "AllocationStrategy": {
                    "$ref": "#/$defs/SpotAllocationStrategy"
                },
                "MaintenanceStrategies": {
                    "$ref": "#/$defs/FleetSpotMaintenanceStrategiesRequest"
                },
                "InstanceInterruptionBehavior": {
                    "$ref": "#/$defs/SpotInstanceInterruptionBehavior"
                },
                "InstancePoolsToUseCount": {
                    "$ref": "#/$defs/Integer"
                },
                "SingleInstanceType": {
                    "$ref": "#/$defs/Boolean"
                },
                "SingleAvailabilityZone": {
                    "$ref": "#/$defs/Boolean"
                },
                "MinTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "MaxTotalPrice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SpotAllocationStrategy": {
            "enum": [
                "LOWEST_PRICE",
                "DIVERSIFIED",
                "CAPACITY_OPTIMIZED",
                "CAPACITY_OPTIMIZED_PRIORITIZED",
                "PRICE_CAPACITY_OPTIMIZED"
            ]
        },
        "FleetSpotMaintenanceStrategiesRequest": {
            "type": "object",
            "properties": {
                "CapacityRebalance": {
                    "$ref": "#/$defs/FleetSpotCapacityRebalanceRequest"
                }
            }
        },
        "FleetSpotCapacityRebalanceRequest": {
            "type": "object",
            "properties": {
                "ReplacementStrategy": {
                    "$ref": "#/$defs/FleetReplacementStrategy"
                },
                "TerminationDelay": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "FleetReplacementStrategy": {
            "enum": [
                "LAUNCH",
                "LAUNCH_BEFORE_TERMINATE"
            ]
        },
        "SpotInstanceInterruptionBehavior": {
            "enum": [
                "hibernate",
                "stop",
                "terminate"
            ]
        },
        "OnDemandOptionsRequest": {
            "type": "object",
            "properties": {
                "AllocationStrategy": {
                    "$ref": "#/$defs/FleetOnDemandAllocationStrategy"
                },
                "CapacityReservationOptions": {
                    "$ref": "#/$defs/CapacityReservationOptionsRequest"
                },
                "SingleInstanceType": {
                    "$ref": "#/$defs/Boolean"
                },
                "SingleAvailabilityZone": {
                    "$ref": "#/$defs/Boolean"
                },
                "MinTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "MaxTotalPrice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FleetOnDemandAllocationStrategy": {
            "enum": [
                "LOWEST_PRICE",
                "PRIORITIZED"
            ]
        },
        "CapacityReservationOptionsRequest": {
            "type": "object",
            "properties": {
                "UsageStrategy": {
                    "$ref": "#/$defs/FleetCapacityReservationUsageStrategy"
                }
            }
        },
        "FleetCapacityReservationUsageStrategy": {
            "enum": [
                "USE_CAPACITY_RESERVATIONS_FIRST"
            ]
        },
        "FleetExcessCapacityTerminationPolicy": {
            "enum": [
                "NO_TERMINATION",
                "TERMINATION"
            ]
        },
        "FleetLaunchTemplateConfigListRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FleetLaunchTemplateConfigRequest"
            }
        },
        "FleetLaunchTemplateConfigRequest": {
            "type": "object",
            "properties": {
                "LaunchTemplateSpecification": {
                    "$ref": "#/$defs/FleetLaunchTemplateSpecificationRequest"
                },
                "Overrides": {
                    "$ref": "#/$defs/FleetLaunchTemplateOverridesListRequest"
                }
            }
        },
        "FleetLaunchTemplateSpecificationRequest": {
            "type": "object",
            "properties": {
                "LaunchTemplateId": {
                    "$ref": "#/$defs/LaunchTemplateId"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                },
                "Version": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateId": {
            "type": "string"
        },
        "FleetLaunchTemplateOverridesListRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FleetLaunchTemplateOverridesRequest"
            }
        },
        "FleetLaunchTemplateOverridesRequest": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "MaxPrice": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "WeightedCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "Priority": {
                    "$ref": "#/$defs/Double"
                },
                "Placement": {
                    "$ref": "#/$defs/Placement"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/FleetBlockDeviceMappingRequestList"
                },
                "InstanceRequirements": {
                    "$ref": "#/$defs/InstanceRequirementsRequest"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Placement": {
            "type": "object",
            "properties": {
                "Affinity": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/PlacementGroupName"
                },
                "PartitionNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "HostId": {
                    "$ref": "#/$defs/String"
                },
                "Tenancy": {
                    "$ref": "#/$defs/Tenancy"
                },
                "SpreadDomain": {
                    "$ref": "#/$defs/String"
                },
                "HostResourceGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "GroupId": {
                    "$ref": "#/$defs/PlacementGroupId"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PlacementGroupId": {
            "type": "string"
        },
        "FleetBlockDeviceMappingRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FleetBlockDeviceMappingRequest"
            }
        },
        "FleetBlockDeviceMappingRequest": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "VirtualName": {
                    "$ref": "#/$defs/String"
                },
                "Ebs": {
                    "$ref": "#/$defs/FleetEbsBlockDeviceRequest"
                },
                "NoDevice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FleetEbsBlockDeviceRequest": {
            "type": "object",
            "properties": {
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Iops": {
                    "$ref": "#/$defs/Integer"
                },
                "Throughput": {
                    "$ref": "#/$defs/Integer"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "VolumeType": {
                    "$ref": "#/$defs/VolumeType"
                }
            }
        },
        "InstanceRequirementsRequest": {
            "type": "object",
            "properties": {
                "VCpuCount": {
                    "$ref": "#/$defs/VCpuCountRangeRequest"
                },
                "MemoryMiB": {
                    "$ref": "#/$defs/MemoryMiBRequest"
                },
                "CpuManufacturers": {
                    "$ref": "#/$defs/CpuManufacturerSet"
                },
                "MemoryGiBPerVCpu": {
                    "$ref": "#/$defs/MemoryGiBPerVCpuRequest"
                },
                "ExcludedInstanceTypes": {
                    "$ref": "#/$defs/ExcludedInstanceTypeSet"
                },
                "InstanceGenerations": {
                    "$ref": "#/$defs/InstanceGenerationSet"
                },
                "SpotMaxPricePercentageOverLowestPrice": {
                    "$ref": "#/$defs/Integer"
                },
                "OnDemandMaxPricePercentageOverLowestPrice": {
                    "$ref": "#/$defs/Integer"
                },
                "BareMetal": {
                    "$ref": "#/$defs/BareMetal"
                },
                "BurstablePerformance": {
                    "$ref": "#/$defs/BurstablePerformance"
                },
                "RequireHibernateSupport": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceCount": {
                    "$ref": "#/$defs/NetworkInterfaceCountRequest"
                },
                "LocalStorage": {
                    "$ref": "#/$defs/LocalStorage"
                },
                "LocalStorageTypes": {
                    "$ref": "#/$defs/LocalStorageTypeSet"
                },
                "TotalLocalStorageGB": {
                    "$ref": "#/$defs/TotalLocalStorageGBRequest"
                },
                "BaselineEbsBandwidthMbps": {
                    "$ref": "#/$defs/BaselineEbsBandwidthMbpsRequest"
                },
                "AcceleratorTypes": {
                    "$ref": "#/$defs/AcceleratorTypeSet"
                },
                "AcceleratorCount": {
                    "$ref": "#/$defs/AcceleratorCountRequest"
                },
                "AcceleratorManufacturers": {
                    "$ref": "#/$defs/AcceleratorManufacturerSet"
                },
                "AcceleratorNames": {
                    "$ref": "#/$defs/AcceleratorNameSet"
                },
                "AcceleratorTotalMemoryMiB": {
                    "$ref": "#/$defs/AcceleratorTotalMemoryMiBRequest"
                },
                "NetworkBandwidthGbps": {
                    "$ref": "#/$defs/NetworkBandwidthGbpsRequest"
                },
                "AllowedInstanceTypes": {
                    "$ref": "#/$defs/AllowedInstanceTypeSet"
                },
                "MaxSpotPriceAsPercentageOfOptimalOnDemandPrice": {
                    "$ref": "#/$defs/Integer"
                },
                "BaselinePerformanceFactors": {
                    "$ref": "#/$defs/BaselinePerformanceFactorsRequest"
                }
            }
        },
        "VCpuCountRangeRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "MemoryMiBRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "MemoryGiBPerVCpuRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Double"
                },
                "Max": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "NetworkInterfaceCountRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "TotalLocalStorageGBRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Double"
                },
                "Max": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "BaselineEbsBandwidthMbpsRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "AcceleratorCountRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "AcceleratorTotalMemoryMiBRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Integer"
                },
                "Max": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "NetworkBandwidthGbpsRequest": {
            "type": "object",
            "properties": {
                "Min": {
                    "$ref": "#/$defs/Double"
                },
                "Max": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "BaselinePerformanceFactorsRequest": {
            "type": "object",
            "properties": {
                "Cpu": {
                    "$ref": "#/$defs/CpuPerformanceFactorRequest"
                }
            }
        },
        "CpuPerformanceFactorRequest": {
            "type": "object",
            "properties": {
                "References": {
                    "$ref": "#/$defs/PerformanceFactorReferenceSetRequest"
                }
            }
        },
        "PerformanceFactorReferenceSetRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PerformanceFactorReferenceRequest"
            }
        },
        "PerformanceFactorReferenceRequest": {
            "type": "object",
            "properties": {
                "InstanceFamily": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TargetCapacitySpecificationRequest": {
            "type": "object",
            "properties": {
                "TotalTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "OnDemandTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "SpotTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "DefaultTargetCapacityType": {
                    "$ref": "#/$defs/DefaultTargetCapacityType"
                },
                "TargetCapacityUnitType": {
                    "$ref": "#/$defs/TargetCapacityUnitType"
                }
            }
        },
        "DefaultTargetCapacityType": {
            "enum": [
                "SPOT",
                "ON_DEMAND",
                "CAPACITY_BLOCK"
            ]
        },
        "TargetCapacityUnitType": {
            "enum": [
                "VCPU",
                "MEMORY_MIB",
                "UNITS"
            ]
        },
        "FleetType": {
            "enum": [
                "REQUEST",
                "MAINTAIN",
                "INSTANT"
            ]
        },
        "CreateFlowLogsResult": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "FlowLogIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Unsuccessful": {
                    "$ref": "#/$defs/UnsuccessfulItemSet"
                }
            }
        },
        "CreateFlowLogsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DeliverLogsPermissionArn": {
                    "$ref": "#/$defs/String"
                },
                "DeliverCrossAccountRole": {
                    "$ref": "#/$defs/String"
                },
                "LogGroupName": {
                    "$ref": "#/$defs/String"
                },
                "ResourceIds": {
                    "$ref": "#/$defs/FlowLogResourceIds"
                },
                "ResourceType": {
                    "$ref": "#/$defs/FlowLogsResourceType"
                },
                "TrafficType": {
                    "$ref": "#/$defs/TrafficType"
                },
                "LogDestinationType": {
                    "$ref": "#/$defs/LogDestinationType"
                },
                "LogDestination": {
                    "$ref": "#/$defs/String"
                },
                "LogFormat": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "MaxAggregationInterval": {
                    "$ref": "#/$defs/Integer"
                },
                "DestinationOptions": {
                    "$ref": "#/$defs/DestinationOptionsRequest"
                }
            }
        },
        "FlowLogResourceIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FlowLogResourceId"
            }
        },
        "FlowLogResourceId": {
            "type": "string"
        },
        "FlowLogsResourceType": {
            "enum": [
                "VPC",
                "Subnet",
                "NetworkInterface",
                "TransitGateway",
                "TransitGatewayAttachment"
            ]
        },
        "TrafficType": {
            "enum": [
                "ACCEPT",
                "REJECT",
                "ALL"
            ]
        },
        "LogDestinationType": {
            "enum": [
                "cloud_watch_logs",
                "s3",
                "kinesis_data_firehose"
            ]
        },
        "DestinationOptionsRequest": {
            "type": "object",
            "properties": {
                "FileFormat": {
                    "$ref": "#/$defs/DestinationFileFormat"
                },
                "HiveCompatiblePartitions": {
                    "$ref": "#/$defs/Boolean"
                },
                "PerHourPartition": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DestinationFileFormat": {
            "enum": [
                "plain_text",
                "parquet"
            ]
        },
        "CreateFpgaImageResult": {
            "type": "object",
            "properties": {
                "FpgaImageId": {
                    "$ref": "#/$defs/String"
                },
                "FpgaImageGlobalId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateFpgaImageRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InputStorageLocation": {
                    "$ref": "#/$defs/StorageLocation"
                },
                "LogsStorageLocation": {
                    "$ref": "#/$defs/StorageLocation"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "StorageLocation": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/String"
                },
                "Key": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateImageResult": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateImageRequest": {
            "type": "object",
            "properties": {
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "NoReboot": {
                    "$ref": "#/$defs/Boolean"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappingRequestList"
                }
            }
        },
        "BlockDeviceMappingRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BlockDeviceMapping"
            }
        },
        "BlockDeviceMapping": {
            "type": "object",
            "properties": {
                "Ebs": {
                    "$ref": "#/$defs/EbsBlockDevice"
                },
                "NoDevice": {
                    "$ref": "#/$defs/String"
                },
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "VirtualName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EbsBlockDevice": {
            "type": "object",
            "properties": {
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Iops": {
                    "$ref": "#/$defs/Integer"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "VolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "Throughput": {
                    "$ref": "#/$defs/Integer"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateInstanceConnectEndpointResult": {
            "type": "object",
            "properties": {
                "InstanceConnectEndpoint": {
                    "$ref": "#/$defs/Ec2InstanceConnectEndpoint"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ec2InstanceConnectEndpoint": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceConnectEndpointId": {
                    "$ref": "#/$defs/InstanceConnectEndpointId"
                },
                "InstanceConnectEndpointArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "State": {
                    "$ref": "#/$defs/Ec2InstanceConnectEndpointState"
                },
                "StateMessage": {
                    "$ref": "#/$defs/String"
                },
                "DnsName": {
                    "$ref": "#/$defs/String"
                },
                "FipsDnsName": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceIds": {
                    "$ref": "#/$defs/NetworkInterfaceIdSet"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "CreatedAt": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "PreserveClientIp": {
                    "$ref": "#/$defs/Boolean"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdSet"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "InstanceConnectEndpointId": {
            "type": "string"
        },
        "Ec2InstanceConnectEndpointState": {
            "enum": [
                "create_in_progress",
                "create_complete",
                "create_failed",
                "delete_in_progress",
                "delete_complete",
                "delete_failed"
            ]
        },
        "NetworkInterfaceIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "SecurityGroupIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "CreateInstanceConnectEndpointRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdStringListRequest"
                },
                "PreserveClientIp": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "SecurityGroupIdStringListRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "CreateInstanceEventWindowResult": {
            "type": "object",
            "properties": {
                "InstanceEventWindow": {
                    "$ref": "#/$defs/InstanceEventWindow"
                }
            }
        },
        "CreateInstanceEventWindowRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "TimeRanges": {
                    "$ref": "#/$defs/InstanceEventWindowTimeRangeRequestSet"
                },
                "CronExpression": {
                    "$ref": "#/$defs/InstanceEventWindowCronExpression"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "InstanceEventWindowTimeRangeRequestSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceEventWindowTimeRangeRequest"
            }
        },
        "InstanceEventWindowTimeRangeRequest": {
            "type": "object",
            "properties": {
                "StartWeekDay": {
                    "$ref": "#/$defs/WeekDay"
                },
                "StartHour": {
                    "$ref": "#/$defs/Hour"
                },
                "EndWeekDay": {
                    "$ref": "#/$defs/WeekDay"
                },
                "EndHour": {
                    "$ref": "#/$defs/Hour"
                }
            }
        },
        "CreateInstanceExportTaskResult": {
            "type": "object",
            "properties": {
                "ExportTask": {
                    "$ref": "#/$defs/ExportTask"
                }
            }
        },
        "ExportTask": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ExportTaskId": {
                    "$ref": "#/$defs/String"
                },
                "ExportToS3Task": {
                    "$ref": "#/$defs/ExportToS3Task"
                },
                "InstanceExportDetails": {
                    "$ref": "#/$defs/InstanceExportDetails"
                },
                "State": {
                    "$ref": "#/$defs/ExportTaskState"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ExportToS3Task": {
            "type": "object",
            "properties": {
                "ContainerFormat": {
                    "$ref": "#/$defs/ContainerFormat"
                },
                "DiskImageFormat": {
                    "$ref": "#/$defs/DiskImageFormat"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3Key": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ContainerFormat": {
            "enum": [
                "ova"
            ]
        },
        "DiskImageFormat": {
            "enum": [
                "VMDK",
                "RAW",
                "VHD"
            ]
        },
        "InstanceExportDetails": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "TargetEnvironment": {
                    "$ref": "#/$defs/ExportEnvironment"
                }
            }
        },
        "ExportEnvironment": {
            "enum": [
                "citrix",
                "vmware",
                "microsoft"
            ]
        },
        "ExportTaskState": {
            "enum": [
                "active",
                "cancelling",
                "cancelled",
                "completed"
            ]
        },
        "CreateInstanceExportTaskRequest": {
            "type": "object",
            "properties": {
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "TargetEnvironment": {
                    "$ref": "#/$defs/ExportEnvironment"
                },
                "ExportToS3Task": {
                    "$ref": "#/$defs/ExportToS3TaskSpecification"
                }
            }
        },
        "ExportToS3TaskSpecification": {
            "type": "object",
            "properties": {
                "DiskImageFormat": {
                    "$ref": "#/$defs/DiskImageFormat"
                },
                "ContainerFormat": {
                    "$ref": "#/$defs/ContainerFormat"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateInternetGatewayResult": {
            "type": "object",
            "properties": {
                "InternetGateway": {
                    "$ref": "#/$defs/InternetGateway"
                }
            }
        },
        "InternetGateway": {
            "type": "object",
            "properties": {
                "Attachments": {
                    "$ref": "#/$defs/InternetGatewayAttachmentList"
                },
                "InternetGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateInternetGatewayRequest": {
            "type": "object",
            "properties": {
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateIpamResult": {
            "type": "object",
            "properties": {
                "Ipam": {
                    "$ref": "#/$defs/Ipam"
                }
            }
        },
        "Ipam": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "IpamArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "IpamRegion": {
                    "$ref": "#/$defs/String"
                },
                "PublicDefaultScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                },
                "PrivateDefaultScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                },
                "ScopeCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "OperatingRegions": {
                    "$ref": "#/$defs/IpamOperatingRegionSet"
                },
                "State": {
                    "$ref": "#/$defs/IpamState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "DefaultResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                },
                "DefaultResourceDiscoveryAssociationId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryAssociationId"
                },
                "ResourceDiscoveryAssociationCount": {
                    "$ref": "#/$defs/Integer"
                },
                "StateMessage": {
                    "$ref": "#/$defs/String"
                },
                "Tier": {
                    "$ref": "#/$defs/IpamTier"
                },
                "EnablePrivateGua": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "IpamScopeId": {
            "type": "string"
        },
        "IpamOperatingRegionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamOperatingRegion"
            }
        },
        "IpamOperatingRegion": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamState": {
            "enum": [
                "create_in_progress",
                "create_complete",
                "create_failed",
                "modify_in_progress",
                "modify_complete",
                "modify_failed",
                "delete_in_progress",
                "delete_complete",
                "delete_failed",
                "isolate_in_progress",
                "isolate_complete",
                "restore_in_progress"
            ]
        },
        "IpamTier": {
            "enum": [
                "free",
                "advanced"
            ]
        },
        "CreateIpamRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "OperatingRegions": {
                    "$ref": "#/$defs/AddIpamOperatingRegionSet"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "Tier": {
                    "$ref": "#/$defs/IpamTier"
                },
                "EnablePrivateGua": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AddIpamOperatingRegionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddIpamOperatingRegion"
            }
        },
        "AddIpamOperatingRegion": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateIpamExternalResourceVerificationTokenResult": {
            "type": "object",
            "properties": {
                "IpamExternalResourceVerificationToken": {
                    "$ref": "#/$defs/IpamExternalResourceVerificationToken"
                }
            }
        },
        "IpamExternalResourceVerificationToken": {
            "type": "object",
            "properties": {
                "IpamExternalResourceVerificationTokenId": {
                    "$ref": "#/$defs/IpamExternalResourceVerificationTokenId"
                },
                "IpamExternalResourceVerificationTokenArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "IpamArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "IpamRegion": {
                    "$ref": "#/$defs/String"
                },
                "TokenValue": {
                    "$ref": "#/$defs/String"
                },
                "TokenName": {
                    "$ref": "#/$defs/String"
                },
                "NotAfter": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Status": {
                    "$ref": "#/$defs/TokenState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "State": {
                    "$ref": "#/$defs/IpamExternalResourceVerificationTokenState"
                }
            }
        },
        "IpamExternalResourceVerificationTokenId": {
            "type": "string"
        },
        "TokenState": {
            "enum": [
                "valid",
                "expired"
            ]
        },
        "IpamExternalResourceVerificationTokenState": {
            "enum": [
                "CREATE_IN_PROGRESS",
                "CREATE_COMPLETE",
                "CREATE_FAILED",
                "DELETE_IN_PROGRESS",
                "DELETE_COMPLETE",
                "DELETE_FAILED"
            ]
        },
        "CreateIpamExternalResourceVerificationTokenRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateIpamPoolResult": {
            "type": "object",
            "properties": {
                "IpamPool": {
                    "$ref": "#/$defs/IpamPool"
                }
            }
        },
        "IpamPool": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "SourceIpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "IpamPoolArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "IpamScopeArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "IpamScopeType": {
                    "$ref": "#/$defs/IpamScopeType"
                },
                "IpamArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "IpamRegion": {
                    "$ref": "#/$defs/String"
                },
                "Locale": {
                    "$ref": "#/$defs/String"
                },
                "PoolDepth": {
                    "$ref": "#/$defs/Integer"
                },
                "State": {
                    "$ref": "#/$defs/IpamPoolState"
                },
                "StateMessage": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "AutoImport": {
                    "$ref": "#/$defs/Boolean"
                },
                "PubliclyAdvertisable": {
                    "$ref": "#/$defs/Boolean"
                },
                "AddressFamily": {
                    "$ref": "#/$defs/AddressFamily"
                },
                "AllocationMinNetmaskLength": {
                    "$ref": "#/$defs/IpamNetmaskLength"
                },
                "AllocationMaxNetmaskLength": {
                    "$ref": "#/$defs/IpamNetmaskLength"
                },
                "AllocationDefaultNetmaskLength": {
                    "$ref": "#/$defs/IpamNetmaskLength"
                },
                "AllocationResourceTags": {
                    "$ref": "#/$defs/IpamResourceTagList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "AwsService": {
                    "$ref": "#/$defs/IpamPoolAwsService"
                },
                "PublicIpSource": {
                    "$ref": "#/$defs/IpamPoolPublicIpSource"
                },
                "SourceResource": {
                    "$ref": "#/$defs/IpamPoolSourceResource"
                }
            }
        },
        "IpamScopeType": {
            "enum": [
                "public",
                "private"
            ]
        },
        "IpamPoolState": {
            "enum": [
                "create_in_progress",
                "create_complete",
                "create_failed",
                "modify_in_progress",
                "modify_complete",
                "modify_failed",
                "delete_in_progress",
                "delete_complete",
                "delete_failed",
                "isolate_in_progress",
                "isolate_complete",
                "restore_in_progress"
            ]
        },
        "AddressFamily": {
            "enum": [
                "ipv4",
                "ipv6"
            ]
        },
        "IpamNetmaskLength": {
            "type": "integer",
            "format": "int32"
        },
        "IpamResourceTagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamResourceTag"
            }
        },
        "IpamResourceTag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamPoolAwsService": {
            "enum": [
                "ec2"
            ]
        },
        "IpamPoolPublicIpSource": {
            "enum": [
                "amazon",
                "byoip"
            ]
        },
        "IpamPoolSourceResource": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/IpamPoolSourceResourceType"
                },
                "ResourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "ResourceOwner": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamPoolSourceResourceType": {
            "enum": [
                "vpc"
            ]
        },
        "CreateIpamPoolRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                },
                "Locale": {
                    "$ref": "#/$defs/String"
                },
                "SourceIpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "AddressFamily": {
                    "$ref": "#/$defs/AddressFamily"
                },
                "AutoImport": {
                    "$ref": "#/$defs/Boolean"
                },
                "PubliclyAdvertisable": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllocationMinNetmaskLength": {
                    "$ref": "#/$defs/IpamNetmaskLength"
                },
                "AllocationMaxNetmaskLength": {
                    "$ref": "#/$defs/IpamNetmaskLength"
                },
                "AllocationDefaultNetmaskLength": {
                    "$ref": "#/$defs/IpamNetmaskLength"
                },
                "AllocationResourceTags": {
                    "$ref": "#/$defs/RequestIpamResourceTagList"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "AwsService": {
                    "$ref": "#/$defs/IpamPoolAwsService"
                },
                "PublicIpSource": {
                    "$ref": "#/$defs/IpamPoolPublicIpSource"
                },
                "SourceResource": {
                    "$ref": "#/$defs/IpamPoolSourceResourceRequest"
                }
            }
        },
        "RequestIpamResourceTagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RequestIpamResourceTag"
            }
        },
        "RequestIpamResourceTag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamPoolSourceResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/IpamPoolSourceResourceType"
                },
                "ResourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "ResourceOwner": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateIpamResourceDiscoveryResult": {
            "type": "object",
            "properties": {
                "IpamResourceDiscovery": {
                    "$ref": "#/$defs/IpamResourceDiscovery"
                }
            }
        },
        "IpamResourceDiscovery": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "IpamResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                },
                "IpamResourceDiscoveryArn": {
                    "$ref": "#/$defs/String"
                },
                "IpamResourceDiscoveryRegion": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "OperatingRegions": {
                    "$ref": "#/$defs/IpamOperatingRegionSet"
                },
                "IsDefault": {
                    "$ref": "#/$defs/Boolean"
                },
                "State": {
                    "$ref": "#/$defs/IpamResourceDiscoveryState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "OrganizationalUnitExclusions": {
                    "$ref": "#/$defs/IpamOrganizationalUnitExclusionSet"
                }
            }
        },
        "IpamResourceDiscoveryState": {
            "enum": [
                "CREATE_IN_PROGRESS",
                "CREATE_COMPLETE",
                "CREATE_FAILED",
                "MODIFY_IN_PROGRESS",
                "MODIFY_COMPLETE",
                "MODIFY_FAILED",
                "DELETE_IN_PROGRESS",
                "DELETE_COMPLETE",
                "DELETE_FAILED",
                "ISOLATE_IN_PROGRESS",
                "ISOLATE_COMPLETE",
                "RESTORE_IN_PROGRESS"
            ]
        },
        "IpamOrganizationalUnitExclusionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamOrganizationalUnitExclusion"
            }
        },
        "IpamOrganizationalUnitExclusion": {
            "type": "object",
            "properties": {
                "OrganizationsEntityPath": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateIpamResourceDiscoveryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "OperatingRegions": {
                    "$ref": "#/$defs/AddIpamOperatingRegionSet"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateIpamScopeResult": {
            "type": "object",
            "properties": {
                "IpamScope": {
                    "$ref": "#/$defs/IpamScope"
                }
            }
        },
        "IpamScope": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "IpamScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                },
                "IpamScopeArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "IpamArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "IpamRegion": {
                    "$ref": "#/$defs/String"
                },
                "IpamScopeType": {
                    "$ref": "#/$defs/IpamScopeType"
                },
                "IsDefault": {
                    "$ref": "#/$defs/Boolean"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "PoolCount": {
                    "$ref": "#/$defs/Integer"
                },
                "State": {
                    "$ref": "#/$defs/IpamScopeState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "IpamScopeState": {
            "enum": [
                "create_in_progress",
                "create_complete",
                "create_failed",
                "modify_in_progress",
                "modify_complete",
                "modify_failed",
                "delete_in_progress",
                "delete_complete",
                "delete_failed",
                "isolate_in_progress",
                "isolate_complete",
                "restore_in_progress"
            ]
        },
        "CreateIpamScopeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "KeyPair": {
            "type": "object",
            "properties": {
                "KeyPairId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "KeyName": {
                    "$ref": "#/$defs/String"
                },
                "KeyFingerprint": {
                    "$ref": "#/$defs/String"
                },
                "KeyMaterial": {
                    "$ref": "#/$defs/SensitiveUserData"
                }
            }
        },
        "SensitiveUserData": {
            "type": "string"
        },
        "CreateKeyPairRequest": {
            "type": "object",
            "properties": {
                "KeyName": {
                    "$ref": "#/$defs/String"
                },
                "KeyType": {
                    "$ref": "#/$defs/KeyType"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "KeyFormat": {
                    "$ref": "#/$defs/KeyFormat"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "KeyType": {
            "enum": [
                "rsa",
                "ed25519"
            ]
        },
        "KeyFormat": {
            "enum": [
                "pem",
                "ppk"
            ]
        },
        "CreateLaunchTemplateResult": {
            "type": "object",
            "properties": {
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplate"
                },
                "Warning": {
                    "$ref": "#/$defs/ValidationWarning"
                }
            }
        },
        "LaunchTemplate": {
            "type": "object",
            "properties": {
                "LaunchTemplateId": {
                    "$ref": "#/$defs/String"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                },
                "CreateTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/String"
                },
                "DefaultVersionNumber": {
                    "$ref": "#/$defs/Long"
                },
                "LatestVersionNumber": {
                    "$ref": "#/$defs/Long"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorResponse"
                }
            }
        },
        "OperatorResponse": {
            "type": "object",
            "properties": {
                "Managed": {
                    "$ref": "#/$defs/Boolean"
                },
                "Principal": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ValidationWarning": {
            "type": "object",
            "properties": {
                "Errors": {
                    "$ref": "#/$defs/ErrorSet"
                }
            }
        },
        "ErrorSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ValidationError"
            }
        },
        "ValidationError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateLaunchTemplateRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                },
                "VersionDescription": {
                    "$ref": "#/$defs/VersionDescription"
                },
                "LaunchTemplateData": {
                    "$ref": "#/$defs/RequestLaunchTemplateData"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorRequest"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "VersionDescription": {
            "type": "string"
        },
        "RequestLaunchTemplateData": {
            "type": "object",
            "properties": {
                "KernelId": {
                    "$ref": "#/$defs/KernelId"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/LaunchTemplateIamInstanceProfileSpecificationRequest"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/LaunchTemplateBlockDeviceMappingRequestList"
                },
                "NetworkInterfaces": {
                    "$ref": "#/$defs/LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "KeyName": {
                    "$ref": "#/$defs/KeyPairName"
                },
                "Monitoring": {
                    "$ref": "#/$defs/LaunchTemplatesMonitoringRequest"
                },
                "Placement": {
                    "$ref": "#/$defs/LaunchTemplatePlacementRequest"
                },
                "RamDiskId": {
                    "$ref": "#/$defs/RamdiskId"
                },
                "DisableApiTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceInitiatedShutdownBehavior": {
                    "$ref": "#/$defs/ShutdownBehavior"
                },
                "UserData": {
                    "$ref": "#/$defs/SensitiveUserData"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/LaunchTemplateTagSpecificationRequestList"
                },
                "ElasticGpuSpecifications": {
                    "$ref": "#/$defs/ElasticGpuSpecificationList"
                },
                "ElasticInferenceAccelerators": {
                    "$ref": "#/$defs/LaunchTemplateElasticInferenceAcceleratorList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdStringList"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroupStringList"
                },
                "InstanceMarketOptions": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMarketOptionsRequest"
                },
                "CreditSpecification": {
                    "$ref": "#/$defs/CreditSpecificationRequest"
                },
                "CpuOptions": {
                    "$ref": "#/$defs/LaunchTemplateCpuOptionsRequest"
                },
                "CapacityReservationSpecification": {
                    "$ref": "#/$defs/LaunchTemplateCapacityReservationSpecificationRequest"
                },
                "LicenseSpecifications": {
                    "$ref": "#/$defs/LaunchTemplateLicenseSpecificationListRequest"
                },
                "HibernationOptions": {
                    "$ref": "#/$defs/LaunchTemplateHibernationOptionsRequest"
                },
                "MetadataOptions": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMetadataOptionsRequest"
                },
                "EnclaveOptions": {
                    "$ref": "#/$defs/LaunchTemplateEnclaveOptionsRequest"
                },
                "InstanceRequirements": {
                    "$ref": "#/$defs/InstanceRequirementsRequest"
                },
                "PrivateDnsNameOptions": {
                    "$ref": "#/$defs/LaunchTemplatePrivateDnsNameOptionsRequest"
                },
                "MaintenanceOptions": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMaintenanceOptionsRequest"
                },
                "DisableApiStop": {
                    "$ref": "#/$defs/Boolean"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorRequest"
                },
                "NetworkPerformanceOptions": {
                    "$ref": "#/$defs/LaunchTemplateNetworkPerformanceOptionsRequest"
                }
            }
        },
        "KernelId": {
            "type": "string"
        },
        "LaunchTemplateIamInstanceProfileSpecificationRequest": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateBlockDeviceMappingRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateBlockDeviceMappingRequest"
            }
        },
        "LaunchTemplateBlockDeviceMappingRequest": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "VirtualName": {
                    "$ref": "#/$defs/String"
                },
                "Ebs": {
                    "$ref": "#/$defs/LaunchTemplateEbsBlockDeviceRequest"
                },
                "NoDevice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateEbsBlockDeviceRequest": {
            "type": "object",
            "properties": {
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Iops": {
                    "$ref": "#/$defs/Integer"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "VolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "Throughput": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "LaunchTemplateInstanceNetworkInterfaceSpecificationRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateInstanceNetworkInterfaceSpecificationRequest"
            }
        },
        "LaunchTemplateInstanceNetworkInterfaceSpecificationRequest": {
            "type": "object",
            "properties": {
                "AssociateCarrierIpAddress": {
                    "$ref": "#/$defs/Boolean"
                },
                "AssociatePublicIpAddress": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DeviceIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "Groups": {
                    "$ref": "#/$defs/SecurityGroupIdStringList"
                },
                "InterfaceType": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6AddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Addresses": {
                    "$ref": "#/$defs/InstanceIpv6AddressListRequest"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/PrivateIpAddressSpecificationList"
                },
                "SecondaryPrivateIpAddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "NetworkCardIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv4Prefixes": {
                    "$ref": "#/$defs/Ipv4PrefixList"
                },
                "Ipv4PrefixCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Prefixes": {
                    "$ref": "#/$defs/Ipv6PrefixList"
                },
                "Ipv6PrefixCount": {
                    "$ref": "#/$defs/Integer"
                },
                "PrimaryIpv6": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnaSrdSpecification": {
                    "$ref": "#/$defs/EnaSrdSpecificationRequest"
                },
                "ConnectionTrackingSpecification": {
                    "$ref": "#/$defs/ConnectionTrackingSpecificationRequest"
                }
            }
        },
        "SecurityGroupIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "InstanceIpv6AddressListRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceIpv6AddressRequest"
            }
        },
        "InstanceIpv6AddressRequest": {
            "type": "object",
            "properties": {
                "Ipv6Address": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PrivateIpAddressSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrivateIpAddressSpecification"
            }
        },
        "PrivateIpAddressSpecification": {
            "type": "object",
            "properties": {
                "Primary": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv4PrefixList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv4PrefixSpecificationRequest"
            }
        },
        "Ipv4PrefixSpecificationRequest": {
            "type": "object",
            "properties": {
                "Ipv4Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv6PrefixList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv6PrefixSpecificationRequest"
            }
        },
        "Ipv6PrefixSpecificationRequest": {
            "type": "object",
            "properties": {
                "Ipv6Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EnaSrdSpecificationRequest": {
            "type": "object",
            "properties": {
                "EnaSrdEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnaSrdUdpSpecification": {
                    "$ref": "#/$defs/EnaSrdUdpSpecificationRequest"
                }
            }
        },
        "EnaSrdUdpSpecificationRequest": {
            "type": "object",
            "properties": {
                "EnaSrdUdpEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ConnectionTrackingSpecificationRequest": {
            "type": "object",
            "properties": {
                "TcpEstablishedTimeout": {
                    "$ref": "#/$defs/Integer"
                },
                "UdpStreamTimeout": {
                    "$ref": "#/$defs/Integer"
                },
                "UdpTimeout": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "KeyPairName": {
            "type": "string"
        },
        "LaunchTemplatesMonitoringRequest": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LaunchTemplatePlacementRequest": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "Affinity": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/PlacementGroupName"
                },
                "HostId": {
                    "$ref": "#/$defs/DedicatedHostId"
                },
                "Tenancy": {
                    "$ref": "#/$defs/Tenancy"
                },
                "SpreadDomain": {
                    "$ref": "#/$defs/String"
                },
                "HostResourceGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "PartitionNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "GroupId": {
                    "$ref": "#/$defs/PlacementGroupId"
                }
            }
        },
        "RamdiskId": {
            "type": "string"
        },
        "ShutdownBehavior": {
            "enum": [
                "stop",
                "terminate"
            ]
        },
        "LaunchTemplateTagSpecificationRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateTagSpecificationRequest"
            }
        },
        "LaunchTemplateTagSpecificationRequest": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ElasticGpuSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticGpuSpecification"
            }
        },
        "ElasticGpuSpecification": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateElasticInferenceAcceleratorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateElasticInferenceAccelerator"
            }
        },
        "LaunchTemplateElasticInferenceAccelerator": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "Count": {
                    "$ref": "#/$defs/LaunchTemplateElasticInferenceAcceleratorCount"
                }
            }
        },
        "LaunchTemplateElasticInferenceAcceleratorCount": {
            "type": "integer",
            "format": "int32"
        },
        "SecurityGroupStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupName"
            }
        },
        "LaunchTemplateInstanceMarketOptionsRequest": {
            "type": "object",
            "properties": {
                "MarketType": {
                    "$ref": "#/$defs/MarketType"
                },
                "SpotOptions": {
                    "$ref": "#/$defs/LaunchTemplateSpotMarketOptionsRequest"
                }
            }
        },
        "MarketType": {
            "enum": [
                "spot",
                "capacity_block"
            ]
        },
        "LaunchTemplateSpotMarketOptionsRequest": {
            "type": "object",
            "properties": {
                "MaxPrice": {
                    "$ref": "#/$defs/String"
                },
                "SpotInstanceType": {
                    "$ref": "#/$defs/SpotInstanceType"
                },
                "BlockDurationMinutes": {
                    "$ref": "#/$defs/Integer"
                },
                "ValidUntil": {
                    "$ref": "#/$defs/DateTime"
                },
                "InstanceInterruptionBehavior": {
                    "$ref": "#/$defs/InstanceInterruptionBehavior"
                }
            }
        },
        "SpotInstanceType": {
            "enum": [
                "one_time",
                "persistent"
            ]
        },
        "InstanceInterruptionBehavior": {
            "enum": [
                "hibernate",
                "stop",
                "terminate"
            ]
        },
        "CreditSpecificationRequest": {
            "type": "object",
            "properties": {
                "CpuCredits": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateCpuOptionsRequest": {
            "type": "object",
            "properties": {
                "CoreCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ThreadsPerCore": {
                    "$ref": "#/$defs/Integer"
                },
                "AmdSevSnp": {
                    "$ref": "#/$defs/AmdSevSnpSpecification"
                }
            }
        },
        "AmdSevSnpSpecification": {
            "enum": [
                "enabled",
                "disabled"
            ]
        },
        "LaunchTemplateCapacityReservationSpecificationRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationPreference": {
                    "$ref": "#/$defs/CapacityReservationPreference"
                },
                "CapacityReservationTarget": {
                    "$ref": "#/$defs/CapacityReservationTarget"
                }
            }
        },
        "CapacityReservationPreference": {
            "enum": [
                "capacity_reservations_only",
                "open",
                "none"
            ]
        },
        "CapacityReservationTarget": {
            "type": "object",
            "properties": {
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "CapacityReservationResourceGroupArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateLicenseSpecificationListRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateLicenseConfigurationRequest"
            }
        },
        "LaunchTemplateLicenseConfigurationRequest": {
            "type": "object",
            "properties": {
                "LicenseConfigurationArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateHibernationOptionsRequest": {
            "type": "object",
            "properties": {
                "Configured": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LaunchTemplateInstanceMetadataOptionsRequest": {
            "type": "object",
            "properties": {
                "HttpTokens": {
                    "$ref": "#/$defs/LaunchTemplateHttpTokensState"
                },
                "HttpPutResponseHopLimit": {
                    "$ref": "#/$defs/Integer"
                },
                "HttpEndpoint": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMetadataEndpointState"
                },
                "HttpProtocolIpv6": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMetadataProtocolIpv6"
                },
                "InstanceMetadataTags": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMetadataTagsState"
                }
            }
        },
        "LaunchTemplateHttpTokensState": {
            "enum": [
                "optional",
                "required"
            ]
        },
        "LaunchTemplateInstanceMetadataEndpointState": {
            "enum": [
                "disabled",
                "enabled"
            ]
        },
        "LaunchTemplateInstanceMetadataProtocolIpv6": {
            "enum": [
                "disabled",
                "enabled"
            ]
        },
        "LaunchTemplateInstanceMetadataTagsState": {
            "enum": [
                "disabled",
                "enabled"
            ]
        },
        "LaunchTemplateEnclaveOptionsRequest": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LaunchTemplatePrivateDnsNameOptionsRequest": {
            "type": "object",
            "properties": {
                "HostnameType": {
                    "$ref": "#/$defs/HostnameType"
                },
                "EnableResourceNameDnsARecord": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnableResourceNameDnsAAAARecord": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LaunchTemplateInstanceMaintenanceOptionsRequest": {
            "type": "object",
            "properties": {
                "AutoRecovery": {
                    "$ref": "#/$defs/LaunchTemplateAutoRecoveryState"
                }
            }
        },
        "LaunchTemplateAutoRecoveryState": {
            "enum": [
                "default",
                "disabled"
            ]
        },
        "OperatorRequest": {
            "type": "object",
            "properties": {
                "Principal": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateNetworkPerformanceOptionsRequest": {
            "type": "object",
            "properties": {
                "BandwidthWeighting": {
                    "$ref": "#/$defs/InstanceBandwidthWeighting"
                }
            }
        },
        "InstanceBandwidthWeighting": {
            "enum": [
                "DEFAULT",
                "VPC_1",
                "EBS_1"
            ]
        },
        "CreateLaunchTemplateVersionResult": {
            "type": "object",
            "properties": {
                "LaunchTemplateVersion": {
                    "$ref": "#/$defs/LaunchTemplateVersion"
                },
                "Warning": {
                    "$ref": "#/$defs/ValidationWarning"
                }
            }
        },
        "LaunchTemplateVersion": {
            "type": "object",
            "properties": {
                "LaunchTemplateId": {
                    "$ref": "#/$defs/String"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                },
                "VersionNumber": {
                    "$ref": "#/$defs/Long"
                },
                "VersionDescription": {
                    "$ref": "#/$defs/VersionDescription"
                },
                "CreateTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "CreatedBy": {
                    "$ref": "#/$defs/String"
                },
                "DefaultVersion": {
                    "$ref": "#/$defs/Boolean"
                },
                "LaunchTemplateData": {
                    "$ref": "#/$defs/ResponseLaunchTemplateData"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorResponse"
                }
            }
        },
        "ResponseLaunchTemplateData": {
            "type": "object",
            "properties": {
                "KernelId": {
                    "$ref": "#/$defs/String"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/LaunchTemplateIamInstanceProfileSpecification"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/LaunchTemplateBlockDeviceMappingList"
                },
                "NetworkInterfaces": {
                    "$ref": "#/$defs/LaunchTemplateInstanceNetworkInterfaceSpecificationList"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "KeyName": {
                    "$ref": "#/$defs/String"
                },
                "Monitoring": {
                    "$ref": "#/$defs/LaunchTemplatesMonitoring"
                },
                "Placement": {
                    "$ref": "#/$defs/LaunchTemplatePlacement"
                },
                "RamDiskId": {
                    "$ref": "#/$defs/String"
                },
                "DisableApiTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceInitiatedShutdownBehavior": {
                    "$ref": "#/$defs/ShutdownBehavior"
                },
                "UserData": {
                    "$ref": "#/$defs/SensitiveUserData"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/LaunchTemplateTagSpecificationList"
                },
                "ElasticGpuSpecifications": {
                    "$ref": "#/$defs/ElasticGpuSpecificationResponseList"
                },
                "ElasticInferenceAccelerators": {
                    "$ref": "#/$defs/LaunchTemplateElasticInferenceAcceleratorResponseList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "InstanceMarketOptions": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMarketOptions"
                },
                "CreditSpecification": {
                    "$ref": "#/$defs/CreditSpecification"
                },
                "CpuOptions": {
                    "$ref": "#/$defs/LaunchTemplateCpuOptions"
                },
                "CapacityReservationSpecification": {
                    "$ref": "#/$defs/LaunchTemplateCapacityReservationSpecificationResponse"
                },
                "LicenseSpecifications": {
                    "$ref": "#/$defs/LaunchTemplateLicenseList"
                },
                "HibernationOptions": {
                    "$ref": "#/$defs/LaunchTemplateHibernationOptions"
                },
                "MetadataOptions": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMetadataOptions"
                },
                "EnclaveOptions": {
                    "$ref": "#/$defs/LaunchTemplateEnclaveOptions"
                },
                "InstanceRequirements": {
                    "$ref": "#/$defs/InstanceRequirements"
                },
                "PrivateDnsNameOptions": {
                    "$ref": "#/$defs/LaunchTemplatePrivateDnsNameOptions"
                },
                "MaintenanceOptions": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMaintenanceOptions"
                },
                "DisableApiStop": {
                    "$ref": "#/$defs/Boolean"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorResponse"
                },
                "NetworkPerformanceOptions": {
                    "$ref": "#/$defs/LaunchTemplateNetworkPerformanceOptions"
                }
            }
        },
        "LaunchTemplateIamInstanceProfileSpecification": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateBlockDeviceMappingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateBlockDeviceMapping"
            }
        },
        "LaunchTemplateBlockDeviceMapping": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "VirtualName": {
                    "$ref": "#/$defs/String"
                },
                "Ebs": {
                    "$ref": "#/$defs/LaunchTemplateEbsBlockDevice"
                },
                "NoDevice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateEbsBlockDevice": {
            "type": "object",
            "properties": {
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Iops": {
                    "$ref": "#/$defs/Integer"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "VolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "Throughput": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "LaunchTemplateInstanceNetworkInterfaceSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateInstanceNetworkInterfaceSpecification"
            }
        },
        "LaunchTemplateInstanceNetworkInterfaceSpecification": {
            "type": "object",
            "properties": {
                "AssociateCarrierIpAddress": {
                    "$ref": "#/$defs/Boolean"
                },
                "AssociatePublicIpAddress": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DeviceIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupIdStringList"
                },
                "InterfaceType": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6AddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Addresses": {
                    "$ref": "#/$defs/InstanceIpv6AddressList"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/PrivateIpAddressSpecificationList"
                },
                "SecondaryPrivateIpAddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "NetworkCardIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv4Prefixes": {
                    "$ref": "#/$defs/Ipv4PrefixListResponse"
                },
                "Ipv4PrefixCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Prefixes": {
                    "$ref": "#/$defs/Ipv6PrefixListResponse"
                },
                "Ipv6PrefixCount": {
                    "$ref": "#/$defs/Integer"
                },
                "PrimaryIpv6": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnaSrdSpecification": {
                    "$ref": "#/$defs/LaunchTemplateEnaSrdSpecification"
                },
                "ConnectionTrackingSpecification": {
                    "$ref": "#/$defs/ConnectionTrackingSpecification"
                }
            }
        },
        "InstanceIpv6AddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceIpv6Address"
            }
        },
        "InstanceIpv6Address": {
            "type": "object",
            "properties": {
                "Ipv6Address": {
                    "$ref": "#/$defs/String"
                },
                "IsPrimaryIpv6": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Ipv4PrefixListResponse": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv4PrefixSpecificationResponse"
            }
        },
        "Ipv4PrefixSpecificationResponse": {
            "type": "object",
            "properties": {
                "Ipv4Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv6PrefixListResponse": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv6PrefixSpecificationResponse"
            }
        },
        "Ipv6PrefixSpecificationResponse": {
            "type": "object",
            "properties": {
                "Ipv6Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateEnaSrdSpecification": {
            "type": "object",
            "properties": {
                "EnaSrdEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnaSrdUdpSpecification": {
                    "$ref": "#/$defs/LaunchTemplateEnaSrdUdpSpecification"
                }
            }
        },
        "LaunchTemplateEnaSrdUdpSpecification": {
            "type": "object",
            "properties": {
                "EnaSrdUdpEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ConnectionTrackingSpecification": {
            "type": "object",
            "properties": {
                "TcpEstablishedTimeout": {
                    "$ref": "#/$defs/Integer"
                },
                "UdpTimeout": {
                    "$ref": "#/$defs/Integer"
                },
                "UdpStreamTimeout": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "LaunchTemplatesMonitoring": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LaunchTemplatePlacement": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "Affinity": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "HostId": {
                    "$ref": "#/$defs/String"
                },
                "Tenancy": {
                    "$ref": "#/$defs/Tenancy"
                },
                "SpreadDomain": {
                    "$ref": "#/$defs/String"
                },
                "HostResourceGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "PartitionNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "GroupId": {
                    "$ref": "#/$defs/PlacementGroupId"
                }
            }
        },
        "LaunchTemplateTagSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateTagSpecification"
            }
        },
        "LaunchTemplateTagSpecification": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ElasticGpuSpecificationResponseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticGpuSpecificationResponse"
            }
        },
        "ElasticGpuSpecificationResponse": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateElasticInferenceAcceleratorResponseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateElasticInferenceAcceleratorResponse"
            }
        },
        "LaunchTemplateElasticInferenceAcceleratorResponse": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "Count": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "LaunchTemplateInstanceMarketOptions": {
            "type": "object",
            "properties": {
                "MarketType": {
                    "$ref": "#/$defs/MarketType"
                },
                "SpotOptions": {
                    "$ref": "#/$defs/LaunchTemplateSpotMarketOptions"
                }
            }
        },
        "LaunchTemplateSpotMarketOptions": {
            "type": "object",
            "properties": {
                "MaxPrice": {
                    "$ref": "#/$defs/String"
                },
                "SpotInstanceType": {
                    "$ref": "#/$defs/SpotInstanceType"
                },
                "BlockDurationMinutes": {
                    "$ref": "#/$defs/Integer"
                },
                "ValidUntil": {
                    "$ref": "#/$defs/DateTime"
                },
                "InstanceInterruptionBehavior": {
                    "$ref": "#/$defs/InstanceInterruptionBehavior"
                }
            }
        },
        "CreditSpecification": {
            "type": "object",
            "properties": {
                "CpuCredits": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateCpuOptions": {
            "type": "object",
            "properties": {
                "CoreCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ThreadsPerCore": {
                    "$ref": "#/$defs/Integer"
                },
                "AmdSevSnp": {
                    "$ref": "#/$defs/AmdSevSnpSpecification"
                }
            }
        },
        "LaunchTemplateCapacityReservationSpecificationResponse": {
            "type": "object",
            "properties": {
                "CapacityReservationPreference": {
                    "$ref": "#/$defs/CapacityReservationPreference"
                },
                "CapacityReservationTarget": {
                    "$ref": "#/$defs/CapacityReservationTargetResponse"
                }
            }
        },
        "CapacityReservationTargetResponse": {
            "type": "object",
            "properties": {
                "CapacityReservationId": {
                    "$ref": "#/$defs/String"
                },
                "CapacityReservationResourceGroupArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateLicenseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateLicenseConfiguration"
            }
        },
        "LaunchTemplateLicenseConfiguration": {
            "type": "object",
            "properties": {
                "LicenseConfigurationArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateHibernationOptions": {
            "type": "object",
            "properties": {
                "Configured": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LaunchTemplateInstanceMetadataOptions": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMetadataOptionsState"
                },
                "HttpTokens": {
                    "$ref": "#/$defs/LaunchTemplateHttpTokensState"
                },
                "HttpPutResponseHopLimit": {
                    "$ref": "#/$defs/Integer"
                },
                "HttpEndpoint": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMetadataEndpointState"
                },
                "HttpProtocolIpv6": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMetadataProtocolIpv6"
                },
                "InstanceMetadataTags": {
                    "$ref": "#/$defs/LaunchTemplateInstanceMetadataTagsState"
                }
            }
        },
        "LaunchTemplateInstanceMetadataOptionsState": {
            "enum": [
                "pending",
                "applied"
            ]
        },
        "LaunchTemplateEnclaveOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LaunchTemplatePrivateDnsNameOptions": {
            "type": "object",
            "properties": {
                "HostnameType": {
                    "$ref": "#/$defs/HostnameType"
                },
                "EnableResourceNameDnsARecord": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnableResourceNameDnsAAAARecord": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LaunchTemplateInstanceMaintenanceOptions": {
            "type": "object",
            "properties": {
                "AutoRecovery": {
                    "$ref": "#/$defs/LaunchTemplateAutoRecoveryState"
                }
            }
        },
        "LaunchTemplateNetworkPerformanceOptions": {
            "type": "object",
            "properties": {
                "BandwidthWeighting": {
                    "$ref": "#/$defs/InstanceBandwidthWeighting"
                }
            }
        },
        "CreateLaunchTemplateVersionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "LaunchTemplateId": {
                    "$ref": "#/$defs/LaunchTemplateId"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                },
                "SourceVersion": {
                    "$ref": "#/$defs/String"
                },
                "VersionDescription": {
                    "$ref": "#/$defs/VersionDescription"
                },
                "LaunchTemplateData": {
                    "$ref": "#/$defs/RequestLaunchTemplateData"
                },
                "ResolveAlias": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateLocalGatewayRouteResult": {
            "type": "object",
            "properties": {
                "Route": {
                    "$ref": "#/$defs/LocalGatewayRoute"
                }
            }
        },
        "LocalGatewayRoute": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "LocalGatewayVirtualInterfaceGroupId": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceGroupId"
                },
                "Type": {
                    "$ref": "#/$defs/LocalGatewayRouteType"
                },
                "State": {
                    "$ref": "#/$defs/LocalGatewayRouteState"
                },
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayRoutetableId"
                },
                "LocalGatewayRouteTableArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "CoipPoolId": {
                    "$ref": "#/$defs/CoipPoolId"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "DestinationPrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                }
            }
        },
        "LocalGatewayVirtualInterfaceGroupId": {
            "type": "string"
        },
        "LocalGatewayRouteType": {
            "enum": [
                "static",
                "propagated"
            ]
        },
        "LocalGatewayRouteState": {
            "enum": [
                "pending",
                "active",
                "blackhole",
                "deleting",
                "deleted"
            ]
        },
        "CreateLocalGatewayRouteRequest": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayRoutetableId"
                },
                "LocalGatewayVirtualInterfaceGroupId": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceGroupId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "DestinationPrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                }
            }
        },
        "CreateLocalGatewayRouteTableResult": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTable": {
                    "$ref": "#/$defs/LocalGatewayRouteTable"
                }
            }
        },
        "LocalGatewayRouteTable": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "LocalGatewayRouteTableArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "LocalGatewayId": {
                    "$ref": "#/$defs/LocalGatewayId"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "Mode": {
                    "$ref": "#/$defs/LocalGatewayRouteTableMode"
                },
                "StateReason": {
                    "$ref": "#/$defs/StateReason"
                }
            }
        },
        "LocalGatewayId": {
            "type": "string"
        },
        "LocalGatewayRouteTableMode": {
            "enum": [
                "direct_vpc_routing",
                "coip"
            ]
        },
        "StateReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateLocalGatewayRouteTableRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayId": {
                    "$ref": "#/$defs/LocalGatewayId"
                },
                "Mode": {
                    "$ref": "#/$defs/LocalGatewayRouteTableMode"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVirtualInterfaceGroupAssociation"
                }
            }
        },
        "LocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVirtualInterfaceGroupAssociationId"
                },
                "LocalGatewayVirtualInterfaceGroupId": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceGroupId"
                },
                "LocalGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayId"
                },
                "LocalGatewayRouteTableArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
            "type": "string"
        },
        "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayRoutetableId"
                },
                "LocalGatewayVirtualInterfaceGroupId": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceGroupId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateLocalGatewayRouteTableVpcAssociationResult": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVpcAssociation": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVpcAssociation"
                }
            }
        },
        "LocalGatewayRouteTableVpcAssociation": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVpcAssociationId": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVpcAssociationId"
                },
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "LocalGatewayRouteTableArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "LocalGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "LocalGatewayRouteTableVpcAssociationId": {
            "type": "string"
        },
        "CreateLocalGatewayRouteTableVpcAssociationRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayRoutetableId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateManagedPrefixListResult": {
            "type": "object",
            "properties": {
                "PrefixList": {
                    "$ref": "#/$defs/ManagedPrefixList"
                }
            }
        },
        "ManagedPrefixList": {
            "type": "object",
            "properties": {
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "AddressFamily": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/PrefixListState"
                },
                "StateMessage": {
                    "$ref": "#/$defs/String"
                },
                "PrefixListArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "PrefixListName": {
                    "$ref": "#/$defs/String"
                },
                "MaxEntries": {
                    "$ref": "#/$defs/Integer"
                },
                "Version": {
                    "$ref": "#/$defs/Long"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PrefixListState": {
            "enum": [
                "create_in_progress",
                "create_complete",
                "create_failed",
                "modify_in_progress",
                "modify_complete",
                "modify_failed",
                "restore_in_progress",
                "restore_complete",
                "restore_failed",
                "delete_in_progress",
                "delete_complete",
                "delete_failed"
            ]
        },
        "CreateManagedPrefixListRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrefixListName": {
                    "$ref": "#/$defs/String"
                },
                "Entries": {
                    "$ref": "#/$defs/AddPrefixListEntries"
                },
                "MaxEntries": {
                    "$ref": "#/$defs/Integer"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "AddressFamily": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AddPrefixListEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddPrefixListEntry"
            }
        },
        "AddPrefixListEntry": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateNatGatewayResult": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "NatGateway": {
                    "$ref": "#/$defs/NatGateway"
                }
            }
        },
        "NatGateway": {
            "type": "object",
            "properties": {
                "CreateTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "DeleteTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "FailureCode": {
                    "$ref": "#/$defs/String"
                },
                "FailureMessage": {
                    "$ref": "#/$defs/String"
                },
                "NatGatewayAddresses": {
                    "$ref": "#/$defs/NatGatewayAddressList"
                },
                "NatGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "ProvisionedBandwidth": {
                    "$ref": "#/$defs/ProvisionedBandwidth"
                },
                "State": {
                    "$ref": "#/$defs/NatGatewayState"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ConnectivityType": {
                    "$ref": "#/$defs/ConnectivityType"
                }
            }
        },
        "ProvisionedBandwidth": {
            "type": "object",
            "properties": {
                "ProvisionTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Provisioned": {
                    "$ref": "#/$defs/String"
                },
                "RequestTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Requested": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NatGatewayState": {
            "enum": [
                "PENDING",
                "FAILED",
                "AVAILABLE",
                "DELETING",
                "DELETED"
            ]
        },
        "ConnectivityType": {
            "enum": [
                "PRIVATE",
                "PUBLIC"
            ]
        },
        "CreateNatGatewayRequest": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/AllocationId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ConnectivityType": {
                    "$ref": "#/$defs/ConnectivityType"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "SecondaryAllocationIds": {
                    "$ref": "#/$defs/AllocationIdList"
                },
                "SecondaryPrivateIpAddresses": {
                    "$ref": "#/$defs/IpList"
                },
                "SecondaryPrivateIpAddressCount": {
                    "$ref": "#/$defs/PrivateIpAddressCount"
                }
            }
        },
        "CreateNetworkAclResult": {
            "type": "object",
            "properties": {
                "NetworkAcl": {
                    "$ref": "#/$defs/NetworkAcl"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkAcl": {
            "type": "object",
            "properties": {
                "Associations": {
                    "$ref": "#/$defs/NetworkAclAssociationList"
                },
                "Entries": {
                    "$ref": "#/$defs/NetworkAclEntryList"
                },
                "IsDefault": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkAclId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkAclAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkAclAssociation"
            }
        },
        "NetworkAclAssociation": {
            "type": "object",
            "properties": {
                "NetworkAclAssociationId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkAclId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkAclEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkAclEntry"
            }
        },
        "NetworkAclEntry": {
            "type": "object",
            "properties": {
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Egress": {
                    "$ref": "#/$defs/Boolean"
                },
                "IcmpTypeCode": {
                    "$ref": "#/$defs/IcmpTypeCode"
                },
                "Ipv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "PortRange": {
                    "$ref": "#/$defs/PortRange"
                },
                "Protocol": {
                    "$ref": "#/$defs/String"
                },
                "RuleAction": {
                    "$ref": "#/$defs/RuleAction"
                },
                "RuleNumber": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "IcmpTypeCode": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/Integer"
                },
                "Type": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "PortRange": {
            "type": "object",
            "properties": {
                "From": {
                    "$ref": "#/$defs/Integer"
                },
                "To": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "RuleAction": {
            "enum": [
                "allow",
                "deny"
            ]
        },
        "CreateNetworkAclRequest": {
            "type": "object",
            "properties": {
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "CreateNetworkAclEntryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkAclId": {
                    "$ref": "#/$defs/NetworkAclId"
                },
                "RuleNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/String"
                },
                "RuleAction": {
                    "$ref": "#/$defs/RuleAction"
                },
                "Egress": {
                    "$ref": "#/$defs/Boolean"
                },
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "IcmpTypeCode": {
                    "$ref": "#/$defs/IcmpTypeCode"
                },
                "PortRange": {
                    "$ref": "#/$defs/PortRange"
                }
            }
        },
        "NetworkAclId": {
            "type": "string"
        },
        "CreateNetworkInsightsAccessScopeResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScope": {
                    "$ref": "#/$defs/NetworkInsightsAccessScope"
                },
                "NetworkInsightsAccessScopeContent": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeContent"
                }
            }
        },
        "NetworkInsightsAccessScope": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeId"
                },
                "NetworkInsightsAccessScopeArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "CreatedDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "UpdatedDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "NetworkInsightsAccessScopeId": {
            "type": "string"
        },
        "NetworkInsightsAccessScopeContent": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeId"
                },
                "MatchPaths": {
                    "$ref": "#/$defs/AccessScopePathList"
                },
                "ExcludePaths": {
                    "$ref": "#/$defs/AccessScopePathList"
                }
            }
        },
        "AccessScopePathList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccessScopePath"
            }
        },
        "AccessScopePath": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/PathStatement"
                },
                "Destination": {
                    "$ref": "#/$defs/PathStatement"
                },
                "ThroughResources": {
                    "$ref": "#/$defs/ThroughResourcesStatementList"
                }
            }
        },
        "PathStatement": {
            "type": "object",
            "properties": {
                "PacketHeaderStatement": {
                    "$ref": "#/$defs/PacketHeaderStatement"
                },
                "ResourceStatement": {
                    "$ref": "#/$defs/ResourceStatement"
                }
            }
        },
        "PacketHeaderStatement": {
            "type": "object",
            "properties": {
                "SourceAddresses": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "DestinationAddresses": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SourcePorts": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "DestinationPorts": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SourcePrefixLists": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "DestinationPrefixLists": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Protocols": {
                    "$ref": "#/$defs/ProtocolList"
                }
            }
        },
        "ProtocolList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Protocol"
            }
        },
        "Protocol": {
            "enum": [
                "tcp",
                "udp"
            ]
        },
        "ResourceStatement": {
            "type": "object",
            "properties": {
                "Resources": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "ThroughResourcesStatementList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThroughResourcesStatement"
            }
        },
        "ThroughResourcesStatement": {
            "type": "object",
            "properties": {
                "ResourceStatement": {
                    "$ref": "#/$defs/ResourceStatement"
                }
            }
        },
        "CreateNetworkInsightsAccessScopeRequest": {
            "type": "object",
            "properties": {
                "MatchPaths": {
                    "$ref": "#/$defs/AccessScopePathListRequest"
                },
                "ExcludePaths": {
                    "$ref": "#/$defs/AccessScopePathListRequest"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AccessScopePathListRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccessScopePathRequest"
            }
        },
        "AccessScopePathRequest": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/PathStatementRequest"
                },
                "Destination": {
                    "$ref": "#/$defs/PathStatementRequest"
                },
                "ThroughResources": {
                    "$ref": "#/$defs/ThroughResourcesStatementRequestList"
                }
            }
        },
        "PathStatementRequest": {
            "type": "object",
            "properties": {
                "PacketHeaderStatement": {
                    "$ref": "#/$defs/PacketHeaderStatementRequest"
                },
                "ResourceStatement": {
                    "$ref": "#/$defs/ResourceStatementRequest"
                }
            }
        },
        "PacketHeaderStatementRequest": {
            "type": "object",
            "properties": {
                "SourceAddresses": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "DestinationAddresses": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SourcePorts": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "DestinationPorts": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SourcePrefixLists": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "DestinationPrefixLists": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Protocols": {
                    "$ref": "#/$defs/ProtocolList"
                }
            }
        },
        "ResourceStatementRequest": {
            "type": "object",
            "properties": {
                "Resources": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "ThroughResourcesStatementRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThroughResourcesStatementRequest"
            }
        },
        "ThroughResourcesStatementRequest": {
            "type": "object",
            "properties": {
                "ResourceStatement": {
                    "$ref": "#/$defs/ResourceStatementRequest"
                }
            }
        },
        "CreateNetworkInsightsPathResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsPath": {
                    "$ref": "#/$defs/NetworkInsightsPath"
                }
            }
        },
        "NetworkInsightsPath": {
            "type": "object",
            "properties": {
                "NetworkInsightsPathId": {
                    "$ref": "#/$defs/NetworkInsightsPathId"
                },
                "NetworkInsightsPathArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "CreatedDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "Destination": {
                    "$ref": "#/$defs/String"
                },
                "SourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "DestinationArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "SourceIp": {
                    "$ref": "#/$defs/IpAddress"
                },
                "DestinationIp": {
                    "$ref": "#/$defs/IpAddress"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "DestinationPort": {
                    "$ref": "#/$defs/Integer"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "FilterAtSource": {
                    "$ref": "#/$defs/PathFilter"
                },
                "FilterAtDestination": {
                    "$ref": "#/$defs/PathFilter"
                }
            }
        },
        "NetworkInsightsPathId": {
            "type": "string"
        },
        "IpAddress": {
            "type": "string"
        },
        "PathFilter": {
            "type": "object",
            "properties": {
                "SourceAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "SourcePortRange": {
                    "$ref": "#/$defs/FilterPortRange"
                },
                "DestinationAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "DestinationPortRange": {
                    "$ref": "#/$defs/FilterPortRange"
                }
            }
        },
        "FilterPortRange": {
            "type": "object",
            "properties": {
                "FromPort": {
                    "$ref": "#/$defs/Port"
                },
                "ToPort": {
                    "$ref": "#/$defs/Port"
                }
            }
        },
        "Port": {
            "type": "integer",
            "format": "int32"
        },
        "CreateNetworkInsightsPathRequest": {
            "type": "object",
            "properties": {
                "SourceIp": {
                    "$ref": "#/$defs/IpAddress"
                },
                "DestinationIp": {
                    "$ref": "#/$defs/IpAddress"
                },
                "Source": {
                    "$ref": "#/$defs/NetworkInsightsResourceId"
                },
                "Destination": {
                    "$ref": "#/$defs/NetworkInsightsResourceId"
                },
                "Protocol": {
                    "$ref": "#/$defs/Protocol"
                },
                "DestinationPort": {
                    "$ref": "#/$defs/Port"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "FilterAtSource": {
                    "$ref": "#/$defs/PathRequestFilter"
                },
                "FilterAtDestination": {
                    "$ref": "#/$defs/PathRequestFilter"
                }
            }
        },
        "NetworkInsightsResourceId": {
            "type": "string"
        },
        "PathRequestFilter": {
            "type": "object",
            "properties": {
                "SourceAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "SourcePortRange": {
                    "$ref": "#/$defs/RequestFilterPortRange"
                },
                "DestinationAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "DestinationPortRange": {
                    "$ref": "#/$defs/RequestFilterPortRange"
                }
            }
        },
        "RequestFilterPortRange": {
            "type": "object",
            "properties": {
                "FromPort": {
                    "$ref": "#/$defs/Port"
                },
                "ToPort": {
                    "$ref": "#/$defs/Port"
                }
            }
        },
        "CreateNetworkInterfaceResult": {
            "type": "object",
            "properties": {
                "NetworkInterface": {
                    "$ref": "#/$defs/NetworkInterface"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInterface": {
            "type": "object",
            "properties": {
                "Association": {
                    "$ref": "#/$defs/NetworkInterfaceAssociation"
                },
                "Attachment": {
                    "$ref": "#/$defs/NetworkInterfaceAttachment"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "ConnectionTrackingConfiguration": {
                    "$ref": "#/$defs/ConnectionTrackingConfiguration"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupIdentifierList"
                },
                "InterfaceType": {
                    "$ref": "#/$defs/NetworkInterfaceType"
                },
                "Ipv6Addresses": {
                    "$ref": "#/$defs/NetworkInterfaceIpv6AddressesList"
                },
                "MacAddress": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/NetworkInterfacePrivateIpAddressList"
                },
                "Ipv4Prefixes": {
                    "$ref": "#/$defs/Ipv4PrefixesList"
                },
                "Ipv6Prefixes": {
                    "$ref": "#/$defs/Ipv6PrefixesList"
                },
                "RequesterId": {
                    "$ref": "#/$defs/String"
                },
                "RequesterManaged": {
                    "$ref": "#/$defs/Boolean"
                },
                "SourceDestCheck": {
                    "$ref": "#/$defs/Boolean"
                },
                "Status": {
                    "$ref": "#/$defs/NetworkInterfaceStatus"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "TagSet": {
                    "$ref": "#/$defs/TagList"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "DenyAllIgwTraffic": {
                    "$ref": "#/$defs/Boolean"
                },
                "Ipv6Native": {
                    "$ref": "#/$defs/Boolean"
                },
                "Ipv6Address": {
                    "$ref": "#/$defs/String"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorResponse"
                }
            }
        },
        "NetworkInterfaceAssociation": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/String"
                },
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "IpOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "PublicDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                },
                "CustomerOwnedIp": {
                    "$ref": "#/$defs/String"
                },
                "CarrierIp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInterfaceAttachment": {
            "type": "object",
            "properties": {
                "AttachTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "AttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeviceIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "NetworkCardIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/AttachmentStatus"
                },
                "EnaSrdSpecification": {
                    "$ref": "#/$defs/AttachmentEnaSrdSpecification"
                }
            }
        },
        "AttachmentEnaSrdSpecification": {
            "type": "object",
            "properties": {
                "EnaSrdEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnaSrdUdpSpecification": {
                    "$ref": "#/$defs/AttachmentEnaSrdUdpSpecification"
                }
            }
        },
        "AttachmentEnaSrdUdpSpecification": {
            "type": "object",
            "properties": {
                "EnaSrdUdpEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ConnectionTrackingConfiguration": {
            "type": "object",
            "properties": {
                "TcpEstablishedTimeout": {
                    "$ref": "#/$defs/Integer"
                },
                "UdpStreamTimeout": {
                    "$ref": "#/$defs/Integer"
                },
                "UdpTimeout": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GroupIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupIdentifier"
            }
        },
        "GroupIdentifier": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInterfaceType": {
            "enum": [
                "interface",
                "natGateway",
                "efa",
                "efa_only",
                "trunk",
                "load_balancer",
                "network_load_balancer",
                "vpc_endpoint",
                "branch",
                "transit_gateway",
                "lambda",
                "quicksight",
                "global_accelerator_managed",
                "api_gateway_managed",
                "gateway_load_balancer",
                "gateway_load_balancer_endpoint",
                "iot_rules_managed",
                "aws_codestar_connections_managed"
            ]
        },
        "NetworkInterfaceIpv6AddressesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterfaceIpv6Address"
            }
        },
        "NetworkInterfaceIpv6Address": {
            "type": "object",
            "properties": {
                "Ipv6Address": {
                    "$ref": "#/$defs/String"
                },
                "IsPrimaryIpv6": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "NetworkInterfacePrivateIpAddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterfacePrivateIpAddress"
            }
        },
        "NetworkInterfacePrivateIpAddress": {
            "type": "object",
            "properties": {
                "Association": {
                    "$ref": "#/$defs/NetworkInterfaceAssociation"
                },
                "Primary": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv6PrefixesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv6PrefixSpecification"
            }
        },
        "Ipv6PrefixSpecification": {
            "type": "object",
            "properties": {
                "Ipv6Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInterfaceStatus": {
            "enum": [
                "available",
                "associated",
                "attaching",
                "in_use",
                "detaching"
            ]
        },
        "CreateNetworkInterfaceRequest": {
            "type": "object",
            "properties": {
                "Ipv4Prefixes": {
                    "$ref": "#/$defs/Ipv4PrefixList"
                },
                "Ipv4PrefixCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Prefixes": {
                    "$ref": "#/$defs/Ipv6PrefixList"
                },
                "Ipv6PrefixCount": {
                    "$ref": "#/$defs/Integer"
                },
                "InterfaceType": {
                    "$ref": "#/$defs/NetworkInterfaceCreationType"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "EnablePrimaryIpv6": {
                    "$ref": "#/$defs/Boolean"
                },
                "ConnectionTrackingSpecification": {
                    "$ref": "#/$defs/ConnectionTrackingSpecificationRequest"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorRequest"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "Groups": {
                    "$ref": "#/$defs/SecurityGroupIdStringList"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/PrivateIpAddressSpecificationList"
                },
                "SecondaryPrivateIpAddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Addresses": {
                    "$ref": "#/$defs/InstanceIpv6AddressList"
                },
                "Ipv6AddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "NetworkInterfaceCreationType": {
            "enum": [
                "efa",
                "efa_only",
                "branch",
                "trunk"
            ]
        },
        "CreateNetworkInterfacePermissionResult": {
            "type": "object",
            "properties": {
                "InterfacePermission": {
                    "$ref": "#/$defs/NetworkInterfacePermission"
                }
            }
        },
        "NetworkInterfacePermission": {
            "type": "object",
            "properties": {
                "NetworkInterfacePermissionId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "AwsAccountId": {
                    "$ref": "#/$defs/String"
                },
                "AwsService": {
                    "$ref": "#/$defs/String"
                },
                "Permission": {
                    "$ref": "#/$defs/InterfacePermissionType"
                },
                "PermissionState": {
                    "$ref": "#/$defs/NetworkInterfacePermissionState"
                }
            }
        },
        "InterfacePermissionType": {
            "enum": [
                "INSTANCE_ATTACH",
                "EIP_ASSOCIATE"
            ]
        },
        "NetworkInterfacePermissionState": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/NetworkInterfacePermissionStateCode"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInterfacePermissionStateCode": {
            "enum": [
                "pending",
                "granted",
                "revoking",
                "revoked"
            ]
        },
        "CreateNetworkInterfacePermissionRequest": {
            "type": "object",
            "properties": {
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "AwsAccountId": {
                    "$ref": "#/$defs/String"
                },
                "AwsService": {
                    "$ref": "#/$defs/String"
                },
                "Permission": {
                    "$ref": "#/$defs/InterfacePermissionType"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreatePlacementGroupResult": {
            "type": "object",
            "properties": {
                "PlacementGroup": {
                    "$ref": "#/$defs/PlacementGroup"
                }
            }
        },
        "PlacementGroup": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/PlacementGroupState"
                },
                "Strategy": {
                    "$ref": "#/$defs/PlacementStrategy"
                },
                "PartitionCount": {
                    "$ref": "#/$defs/Integer"
                },
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "GroupArn": {
                    "$ref": "#/$defs/String"
                },
                "SpreadLevel": {
                    "$ref": "#/$defs/SpreadLevel"
                }
            }
        },
        "PlacementGroupState": {
            "enum": [
                "pending",
                "available",
                "deleting",
                "deleted"
            ]
        },
        "PlacementStrategy": {
            "enum": [
                "cluster",
                "spread",
                "partition"
            ]
        },
        "SpreadLevel": {
            "enum": [
                "host",
                "rack"
            ]
        },
        "CreatePlacementGroupRequest": {
            "type": "object",
            "properties": {
                "PartitionCount": {
                    "$ref": "#/$defs/Integer"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "SpreadLevel": {
                    "$ref": "#/$defs/SpreadLevel"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "Strategy": {
                    "$ref": "#/$defs/PlacementStrategy"
                }
            }
        },
        "CreatePublicIpv4PoolResult": {
            "type": "object",
            "properties": {
                "PoolId": {
                    "$ref": "#/$defs/Ipv4PoolEc2Id"
                }
            }
        },
        "CreatePublicIpv4PoolRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateReplaceRootVolumeTaskResult": {
            "type": "object",
            "properties": {
                "ReplaceRootVolumeTask": {
                    "$ref": "#/$defs/ReplaceRootVolumeTask"
                }
            }
        },
        "ReplaceRootVolumeTask": {
            "type": "object",
            "properties": {
                "ReplaceRootVolumeTaskId": {
                    "$ref": "#/$defs/ReplaceRootVolumeTaskId"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "TaskState": {
                    "$ref": "#/$defs/ReplaceRootVolumeTaskState"
                },
                "StartTime": {
                    "$ref": "#/$defs/String"
                },
                "CompleteTime": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "DeleteReplacedRootVolume": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ReplaceRootVolumeTaskId": {
            "type": "string"
        },
        "ReplaceRootVolumeTaskState": {
            "enum": [
                "pending",
                "in_progress",
                "failing",
                "succeeded",
                "failed",
                "failed_detached"
            ]
        },
        "CreateReplaceRootVolumeTaskRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DeleteReplacedRootVolume": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateReservedInstancesListingResult": {
            "type": "object",
            "properties": {
                "ReservedInstancesListings": {
                    "$ref": "#/$defs/ReservedInstancesListingList"
                }
            }
        },
        "CreateReservedInstancesListingRequest": {
            "type": "object",
            "properties": {
                "ReservedInstancesId": {
                    "$ref": "#/$defs/ReservationId"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "PriceSchedules": {
                    "$ref": "#/$defs/PriceScheduleSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PriceScheduleSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PriceScheduleSpecification"
            }
        },
        "PriceScheduleSpecification": {
            "type": "object",
            "properties": {
                "Term": {
                    "$ref": "#/$defs/Long"
                },
                "Price": {
                    "$ref": "#/$defs/Double"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                }
            }
        },
        "CreateRestoreImageTaskResult": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateRestoreImageTaskRequest": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/String"
                },
                "ObjectKey": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateRouteResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateRouteRequest": {
            "type": "object",
            "properties": {
                "DestinationPrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "LocalGatewayId": {
                    "$ref": "#/$defs/LocalGatewayId"
                },
                "CarrierGatewayId": {
                    "$ref": "#/$defs/CarrierGatewayId"
                },
                "CoreNetworkArn": {
                    "$ref": "#/$defs/CoreNetworkArn"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "RouteTableId": {
                    "$ref": "#/$defs/RouteTableId"
                },
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "GatewayId": {
                    "$ref": "#/$defs/RouteGatewayId"
                },
                "DestinationIpv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "EgressOnlyInternetGatewayId": {
                    "$ref": "#/$defs/EgressOnlyInternetGatewayId"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/VpcPeeringConnectionId"
                },
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                }
            }
        },
        "TransitGatewayId": {
            "type": "string"
        },
        "CoreNetworkArn": {
            "type": "string"
        },
        "VpcPeeringConnectionId": {
            "type": "string"
        },
        "CreateRouteTableResult": {
            "type": "object",
            "properties": {
                "RouteTable": {
                    "$ref": "#/$defs/RouteTable"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RouteTable": {
            "type": "object",
            "properties": {
                "Associations": {
                    "$ref": "#/$defs/RouteTableAssociationList"
                },
                "PropagatingVgws": {
                    "$ref": "#/$defs/PropagatingVgwList"
                },
                "RouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "Routes": {
                    "$ref": "#/$defs/RouteList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RouteTableAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RouteTableAssociation"
            }
        },
        "RouteTableAssociation": {
            "type": "object",
            "properties": {
                "Main": {
                    "$ref": "#/$defs/Boolean"
                },
                "RouteTableAssociationId": {
                    "$ref": "#/$defs/String"
                },
                "RouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "GatewayId": {
                    "$ref": "#/$defs/String"
                },
                "AssociationState": {
                    "$ref": "#/$defs/RouteTableAssociationState"
                }
            }
        },
        "PropagatingVgwList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PropagatingVgw"
            }
        },
        "PropagatingVgw": {
            "type": "object",
            "properties": {
                "GatewayId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RouteList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Route"
            }
        },
        "Route": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "DestinationIpv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "DestinationPrefixListId": {
                    "$ref": "#/$defs/String"
                },
                "EgressOnlyInternetGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "GatewayId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "NatGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "LocalGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "CarrierGatewayId": {
                    "$ref": "#/$defs/CarrierGatewayId"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "Origin": {
                    "$ref": "#/$defs/RouteOrigin"
                },
                "State": {
                    "$ref": "#/$defs/RouteState"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/String"
                },
                "CoreNetworkArn": {
                    "$ref": "#/$defs/CoreNetworkArn"
                }
            }
        },
        "RouteOrigin": {
            "enum": [
                "CreateRouteTable",
                "CreateRoute",
                "EnableVgwRoutePropagation"
            ]
        },
        "RouteState": {
            "enum": [
                "active",
                "blackhole"
            ]
        },
        "CreateRouteTableRequest": {
            "type": "object",
            "properties": {
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "CreateSecurityGroupResult": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SecurityGroupArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Snapshot": {
            "type": "object",
            "properties": {
                "OwnerAlias": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "StorageTier": {
                    "$ref": "#/$defs/StorageTier"
                },
                "RestoreExpiryTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "SseType": {
                    "$ref": "#/$defs/SSEType"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "TransferType": {
                    "$ref": "#/$defs/TransferType"
                },
                "CompletionDurationMinutes": {
                    "$ref": "#/$defs/SnapshotCompletionDurationMinutesResponse"
                },
                "CompletionTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "FullSnapshotSizeInBytes": {
                    "$ref": "#/$defs/Long"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "VolumeId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/SnapshotState"
                },
                "StateMessage": {
                    "$ref": "#/$defs/String"
                },
                "StartTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Progress": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "DataEncryptionKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StorageTier": {
            "enum": [
                "archive",
                "standard"
            ]
        },
        "SSEType": {
            "enum": [
                "sse_ebs",
                "sse_kms",
                "none"
            ]
        },
        "TransferType": {
            "enum": [
                "time_based",
                "standard"
            ]
        },
        "SnapshotCompletionDurationMinutesResponse": {
            "type": "integer",
            "format": "int32"
        },
        "SnapshotState": {
            "enum": [
                "pending",
                "completed",
                "error",
                "recoverable",
                "recovering"
            ]
        },
        "CreateSnapshotRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "VolumeId": {
                    "$ref": "#/$defs/VolumeId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "Location": {
                    "$ref": "#/$defs/SnapshotLocationEnum"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SnapshotLocationEnum": {
            "enum": [
                "REGIONAL",
                "LOCAL"
            ]
        },
        "CreateSnapshotsResult": {
            "type": "object",
            "properties": {
                "Snapshots": {
                    "$ref": "#/$defs/SnapshotSet"
                }
            }
        },
        "SnapshotSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SnapshotInfo"
            }
        },
        "SnapshotInfo": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "VolumeId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/SnapshotState"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "StartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Progress": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "SseType": {
                    "$ref": "#/$defs/SSEType"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateSnapshotsRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "InstanceSpecification": {
                    "$ref": "#/$defs/InstanceSpecification"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "CopyTagsFromSource": {
                    "$ref": "#/$defs/CopyTagsFromSource"
                },
                "Location": {
                    "$ref": "#/$defs/SnapshotLocationEnum"
                }
            }
        },
        "InstanceSpecification": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceIdWithVolumeResolver"
                },
                "ExcludeBootVolume": {
                    "$ref": "#/$defs/Boolean"
                },
                "ExcludeDataVolumeIds": {
                    "$ref": "#/$defs/VolumeIdStringList"
                }
            }
        },
        "InstanceIdWithVolumeResolver": {
            "type": "string"
        },
        "VolumeIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeId"
            }
        },
        "CopyTagsFromSource": {
            "enum": [
                "volume"
            ]
        },
        "CreateSpotDatafeedSubscriptionResult": {
            "type": "object",
            "properties": {
                "SpotDatafeedSubscription": {
                    "$ref": "#/$defs/SpotDatafeedSubscription"
                }
            }
        },
        "SpotDatafeedSubscription": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/String"
                },
                "Fault": {
                    "$ref": "#/$defs/SpotInstanceStateFault"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Prefix": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/DatafeedSubscriptionState"
                }
            }
        },
        "SpotInstanceStateFault": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DatafeedSubscriptionState": {
            "enum": [
                "Active",
                "Inactive"
            ]
        },
        "CreateSpotDatafeedSubscriptionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Bucket": {
                    "$ref": "#/$defs/String"
                },
                "Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateStoreImageTaskResult": {
            "type": "object",
            "properties": {
                "ObjectKey": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateStoreImageTaskRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3ObjectTags": {
                    "$ref": "#/$defs/S3ObjectTagList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "S3ObjectTagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/S3ObjectTag"
            }
        },
        "S3ObjectTag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateSubnetResult": {
            "type": "object",
            "properties": {
                "Subnet": {
                    "$ref": "#/$defs/Subnet"
                }
            }
        },
        "CreateSubnetRequest": {
            "type": "object",
            "properties": {
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/String"
                },
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "Ipv6Native": {
                    "$ref": "#/$defs/Boolean"
                },
                "Ipv4IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Ipv4NetmaskLength": {
                    "$ref": "#/$defs/NetmaskLength"
                },
                "Ipv6IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Ipv6NetmaskLength": {
                    "$ref": "#/$defs/NetmaskLength"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateSubnetCidrReservationResult": {
            "type": "object",
            "properties": {
                "SubnetCidrReservation": {
                    "$ref": "#/$defs/SubnetCidrReservation"
                }
            }
        },
        "SubnetCidrReservation": {
            "type": "object",
            "properties": {
                "SubnetCidrReservationId": {
                    "$ref": "#/$defs/SubnetCidrReservationId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "ReservationType": {
                    "$ref": "#/$defs/SubnetCidrReservationType"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "SubnetCidrReservationId": {
            "type": "string"
        },
        "SubnetCidrReservationType": {
            "enum": [
                "prefix",
                "explicit"
            ]
        },
        "CreateSubnetCidrReservationRequest": {
            "type": "object",
            "properties": {
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "ReservationType": {
                    "$ref": "#/$defs/SubnetCidrReservationType"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "CreateTagsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Resources": {
                    "$ref": "#/$defs/ResourceIdList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ResourceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TaggableResourceId"
            }
        },
        "TaggableResourceId": {
            "type": "string"
        },
        "CreateTrafficMirrorFilterResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilter": {
                    "$ref": "#/$defs/TrafficMirrorFilter"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrafficMirrorFilter": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterId": {
                    "$ref": "#/$defs/String"
                },
                "IngressFilterRules": {
                    "$ref": "#/$defs/TrafficMirrorFilterRuleList"
                },
                "EgressFilterRules": {
                    "$ref": "#/$defs/TrafficMirrorFilterRuleList"
                },
                "NetworkServices": {
                    "$ref": "#/$defs/TrafficMirrorNetworkServiceList"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TrafficMirrorFilterRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorFilterRule"
            }
        },
        "TrafficMirrorFilterRule": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterRuleId": {
                    "$ref": "#/$defs/String"
                },
                "TrafficMirrorFilterId": {
                    "$ref": "#/$defs/String"
                },
                "TrafficDirection": {
                    "$ref": "#/$defs/TrafficDirection"
                },
                "RuleNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "RuleAction": {
                    "$ref": "#/$defs/TrafficMirrorRuleAction"
                },
                "Protocol": {
                    "$ref": "#/$defs/Integer"
                },
                "DestinationPortRange": {
                    "$ref": "#/$defs/TrafficMirrorPortRange"
                },
                "SourcePortRange": {
                    "$ref": "#/$defs/TrafficMirrorPortRange"
                },
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "SourceCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TrafficDirection": {
            "enum": [
                "ingress",
                "egress"
            ]
        },
        "TrafficMirrorRuleAction": {
            "enum": [
                "accept",
                "reject"
            ]
        },
        "TrafficMirrorPortRange": {
            "type": "object",
            "properties": {
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "TrafficMirrorNetworkServiceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorNetworkService"
            }
        },
        "TrafficMirrorNetworkService": {
            "enum": [
                "amazon_dns"
            ]
        },
        "CreateTrafficMirrorFilterRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateTrafficMirrorFilterRuleResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterRule": {
                    "$ref": "#/$defs/TrafficMirrorFilterRule"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateTrafficMirrorFilterRuleRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterId": {
                    "$ref": "#/$defs/TrafficMirrorFilterId"
                },
                "TrafficDirection": {
                    "$ref": "#/$defs/TrafficDirection"
                },
                "RuleNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "RuleAction": {
                    "$ref": "#/$defs/TrafficMirrorRuleAction"
                },
                "DestinationPortRange": {
                    "$ref": "#/$defs/TrafficMirrorPortRangeRequest"
                },
                "SourcePortRange": {
                    "$ref": "#/$defs/TrafficMirrorPortRangeRequest"
                },
                "Protocol": {
                    "$ref": "#/$defs/Integer"
                },
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "SourceCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "TrafficMirrorFilterId": {
            "type": "string"
        },
        "TrafficMirrorPortRangeRequest": {
            "type": "object",
            "properties": {
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "CreateTrafficMirrorSessionResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorSession": {
                    "$ref": "#/$defs/TrafficMirrorSession"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrafficMirrorSession": {
            "type": "object",
            "properties": {
                "TrafficMirrorSessionId": {
                    "$ref": "#/$defs/String"
                },
                "TrafficMirrorTargetId": {
                    "$ref": "#/$defs/String"
                },
                "TrafficMirrorFilterId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "PacketLength": {
                    "$ref": "#/$defs/Integer"
                },
                "SessionNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "VirtualNetworkId": {
                    "$ref": "#/$defs/Integer"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateTrafficMirrorSessionRequest": {
            "type": "object",
            "properties": {
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "TrafficMirrorTargetId": {
                    "$ref": "#/$defs/TrafficMirrorTargetId"
                },
                "TrafficMirrorFilterId": {
                    "$ref": "#/$defs/TrafficMirrorFilterId"
                },
                "PacketLength": {
                    "$ref": "#/$defs/Integer"
                },
                "SessionNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "VirtualNetworkId": {
                    "$ref": "#/$defs/Integer"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrafficMirrorTargetId": {
            "type": "string"
        },
        "CreateTrafficMirrorTargetResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorTarget": {
                    "$ref": "#/$defs/TrafficMirrorTarget"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrafficMirrorTarget": {
            "type": "object",
            "properties": {
                "TrafficMirrorTargetId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkLoadBalancerArn": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/TrafficMirrorTargetType"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "GatewayLoadBalancerEndpointId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrafficMirrorTargetType": {
            "enum": [
                "network_interface",
                "network_load_balancer",
                "gateway_load_balancer_endpoint"
            ]
        },
        "CreateTrafficMirrorTargetRequest": {
            "type": "object",
            "properties": {
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "NetworkLoadBalancerArn": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "GatewayLoadBalancerEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                }
            }
        },
        "CreateTransitGatewayResult": {
            "type": "object",
            "properties": {
                "TransitGateway": {
                    "$ref": "#/$defs/TransitGateway"
                }
            }
        },
        "TransitGateway": {
            "type": "object",
            "properties": {
                "TransitGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayArn": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayState"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "CreationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Options": {
                    "$ref": "#/$defs/TransitGatewayOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TransitGatewayState": {
            "enum": [
                "pending",
                "available",
                "modifying",
                "deleting",
                "deleted"
            ]
        },
        "TransitGatewayOptions": {
            "type": "object",
            "properties": {
                "AmazonSideAsn": {
                    "$ref": "#/$defs/Long"
                },
                "TransitGatewayCidrBlocks": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "AutoAcceptSharedAttachments": {
                    "$ref": "#/$defs/AutoAcceptSharedAttachmentsValue"
                },
                "DefaultRouteTableAssociation": {
                    "$ref": "#/$defs/DefaultRouteTableAssociationValue"
                },
                "AssociationDefaultRouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "DefaultRouteTablePropagation": {
                    "$ref": "#/$defs/DefaultRouteTablePropagationValue"
                },
                "PropagationDefaultRouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "VpnEcmpSupport": {
                    "$ref": "#/$defs/VpnEcmpSupportValue"
                },
                "DnsSupport": {
                    "$ref": "#/$defs/DnsSupportValue"
                },
                "SecurityGroupReferencingSupport": {
                    "$ref": "#/$defs/SecurityGroupReferencingSupportValue"
                },
                "MulticastSupport": {
                    "$ref": "#/$defs/MulticastSupportValue"
                }
            }
        },
        "AutoAcceptSharedAttachmentsValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "DefaultRouteTableAssociationValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "DefaultRouteTablePropagationValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "VpnEcmpSupportValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "MulticastSupportValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "CreateTransitGatewayRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Options": {
                    "$ref": "#/$defs/TransitGatewayRequestOptions"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayRequestOptions": {
            "type": "object",
            "properties": {
                "AmazonSideAsn": {
                    "$ref": "#/$defs/Long"
                },
                "AutoAcceptSharedAttachments": {
                    "$ref": "#/$defs/AutoAcceptSharedAttachmentsValue"
                },
                "DefaultRouteTableAssociation": {
                    "$ref": "#/$defs/DefaultRouteTableAssociationValue"
                },
                "DefaultRouteTablePropagation": {
                    "$ref": "#/$defs/DefaultRouteTablePropagationValue"
                },
                "VpnEcmpSupport": {
                    "$ref": "#/$defs/VpnEcmpSupportValue"
                },
                "DnsSupport": {
                    "$ref": "#/$defs/DnsSupportValue"
                },
                "SecurityGroupReferencingSupport": {
                    "$ref": "#/$defs/SecurityGroupReferencingSupportValue"
                },
                "MulticastSupport": {
                    "$ref": "#/$defs/MulticastSupportValue"
                },
                "TransitGatewayCidrBlocks": {
                    "$ref": "#/$defs/TransitGatewayCidrBlockStringList"
                }
            }
        },
        "TransitGatewayCidrBlockStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "CreateTransitGatewayConnectResult": {
            "type": "object",
            "properties": {
                "TransitGatewayConnect": {
                    "$ref": "#/$defs/TransitGatewayConnect"
                }
            }
        },
        "TransitGatewayConnect": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "TransportTransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayAttachmentState"
                },
                "CreationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Options": {
                    "$ref": "#/$defs/TransitGatewayConnectOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TransitGatewayConnectOptions": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/ProtocolValue"
                }
            }
        },
        "ProtocolValue": {
            "enum": [
                "gre"
            ]
        },
        "CreateTransitGatewayConnectRequest": {
            "type": "object",
            "properties": {
                "TransportTransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "Options": {
                    "$ref": "#/$defs/CreateTransitGatewayConnectRequestOptions"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateTransitGatewayConnectRequestOptions": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/ProtocolValue"
                }
            }
        },
        "CreateTransitGatewayConnectPeerResult": {
            "type": "object",
            "properties": {
                "TransitGatewayConnectPeer": {
                    "$ref": "#/$defs/TransitGatewayConnectPeer"
                }
            }
        },
        "TransitGatewayConnectPeer": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "TransitGatewayConnectPeerId": {
                    "$ref": "#/$defs/TransitGatewayConnectPeerId"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayConnectPeerState"
                },
                "CreationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "ConnectPeerConfiguration": {
                    "$ref": "#/$defs/TransitGatewayConnectPeerConfiguration"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TransitGatewayConnectPeerId": {
            "type": "string"
        },
        "TransitGatewayConnectPeerState": {
            "enum": [
                "pending",
                "available",
                "deleting",
                "deleted"
            ]
        },
        "TransitGatewayConnectPeerConfiguration": {
            "type": "object",
            "properties": {
                "TransitGatewayAddress": {
                    "$ref": "#/$defs/String"
                },
                "PeerAddress": {
                    "$ref": "#/$defs/String"
                },
                "InsideCidrBlocks": {
                    "$ref": "#/$defs/InsideCidrBlocksStringList"
                },
                "Protocol": {
                    "$ref": "#/$defs/ProtocolValue"
                },
                "BgpConfigurations": {
                    "$ref": "#/$defs/TransitGatewayAttachmentBgpConfigurationList"
                }
            }
        },
        "InsideCidrBlocksStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "TransitGatewayAttachmentBgpConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayAttachmentBgpConfiguration"
            }
        },
        "TransitGatewayAttachmentBgpConfiguration": {
            "type": "object",
            "properties": {
                "TransitGatewayAsn": {
                    "$ref": "#/$defs/Long"
                },
                "PeerAsn": {
                    "$ref": "#/$defs/Long"
                },
                "TransitGatewayAddress": {
                    "$ref": "#/$defs/String"
                },
                "PeerAddress": {
                    "$ref": "#/$defs/String"
                },
                "BgpStatus": {
                    "$ref": "#/$defs/BgpStatus"
                }
            }
        },
        "BgpStatus": {
            "enum": [
                "up",
                "down"
            ]
        },
        "CreateTransitGatewayConnectPeerRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "TransitGatewayAddress": {
                    "$ref": "#/$defs/String"
                },
                "PeerAddress": {
                    "$ref": "#/$defs/String"
                },
                "BgpOptions": {
                    "$ref": "#/$defs/TransitGatewayConnectRequestBgpOptions"
                },
                "InsideCidrBlocks": {
                    "$ref": "#/$defs/InsideCidrBlocksStringList"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayConnectRequestBgpOptions": {
            "type": "object",
            "properties": {
                "PeerAsn": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "CreateTransitGatewayMulticastDomainResult": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomain": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomain"
                }
            }
        },
        "TransitGatewayMulticastDomain": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayMulticastDomainArn": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Options": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainOptions"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainState"
                },
                "CreationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TransitGatewayMulticastDomainOptions": {
            "type": "object",
            "properties": {
                "Igmpv2Support": {
                    "$ref": "#/$defs/Igmpv2SupportValue"
                },
                "StaticSourcesSupport": {
                    "$ref": "#/$defs/StaticSourcesSupportValue"
                },
                "AutoAcceptSharedAssociations": {
                    "$ref": "#/$defs/AutoAcceptSharedAssociationsValue"
                }
            }
        },
        "Igmpv2SupportValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "StaticSourcesSupportValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "AutoAcceptSharedAssociationsValue": {
            "enum": [
                "enable",
                "disable"
            ]
        },
        "TransitGatewayMulticastDomainState": {
            "enum": [
                "pending",
                "available",
                "deleting",
                "deleted"
            ]
        },
        "CreateTransitGatewayMulticastDomainRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "Options": {
                    "$ref": "#/$defs/CreateTransitGatewayMulticastDomainRequestOptions"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateTransitGatewayMulticastDomainRequestOptions": {
            "type": "object",
            "properties": {
                "Igmpv2Support": {
                    "$ref": "#/$defs/Igmpv2SupportValue"
                },
                "StaticSourcesSupport": {
                    "$ref": "#/$defs/StaticSourcesSupportValue"
                },
                "AutoAcceptSharedAssociations": {
                    "$ref": "#/$defs/AutoAcceptSharedAssociationsValue"
                }
            }
        },
        "CreateTransitGatewayPeeringAttachmentResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPeeringAttachment": {
                    "$ref": "#/$defs/TransitGatewayPeeringAttachment"
                }
            }
        },
        "CreateTransitGatewayPeeringAttachmentRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "PeerTransitGatewayId": {
                    "$ref": "#/$defs/TransitAssociationGatewayId"
                },
                "PeerAccountId": {
                    "$ref": "#/$defs/String"
                },
                "PeerRegion": {
                    "$ref": "#/$defs/String"
                },
                "Options": {
                    "$ref": "#/$defs/CreateTransitGatewayPeeringAttachmentRequestOptions"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitAssociationGatewayId": {
            "type": "string"
        },
        "CreateTransitGatewayPeeringAttachmentRequestOptions": {
            "type": "object",
            "properties": {
                "DynamicRouting": {
                    "$ref": "#/$defs/DynamicRoutingValue"
                }
            }
        },
        "CreateTransitGatewayPolicyTableResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTable": {
                    "$ref": "#/$defs/TransitGatewayPolicyTable"
                }
            }
        },
        "TransitGatewayPolicyTable": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTableId": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableId"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableState"
                },
                "CreationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TransitGatewayPolicyTableState": {
            "enum": [
                "pending",
                "available",
                "deleting",
                "deleted"
            ]
        },
        "CreateTransitGatewayPolicyTableRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateTransitGatewayPrefixListReferenceResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPrefixListReference": {
                    "$ref": "#/$defs/TransitGatewayPrefixListReference"
                }
            }
        },
        "TransitGatewayPrefixListReference": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "PrefixListOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayPrefixListReferenceState"
                },
                "Blackhole": {
                    "$ref": "#/$defs/Boolean"
                },
                "TransitGatewayAttachment": {
                    "$ref": "#/$defs/TransitGatewayPrefixListAttachment"
                }
            }
        },
        "TransitGatewayPrefixListReferenceState": {
            "enum": [
                "pending",
                "available",
                "modifying",
                "deleting"
            ]
        },
        "TransitGatewayPrefixListAttachment": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateTransitGatewayPrefixListReferenceRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "Blackhole": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateTransitGatewayRouteResult": {
            "type": "object",
            "properties": {
                "Route": {
                    "$ref": "#/$defs/TransitGatewayRoute"
                }
            }
        },
        "TransitGatewayRoute": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "TransitGatewayRouteTableAnnouncementId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementId"
                },
                "TransitGatewayAttachments": {
                    "$ref": "#/$defs/TransitGatewayRouteAttachmentList"
                },
                "Type": {
                    "$ref": "#/$defs/TransitGatewayRouteType"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayRouteState"
                }
            }
        },
        "TransitGatewayRouteTableAnnouncementId": {
            "type": "string"
        },
        "TransitGatewayRouteAttachmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayRouteAttachment"
            }
        },
        "TransitGatewayRouteAttachment": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                }
            }
        },
        "TransitGatewayRouteType": {
            "enum": [
                "static",
                "propagated"
            ]
        },
        "TransitGatewayRouteState": {
            "enum": [
                "pending",
                "active",
                "blackhole",
                "deleting",
                "deleted"
            ]
        },
        "CreateTransitGatewayRouteRequest": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "Blackhole": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateTransitGatewayRouteTableResult": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTable": {
                    "$ref": "#/$defs/TransitGatewayRouteTable"
                }
            }
        },
        "TransitGatewayRouteTable": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayRouteTableState"
                },
                "DefaultAssociationRouteTable": {
                    "$ref": "#/$defs/Boolean"
                },
                "DefaultPropagationRouteTable": {
                    "$ref": "#/$defs/Boolean"
                },
                "CreationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TransitGatewayRouteTableState": {
            "enum": [
                "pending",
                "available",
                "deleting",
                "deleted"
            ]
        },
        "CreateTransitGatewayRouteTableRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateTransitGatewayRouteTableAnnouncementResult": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableAnnouncement": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncement"
                }
            }
        },
        "TransitGatewayRouteTableAnnouncement": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableAnnouncementId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementId"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "CoreNetworkId": {
                    "$ref": "#/$defs/String"
                },
                "PeerTransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "PeerCoreNetworkId": {
                    "$ref": "#/$defs/String"
                },
                "PeeringAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "AnnouncementDirection": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementDirection"
                },
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementState"
                },
                "CreationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TransitGatewayRouteTableAnnouncementDirection": {
            "enum": [
                "outgoing",
                "incoming"
            ]
        },
        "TransitGatewayRouteTableAnnouncementState": {
            "enum": [
                "available",
                "pending",
                "failing",
                "failed",
                "deleting",
                "deleted"
            ]
        },
        "CreateTransitGatewayRouteTableAnnouncementRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "PeeringAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateTransitGatewayVpcAttachmentResult": {
            "type": "object",
            "properties": {
                "TransitGatewayVpcAttachment": {
                    "$ref": "#/$defs/TransitGatewayVpcAttachment"
                }
            }
        },
        "CreateTransitGatewayVpcAttachmentRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/TransitGatewaySubnetIdList"
                },
                "Options": {
                    "$ref": "#/$defs/CreateTransitGatewayVpcAttachmentRequestOptions"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateTransitGatewayVpcAttachmentRequestOptions": {
            "type": "object",
            "properties": {
                "DnsSupport": {
                    "$ref": "#/$defs/DnsSupportValue"
                },
                "SecurityGroupReferencingSupport": {
                    "$ref": "#/$defs/SecurityGroupReferencingSupportValue"
                },
                "Ipv6Support": {
                    "$ref": "#/$defs/Ipv6SupportValue"
                },
                "ApplianceModeSupport": {
                    "$ref": "#/$defs/ApplianceModeSupportValue"
                }
            }
        },
        "CreateVerifiedAccessEndpointResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpoint": {
                    "$ref": "#/$defs/VerifiedAccessEndpoint"
                }
            }
        },
        "VerifiedAccessEndpoint": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/String"
                },
                "VerifiedAccessGroupId": {
                    "$ref": "#/$defs/String"
                },
                "VerifiedAccessEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "ApplicationDomain": {
                    "$ref": "#/$defs/String"
                },
                "EndpointType": {
                    "$ref": "#/$defs/VerifiedAccessEndpointType"
                },
                "AttachmentType": {
                    "$ref": "#/$defs/VerifiedAccessEndpointAttachmentType"
                },
                "DomainCertificateArn": {
                    "$ref": "#/$defs/String"
                },
                "EndpointDomain": {
                    "$ref": "#/$defs/String"
                },
                "DeviceValidationDomain": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdList"
                },
                "LoadBalancerOptions": {
                    "$ref": "#/$defs/VerifiedAccessEndpointLoadBalancerOptions"
                },
                "NetworkInterfaceOptions": {
                    "$ref": "#/$defs/VerifiedAccessEndpointEniOptions"
                },
                "Status": {
                    "$ref": "#/$defs/VerifiedAccessEndpointStatus"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "CreationTime": {
                    "$ref": "#/$defs/String"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/String"
                },
                "DeletionTime": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationResponse"
                },
                "RdsOptions": {
                    "$ref": "#/$defs/VerifiedAccessEndpointRdsOptions"
                },
                "CidrOptions": {
                    "$ref": "#/$defs/VerifiedAccessEndpointCidrOptions"
                }
            }
        },
        "VerifiedAccessEndpointType": {
            "enum": [
                "load_balancer",
                "network_interface",
                "rds",
                "cidr"
            ]
        },
        "VerifiedAccessEndpointAttachmentType": {
            "enum": [
                "vpc"
            ]
        },
        "SecurityGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "VerifiedAccessEndpointLoadBalancerOptions": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/VerifiedAccessEndpointProtocol"
                },
                "Port": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "LoadBalancerArn": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/VerifiedAccessEndpointSubnetIdList"
                },
                "PortRanges": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortRangeList"
                }
            }
        },
        "VerifiedAccessEndpointProtocol": {
            "enum": [
                "http",
                "https",
                "tcp"
            ]
        },
        "VerifiedAccessEndpointPortNumber": {
            "type": "integer",
            "format": "int32"
        },
        "VerifiedAccessEndpointSubnetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "VerifiedAccessEndpointPortRangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessEndpointPortRange"
            }
        },
        "VerifiedAccessEndpointPortRange": {
            "type": "object",
            "properties": {
                "FromPort": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "ToPort": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                }
            }
        },
        "VerifiedAccessEndpointEniOptions": {
            "type": "object",
            "properties": {
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "Protocol": {
                    "$ref": "#/$defs/VerifiedAccessEndpointProtocol"
                },
                "Port": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "PortRanges": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortRangeList"
                }
            }
        },
        "VerifiedAccessEndpointStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/VerifiedAccessEndpointStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VerifiedAccessEndpointStatusCode": {
            "enum": [
                "pending",
                "active",
                "updating",
                "deleting",
                "deleted"
            ]
        },
        "VerifiedAccessEndpointRdsOptions": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/VerifiedAccessEndpointProtocol"
                },
                "Port": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "RdsDbInstanceArn": {
                    "$ref": "#/$defs/String"
                },
                "RdsDbClusterArn": {
                    "$ref": "#/$defs/String"
                },
                "RdsDbProxyArn": {
                    "$ref": "#/$defs/String"
                },
                "RdsEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/VerifiedAccessEndpointSubnetIdList"
                }
            }
        },
        "VerifiedAccessEndpointCidrOptions": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "PortRanges": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortRangeList"
                },
                "Protocol": {
                    "$ref": "#/$defs/VerifiedAccessEndpointProtocol"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/VerifiedAccessEndpointSubnetIdList"
                }
            }
        },
        "CreateVerifiedAccessEndpointRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroupId": {
                    "$ref": "#/$defs/VerifiedAccessGroupId"
                },
                "EndpointType": {
                    "$ref": "#/$defs/VerifiedAccessEndpointType"
                },
                "AttachmentType": {
                    "$ref": "#/$defs/VerifiedAccessEndpointAttachmentType"
                },
                "DomainCertificateArn": {
                    "$ref": "#/$defs/CertificateArn"
                },
                "ApplicationDomain": {
                    "$ref": "#/$defs/String"
                },
                "EndpointDomainPrefix": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdList"
                },
                "LoadBalancerOptions": {
                    "$ref": "#/$defs/CreateVerifiedAccessEndpointLoadBalancerOptions"
                },
                "NetworkInterfaceOptions": {
                    "$ref": "#/$defs/CreateVerifiedAccessEndpointEniOptions"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationRequest"
                },
                "RdsOptions": {
                    "$ref": "#/$defs/CreateVerifiedAccessEndpointRdsOptions"
                },
                "CidrOptions": {
                    "$ref": "#/$defs/CreateVerifiedAccessEndpointCidrOptions"
                }
            }
        },
        "VerifiedAccessGroupId": {
            "type": "string"
        },
        "CertificateArn": {
            "type": "string"
        },
        "CreateVerifiedAccessEndpointLoadBalancerOptions": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/VerifiedAccessEndpointProtocol"
                },
                "Port": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "LoadBalancerArn": {
                    "$ref": "#/$defs/LoadBalancerArn"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/CreateVerifiedAccessEndpointSubnetIdList"
                },
                "PortRanges": {
                    "$ref": "#/$defs/CreateVerifiedAccessEndpointPortRangeList"
                }
            }
        },
        "LoadBalancerArn": {
            "type": "string"
        },
        "CreateVerifiedAccessEndpointSubnetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "CreateVerifiedAccessEndpointPortRangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CreateVerifiedAccessEndpointPortRange"
            }
        },
        "CreateVerifiedAccessEndpointPortRange": {
            "type": "object",
            "properties": {
                "FromPort": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "ToPort": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                }
            }
        },
        "CreateVerifiedAccessEndpointEniOptions": {
            "type": "object",
            "properties": {
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "Protocol": {
                    "$ref": "#/$defs/VerifiedAccessEndpointProtocol"
                },
                "Port": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "PortRanges": {
                    "$ref": "#/$defs/CreateVerifiedAccessEndpointPortRangeList"
                }
            }
        },
        "VerifiedAccessSseSpecificationRequest": {
            "type": "object",
            "properties": {
                "CustomerManagedKeyEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "KmsKeyArn": {
                    "$ref": "#/$defs/KmsKeyArn"
                }
            }
        },
        "CreateVerifiedAccessEndpointRdsOptions": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/VerifiedAccessEndpointProtocol"
                },
                "Port": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "RdsDbInstanceArn": {
                    "$ref": "#/$defs/RdsDbInstanceArn"
                },
                "RdsDbClusterArn": {
                    "$ref": "#/$defs/RdsDbClusterArn"
                },
                "RdsDbProxyArn": {
                    "$ref": "#/$defs/RdsDbProxyArn"
                },
                "RdsEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/CreateVerifiedAccessEndpointSubnetIdList"
                }
            }
        },
        "RdsDbInstanceArn": {
            "type": "string"
        },
        "RdsDbClusterArn": {
            "type": "string"
        },
        "RdsDbProxyArn": {
            "type": "string"
        },
        "CreateVerifiedAccessEndpointCidrOptions": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/VerifiedAccessEndpointProtocol"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/CreateVerifiedAccessEndpointSubnetIdList"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "PortRanges": {
                    "$ref": "#/$defs/CreateVerifiedAccessEndpointPortRangeList"
                }
            }
        },
        "CreateVerifiedAccessGroupResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroup": {
                    "$ref": "#/$defs/VerifiedAccessGroup"
                }
            }
        },
        "VerifiedAccessGroup": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroupId": {
                    "$ref": "#/$defs/String"
                },
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Owner": {
                    "$ref": "#/$defs/String"
                },
                "VerifiedAccessGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "CreationTime": {
                    "$ref": "#/$defs/String"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/String"
                },
                "DeletionTime": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationResponse"
                }
            }
        },
        "CreateVerifiedAccessGroupRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/VerifiedAccessInstanceId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationRequest"
                }
            }
        },
        "CreateVerifiedAccessInstanceResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstance": {
                    "$ref": "#/$defs/VerifiedAccessInstance"
                }
            }
        },
        "CreateVerifiedAccessInstanceRequest": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "FIPSEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "CidrEndpointsCustomSubDomain": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateVerifiedAccessTrustProviderResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProvider": {
                    "$ref": "#/$defs/VerifiedAccessTrustProvider"
                }
            }
        },
        "CreateVerifiedAccessTrustProviderRequest": {
            "type": "object",
            "properties": {
                "TrustProviderType": {
                    "$ref": "#/$defs/TrustProviderType"
                },
                "UserTrustProviderType": {
                    "$ref": "#/$defs/UserTrustProviderType"
                },
                "DeviceTrustProviderType": {
                    "$ref": "#/$defs/DeviceTrustProviderType"
                },
                "OidcOptions": {
                    "$ref": "#/$defs/CreateVerifiedAccessTrustProviderOidcOptions"
                },
                "DeviceOptions": {
                    "$ref": "#/$defs/CreateVerifiedAccessTrustProviderDeviceOptions"
                },
                "PolicyReferenceName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationRequest"
                },
                "NativeApplicationOidcOptions": {
                    "$ref": "#/$defs/CreateVerifiedAccessNativeApplicationOidcOptions"
                }
            }
        },
        "CreateVerifiedAccessTrustProviderOidcOptions": {
            "type": "object",
            "properties": {
                "Issuer": {
                    "$ref": "#/$defs/String"
                },
                "AuthorizationEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "TokenEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "UserInfoEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "ClientId": {
                    "$ref": "#/$defs/String"
                },
                "ClientSecret": {
                    "$ref": "#/$defs/ClientSecretType"
                },
                "Scope": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateVerifiedAccessTrustProviderDeviceOptions": {
            "type": "object",
            "properties": {
                "TenantId": {
                    "$ref": "#/$defs/String"
                },
                "PublicSigningKeyUrl": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateVerifiedAccessNativeApplicationOidcOptions": {
            "type": "object",
            "properties": {
                "PublicSigningKeyEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "Issuer": {
                    "$ref": "#/$defs/String"
                },
                "AuthorizationEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "TokenEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "UserInfoEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "ClientId": {
                    "$ref": "#/$defs/String"
                },
                "ClientSecret": {
                    "$ref": "#/$defs/ClientSecretType"
                },
                "Scope": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Volume": {
            "type": "object",
            "properties": {
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "Iops": {
                    "$ref": "#/$defs/Integer"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "FastRestored": {
                    "$ref": "#/$defs/Boolean"
                },
                "MultiAttachEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "Throughput": {
                    "$ref": "#/$defs/Integer"
                },
                "SseType": {
                    "$ref": "#/$defs/SSEType"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorResponse"
                },
                "VolumeId": {
                    "$ref": "#/$defs/String"
                },
                "Size": {
                    "$ref": "#/$defs/Integer"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/VolumeState"
                },
                "CreateTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Attachments": {
                    "$ref": "#/$defs/VolumeAttachmentList"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VolumeState": {
            "enum": [
                "creating",
                "available",
                "in_use",
                "deleting",
                "deleted",
                "error"
            ]
        },
        "VolumeAttachmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeAttachment"
            }
        },
        "CreateVolumeRequest": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZoneName"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "Iops": {
                    "$ref": "#/$defs/Integer"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "Size": {
                    "$ref": "#/$defs/Integer"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "VolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "MultiAttachEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "Throughput": {
                    "$ref": "#/$defs/Integer"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorRequest"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateVpcResult": {
            "type": "object",
            "properties": {
                "Vpc": {
                    "$ref": "#/$defs/Vpc"
                }
            }
        },
        "CreateVpcRequest": {
            "type": "object",
            "properties": {
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6Pool": {
                    "$ref": "#/$defs/Ipv6PoolEc2Id"
                },
                "Ipv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Ipv4IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Ipv4NetmaskLength": {
                    "$ref": "#/$defs/NetmaskLength"
                },
                "Ipv6IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Ipv6NetmaskLength": {
                    "$ref": "#/$defs/NetmaskLength"
                },
                "Ipv6CidrBlockNetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceTenancy": {
                    "$ref": "#/$defs/Tenancy"
                },
                "AmazonProvidedIpv6CidrBlock": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateVpcBlockPublicAccessExclusionResult": {
            "type": "object",
            "properties": {
                "VpcBlockPublicAccessExclusion": {
                    "$ref": "#/$defs/VpcBlockPublicAccessExclusion"
                }
            }
        },
        "VpcBlockPublicAccessExclusion": {
            "type": "object",
            "properties": {
                "ExclusionId": {
                    "$ref": "#/$defs/VpcBlockPublicAccessExclusionId"
                },
                "InternetGatewayExclusionMode": {
                    "$ref": "#/$defs/InternetGatewayExclusionMode"
                },
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "State": {
                    "$ref": "#/$defs/VpcBlockPublicAccessExclusionState"
                },
                "Reason": {
                    "$ref": "#/$defs/String"
                },
                "CreationTimestamp": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "LastUpdateTimestamp": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DeletionTimestamp": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "VpcBlockPublicAccessExclusionId": {
            "type": "string"
        },
        "InternetGatewayExclusionMode": {
            "enum": [
                "allow_bidirectional",
                "allow_egress"
            ]
        },
        "VpcBlockPublicAccessExclusionState": {
            "enum": [
                "create_in_progress",
                "create_complete",
                "create_failed",
                "update_in_progress",
                "update_complete",
                "update_failed",
                "delete_in_progress",
                "delete_complete",
                "disable_in_progress",
                "disable_complete"
            ]
        },
        "CreateVpcBlockPublicAccessExclusionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "InternetGatewayExclusionMode": {
                    "$ref": "#/$defs/InternetGatewayExclusionMode"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "CreateVpcEndpointResult": {
            "type": "object",
            "properties": {
                "VpcEndpoint": {
                    "$ref": "#/$defs/VpcEndpoint"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcEndpoint": {
            "type": "object",
            "properties": {
                "VpcEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "VpcEndpointType": {
                    "$ref": "#/$defs/VpcEndpointType"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "ServiceName": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/State"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                },
                "RouteTableIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupIdentifierSet"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "DnsOptions": {
                    "$ref": "#/$defs/DnsOptions"
                },
                "PrivateDnsEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "RequesterManaged": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "DnsEntries": {
                    "$ref": "#/$defs/DnsEntrySet"
                },
                "CreationTimestamp": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "LastError": {
                    "$ref": "#/$defs/LastError"
                },
                "Ipv4Prefixes": {
                    "$ref": "#/$defs/SubnetIpPrefixesList"
                },
                "Ipv6Prefixes": {
                    "$ref": "#/$defs/SubnetIpPrefixesList"
                },
                "FailureReason": {
                    "$ref": "#/$defs/String"
                },
                "ServiceNetworkArn": {
                    "$ref": "#/$defs/ServiceNetworkArn"
                },
                "ResourceConfigurationArn": {
                    "$ref": "#/$defs/ResourceConfigurationArn"
                },
                "ServiceRegion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcEndpointType": {
            "enum": [
                "Interface",
                "Gateway",
                "GatewayLoadBalancer",
                "Resource",
                "ServiceNetwork"
            ]
        },
        "State": {
            "enum": [
                "PendingAcceptance",
                "Pending",
                "Available",
                "Deleting",
                "Deleted",
                "Rejected",
                "Failed",
                "Expired",
                "Partial"
            ]
        },
        "GroupIdentifierSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupIdentifier"
            }
        },
        "SecurityGroupIdentifier": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpAddressType": {
            "enum": [
                "ipv4",
                "dualstack",
                "ipv6"
            ]
        },
        "DnsOptions": {
            "type": "object",
            "properties": {
                "DnsRecordIpType": {
                    "$ref": "#/$defs/DnsRecordIpType"
                },
                "PrivateDnsOnlyForInboundResolverEndpoint": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DnsRecordIpType": {
            "enum": [
                "ipv4",
                "dualstack",
                "ipv6",
                "service_defined"
            ]
        },
        "DnsEntrySet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DnsEntry"
            }
        },
        "DnsEntry": {
            "type": "object",
            "properties": {
                "DnsName": {
                    "$ref": "#/$defs/String"
                },
                "HostedZoneId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LastError": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/String"
                },
                "Code": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubnetIpPrefixesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetIpPrefixes"
            }
        },
        "SubnetIpPrefixes": {
            "type": "object",
            "properties": {
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "IpPrefixes": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "ServiceNetworkArn": {
            "type": "string"
        },
        "ResourceConfigurationArn": {
            "type": "string"
        },
        "CreateVpcEndpointRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcEndpointType": {
                    "$ref": "#/$defs/VpcEndpointType"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "ServiceName": {
                    "$ref": "#/$defs/String"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                },
                "RouteTableIds": {
                    "$ref": "#/$defs/VpcEndpointRouteTableIdList"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/VpcEndpointSubnetIdList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/VpcEndpointSecurityGroupIdList"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "DnsOptions": {
                    "$ref": "#/$defs/DnsOptionsSpecification"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "PrivateDnsEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "SubnetConfigurations": {
                    "$ref": "#/$defs/SubnetConfigurationsList"
                },
                "ServiceNetworkArn": {
                    "$ref": "#/$defs/ServiceNetworkArn"
                },
                "ResourceConfigurationArn": {
                    "$ref": "#/$defs/ResourceConfigurationArn"
                },
                "ServiceRegion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcEndpointRouteTableIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RouteTableId"
            }
        },
        "VpcEndpointSubnetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "VpcEndpointSecurityGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "DnsOptionsSpecification": {
            "type": "object",
            "properties": {
                "DnsRecordIpType": {
                    "$ref": "#/$defs/DnsRecordIpType"
                },
                "PrivateDnsOnlyForInboundResolverEndpoint": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SubnetConfigurationsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetConfiguration"
            }
        },
        "SubnetConfiguration": {
            "type": "object",
            "properties": {
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "Ipv4": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateVpcEndpointConnectionNotificationResult": {
            "type": "object",
            "properties": {
                "ConnectionNotification": {
                    "$ref": "#/$defs/ConnectionNotification"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ConnectionNotification": {
            "type": "object",
            "properties": {
                "ConnectionNotificationId": {
                    "$ref": "#/$defs/String"
                },
                "ServiceId": {
                    "$ref": "#/$defs/String"
                },
                "VpcEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "ConnectionNotificationType": {
                    "$ref": "#/$defs/ConnectionNotificationType"
                },
                "ConnectionNotificationArn": {
                    "$ref": "#/$defs/String"
                },
                "ConnectionEvents": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "ConnectionNotificationState": {
                    "$ref": "#/$defs/ConnectionNotificationState"
                },
                "ServiceRegion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ConnectionNotificationType": {
            "enum": [
                "Topic"
            ]
        },
        "ConnectionNotificationState": {
            "enum": [
                "Enabled",
                "Disabled"
            ]
        },
        "CreateVpcEndpointConnectionNotificationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceId": {
                    "$ref": "#/$defs/VpcEndpointServiceId"
                },
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "ConnectionNotificationArn": {
                    "$ref": "#/$defs/String"
                },
                "ConnectionEvents": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateVpcEndpointServiceConfigurationResult": {
            "type": "object",
            "properties": {
                "ServiceConfiguration": {
                    "$ref": "#/$defs/ServiceConfiguration"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceConfiguration": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceTypeDetailSet"
                },
                "ServiceId": {
                    "$ref": "#/$defs/String"
                },
                "ServiceName": {
                    "$ref": "#/$defs/String"
                },
                "ServiceState": {
                    "$ref": "#/$defs/ServiceState"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "AcceptanceRequired": {
                    "$ref": "#/$defs/Boolean"
                },
                "ManagesVpcEndpoints": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkLoadBalancerArns": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "GatewayLoadBalancerArns": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SupportedIpAddressTypes": {
                    "$ref": "#/$defs/SupportedIpAddressTypes"
                },
                "BaseEndpointDnsNames": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PrivateDnsNameConfiguration": {
                    "$ref": "#/$defs/PrivateDnsNameConfiguration"
                },
                "PayerResponsibility": {
                    "$ref": "#/$defs/PayerResponsibility"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SupportedRegions": {
                    "$ref": "#/$defs/SupportedRegionSet"
                },
                "RemoteAccessEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ServiceTypeDetailSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceTypeDetail"
            }
        },
        "ServiceTypeDetail": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                }
            }
        },
        "ServiceType": {
            "enum": [
                "Interface",
                "Gateway",
                "GatewayLoadBalancer"
            ]
        },
        "ServiceState": {
            "enum": [
                "Pending",
                "Available",
                "Deleting",
                "Deleted",
                "Failed"
            ]
        },
        "SupportedIpAddressTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceConnectivityType"
            }
        },
        "ServiceConnectivityType": {
            "enum": [
                "ipv4",
                "ipv6"
            ]
        },
        "PrivateDnsNameConfiguration": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/DnsNameState"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DnsNameState": {
            "enum": [
                "PendingVerification",
                "Verified",
                "Failed"
            ]
        },
        "PayerResponsibility": {
            "enum": [
                "ServiceOwner"
            ]
        },
        "SupportedRegionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SupportedRegionDetail"
            }
        },
        "SupportedRegionDetail": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/String"
                },
                "ServiceState": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateVpcEndpointServiceConfigurationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "AcceptanceRequired": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "NetworkLoadBalancerArns": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "GatewayLoadBalancerArns": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SupportedIpAddressTypes": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SupportedRegions": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "CreateVpcPeeringConnectionResult": {
            "type": "object",
            "properties": {
                "VpcPeeringConnection": {
                    "$ref": "#/$defs/VpcPeeringConnection"
                }
            }
        },
        "CreateVpcPeeringConnectionRequest": {
            "type": "object",
            "properties": {
                "PeerRegion": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "PeerVpcId": {
                    "$ref": "#/$defs/String"
                },
                "PeerOwnerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateVpnConnectionResult": {
            "type": "object",
            "properties": {
                "VpnConnection": {
                    "$ref": "#/$defs/VpnConnection"
                }
            }
        },
        "VpnConnection": {
            "type": "object",
            "properties": {
                "Category": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "CoreNetworkArn": {
                    "$ref": "#/$defs/String"
                },
                "CoreNetworkAttachmentArn": {
                    "$ref": "#/$defs/String"
                },
                "GatewayAssociationState": {
                    "$ref": "#/$defs/GatewayAssociationState"
                },
                "Options": {
                    "$ref": "#/$defs/VpnConnectionOptions"
                },
                "Routes": {
                    "$ref": "#/$defs/VpnStaticRouteList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VgwTelemetry": {
                    "$ref": "#/$defs/VgwTelemetryList"
                },
                "VpnConnectionId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/VpnState"
                },
                "CustomerGatewayConfiguration": {
                    "$ref": "#/$defs/customerGatewayConfiguration"
                },
                "Type": {
                    "$ref": "#/$defs/GatewayType"
                },
                "CustomerGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "VpnGatewayId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GatewayAssociationState": {
            "enum": [
                "associated",
                "not_associated",
                "associating",
                "disassociating"
            ]
        },
        "VpnConnectionOptions": {
            "type": "object",
            "properties": {
                "EnableAcceleration": {
                    "$ref": "#/$defs/Boolean"
                },
                "StaticRoutesOnly": {
                    "$ref": "#/$defs/Boolean"
                },
                "LocalIpv4NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "RemoteIpv4NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "LocalIpv6NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "RemoteIpv6NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "OutsideIpAddressType": {
                    "$ref": "#/$defs/String"
                },
                "TransportTransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "TunnelInsideIpVersion": {
                    "$ref": "#/$defs/TunnelInsideIpVersion"
                },
                "TunnelOptions": {
                    "$ref": "#/$defs/TunnelOptionsList"
                }
            }
        },
        "TunnelInsideIpVersion": {
            "enum": [
                "ipv4",
                "ipv6"
            ]
        },
        "TunnelOptionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TunnelOption"
            }
        },
        "TunnelOption": {
            "type": "object",
            "properties": {
                "OutsideIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "TunnelInsideCidr": {
                    "$ref": "#/$defs/String"
                },
                "TunnelInsideIpv6Cidr": {
                    "$ref": "#/$defs/String"
                },
                "PreSharedKey": {
                    "$ref": "#/$defs/preSharedKey"
                },
                "Phase1LifetimeSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "Phase2LifetimeSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "RekeyMarginTimeSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "RekeyFuzzPercentage": {
                    "$ref": "#/$defs/Integer"
                },
                "ReplayWindowSize": {
                    "$ref": "#/$defs/Integer"
                },
                "DpdTimeoutSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "DpdTimeoutAction": {
                    "$ref": "#/$defs/String"
                },
                "Phase1EncryptionAlgorithms": {
                    "$ref": "#/$defs/Phase1EncryptionAlgorithmsList"
                },
                "Phase2EncryptionAlgorithms": {
                    "$ref": "#/$defs/Phase2EncryptionAlgorithmsList"
                },
                "Phase1IntegrityAlgorithms": {
                    "$ref": "#/$defs/Phase1IntegrityAlgorithmsList"
                },
                "Phase2IntegrityAlgorithms": {
                    "$ref": "#/$defs/Phase2IntegrityAlgorithmsList"
                },
                "Phase1DHGroupNumbers": {
                    "$ref": "#/$defs/Phase1DHGroupNumbersList"
                },
                "Phase2DHGroupNumbers": {
                    "$ref": "#/$defs/Phase2DHGroupNumbersList"
                },
                "IkeVersions": {
                    "$ref": "#/$defs/IKEVersionsList"
                },
                "StartupAction": {
                    "$ref": "#/$defs/String"
                },
                "LogOptions": {
                    "$ref": "#/$defs/VpnTunnelLogOptions"
                },
                "EnableTunnelLifecycleControl": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "preSharedKey": {
            "type": "string"
        },
        "Phase1EncryptionAlgorithmsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase1EncryptionAlgorithmsListValue"
            }
        },
        "Phase1EncryptionAlgorithmsListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Phase2EncryptionAlgorithmsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase2EncryptionAlgorithmsListValue"
            }
        },
        "Phase2EncryptionAlgorithmsListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Phase1IntegrityAlgorithmsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase1IntegrityAlgorithmsListValue"
            }
        },
        "Phase1IntegrityAlgorithmsListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Phase2IntegrityAlgorithmsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase2IntegrityAlgorithmsListValue"
            }
        },
        "Phase2IntegrityAlgorithmsListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Phase1DHGroupNumbersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase1DHGroupNumbersListValue"
            }
        },
        "Phase1DHGroupNumbersListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "Phase2DHGroupNumbersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase2DHGroupNumbersListValue"
            }
        },
        "Phase2DHGroupNumbersListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "IKEVersionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IKEVersionsListValue"
            }
        },
        "IKEVersionsListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpnTunnelLogOptions": {
            "type": "object",
            "properties": {
                "CloudWatchLogOptions": {
                    "$ref": "#/$defs/CloudWatchLogOptions"
                }
            }
        },
        "CloudWatchLogOptions": {
            "type": "object",
            "properties": {
                "LogEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "LogGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "LogOutputFormat": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpnStaticRouteList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpnStaticRoute"
            }
        },
        "VpnStaticRoute": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/VpnStaticRouteSource"
                },
                "State": {
                    "$ref": "#/$defs/VpnState"
                }
            }
        },
        "VpnStaticRouteSource": {
            "enum": [
                "Static"
            ]
        },
        "VpnState": {
            "enum": [
                "pending",
                "available",
                "deleting",
                "deleted"
            ]
        },
        "VgwTelemetryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VgwTelemetry"
            }
        },
        "VgwTelemetry": {
            "type": "object",
            "properties": {
                "AcceptedRouteCount": {
                    "$ref": "#/$defs/Integer"
                },
                "LastStatusChange": {
                    "$ref": "#/$defs/DateTime"
                },
                "OutsideIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/TelemetryStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "CertificateArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TelemetryStatus": {
            "enum": [
                "UP",
                "DOWN"
            ]
        },
        "customerGatewayConfiguration": {
            "type": "string"
        },
        "CreateVpnConnectionRequest": {
            "type": "object",
            "properties": {
                "CustomerGatewayId": {
                    "$ref": "#/$defs/CustomerGatewayId"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "VpnGatewayId": {
                    "$ref": "#/$defs/VpnGatewayId"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Options": {
                    "$ref": "#/$defs/VpnConnectionOptionsSpecification"
                }
            }
        },
        "CustomerGatewayId": {
            "type": "string"
        },
        "VpnConnectionOptionsSpecification": {
            "type": "object",
            "properties": {
                "EnableAcceleration": {
                    "$ref": "#/$defs/Boolean"
                },
                "TunnelInsideIpVersion": {
                    "$ref": "#/$defs/TunnelInsideIpVersion"
                },
                "TunnelOptions": {
                    "$ref": "#/$defs/VpnTunnelOptionsSpecificationsList"
                },
                "LocalIpv4NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "RemoteIpv4NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "LocalIpv6NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "RemoteIpv6NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "OutsideIpAddressType": {
                    "$ref": "#/$defs/String"
                },
                "TransportTransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "StaticRoutesOnly": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VpnTunnelOptionsSpecificationsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpnTunnelOptionsSpecification"
            }
        },
        "VpnTunnelOptionsSpecification": {
            "type": "object",
            "properties": {
                "TunnelInsideCidr": {
                    "$ref": "#/$defs/String"
                },
                "TunnelInsideIpv6Cidr": {
                    "$ref": "#/$defs/String"
                },
                "PreSharedKey": {
                    "$ref": "#/$defs/preSharedKey"
                },
                "Phase1LifetimeSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "Phase2LifetimeSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "RekeyMarginTimeSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "RekeyFuzzPercentage": {
                    "$ref": "#/$defs/Integer"
                },
                "ReplayWindowSize": {
                    "$ref": "#/$defs/Integer"
                },
                "DPDTimeoutSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "DPDTimeoutAction": {
                    "$ref": "#/$defs/String"
                },
                "Phase1EncryptionAlgorithms": {
                    "$ref": "#/$defs/Phase1EncryptionAlgorithmsRequestList"
                },
                "Phase2EncryptionAlgorithms": {
                    "$ref": "#/$defs/Phase2EncryptionAlgorithmsRequestList"
                },
                "Phase1IntegrityAlgorithms": {
                    "$ref": "#/$defs/Phase1IntegrityAlgorithmsRequestList"
                },
                "Phase2IntegrityAlgorithms": {
                    "$ref": "#/$defs/Phase2IntegrityAlgorithmsRequestList"
                },
                "Phase1DHGroupNumbers": {
                    "$ref": "#/$defs/Phase1DHGroupNumbersRequestList"
                },
                "Phase2DHGroupNumbers": {
                    "$ref": "#/$defs/Phase2DHGroupNumbersRequestList"
                },
                "IKEVersions": {
                    "$ref": "#/$defs/IKEVersionsRequestList"
                },
                "StartupAction": {
                    "$ref": "#/$defs/String"
                },
                "LogOptions": {
                    "$ref": "#/$defs/VpnTunnelLogOptionsSpecification"
                },
                "EnableTunnelLifecycleControl": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Phase1EncryptionAlgorithmsRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase1EncryptionAlgorithmsRequestListValue"
            }
        },
        "Phase1EncryptionAlgorithmsRequestListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Phase2EncryptionAlgorithmsRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase2EncryptionAlgorithmsRequestListValue"
            }
        },
        "Phase2EncryptionAlgorithmsRequestListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Phase1IntegrityAlgorithmsRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase1IntegrityAlgorithmsRequestListValue"
            }
        },
        "Phase1IntegrityAlgorithmsRequestListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Phase2IntegrityAlgorithmsRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase2IntegrityAlgorithmsRequestListValue"
            }
        },
        "Phase2IntegrityAlgorithmsRequestListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Phase1DHGroupNumbersRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase1DHGroupNumbersRequestListValue"
            }
        },
        "Phase1DHGroupNumbersRequestListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "Phase2DHGroupNumbersRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Phase2DHGroupNumbersRequestListValue"
            }
        },
        "Phase2DHGroupNumbersRequestListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "IKEVersionsRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IKEVersionsRequestListValue"
            }
        },
        "IKEVersionsRequestListValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpnTunnelLogOptionsSpecification": {
            "type": "object",
            "properties": {
                "CloudWatchLogOptions": {
                    "$ref": "#/$defs/CloudWatchLogOptionsSpecification"
                }
            }
        },
        "CloudWatchLogOptionsSpecification": {
            "type": "object",
            "properties": {
                "LogEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "LogGroupArn": {
                    "$ref": "#/$defs/CloudWatchLogGroupArn"
                },
                "LogOutputFormat": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CloudWatchLogGroupArn": {
            "type": "string"
        },
        "CreateVpnConnectionRouteRequest": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                }
            }
        },
        "VpnConnectionId": {
            "type": "string"
        },
        "CreateVpnGatewayResult": {
            "type": "object",
            "properties": {
                "VpnGateway": {
                    "$ref": "#/$defs/VpnGateway"
                }
            }
        },
        "VpnGateway": {
            "type": "object",
            "properties": {
                "AmazonSideAsn": {
                    "$ref": "#/$defs/Long"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VpnGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/VpnState"
                },
                "Type": {
                    "$ref": "#/$defs/GatewayType"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "VpcAttachments": {
                    "$ref": "#/$defs/VpcAttachmentList"
                }
            }
        },
        "VpcAttachmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcAttachment"
            }
        },
        "CreateVpnGatewayRequest": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/GatewayType"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "AmazonSideAsn": {
                    "$ref": "#/$defs/Long"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteCarrierGatewayResult": {
            "type": "object",
            "properties": {
                "CarrierGateway": {
                    "$ref": "#/$defs/CarrierGateway"
                }
            }
        },
        "DeleteCarrierGatewayRequest": {
            "type": "object",
            "properties": {
                "CarrierGatewayId": {
                    "$ref": "#/$defs/CarrierGatewayId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteClientVpnEndpointResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ClientVpnEndpointStatus"
                }
            }
        },
        "DeleteClientVpnEndpointRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteClientVpnRouteResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ClientVpnRouteStatus"
                }
            }
        },
        "DeleteClientVpnRouteRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "TargetVpcSubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteCoipCidrResult": {
            "type": "object",
            "properties": {
                "CoipCidr": {
                    "$ref": "#/$defs/CoipCidr"
                }
            }
        },
        "DeleteCoipCidrRequest": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "CoipPoolId": {
                    "$ref": "#/$defs/Ipv4PoolCoipId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteCoipPoolResult": {
            "type": "object",
            "properties": {
                "CoipPool": {
                    "$ref": "#/$defs/CoipPool"
                }
            }
        },
        "DeleteCoipPoolRequest": {
            "type": "object",
            "properties": {
                "CoipPoolId": {
                    "$ref": "#/$defs/Ipv4PoolCoipId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteCustomerGatewayRequest": {
            "type": "object",
            "properties": {
                "CustomerGatewayId": {
                    "$ref": "#/$defs/CustomerGatewayId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteDhcpOptionsRequest": {
            "type": "object",
            "properties": {
                "DhcpOptionsId": {
                    "$ref": "#/$defs/DhcpOptionsId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DhcpOptionsId": {
            "type": "string"
        },
        "DeleteEgressOnlyInternetGatewayResult": {
            "type": "object",
            "properties": {
                "ReturnCode": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteEgressOnlyInternetGatewayRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "EgressOnlyInternetGatewayId": {
                    "$ref": "#/$defs/EgressOnlyInternetGatewayId"
                }
            }
        },
        "DeleteFleetsResult": {
            "type": "object",
            "properties": {
                "SuccessfulFleetDeletions": {
                    "$ref": "#/$defs/DeleteFleetSuccessSet"
                },
                "UnsuccessfulFleetDeletions": {
                    "$ref": "#/$defs/DeleteFleetErrorSet"
                }
            }
        },
        "DeleteFleetSuccessSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeleteFleetSuccessItem"
            }
        },
        "DeleteFleetSuccessItem": {
            "type": "object",
            "properties": {
                "CurrentFleetState": {
                    "$ref": "#/$defs/FleetStateCode"
                },
                "PreviousFleetState": {
                    "$ref": "#/$defs/FleetStateCode"
                },
                "FleetId": {
                    "$ref": "#/$defs/FleetId"
                }
            }
        },
        "FleetStateCode": {
            "enum": [
                "SUBMITTED",
                "ACTIVE",
                "DELETED",
                "FAILED",
                "DELETED_RUNNING",
                "DELETED_TERMINATING_INSTANCES",
                "MODIFYING"
            ]
        },
        "DeleteFleetErrorSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeleteFleetErrorItem"
            }
        },
        "DeleteFleetErrorItem": {
            "type": "object",
            "properties": {
                "Error": {
                    "$ref": "#/$defs/DeleteFleetError"
                },
                "FleetId": {
                    "$ref": "#/$defs/FleetId"
                }
            }
        },
        "DeleteFleetError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/DeleteFleetErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteFleetErrorCode": {
            "enum": [
                "FLEET_ID_DOES_NOT_EXIST",
                "FLEET_ID_MALFORMED",
                "FLEET_NOT_IN_DELETABLE_STATE",
                "UNEXPECTED_ERROR"
            ]
        },
        "DeleteFleetsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "FleetIds": {
                    "$ref": "#/$defs/FleetIdSet"
                },
                "TerminateInstances": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "FleetIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FleetId"
            }
        },
        "DeleteFlowLogsResult": {
            "type": "object",
            "properties": {
                "Unsuccessful": {
                    "$ref": "#/$defs/UnsuccessfulItemSet"
                }
            }
        },
        "DeleteFlowLogsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "FlowLogIds": {
                    "$ref": "#/$defs/FlowLogIdList"
                }
            }
        },
        "FlowLogIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcFlowLogId"
            }
        },
        "VpcFlowLogId": {
            "type": "string"
        },
        "DeleteFpgaImageResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteFpgaImageRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "FpgaImageId": {
                    "$ref": "#/$defs/FpgaImageId"
                }
            }
        },
        "FpgaImageId": {
            "type": "string"
        },
        "DeleteInstanceConnectEndpointResult": {
            "type": "object",
            "properties": {
                "InstanceConnectEndpoint": {
                    "$ref": "#/$defs/Ec2InstanceConnectEndpoint"
                }
            }
        },
        "DeleteInstanceConnectEndpointRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceConnectEndpointId": {
                    "$ref": "#/$defs/InstanceConnectEndpointId"
                }
            }
        },
        "DeleteInstanceEventWindowResult": {
            "type": "object",
            "properties": {
                "InstanceEventWindowState": {
                    "$ref": "#/$defs/InstanceEventWindowStateChange"
                }
            }
        },
        "InstanceEventWindowStateChange": {
            "type": "object",
            "properties": {
                "InstanceEventWindowId": {
                    "$ref": "#/$defs/InstanceEventWindowId"
                },
                "State": {
                    "$ref": "#/$defs/InstanceEventWindowState"
                }
            }
        },
        "DeleteInstanceEventWindowRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ForceDelete": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceEventWindowId": {
                    "$ref": "#/$defs/InstanceEventWindowId"
                }
            }
        },
        "DeleteInternetGatewayRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InternetGatewayId": {
                    "$ref": "#/$defs/InternetGatewayId"
                }
            }
        },
        "DeleteIpamResult": {
            "type": "object",
            "properties": {
                "Ipam": {
                    "$ref": "#/$defs/Ipam"
                }
            }
        },
        "DeleteIpamRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "Cascade": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteIpamExternalResourceVerificationTokenResult": {
            "type": "object",
            "properties": {
                "IpamExternalResourceVerificationToken": {
                    "$ref": "#/$defs/IpamExternalResourceVerificationToken"
                }
            }
        },
        "DeleteIpamExternalResourceVerificationTokenRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamExternalResourceVerificationTokenId": {
                    "$ref": "#/$defs/IpamExternalResourceVerificationTokenId"
                }
            }
        },
        "DeleteIpamPoolResult": {
            "type": "object",
            "properties": {
                "IpamPool": {
                    "$ref": "#/$defs/IpamPool"
                }
            }
        },
        "DeleteIpamPoolRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Cascade": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteIpamResourceDiscoveryResult": {
            "type": "object",
            "properties": {
                "IpamResourceDiscovery": {
                    "$ref": "#/$defs/IpamResourceDiscovery"
                }
            }
        },
        "DeleteIpamResourceDiscoveryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                }
            }
        },
        "DeleteIpamScopeResult": {
            "type": "object",
            "properties": {
                "IpamScope": {
                    "$ref": "#/$defs/IpamScope"
                }
            }
        },
        "DeleteIpamScopeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                }
            }
        },
        "DeleteKeyPairResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                },
                "KeyPairId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteKeyPairRequest": {
            "type": "object",
            "properties": {
                "KeyName": {
                    "$ref": "#/$defs/KeyPairNameWithResolver"
                },
                "KeyPairId": {
                    "$ref": "#/$defs/KeyPairId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "KeyPairNameWithResolver": {
            "type": "string"
        },
        "KeyPairId": {
            "type": "string"
        },
        "DeleteLaunchTemplateResult": {
            "type": "object",
            "properties": {
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplate"
                }
            }
        },
        "DeleteLaunchTemplateRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "LaunchTemplateId": {
                    "$ref": "#/$defs/LaunchTemplateId"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                }
            }
        },
        "DeleteLaunchTemplateVersionsResult": {
            "type": "object",
            "properties": {
                "SuccessfullyDeletedLaunchTemplateVersions": {
                    "$ref": "#/$defs/DeleteLaunchTemplateVersionsResponseSuccessSet"
                },
                "UnsuccessfullyDeletedLaunchTemplateVersions": {
                    "$ref": "#/$defs/DeleteLaunchTemplateVersionsResponseErrorSet"
                }
            }
        },
        "DeleteLaunchTemplateVersionsResponseSuccessSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeleteLaunchTemplateVersionsResponseSuccessItem"
            }
        },
        "DeleteLaunchTemplateVersionsResponseSuccessItem": {
            "type": "object",
            "properties": {
                "LaunchTemplateId": {
                    "$ref": "#/$defs/String"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/String"
                },
                "VersionNumber": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "DeleteLaunchTemplateVersionsResponseErrorSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeleteLaunchTemplateVersionsResponseErrorItem"
            }
        },
        "DeleteLaunchTemplateVersionsResponseErrorItem": {
            "type": "object",
            "properties": {
                "LaunchTemplateId": {
                    "$ref": "#/$defs/String"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/String"
                },
                "VersionNumber": {
                    "$ref": "#/$defs/Long"
                },
                "ResponseError": {
                    "$ref": "#/$defs/ResponseError"
                }
            }
        },
        "ResponseError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/LaunchTemplateErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateErrorCode": {
            "enum": [
                "LAUNCH_TEMPLATE_ID_DOES_NOT_EXIST",
                "LAUNCH_TEMPLATE_ID_MALFORMED",
                "LAUNCH_TEMPLATE_NAME_DOES_NOT_EXIST",
                "LAUNCH_TEMPLATE_NAME_MALFORMED",
                "LAUNCH_TEMPLATE_VERSION_DOES_NOT_EXIST",
                "UNEXPECTED_ERROR"
            ]
        },
        "DeleteLaunchTemplateVersionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "LaunchTemplateId": {
                    "$ref": "#/$defs/LaunchTemplateId"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                },
                "Versions": {
                    "$ref": "#/$defs/VersionStringList"
                }
            }
        },
        "VersionStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DeleteLocalGatewayRouteResult": {
            "type": "object",
            "properties": {
                "Route": {
                    "$ref": "#/$defs/LocalGatewayRoute"
                }
            }
        },
        "DeleteLocalGatewayRouteRequest": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayRoutetableId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "DestinationPrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                }
            }
        },
        "DeleteLocalGatewayRouteTableResult": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTable": {
                    "$ref": "#/$defs/LocalGatewayRouteTable"
                }
            }
        },
        "DeleteLocalGatewayRouteTableRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayRoutetableId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationResult": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVirtualInterfaceGroupAssociation"
                }
            }
        },
        "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociationRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVirtualInterfaceGroupAssociationId": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVirtualInterfaceGroupAssociationId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteLocalGatewayRouteTableVpcAssociationResult": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVpcAssociation": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVpcAssociation"
                }
            }
        },
        "DeleteLocalGatewayRouteTableVpcAssociationRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVpcAssociationId": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVpcAssociationId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteManagedPrefixListResult": {
            "type": "object",
            "properties": {
                "PrefixList": {
                    "$ref": "#/$defs/ManagedPrefixList"
                }
            }
        },
        "DeleteManagedPrefixListRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                }
            }
        },
        "DeleteNatGatewayResult": {
            "type": "object",
            "properties": {
                "NatGatewayId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteNatGatewayRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                }
            }
        },
        "DeleteNetworkAclRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkAclId": {
                    "$ref": "#/$defs/NetworkAclId"
                }
            }
        },
        "DeleteNetworkAclEntryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkAclId": {
                    "$ref": "#/$defs/NetworkAclId"
                },
                "RuleNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "Egress": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteNetworkInsightsAccessScopeResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeId"
                }
            }
        },
        "DeleteNetworkInsightsAccessScopeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInsightsAccessScopeId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeId"
                }
            }
        },
        "DeleteNetworkInsightsAccessScopeAnalysisResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeAnalysisId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysisId"
                }
            }
        },
        "NetworkInsightsAccessScopeAnalysisId": {
            "type": "string"
        },
        "DeleteNetworkInsightsAccessScopeAnalysisRequest": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeAnalysisId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysisId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteNetworkInsightsAnalysisResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAnalysisId": {
                    "$ref": "#/$defs/NetworkInsightsAnalysisId"
                }
            }
        },
        "NetworkInsightsAnalysisId": {
            "type": "string"
        },
        "DeleteNetworkInsightsAnalysisRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInsightsAnalysisId": {
                    "$ref": "#/$defs/NetworkInsightsAnalysisId"
                }
            }
        },
        "DeleteNetworkInsightsPathResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsPathId": {
                    "$ref": "#/$defs/NetworkInsightsPathId"
                }
            }
        },
        "DeleteNetworkInsightsPathRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInsightsPathId": {
                    "$ref": "#/$defs/NetworkInsightsPathId"
                }
            }
        },
        "DeleteNetworkInterfaceRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                }
            }
        },
        "DeleteNetworkInterfacePermissionResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteNetworkInterfacePermissionRequest": {
            "type": "object",
            "properties": {
                "NetworkInterfacePermissionId": {
                    "$ref": "#/$defs/NetworkInterfacePermissionId"
                },
                "Force": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "NetworkInterfacePermissionId": {
            "type": "string"
        },
        "DeletePlacementGroupRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "GroupName": {
                    "$ref": "#/$defs/PlacementGroupName"
                }
            }
        },
        "DeletePublicIpv4PoolResult": {
            "type": "object",
            "properties": {
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeletePublicIpv4PoolRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PoolId": {
                    "$ref": "#/$defs/Ipv4PoolEc2Id"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteQueuedReservedInstancesResult": {
            "type": "object",
            "properties": {
                "SuccessfulQueuedPurchaseDeletions": {
                    "$ref": "#/$defs/SuccessfulQueuedPurchaseDeletionSet"
                },
                "FailedQueuedPurchaseDeletions": {
                    "$ref": "#/$defs/FailedQueuedPurchaseDeletionSet"
                }
            }
        },
        "SuccessfulQueuedPurchaseDeletionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SuccessfulQueuedPurchaseDeletion"
            }
        },
        "SuccessfulQueuedPurchaseDeletion": {
            "type": "object",
            "properties": {
                "ReservedInstancesId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FailedQueuedPurchaseDeletionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FailedQueuedPurchaseDeletion"
            }
        },
        "FailedQueuedPurchaseDeletion": {
            "type": "object",
            "properties": {
                "Error": {
                    "$ref": "#/$defs/DeleteQueuedReservedInstancesError"
                },
                "ReservedInstancesId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteQueuedReservedInstancesError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/DeleteQueuedReservedInstancesErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteQueuedReservedInstancesErrorCode": {
            "enum": [
                "RESERVED_INSTANCES_ID_INVALID",
                "RESERVED_INSTANCES_NOT_IN_QUEUED_STATE",
                "UNEXPECTED_ERROR"
            ]
        },
        "DeleteQueuedReservedInstancesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ReservedInstancesIds": {
                    "$ref": "#/$defs/DeleteQueuedReservedInstancesIdList"
                }
            }
        },
        "DeleteQueuedReservedInstancesIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservationId"
            }
        },
        "DeleteRouteRequest": {
            "type": "object",
            "properties": {
                "DestinationPrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "RouteTableId": {
                    "$ref": "#/$defs/RouteTableId"
                },
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "DestinationIpv6CidrBlock": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteRouteTableRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "RouteTableId": {
                    "$ref": "#/$defs/RouteTableId"
                }
            }
        },
        "DeleteSecurityGroupResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                },
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                }
            }
        },
        "DeleteSecurityGroupRequest": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "GroupName": {
                    "$ref": "#/$defs/SecurityGroupName"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteSnapshotRequest": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteSpotDatafeedSubscriptionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteSubnetRequest": {
            "type": "object",
            "properties": {
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteSubnetCidrReservationResult": {
            "type": "object",
            "properties": {
                "DeletedSubnetCidrReservation": {
                    "$ref": "#/$defs/SubnetCidrReservation"
                }
            }
        },
        "DeleteSubnetCidrReservationRequest": {
            "type": "object",
            "properties": {
                "SubnetCidrReservationId": {
                    "$ref": "#/$defs/SubnetCidrReservationId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTagsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Resources": {
                    "$ref": "#/$defs/ResourceIdList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DeleteTrafficMirrorFilterResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteTrafficMirrorFilterRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterId": {
                    "$ref": "#/$defs/TrafficMirrorFilterId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTrafficMirrorFilterRuleResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterRuleId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteTrafficMirrorFilterRuleRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterRuleId": {
                    "$ref": "#/$defs/TrafficMirrorFilterRuleIdWithResolver"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TrafficMirrorFilterRuleIdWithResolver": {
            "type": "string"
        },
        "DeleteTrafficMirrorSessionResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorSessionId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteTrafficMirrorSessionRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorSessionId": {
                    "$ref": "#/$defs/TrafficMirrorSessionId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TrafficMirrorSessionId": {
            "type": "string"
        },
        "DeleteTrafficMirrorTargetResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorTargetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteTrafficMirrorTargetRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorTargetId": {
                    "$ref": "#/$defs/TrafficMirrorTargetId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayResult": {
            "type": "object",
            "properties": {
                "TransitGateway": {
                    "$ref": "#/$defs/TransitGateway"
                }
            }
        },
        "DeleteTransitGatewayRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayConnectResult": {
            "type": "object",
            "properties": {
                "TransitGatewayConnect": {
                    "$ref": "#/$defs/TransitGatewayConnect"
                }
            }
        },
        "DeleteTransitGatewayConnectRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayConnectPeerResult": {
            "type": "object",
            "properties": {
                "TransitGatewayConnectPeer": {
                    "$ref": "#/$defs/TransitGatewayConnectPeer"
                }
            }
        },
        "DeleteTransitGatewayConnectPeerRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayConnectPeerId": {
                    "$ref": "#/$defs/TransitGatewayConnectPeerId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayMulticastDomainResult": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomain": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomain"
                }
            }
        },
        "DeleteTransitGatewayMulticastDomainRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayPeeringAttachmentResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPeeringAttachment": {
                    "$ref": "#/$defs/TransitGatewayPeeringAttachment"
                }
            }
        },
        "DeleteTransitGatewayPeeringAttachmentRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayPolicyTableResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTable": {
                    "$ref": "#/$defs/TransitGatewayPolicyTable"
                }
            }
        },
        "DeleteTransitGatewayPolicyTableRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTableId": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayPrefixListReferenceResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPrefixListReference": {
                    "$ref": "#/$defs/TransitGatewayPrefixListReference"
                }
            }
        },
        "DeleteTransitGatewayPrefixListReferenceRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayRouteResult": {
            "type": "object",
            "properties": {
                "Route": {
                    "$ref": "#/$defs/TransitGatewayRoute"
                }
            }
        },
        "DeleteTransitGatewayRouteRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayRouteTableResult": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTable": {
                    "$ref": "#/$defs/TransitGatewayRouteTable"
                }
            }
        },
        "DeleteTransitGatewayRouteTableRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayRouteTableAnnouncementResult": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableAnnouncement": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncement"
                }
            }
        },
        "DeleteTransitGatewayRouteTableAnnouncementRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableAnnouncementId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteTransitGatewayVpcAttachmentResult": {
            "type": "object",
            "properties": {
                "TransitGatewayVpcAttachment": {
                    "$ref": "#/$defs/TransitGatewayVpcAttachment"
                }
            }
        },
        "DeleteTransitGatewayVpcAttachmentRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteVerifiedAccessEndpointResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpoint": {
                    "$ref": "#/$defs/VerifiedAccessEndpoint"
                }
            }
        },
        "DeleteVerifiedAccessEndpointRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpointId": {
                    "$ref": "#/$defs/VerifiedAccessEndpointId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VerifiedAccessEndpointId": {
            "type": "string"
        },
        "DeleteVerifiedAccessGroupResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroup": {
                    "$ref": "#/$defs/VerifiedAccessGroup"
                }
            }
        },
        "DeleteVerifiedAccessGroupRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroupId": {
                    "$ref": "#/$defs/VerifiedAccessGroupId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteVerifiedAccessInstanceResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstance": {
                    "$ref": "#/$defs/VerifiedAccessInstance"
                }
            }
        },
        "DeleteVerifiedAccessInstanceRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/VerifiedAccessInstanceId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteVerifiedAccessTrustProviderResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProvider": {
                    "$ref": "#/$defs/VerifiedAccessTrustProvider"
                }
            }
        },
        "DeleteVerifiedAccessTrustProviderRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProviderId": {
                    "$ref": "#/$defs/VerifiedAccessTrustProviderId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeleteVolumeRequest": {
            "type": "object",
            "properties": {
                "VolumeId": {
                    "$ref": "#/$defs/VolumeId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteVpcRequest": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteVpcBlockPublicAccessExclusionResult": {
            "type": "object",
            "properties": {
                "VpcBlockPublicAccessExclusion": {
                    "$ref": "#/$defs/VpcBlockPublicAccessExclusion"
                }
            }
        },
        "DeleteVpcBlockPublicAccessExclusionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ExclusionId": {
                    "$ref": "#/$defs/VpcBlockPublicAccessExclusionId"
                }
            }
        },
        "DeleteVpcEndpointConnectionNotificationsResult": {
            "type": "object",
            "properties": {
                "Unsuccessful": {
                    "$ref": "#/$defs/UnsuccessfulItemSet"
                }
            }
        },
        "DeleteVpcEndpointConnectionNotificationsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ConnectionNotificationIds": {
                    "$ref": "#/$defs/ConnectionNotificationIdsList"
                }
            }
        },
        "ConnectionNotificationIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConnectionNotificationId"
            }
        },
        "ConnectionNotificationId": {
            "type": "string"
        },
        "DeleteVpcEndpointsResult": {
            "type": "object",
            "properties": {
                "Unsuccessful": {
                    "$ref": "#/$defs/UnsuccessfulItemSet"
                }
            }
        },
        "DeleteVpcEndpointsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcEndpointIds": {
                    "$ref": "#/$defs/VpcEndpointIdList"
                }
            }
        },
        "DeleteVpcEndpointServiceConfigurationsResult": {
            "type": "object",
            "properties": {
                "Unsuccessful": {
                    "$ref": "#/$defs/UnsuccessfulItemSet"
                }
            }
        },
        "DeleteVpcEndpointServiceConfigurationsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceIds": {
                    "$ref": "#/$defs/VpcEndpointServiceIdList"
                }
            }
        },
        "VpcEndpointServiceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointServiceId"
            }
        },
        "DeleteVpcPeeringConnectionResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteVpcPeeringConnectionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/VpcPeeringConnectionId"
                }
            }
        },
        "DeleteVpnConnectionRequest": {
            "type": "object",
            "properties": {
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteVpnConnectionRouteRequest": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                }
            }
        },
        "DeleteVpnGatewayRequest": {
            "type": "object",
            "properties": {
                "VpnGatewayId": {
                    "$ref": "#/$defs/VpnGatewayId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeprovisionByoipCidrResult": {
            "type": "object",
            "properties": {
                "ByoipCidr": {
                    "$ref": "#/$defs/ByoipCidr"
                }
            }
        },
        "DeprovisionByoipCidrRequest": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeprovisionIpamByoasnResult": {
            "type": "object",
            "properties": {
                "Byoasn": {
                    "$ref": "#/$defs/Byoasn"
                }
            }
        },
        "Byoasn": {
            "type": "object",
            "properties": {
                "Asn": {
                    "$ref": "#/$defs/String"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/AsnState"
                }
            }
        },
        "AsnState": {
            "enum": [
                "deprovisioned",
                "failed_deprovision",
                "failed_provision",
                "pending_deprovision",
                "pending_provision",
                "provisioned"
            ]
        },
        "DeprovisionIpamByoasnRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "Asn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeprovisionIpamPoolCidrResult": {
            "type": "object",
            "properties": {
                "IpamPoolCidr": {
                    "$ref": "#/$defs/IpamPoolCidr"
                }
            }
        },
        "IpamPoolCidr": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/IpamPoolCidrState"
                },
                "FailureReason": {
                    "$ref": "#/$defs/IpamPoolCidrFailureReason"
                },
                "IpamPoolCidrId": {
                    "$ref": "#/$defs/IpamPoolCidrId"
                },
                "NetmaskLength": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "IpamPoolCidrState": {
            "enum": [
                "pending_provision",
                "provisioned",
                "failed_provision",
                "pending_deprovision",
                "deprovisioned",
                "failed_deprovision",
                "pending_import",
                "failed_import"
            ]
        },
        "IpamPoolCidrFailureReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/IpamPoolCidrFailureCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamPoolCidrFailureCode": {
            "enum": [
                "cidr_not_available",
                "limit_exceeded"
            ]
        },
        "IpamPoolCidrId": {
            "type": "string"
        },
        "DeprovisionIpamPoolCidrRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeprovisionPublicIpv4PoolCidrResult": {
            "type": "object",
            "properties": {
                "PoolId": {
                    "$ref": "#/$defs/Ipv4PoolEc2Id"
                },
                "DeprovisionedAddresses": {
                    "$ref": "#/$defs/DeprovisionedAddressSet"
                }
            }
        },
        "DeprovisionedAddressSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DeprovisionPublicIpv4PoolCidrRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PoolId": {
                    "$ref": "#/$defs/Ipv4PoolEc2Id"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeregisterImageResult": {
            "type": "object",
            "properties": {}
        },
        "DeregisterImageRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeregisterInstanceEventNotificationAttributesResult": {
            "type": "object",
            "properties": {
                "InstanceTagAttribute": {
                    "$ref": "#/$defs/InstanceTagNotificationAttribute"
                }
            }
        },
        "InstanceTagNotificationAttribute": {
            "type": "object",
            "properties": {
                "InstanceTagKeys": {
                    "$ref": "#/$defs/InstanceTagKeySet"
                },
                "IncludeAllTagsOfInstance": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "InstanceTagKeySet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DeregisterInstanceEventNotificationAttributesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceTagAttribute": {
                    "$ref": "#/$defs/DeregisterInstanceTagAttributeRequest"
                }
            }
        },
        "DeregisterInstanceTagAttributeRequest": {
            "type": "object",
            "properties": {
                "IncludeAllTagsOfInstance": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceTagKeys": {
                    "$ref": "#/$defs/InstanceTagKeySet"
                }
            }
        },
        "DeregisterTransitGatewayMulticastGroupMembersResult": {
            "type": "object",
            "properties": {
                "DeregisteredMulticastGroupMembers": {
                    "$ref": "#/$defs/TransitGatewayMulticastDeregisteredGroupMembers"
                }
            }
        },
        "TransitGatewayMulticastDeregisteredGroupMembers": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/String"
                },
                "DeregisteredNetworkInterfaceIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "GroupIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeregisterTransitGatewayMulticastGroupMembersRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "GroupIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceIds": {
                    "$ref": "#/$defs/TransitGatewayNetworkInterfaceIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayNetworkInterfaceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterfaceId"
            }
        },
        "DeregisterTransitGatewayMulticastGroupSourcesResult": {
            "type": "object",
            "properties": {
                "DeregisteredMulticastGroupSources": {
                    "$ref": "#/$defs/TransitGatewayMulticastDeregisteredGroupSources"
                }
            }
        },
        "TransitGatewayMulticastDeregisteredGroupSources": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/String"
                },
                "DeregisteredNetworkInterfaceIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "GroupIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeregisterTransitGatewayMulticastGroupSourcesRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "GroupIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceIds": {
                    "$ref": "#/$defs/TransitGatewayNetworkInterfaceIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeAccountAttributesResult": {
            "type": "object",
            "properties": {
                "AccountAttributes": {
                    "$ref": "#/$defs/AccountAttributeList"
                }
            }
        },
        "AccountAttributeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountAttribute"
            }
        },
        "AccountAttribute": {
            "type": "object",
            "properties": {
                "AttributeName": {
                    "$ref": "#/$defs/String"
                },
                "AttributeValues": {
                    "$ref": "#/$defs/AccountAttributeValueList"
                }
            }
        },
        "AccountAttributeValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountAttributeValue"
            }
        },
        "AccountAttributeValue": {
            "type": "object",
            "properties": {
                "AttributeValue": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeAccountAttributesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "AttributeNames": {
                    "$ref": "#/$defs/AccountAttributeNameStringList"
                }
            }
        },
        "AccountAttributeNameStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccountAttributeName"
            }
        },
        "AccountAttributeName": {
            "enum": [
                "supported_platforms",
                "default_vpc"
            ]
        },
        "DescribeAddressesResult": {
            "type": "object",
            "properties": {
                "Addresses": {
                    "$ref": "#/$defs/AddressList"
                }
            }
        },
        "AddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Address"
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/String"
                },
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "Domain": {
                    "$ref": "#/$defs/DomainType"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "PublicIpv4Pool": {
                    "$ref": "#/$defs/String"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                },
                "CustomerOwnedIp": {
                    "$ref": "#/$defs/String"
                },
                "CustomerOwnedIpv4Pool": {
                    "$ref": "#/$defs/String"
                },
                "CarrierIp": {
                    "$ref": "#/$defs/String"
                },
                "ServiceManaged": {
                    "$ref": "#/$defs/ServiceManaged"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceManaged": {
            "enum": [
                "alb",
                "nlb"
            ]
        },
        "DescribeAddressesRequest": {
            "type": "object",
            "properties": {
                "PublicIps": {
                    "$ref": "#/$defs/PublicIpStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "AllocationIds": {
                    "$ref": "#/$defs/AllocationIdList"
                }
            }
        },
        "PublicIpStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "FilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Values": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "DescribeAddressesAttributeResult": {
            "type": "object",
            "properties": {
                "Addresses": {
                    "$ref": "#/$defs/AddressSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AddressSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddressAttribute"
            }
        },
        "AddressAttribute": {
            "type": "object",
            "properties": {
                "PublicIp": {
                    "$ref": "#/$defs/PublicIpAddress"
                },
                "AllocationId": {
                    "$ref": "#/$defs/AllocationId"
                },
                "PtrRecord": {
                    "$ref": "#/$defs/String"
                },
                "PtrRecordUpdate": {
                    "$ref": "#/$defs/PtrUpdateStatus"
                }
            }
        },
        "PtrUpdateStatus": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "Reason": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NextToken": {
            "type": "string"
        },
        "DescribeAddressesAttributeRequest": {
            "type": "object",
            "properties": {
                "AllocationIds": {
                    "$ref": "#/$defs/AllocationIds"
                },
                "Attribute": {
                    "$ref": "#/$defs/AddressAttributeName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/AddressMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AllocationIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllocationId"
            }
        },
        "AddressAttributeName": {
            "enum": [
                "domain_name"
            ]
        },
        "AddressMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeAddressTransfersResult": {
            "type": "object",
            "properties": {
                "AddressTransfers": {
                    "$ref": "#/$defs/AddressTransferList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AddressTransferList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddressTransfer"
            }
        },
        "DescribeAddressTransfersRequest": {
            "type": "object",
            "properties": {
                "AllocationIds": {
                    "$ref": "#/$defs/AllocationIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeAddressTransfersMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeAddressTransfersMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeAggregateIdFormatResult": {
            "type": "object",
            "properties": {
                "UseLongIdsAggregated": {
                    "$ref": "#/$defs/Boolean"
                },
                "Statuses": {
                    "$ref": "#/$defs/IdFormatList"
                }
            }
        },
        "IdFormatList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdFormat"
            }
        },
        "IdFormat": {
            "type": "object",
            "properties": {
                "Deadline": {
                    "$ref": "#/$defs/DateTime"
                },
                "Resource": {
                    "$ref": "#/$defs/String"
                },
                "UseLongIds": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeAggregateIdFormatRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeAvailabilityZonesResult": {
            "type": "object",
            "properties": {
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZoneList"
                }
            }
        },
        "AvailabilityZoneList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZone"
            }
        },
        "AvailabilityZone": {
            "type": "object",
            "properties": {
                "OptInStatus": {
                    "$ref": "#/$defs/AvailabilityZoneOptInStatus"
                },
                "Messages": {
                    "$ref": "#/$defs/AvailabilityZoneMessageList"
                },
                "RegionName": {
                    "$ref": "#/$defs/String"
                },
                "ZoneName": {
                    "$ref": "#/$defs/String"
                },
                "ZoneId": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                },
                "ZoneType": {
                    "$ref": "#/$defs/String"
                },
                "ParentZoneName": {
                    "$ref": "#/$defs/String"
                },
                "ParentZoneId": {
                    "$ref": "#/$defs/String"
                },
                "GroupLongName": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/AvailabilityZoneState"
                }
            }
        },
        "AvailabilityZoneOptInStatus": {
            "enum": [
                "opt_in_not_required",
                "opted_in",
                "not_opted_in"
            ]
        },
        "AvailabilityZoneMessageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AvailabilityZoneMessage"
            }
        },
        "AvailabilityZoneMessage": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AvailabilityZoneState": {
            "enum": [
                "available",
                "information",
                "impaired",
                "unavailable",
                "constrained"
            ]
        },
        "DescribeAvailabilityZonesRequest": {
            "type": "object",
            "properties": {
                "ZoneNames": {
                    "$ref": "#/$defs/ZoneNameStringList"
                },
                "ZoneIds": {
                    "$ref": "#/$defs/ZoneIdStringList"
                },
                "AllAvailabilityZones": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "ZoneNameStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ZoneIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeAwsNetworkPerformanceMetricSubscriptionsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Subscriptions": {
                    "$ref": "#/$defs/SubscriptionList"
                }
            }
        },
        "SubscriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Subscription"
            }
        },
        "Subscription": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "Destination": {
                    "$ref": "#/$defs/String"
                },
                "Metric": {
                    "$ref": "#/$defs/MetricType"
                },
                "Statistic": {
                    "$ref": "#/$defs/StatisticType"
                },
                "Period": {
                    "$ref": "#/$defs/PeriodType"
                }
            }
        },
        "MetricType": {
            "enum": [
                "aggregate_latency"
            ]
        },
        "StatisticType": {
            "enum": [
                "p50"
            ]
        },
        "PeriodType": {
            "enum": [
                "five_minutes",
                "fifteen_minutes",
                "one_hour",
                "three_hours",
                "one_day",
                "one_week"
            ]
        },
        "DescribeAwsNetworkPerformanceMetricSubscriptionsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxResultsParam"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "MaxResultsParam": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeBundleTasksResult": {
            "type": "object",
            "properties": {
                "BundleTasks": {
                    "$ref": "#/$defs/BundleTaskList"
                }
            }
        },
        "BundleTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BundleTask"
            }
        },
        "DescribeBundleTasksRequest": {
            "type": "object",
            "properties": {
                "BundleIds": {
                    "$ref": "#/$defs/BundleIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "BundleIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BundleId"
            }
        },
        "DescribeByoipCidrsResult": {
            "type": "object",
            "properties": {
                "ByoipCidrs": {
                    "$ref": "#/$defs/ByoipCidrSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ByoipCidrSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ByoipCidr"
            }
        },
        "DescribeByoipCidrsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeByoipCidrsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeByoipCidrsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCapacityBlockExtensionHistoryResult": {
            "type": "object",
            "properties": {
                "CapacityBlockExtensions": {
                    "$ref": "#/$defs/CapacityBlockExtensionSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CapacityBlockExtensionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityBlockExtension"
            }
        },
        "CapacityBlockExtension": {
            "type": "object",
            "properties": {
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZoneName"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "CapacityBlockExtensionOfferingId": {
                    "$ref": "#/$defs/OfferingId"
                },
                "CapacityBlockExtensionDurationHours": {
                    "$ref": "#/$defs/Integer"
                },
                "CapacityBlockExtensionStatus": {
                    "$ref": "#/$defs/CapacityBlockExtensionStatus"
                },
                "CapacityBlockExtensionPurchaseDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "CapacityBlockExtensionStartDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "CapacityBlockExtensionEndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "UpfrontFee": {
                    "$ref": "#/$defs/String"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "OfferingId": {
            "type": "string"
        },
        "CapacityBlockExtensionStatus": {
            "enum": [
                "PAYMENT_PENDING",
                "PAYMENT_FAILED",
                "PAYMENT_SUCCEEDED"
            ]
        },
        "DescribeCapacityBlockExtensionHistoryRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationIds": {
                    "$ref": "#/$defs/CapacityReservationIdSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeFutureCapacityMaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CapacityReservationIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityReservationId"
            }
        },
        "DescribeFutureCapacityMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCapacityBlockExtensionOfferingsResult": {
            "type": "object",
            "properties": {
                "CapacityBlockExtensionOfferings": {
                    "$ref": "#/$defs/CapacityBlockExtensionOfferingSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CapacityBlockExtensionOfferingSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityBlockExtensionOffering"
            }
        },
        "CapacityBlockExtensionOffering": {
            "type": "object",
            "properties": {
                "CapacityBlockExtensionOfferingId": {
                    "$ref": "#/$defs/OfferingId"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZoneName"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/AvailabilityZoneId"
                },
                "StartDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "CapacityBlockExtensionStartDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "CapacityBlockExtensionEndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "CapacityBlockExtensionDurationHours": {
                    "$ref": "#/$defs/Integer"
                },
                "UpfrontFee": {
                    "$ref": "#/$defs/String"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/String"
                },
                "Tenancy": {
                    "$ref": "#/$defs/CapacityReservationTenancy"
                }
            }
        },
        "DescribeCapacityBlockExtensionOfferingsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "CapacityBlockExtensionDurationHours": {
                    "$ref": "#/$defs/Integer"
                },
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeCapacityBlockExtensionOfferingsMaxResults"
                }
            }
        },
        "DescribeCapacityBlockExtensionOfferingsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCapacityBlockOfferingsResult": {
            "type": "object",
            "properties": {
                "CapacityBlockOfferings": {
                    "$ref": "#/$defs/CapacityBlockOfferingSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CapacityBlockOfferingSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityBlockOffering"
            }
        },
        "CapacityBlockOffering": {
            "type": "object",
            "properties": {
                "CapacityBlockOfferingId": {
                    "$ref": "#/$defs/OfferingId"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "StartDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "CapacityBlockDurationHours": {
                    "$ref": "#/$defs/Integer"
                },
                "UpfrontFee": {
                    "$ref": "#/$defs/String"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/String"
                },
                "Tenancy": {
                    "$ref": "#/$defs/CapacityReservationTenancy"
                },
                "CapacityBlockDurationMinutes": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "DescribeCapacityBlockOfferingsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "StartDateRange": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EndDateRange": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "CapacityDurationHours": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeCapacityBlockOfferingsMaxResults"
                }
            }
        },
        "DescribeCapacityBlockOfferingsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCapacityReservationBillingRequestsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "CapacityReservationBillingRequests": {
                    "$ref": "#/$defs/CapacityReservationBillingRequestSet"
                }
            }
        },
        "CapacityReservationBillingRequestSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityReservationBillingRequest"
            }
        },
        "CapacityReservationBillingRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationId": {
                    "$ref": "#/$defs/String"
                },
                "RequestedBy": {
                    "$ref": "#/$defs/String"
                },
                "UnusedReservationBillingOwnerId": {
                    "$ref": "#/$defs/AccountID"
                },
                "LastUpdateTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Status": {
                    "$ref": "#/$defs/CapacityReservationBillingRequestStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "CapacityReservationInfo": {
                    "$ref": "#/$defs/CapacityReservationInfo"
                }
            }
        },
        "CapacityReservationBillingRequestStatus": {
            "enum": [
                "pending",
                "accepted",
                "rejected",
                "cancelled",
                "revoked",
                "expired"
            ]
        },
        "CapacityReservationInfo": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/AvailabilityZoneName"
                },
                "Tenancy": {
                    "$ref": "#/$defs/CapacityReservationTenancy"
                }
            }
        },
        "DescribeCapacityReservationBillingRequestsRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationIds": {
                    "$ref": "#/$defs/CapacityReservationIdSet"
                },
                "Role": {
                    "$ref": "#/$defs/CallerRole"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeCapacityReservationBillingRequestsRequestMaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CallerRole": {
            "enum": [
                "odcr_owner",
                "unused_reservation_billing_owner"
            ]
        },
        "DescribeCapacityReservationBillingRequestsRequestMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCapacityReservationFleetsResult": {
            "type": "object",
            "properties": {
                "CapacityReservationFleets": {
                    "$ref": "#/$defs/CapacityReservationFleetSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CapacityReservationFleetSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityReservationFleet"
            }
        },
        "CapacityReservationFleet": {
            "type": "object",
            "properties": {
                "CapacityReservationFleetId": {
                    "$ref": "#/$defs/CapacityReservationFleetId"
                },
                "CapacityReservationFleetArn": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/CapacityReservationFleetState"
                },
                "TotalTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "TotalFulfilledCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "Tenancy": {
                    "$ref": "#/$defs/FleetCapacityReservationTenancy"
                },
                "EndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "CreateTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "InstanceMatchCriteria": {
                    "$ref": "#/$defs/FleetInstanceMatchCriteria"
                },
                "AllocationStrategy": {
                    "$ref": "#/$defs/String"
                },
                "InstanceTypeSpecifications": {
                    "$ref": "#/$defs/FleetCapacityReservationSet"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DescribeCapacityReservationFleetsRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationFleetIds": {
                    "$ref": "#/$defs/CapacityReservationFleetIdSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeCapacityReservationFleetsMaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeCapacityReservationFleetsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCapacityReservationsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "CapacityReservations": {
                    "$ref": "#/$defs/CapacityReservationSet"
                }
            }
        },
        "CapacityReservationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityReservation"
            }
        },
        "DescribeCapacityReservationsRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationIds": {
                    "$ref": "#/$defs/CapacityReservationIdSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeCapacityReservationsMaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeCapacityReservationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCarrierGatewaysResult": {
            "type": "object",
            "properties": {
                "CarrierGateways": {
                    "$ref": "#/$defs/CarrierGatewaySet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CarrierGatewaySet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CarrierGateway"
            }
        },
        "DescribeCarrierGatewaysRequest": {
            "type": "object",
            "properties": {
                "CarrierGatewayIds": {
                    "$ref": "#/$defs/CarrierGatewayIdSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/CarrierGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CarrierGatewayIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CarrierGatewayId"
            }
        },
        "CarrierGatewayMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeClassicLinkInstancesResult": {
            "type": "object",
            "properties": {
                "Instances": {
                    "$ref": "#/$defs/ClassicLinkInstanceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClassicLinkInstanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClassicLinkInstance"
            }
        },
        "ClassicLinkInstance": {
            "type": "object",
            "properties": {
                "Groups": {
                    "$ref": "#/$defs/GroupIdentifierList"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeClassicLinkInstancesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeClassicLinkInstancesMaxResults"
                }
            }
        },
        "InstanceIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceId"
            }
        },
        "DescribeClassicLinkInstancesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeClientVpnAuthorizationRulesResult": {
            "type": "object",
            "properties": {
                "AuthorizationRules": {
                    "$ref": "#/$defs/AuthorizationRuleSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AuthorizationRuleSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AuthorizationRule"
            }
        },
        "AuthorizationRule": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "AccessAll": {
                    "$ref": "#/$defs/Boolean"
                },
                "DestinationCidr": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ClientVpnAuthorizationRuleStatus"
                }
            }
        },
        "DescribeClientVpnAuthorizationRulesRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeClientVpnAuthorizationRulesMaxResults"
                }
            }
        },
        "DescribeClientVpnAuthorizationRulesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeClientVpnConnectionsResult": {
            "type": "object",
            "properties": {
                "Connections": {
                    "$ref": "#/$defs/ClientVpnConnectionSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ClientVpnConnectionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClientVpnConnection"
            }
        },
        "ClientVpnConnection": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "Timestamp": {
                    "$ref": "#/$defs/String"
                },
                "ConnectionId": {
                    "$ref": "#/$defs/String"
                },
                "Username": {
                    "$ref": "#/$defs/String"
                },
                "ConnectionEstablishedTime": {
                    "$ref": "#/$defs/String"
                },
                "IngressBytes": {
                    "$ref": "#/$defs/String"
                },
                "EgressBytes": {
                    "$ref": "#/$defs/String"
                },
                "IngressPackets": {
                    "$ref": "#/$defs/String"
                },
                "EgressPackets": {
                    "$ref": "#/$defs/String"
                },
                "ClientIp": {
                    "$ref": "#/$defs/String"
                },
                "CommonName": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ClientVpnConnectionStatus"
                },
                "ConnectionEndTime": {
                    "$ref": "#/$defs/String"
                },
                "PostureComplianceStatuses": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "ClientVpnConnectionStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/ClientVpnConnectionStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientVpnConnectionStatusCode": {
            "enum": [
                "active",
                "failed_to_terminate",
                "terminating",
                "terminated"
            ]
        },
        "DescribeClientVpnConnectionsRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeClientVpnConnectionsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeClientVpnConnectionsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeClientVpnEndpointsResult": {
            "type": "object",
            "properties": {
                "ClientVpnEndpoints": {
                    "$ref": "#/$defs/EndpointSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "EndpointSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClientVpnEndpoint"
            }
        },
        "ClientVpnEndpoint": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ClientVpnEndpointStatus"
                },
                "CreationTime": {
                    "$ref": "#/$defs/String"
                },
                "DeletionTime": {
                    "$ref": "#/$defs/String"
                },
                "DnsName": {
                    "$ref": "#/$defs/String"
                },
                "ClientCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "DnsServers": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SplitTunnel": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpnProtocol": {
                    "$ref": "#/$defs/VpnProtocol"
                },
                "TransportProtocol": {
                    "$ref": "#/$defs/TransportProtocol"
                },
                "VpnPort": {
                    "$ref": "#/$defs/Integer"
                },
                "AssociatedTargetNetworks": {
                    "$ref": "#/$defs/AssociatedTargetNetworkSet"
                },
                "ServerCertificateArn": {
                    "$ref": "#/$defs/String"
                },
                "AuthenticationOptions": {
                    "$ref": "#/$defs/ClientVpnAuthenticationList"
                },
                "ConnectionLogOptions": {
                    "$ref": "#/$defs/ConnectionLogResponseOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/ClientVpnSecurityGroupIdSet"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SelfServicePortalUrl": {
                    "$ref": "#/$defs/String"
                },
                "ClientConnectOptions": {
                    "$ref": "#/$defs/ClientConnectResponseOptions"
                },
                "SessionTimeoutHours": {
                    "$ref": "#/$defs/Integer"
                },
                "ClientLoginBannerOptions": {
                    "$ref": "#/$defs/ClientLoginBannerResponseOptions"
                },
                "DisconnectOnSessionTimeout": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VpnProtocol": {
            "enum": [
                "openvpn"
            ]
        },
        "AssociatedTargetNetworkSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssociatedTargetNetwork"
            }
        },
        "AssociatedTargetNetwork": {
            "type": "object",
            "properties": {
                "NetworkId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkType": {
                    "$ref": "#/$defs/AssociatedNetworkType"
                }
            }
        },
        "AssociatedNetworkType": {
            "enum": [
                "vpc"
            ]
        },
        "ClientVpnAuthenticationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClientVpnAuthentication"
            }
        },
        "ClientVpnAuthentication": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ClientVpnAuthenticationType"
                },
                "ActiveDirectory": {
                    "$ref": "#/$defs/DirectoryServiceAuthentication"
                },
                "MutualAuthentication": {
                    "$ref": "#/$defs/CertificateAuthentication"
                },
                "FederatedAuthentication": {
                    "$ref": "#/$defs/FederatedAuthentication"
                }
            }
        },
        "DirectoryServiceAuthentication": {
            "type": "object",
            "properties": {
                "DirectoryId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CertificateAuthentication": {
            "type": "object",
            "properties": {
                "ClientRootCertificateChain": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FederatedAuthentication": {
            "type": "object",
            "properties": {
                "SamlProviderArn": {
                    "$ref": "#/$defs/String"
                },
                "SelfServiceSamlProviderArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ConnectionLogResponseOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "CloudwatchLogGroup": {
                    "$ref": "#/$defs/String"
                },
                "CloudwatchLogStream": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientConnectResponseOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "LambdaFunctionArn": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ClientVpnEndpointAttributeStatus"
                }
            }
        },
        "ClientVpnEndpointAttributeStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/ClientVpnEndpointAttributeStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientVpnEndpointAttributeStatusCode": {
            "enum": [
                "applying",
                "applied"
            ]
        },
        "ClientLoginBannerResponseOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "BannerText": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeClientVpnEndpointsRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointIds": {
                    "$ref": "#/$defs/ClientVpnEndpointIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeClientVpnEndpointMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ClientVpnEndpointIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClientVpnEndpointId"
            }
        },
        "DescribeClientVpnEndpointMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeClientVpnRoutesResult": {
            "type": "object",
            "properties": {
                "Routes": {
                    "$ref": "#/$defs/ClientVpnRouteSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ClientVpnRouteSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClientVpnRoute"
            }
        },
        "ClientVpnRoute": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "DestinationCidr": {
                    "$ref": "#/$defs/String"
                },
                "TargetSubnet": {
                    "$ref": "#/$defs/String"
                },
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "Origin": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ClientVpnRouteStatus"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeClientVpnRoutesRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeClientVpnRoutesMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeClientVpnRoutesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeClientVpnTargetNetworksResult": {
            "type": "object",
            "properties": {
                "ClientVpnTargetNetworks": {
                    "$ref": "#/$defs/TargetNetworkSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TargetNetworkSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetNetwork"
            }
        },
        "TargetNetwork": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "TargetNetworkId": {
                    "$ref": "#/$defs/String"
                },
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/AssociationStatus"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "DescribeClientVpnTargetNetworksRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "AssociationIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeClientVpnTargetNetworksMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeClientVpnTargetNetworksMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeCoipPoolsResult": {
            "type": "object",
            "properties": {
                "CoipPools": {
                    "$ref": "#/$defs/CoipPoolSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CoipPoolSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoipPool"
            }
        },
        "DescribeCoipPoolsRequest": {
            "type": "object",
            "properties": {
                "PoolIds": {
                    "$ref": "#/$defs/CoipPoolIdSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/CoipPoolMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CoipPoolIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv4PoolCoipId"
            }
        },
        "CoipPoolMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeConversionTasksResult": {
            "type": "object",
            "properties": {
                "ConversionTasks": {
                    "$ref": "#/$defs/DescribeConversionTaskList"
                }
            }
        },
        "DescribeConversionTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConversionTask"
            }
        },
        "ConversionTask": {
            "type": "object",
            "properties": {
                "ConversionTaskId": {
                    "$ref": "#/$defs/String"
                },
                "ExpirationTime": {
                    "$ref": "#/$defs/String"
                },
                "ImportInstance": {
                    "$ref": "#/$defs/ImportInstanceTaskDetails"
                },
                "ImportVolume": {
                    "$ref": "#/$defs/ImportVolumeTaskDetails"
                },
                "State": {
                    "$ref": "#/$defs/ConversionTaskState"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ImportInstanceTaskDetails": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Platform": {
                    "$ref": "#/$defs/PlatformValues"
                },
                "Volumes": {
                    "$ref": "#/$defs/ImportInstanceVolumeDetailSet"
                }
            }
        },
        "ImportInstanceVolumeDetailSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportInstanceVolumeDetailItem"
            }
        },
        "ImportInstanceVolumeDetailItem": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "BytesConverted": {
                    "$ref": "#/$defs/Long"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Image": {
                    "$ref": "#/$defs/DiskImageDescription"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "Volume": {
                    "$ref": "#/$defs/DiskImageVolumeDescription"
                }
            }
        },
        "DiskImageDescription": {
            "type": "object",
            "properties": {
                "Checksum": {
                    "$ref": "#/$defs/String"
                },
                "Format": {
                    "$ref": "#/$defs/DiskImageFormat"
                },
                "ImportManifestUrl": {
                    "$ref": "#/$defs/ImportManifestUrl"
                },
                "Size": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "ImportManifestUrl": {
            "type": "string"
        },
        "DiskImageVolumeDescription": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Size": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "ImportVolumeTaskDetails": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "BytesConverted": {
                    "$ref": "#/$defs/Long"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Image": {
                    "$ref": "#/$defs/DiskImageDescription"
                },
                "Volume": {
                    "$ref": "#/$defs/DiskImageVolumeDescription"
                }
            }
        },
        "ConversionTaskState": {
            "enum": [
                "active",
                "cancelling",
                "cancelled",
                "completed"
            ]
        },
        "DescribeConversionTasksRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ConversionTaskIds": {
                    "$ref": "#/$defs/ConversionIdStringList"
                }
            }
        },
        "ConversionIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConversionTaskId"
            }
        },
        "DescribeCustomerGatewaysResult": {
            "type": "object",
            "properties": {
                "CustomerGateways": {
                    "$ref": "#/$defs/CustomerGatewayList"
                }
            }
        },
        "CustomerGatewayList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomerGateway"
            }
        },
        "DescribeCustomerGatewaysRequest": {
            "type": "object",
            "properties": {
                "CustomerGatewayIds": {
                    "$ref": "#/$defs/CustomerGatewayIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CustomerGatewayIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomerGatewayId"
            }
        },
        "DescribeDeclarativePoliciesReportsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Reports": {
                    "$ref": "#/$defs/DeclarativePoliciesReportList"
                }
            }
        },
        "DeclarativePoliciesReportList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeclarativePoliciesReport"
            }
        },
        "DeclarativePoliciesReport": {
            "type": "object",
            "properties": {
                "ReportId": {
                    "$ref": "#/$defs/String"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/String"
                },
                "TargetId": {
                    "$ref": "#/$defs/String"
                },
                "StartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EndTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Status": {
                    "$ref": "#/$defs/ReportState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ReportState": {
            "enum": [
                "running",
                "cancelled",
                "complete",
                "error"
            ]
        },
        "DescribeDeclarativePoliciesReportsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DeclarativePoliciesMaxResults"
                },
                "ReportIds": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "DeclarativePoliciesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeDhcpOptionsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DhcpOptions": {
                    "$ref": "#/$defs/DhcpOptionsList"
                }
            }
        },
        "DhcpOptionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DhcpOptions"
            }
        },
        "DescribeDhcpOptionsRequest": {
            "type": "object",
            "properties": {
                "DhcpOptionsIds": {
                    "$ref": "#/$defs/DhcpOptionsIdStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeDhcpOptionsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DhcpOptionsIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DhcpOptionsId"
            }
        },
        "DescribeDhcpOptionsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeEgressOnlyInternetGatewaysResult": {
            "type": "object",
            "properties": {
                "EgressOnlyInternetGateways": {
                    "$ref": "#/$defs/EgressOnlyInternetGatewayList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EgressOnlyInternetGatewayList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EgressOnlyInternetGateway"
            }
        },
        "DescribeEgressOnlyInternetGatewaysRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "EgressOnlyInternetGatewayIds": {
                    "$ref": "#/$defs/EgressOnlyInternetGatewayIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeEgressOnlyInternetGatewaysMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "EgressOnlyInternetGatewayIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EgressOnlyInternetGatewayId"
            }
        },
        "DescribeEgressOnlyInternetGatewaysMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeElasticGpusResult": {
            "type": "object",
            "properties": {
                "ElasticGpuSet": {
                    "$ref": "#/$defs/ElasticGpuSet"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ElasticGpuSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticGpus"
            }
        },
        "ElasticGpus": {
            "type": "object",
            "properties": {
                "ElasticGpuId": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "ElasticGpuType": {
                    "$ref": "#/$defs/String"
                },
                "ElasticGpuHealth": {
                    "$ref": "#/$defs/ElasticGpuHealth"
                },
                "ElasticGpuState": {
                    "$ref": "#/$defs/ElasticGpuState"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ElasticGpuHealth": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ElasticGpuStatus"
                }
            }
        },
        "ElasticGpuStatus": {
            "enum": [
                "Ok",
                "Impaired"
            ]
        },
        "ElasticGpuState": {
            "enum": [
                "Attached"
            ]
        },
        "DescribeElasticGpusRequest": {
            "type": "object",
            "properties": {
                "ElasticGpuIds": {
                    "$ref": "#/$defs/ElasticGpuIdSet"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeElasticGpusMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ElasticGpuIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticGpuId"
            }
        },
        "ElasticGpuId": {
            "type": "string"
        },
        "DescribeElasticGpusMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeExportImageTasksResult": {
            "type": "object",
            "properties": {
                "ExportImageTasks": {
                    "$ref": "#/$defs/ExportImageTaskList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ExportImageTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportImageTask"
            }
        },
        "ExportImageTask": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ExportImageTaskId": {
                    "$ref": "#/$defs/String"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "Progress": {
                    "$ref": "#/$defs/String"
                },
                "S3ExportLocation": {
                    "$ref": "#/$defs/ExportTaskS3Location"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ExportTaskS3Location": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeExportImageTasksRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "ExportImageTaskIds": {
                    "$ref": "#/$defs/ExportImageTaskIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeExportImageTasksMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ExportImageTaskIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportImageTaskId"
            }
        },
        "ExportImageTaskId": {
            "type": "string"
        },
        "DescribeExportImageTasksMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeExportTasksResult": {
            "type": "object",
            "properties": {
                "ExportTasks": {
                    "$ref": "#/$defs/ExportTaskList"
                }
            }
        },
        "ExportTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportTask"
            }
        },
        "DescribeExportTasksRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "ExportTaskIds": {
                    "$ref": "#/$defs/ExportTaskIdStringList"
                }
            }
        },
        "ExportTaskIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportTaskId"
            }
        },
        "ExportTaskId": {
            "type": "string"
        },
        "DescribeFastLaunchImagesResult": {
            "type": "object",
            "properties": {
                "FastLaunchImages": {
                    "$ref": "#/$defs/DescribeFastLaunchImagesSuccessSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeFastLaunchImagesSuccessSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeFastLaunchImagesSuccessItem"
            }
        },
        "DescribeFastLaunchImagesSuccessItem": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/FastLaunchResourceType"
                },
                "SnapshotConfiguration": {
                    "$ref": "#/$defs/FastLaunchSnapshotConfigurationResponse"
                },
                "LaunchTemplate": {
                    "$ref": "#/$defs/FastLaunchLaunchTemplateSpecificationResponse"
                },
                "MaxParallelLaunches": {
                    "$ref": "#/$defs/Integer"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/FastLaunchStateCode"
                },
                "StateTransitionReason": {
                    "$ref": "#/$defs/String"
                },
                "StateTransitionTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "FastLaunchResourceType": {
            "enum": [
                "SNAPSHOT"
            ]
        },
        "FastLaunchSnapshotConfigurationResponse": {
            "type": "object",
            "properties": {
                "TargetResourceCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "FastLaunchLaunchTemplateSpecificationResponse": {
            "type": "object",
            "properties": {
                "LaunchTemplateId": {
                    "$ref": "#/$defs/LaunchTemplateId"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/String"
                },
                "Version": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FastLaunchStateCode": {
            "enum": [
                "enabling",
                "enabling_failed",
                "enabled",
                "enabled_failed",
                "disabling",
                "disabling_failed"
            ]
        },
        "DescribeFastLaunchImagesRequest": {
            "type": "object",
            "properties": {
                "ImageIds": {
                    "$ref": "#/$defs/FastLaunchImageIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeFastLaunchImagesRequestMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "FastLaunchImageIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImageId"
            }
        },
        "DescribeFastLaunchImagesRequestMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeFastSnapshotRestoresResult": {
            "type": "object",
            "properties": {
                "FastSnapshotRestores": {
                    "$ref": "#/$defs/DescribeFastSnapshotRestoreSuccessSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeFastSnapshotRestoreSuccessSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeFastSnapshotRestoreSuccessItem"
            }
        },
        "DescribeFastSnapshotRestoreSuccessItem": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/FastSnapshotRestoreStateCode"
                },
                "StateTransitionReason": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerAlias": {
                    "$ref": "#/$defs/String"
                },
                "EnablingTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "OptimizingTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EnabledTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DisablingTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DisabledTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "FastSnapshotRestoreStateCode": {
            "enum": [
                "enabling",
                "optimizing",
                "enabled",
                "disabling",
                "disabled"
            ]
        },
        "DescribeFastSnapshotRestoresRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeFastSnapshotRestoresMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeFastSnapshotRestoresMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeFleetHistoryResult": {
            "type": "object",
            "properties": {
                "HistoryRecords": {
                    "$ref": "#/$defs/HistoryRecordSet"
                },
                "LastEvaluatedTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "FleetId": {
                    "$ref": "#/$defs/FleetId"
                },
                "StartTime": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "HistoryRecordSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HistoryRecordEntry"
            }
        },
        "HistoryRecordEntry": {
            "type": "object",
            "properties": {
                "EventInformation": {
                    "$ref": "#/$defs/EventInformation"
                },
                "EventType": {
                    "$ref": "#/$defs/FleetEventType"
                },
                "Timestamp": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "EventInformation": {
            "type": "object",
            "properties": {
                "EventDescription": {
                    "$ref": "#/$defs/String"
                },
                "EventSubType": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FleetEventType": {
            "enum": [
                "INSTANCE_CHANGE",
                "FLEET_CHANGE",
                "SERVICE_ERROR"
            ]
        },
        "DescribeFleetHistoryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "EventType": {
                    "$ref": "#/$defs/FleetEventType"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "FleetId": {
                    "$ref": "#/$defs/FleetId"
                },
                "StartTime": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "DescribeFleetInstancesResult": {
            "type": "object",
            "properties": {
                "ActiveInstances": {
                    "$ref": "#/$defs/ActiveInstanceSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "FleetId": {
                    "$ref": "#/$defs/FleetId"
                }
            }
        },
        "ActiveInstanceSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ActiveInstance"
            }
        },
        "ActiveInstance": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "SpotInstanceRequestId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceHealth": {
                    "$ref": "#/$defs/InstanceHealthStatus"
                }
            }
        },
        "InstanceHealthStatus": {
            "enum": [
                "HEALTHY_STATUS",
                "UNHEALTHY_STATUS"
            ]
        },
        "DescribeFleetInstancesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "FleetId": {
                    "$ref": "#/$defs/FleetId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeFleetsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Fleets": {
                    "$ref": "#/$defs/FleetSet"
                }
            }
        },
        "FleetSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FleetData"
            }
        },
        "FleetData": {
            "type": "object",
            "properties": {
                "ActivityStatus": {
                    "$ref": "#/$defs/FleetActivityStatus"
                },
                "CreateTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "FleetId": {
                    "$ref": "#/$defs/FleetId"
                },
                "FleetState": {
                    "$ref": "#/$defs/FleetStateCode"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "ExcessCapacityTerminationPolicy": {
                    "$ref": "#/$defs/FleetExcessCapacityTerminationPolicy"
                },
                "FulfilledCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "FulfilledOnDemandCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "LaunchTemplateConfigs": {
                    "$ref": "#/$defs/FleetLaunchTemplateConfigList"
                },
                "TargetCapacitySpecification": {
                    "$ref": "#/$defs/TargetCapacitySpecification"
                },
                "TerminateInstancesWithExpiration": {
                    "$ref": "#/$defs/Boolean"
                },
                "Type": {
                    "$ref": "#/$defs/FleetType"
                },
                "ValidFrom": {
                    "$ref": "#/$defs/DateTime"
                },
                "ValidUntil": {
                    "$ref": "#/$defs/DateTime"
                },
                "ReplaceUnhealthyInstances": {
                    "$ref": "#/$defs/Boolean"
                },
                "SpotOptions": {
                    "$ref": "#/$defs/SpotOptions"
                },
                "OnDemandOptions": {
                    "$ref": "#/$defs/OnDemandOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "Errors": {
                    "$ref": "#/$defs/DescribeFleetsErrorSet"
                },
                "Instances": {
                    "$ref": "#/$defs/DescribeFleetsInstancesSet"
                },
                "Context": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FleetActivityStatus": {
            "enum": [
                "ERROR",
                "PENDING_FULFILLMENT",
                "PENDING_TERMINATION",
                "FULFILLED"
            ]
        },
        "FleetLaunchTemplateConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FleetLaunchTemplateConfig"
            }
        },
        "FleetLaunchTemplateConfig": {
            "type": "object",
            "properties": {
                "LaunchTemplateSpecification": {
                    "$ref": "#/$defs/FleetLaunchTemplateSpecification"
                },
                "Overrides": {
                    "$ref": "#/$defs/FleetLaunchTemplateOverridesList"
                }
            }
        },
        "FleetLaunchTemplateOverridesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FleetLaunchTemplateOverrides"
            }
        },
        "TargetCapacitySpecification": {
            "type": "object",
            "properties": {
                "TotalTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "OnDemandTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "SpotTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "DefaultTargetCapacityType": {
                    "$ref": "#/$defs/DefaultTargetCapacityType"
                },
                "TargetCapacityUnitType": {
                    "$ref": "#/$defs/TargetCapacityUnitType"
                }
            }
        },
        "SpotOptions": {
            "type": "object",
            "properties": {
                "AllocationStrategy": {
                    "$ref": "#/$defs/SpotAllocationStrategy"
                },
                "MaintenanceStrategies": {
                    "$ref": "#/$defs/FleetSpotMaintenanceStrategies"
                },
                "InstanceInterruptionBehavior": {
                    "$ref": "#/$defs/SpotInstanceInterruptionBehavior"
                },
                "InstancePoolsToUseCount": {
                    "$ref": "#/$defs/Integer"
                },
                "SingleInstanceType": {
                    "$ref": "#/$defs/Boolean"
                },
                "SingleAvailabilityZone": {
                    "$ref": "#/$defs/Boolean"
                },
                "MinTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "MaxTotalPrice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FleetSpotMaintenanceStrategies": {
            "type": "object",
            "properties": {
                "CapacityRebalance": {
                    "$ref": "#/$defs/FleetSpotCapacityRebalance"
                }
            }
        },
        "FleetSpotCapacityRebalance": {
            "type": "object",
            "properties": {
                "ReplacementStrategy": {
                    "$ref": "#/$defs/FleetReplacementStrategy"
                },
                "TerminationDelay": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "OnDemandOptions": {
            "type": "object",
            "properties": {
                "AllocationStrategy": {
                    "$ref": "#/$defs/FleetOnDemandAllocationStrategy"
                },
                "CapacityReservationOptions": {
                    "$ref": "#/$defs/CapacityReservationOptions"
                },
                "SingleInstanceType": {
                    "$ref": "#/$defs/Boolean"
                },
                "SingleAvailabilityZone": {
                    "$ref": "#/$defs/Boolean"
                },
                "MinTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "MaxTotalPrice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CapacityReservationOptions": {
            "type": "object",
            "properties": {
                "UsageStrategy": {
                    "$ref": "#/$defs/FleetCapacityReservationUsageStrategy"
                }
            }
        },
        "DescribeFleetsErrorSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeFleetError"
            }
        },
        "DescribeFleetError": {
            "type": "object",
            "properties": {
                "LaunchTemplateAndOverrides": {
                    "$ref": "#/$defs/LaunchTemplateAndOverridesResponse"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/InstanceLifecycle"
                },
                "ErrorCode": {
                    "$ref": "#/$defs/String"
                },
                "ErrorMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeFleetsInstancesSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeFleetsInstances"
            }
        },
        "DescribeFleetsInstances": {
            "type": "object",
            "properties": {
                "LaunchTemplateAndOverrides": {
                    "$ref": "#/$defs/LaunchTemplateAndOverridesResponse"
                },
                "Lifecycle": {
                    "$ref": "#/$defs/InstanceLifecycle"
                },
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdsSet"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "Platform": {
                    "$ref": "#/$defs/PlatformValues"
                }
            }
        },
        "DescribeFleetsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "FleetIds": {
                    "$ref": "#/$defs/FleetIdSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeFlowLogsResult": {
            "type": "object",
            "properties": {
                "FlowLogs": {
                    "$ref": "#/$defs/FlowLogSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FlowLogSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FlowLog"
            }
        },
        "FlowLog": {
            "type": "object",
            "properties": {
                "CreationTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DeliverLogsErrorMessage": {
                    "$ref": "#/$defs/String"
                },
                "DeliverLogsPermissionArn": {
                    "$ref": "#/$defs/String"
                },
                "DeliverCrossAccountRole": {
                    "$ref": "#/$defs/String"
                },
                "DeliverLogsStatus": {
                    "$ref": "#/$defs/String"
                },
                "FlowLogId": {
                    "$ref": "#/$defs/String"
                },
                "FlowLogStatus": {
                    "$ref": "#/$defs/String"
                },
                "LogGroupName": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "TrafficType": {
                    "$ref": "#/$defs/TrafficType"
                },
                "LogDestinationType": {
                    "$ref": "#/$defs/LogDestinationType"
                },
                "LogDestination": {
                    "$ref": "#/$defs/String"
                },
                "LogFormat": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "MaxAggregationInterval": {
                    "$ref": "#/$defs/Integer"
                },
                "DestinationOptions": {
                    "$ref": "#/$defs/DestinationOptionsResponse"
                }
            }
        },
        "DestinationOptionsResponse": {
            "type": "object",
            "properties": {
                "FileFormat": {
                    "$ref": "#/$defs/DestinationFileFormat"
                },
                "HiveCompatiblePartitions": {
                    "$ref": "#/$defs/Boolean"
                },
                "PerHourPartition": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeFlowLogsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filter": {
                    "$ref": "#/$defs/FilterList"
                },
                "FlowLogIds": {
                    "$ref": "#/$defs/FlowLogIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeFpgaImageAttributeResult": {
            "type": "object",
            "properties": {
                "FpgaImageAttribute": {
                    "$ref": "#/$defs/FpgaImageAttribute"
                }
            }
        },
        "FpgaImageAttribute": {
            "type": "object",
            "properties": {
                "FpgaImageId": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "LoadPermissions": {
                    "$ref": "#/$defs/LoadPermissionList"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodeList"
                }
            }
        },
        "LoadPermissionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadPermission"
            }
        },
        "LoadPermission": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/String"
                },
                "Group": {
                    "$ref": "#/$defs/PermissionGroup"
                }
            }
        },
        "PermissionGroup": {
            "enum": [
                "all"
            ]
        },
        "ProductCodeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProductCode"
            }
        },
        "ProductCode": {
            "type": "object",
            "properties": {
                "ProductCodeId": {
                    "$ref": "#/$defs/String"
                },
                "ProductCodeType": {
                    "$ref": "#/$defs/ProductCodeValues"
                }
            }
        },
        "ProductCodeValues": {
            "enum": [
                "devpay",
                "marketplace"
            ]
        },
        "DescribeFpgaImageAttributeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "FpgaImageId": {
                    "$ref": "#/$defs/FpgaImageId"
                },
                "Attribute": {
                    "$ref": "#/$defs/FpgaImageAttributeName"
                }
            }
        },
        "FpgaImageAttributeName": {
            "enum": [
                "description",
                "name",
                "loadPermission",
                "productCodes"
            ]
        },
        "DescribeFpgaImagesResult": {
            "type": "object",
            "properties": {
                "FpgaImages": {
                    "$ref": "#/$defs/FpgaImageList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "FpgaImageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FpgaImage"
            }
        },
        "FpgaImage": {
            "type": "object",
            "properties": {
                "FpgaImageId": {
                    "$ref": "#/$defs/String"
                },
                "FpgaImageGlobalId": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ShellVersion": {
                    "$ref": "#/$defs/String"
                },
                "PciId": {
                    "$ref": "#/$defs/PciId"
                },
                "State": {
                    "$ref": "#/$defs/FpgaImageState"
                },
                "CreateTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerAlias": {
                    "$ref": "#/$defs/String"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodeList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "Public": {
                    "$ref": "#/$defs/Boolean"
                },
                "DataRetentionSupport": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceTypes": {
                    "$ref": "#/$defs/InstanceTypesList"
                }
            }
        },
        "PciId": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/String"
                },
                "VendorId": {
                    "$ref": "#/$defs/String"
                },
                "SubsystemId": {
                    "$ref": "#/$defs/String"
                },
                "SubsystemVendorId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FpgaImageState": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/FpgaImageStateCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "FpgaImageStateCode": {
            "enum": [
                "pending",
                "failed",
                "available",
                "unavailable"
            ]
        },
        "InstanceTypesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeFpgaImagesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "FpgaImageIds": {
                    "$ref": "#/$defs/FpgaImageIdList"
                },
                "Owners": {
                    "$ref": "#/$defs/OwnerStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeFpgaImagesMaxResults"
                }
            }
        },
        "FpgaImageIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FpgaImageId"
            }
        },
        "OwnerStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeFpgaImagesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeHostReservationOfferingsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "OfferingSet": {
                    "$ref": "#/$defs/HostOfferingSet"
                }
            }
        },
        "HostOfferingSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HostOffering"
            }
        },
        "HostOffering": {
            "type": "object",
            "properties": {
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "HourlyPrice": {
                    "$ref": "#/$defs/String"
                },
                "InstanceFamily": {
                    "$ref": "#/$defs/String"
                },
                "OfferingId": {
                    "$ref": "#/$defs/OfferingId"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/PaymentOption"
                },
                "UpfrontPrice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PaymentOption": {
            "enum": [
                "ALL_UPFRONT",
                "PARTIAL_UPFRONT",
                "NO_UPFRONT"
            ]
        },
        "DescribeHostReservationOfferingsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxDuration": {
                    "$ref": "#/$defs/Integer"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeHostReservationsMaxResults"
                },
                "MinDuration": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "OfferingId": {
                    "$ref": "#/$defs/OfferingId"
                }
            }
        },
        "DescribeHostReservationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeHostReservationsResult": {
            "type": "object",
            "properties": {
                "HostReservationSet": {
                    "$ref": "#/$defs/HostReservationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "HostReservationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HostReservation"
            }
        },
        "HostReservation": {
            "type": "object",
            "properties": {
                "Count": {
                    "$ref": "#/$defs/Integer"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "End": {
                    "$ref": "#/$defs/DateTime"
                },
                "HostIdSet": {
                    "$ref": "#/$defs/ResponseHostIdSet"
                },
                "HostReservationId": {
                    "$ref": "#/$defs/HostReservationId"
                },
                "HourlyPrice": {
                    "$ref": "#/$defs/String"
                },
                "InstanceFamily": {
                    "$ref": "#/$defs/String"
                },
                "OfferingId": {
                    "$ref": "#/$defs/OfferingId"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/PaymentOption"
                },
                "Start": {
                    "$ref": "#/$defs/DateTime"
                },
                "State": {
                    "$ref": "#/$defs/ReservationState"
                },
                "UpfrontPrice": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ResponseHostIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "HostReservationId": {
            "type": "string"
        },
        "ReservationState": {
            "enum": [
                "PAYMENT_PENDING",
                "PAYMENT_FAILED",
                "ACTIVE",
                "RETIRED"
            ]
        },
        "DescribeHostReservationsRequest": {
            "type": "object",
            "properties": {
                "Filter": {
                    "$ref": "#/$defs/FilterList"
                },
                "HostReservationIdSet": {
                    "$ref": "#/$defs/HostReservationIdSet"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "HostReservationIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HostReservationId"
            }
        },
        "DescribeHostsResult": {
            "type": "object",
            "properties": {
                "Hosts": {
                    "$ref": "#/$defs/HostList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "HostList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Host"
            }
        },
        "Host": {
            "type": "object",
            "properties": {
                "AutoPlacement": {
                    "$ref": "#/$defs/AutoPlacement"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "AvailableCapacity": {
                    "$ref": "#/$defs/AvailableCapacity"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "HostId": {
                    "$ref": "#/$defs/String"
                },
                "HostProperties": {
                    "$ref": "#/$defs/HostProperties"
                },
                "HostReservationId": {
                    "$ref": "#/$defs/String"
                },
                "Instances": {
                    "$ref": "#/$defs/HostInstanceList"
                },
                "State": {
                    "$ref": "#/$defs/AllocationState"
                },
                "AllocationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "ReleaseTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "HostRecovery": {
                    "$ref": "#/$defs/HostRecovery"
                },
                "AllowsMultipleInstanceTypes": {
                    "$ref": "#/$defs/AllowsMultipleInstanceTypes"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/String"
                },
                "MemberOfServiceLinkedResourceGroup": {
                    "$ref": "#/$defs/Boolean"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "HostMaintenance": {
                    "$ref": "#/$defs/HostMaintenance"
                },
                "AssetId": {
                    "$ref": "#/$defs/AssetId"
                }
            }
        },
        "AvailableCapacity": {
            "type": "object",
            "properties": {
                "AvailableInstanceCapacity": {
                    "$ref": "#/$defs/AvailableInstanceCapacityList"
                },
                "AvailableVCpus": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "AvailableInstanceCapacityList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceCapacity"
            }
        },
        "InstanceCapacity": {
            "type": "object",
            "properties": {
                "AvailableCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "TotalCapacity": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "HostProperties": {
            "type": "object",
            "properties": {
                "Cores": {
                    "$ref": "#/$defs/Integer"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "InstanceFamily": {
                    "$ref": "#/$defs/String"
                },
                "Sockets": {
                    "$ref": "#/$defs/Integer"
                },
                "TotalVCpus": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "HostInstanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HostInstance"
            }
        },
        "HostInstance": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AllocationState": {
            "enum": [
                "available",
                "under_assessment",
                "permanent_failure",
                "released",
                "released_permanent_failure",
                "pending"
            ]
        },
        "AllowsMultipleInstanceTypes": {
            "enum": [
                "on",
                "off"
            ]
        },
        "DescribeHostsRequest": {
            "type": "object",
            "properties": {
                "HostIds": {
                    "$ref": "#/$defs/RequestHostIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "Filter": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "RequestHostIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DedicatedHostId"
            }
        },
        "DescribeIamInstanceProfileAssociationsResult": {
            "type": "object",
            "properties": {
                "IamInstanceProfileAssociations": {
                    "$ref": "#/$defs/IamInstanceProfileAssociationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IamInstanceProfileAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IamInstanceProfileAssociation"
            }
        },
        "DescribeIamInstanceProfileAssociationsRequest": {
            "type": "object",
            "properties": {
                "AssociationIds": {
                    "$ref": "#/$defs/AssociationIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeIamInstanceProfileAssociationsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AssociationIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IamInstanceProfileAssociationId"
            }
        },
        "IamInstanceProfileAssociationId": {
            "type": "string"
        },
        "DescribeIamInstanceProfileAssociationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeIdentityIdFormatResult": {
            "type": "object",
            "properties": {
                "Statuses": {
                    "$ref": "#/$defs/IdFormatList"
                }
            }
        },
        "DescribeIdentityIdFormatRequest": {
            "type": "object",
            "properties": {
                "Resource": {
                    "$ref": "#/$defs/String"
                },
                "PrincipalArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeIdFormatResult": {
            "type": "object",
            "properties": {
                "Statuses": {
                    "$ref": "#/$defs/IdFormatList"
                }
            }
        },
        "DescribeIdFormatRequest": {
            "type": "object",
            "properties": {
                "Resource": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImageAttribute": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "KernelId": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "SriovNetSupport": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "BootMode": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "TpmSupport": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "UefiData": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "LastLaunchedTime": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "ImdsSupport": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "DeregistrationProtection": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "LaunchPermissions": {
                    "$ref": "#/$defs/LaunchPermissionList"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodeList"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappingList"
                }
            }
        },
        "LaunchPermissionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchPermission"
            }
        },
        "LaunchPermission": {
            "type": "object",
            "properties": {
                "OrganizationArn": {
                    "$ref": "#/$defs/String"
                },
                "OrganizationalUnitArn": {
                    "$ref": "#/$defs/String"
                },
                "UserId": {
                    "$ref": "#/$defs/String"
                },
                "Group": {
                    "$ref": "#/$defs/PermissionGroup"
                }
            }
        },
        "BlockDeviceMappingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BlockDeviceMapping"
            }
        },
        "DescribeImageAttributeRequest": {
            "type": "object",
            "properties": {
                "Attribute": {
                    "$ref": "#/$defs/ImageAttributeName"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ImageAttributeName": {
            "enum": [
                "description",
                "kernel",
                "ramdisk",
                "launchPermission",
                "productCodes",
                "blockDeviceMapping",
                "sriovNetSupport",
                "bootMode",
                "tpmSupport",
                "uefiData",
                "lastLaunchedTime",
                "imdsSupport",
                "deregistrationProtection"
            ]
        },
        "DescribeImagesResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Images": {
                    "$ref": "#/$defs/ImageList"
                }
            }
        },
        "ImageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Image"
            }
        },
        "Image": {
            "type": "object",
            "properties": {
                "PlatformDetails": {
                    "$ref": "#/$defs/String"
                },
                "UsageOperation": {
                    "$ref": "#/$defs/String"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappingList"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "EnaSupport": {
                    "$ref": "#/$defs/Boolean"
                },
                "Hypervisor": {
                    "$ref": "#/$defs/HypervisorType"
                },
                "ImageOwnerAlias": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "RootDeviceName": {
                    "$ref": "#/$defs/String"
                },
                "RootDeviceType": {
                    "$ref": "#/$defs/DeviceType"
                },
                "SriovNetSupport": {
                    "$ref": "#/$defs/String"
                },
                "StateReason": {
                    "$ref": "#/$defs/StateReason"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VirtualizationType": {
                    "$ref": "#/$defs/VirtualizationType"
                },
                "BootMode": {
                    "$ref": "#/$defs/BootModeValues"
                },
                "TpmSupport": {
                    "$ref": "#/$defs/TpmSupportValues"
                },
                "DeprecationTime": {
                    "$ref": "#/$defs/String"
                },
                "ImdsSupport": {
                    "$ref": "#/$defs/ImdsSupportValues"
                },
                "SourceInstanceId": {
                    "$ref": "#/$defs/String"
                },
                "DeregistrationProtection": {
                    "$ref": "#/$defs/String"
                },
                "LastLaunchedTime": {
                    "$ref": "#/$defs/String"
                },
                "ImageAllowed": {
                    "$ref": "#/$defs/Boolean"
                },
                "SourceImageId": {
                    "$ref": "#/$defs/String"
                },
                "SourceImageRegion": {
                    "$ref": "#/$defs/String"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "ImageLocation": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/ImageState"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "CreationDate": {
                    "$ref": "#/$defs/String"
                },
                "Public": {
                    "$ref": "#/$defs/Boolean"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodeList"
                },
                "Architecture": {
                    "$ref": "#/$defs/ArchitectureValues"
                },
                "ImageType": {
                    "$ref": "#/$defs/ImageTypeValues"
                },
                "KernelId": {
                    "$ref": "#/$defs/String"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/String"
                },
                "Platform": {
                    "$ref": "#/$defs/PlatformValues"
                }
            }
        },
        "HypervisorType": {
            "enum": [
                "ovm",
                "xen"
            ]
        },
        "DeviceType": {
            "enum": [
                "ebs",
                "instance_store"
            ]
        },
        "VirtualizationType": {
            "enum": [
                "hvm",
                "paravirtual"
            ]
        },
        "BootModeValues": {
            "enum": [
                "legacy_bios",
                "uefi",
                "uefi_preferred"
            ]
        },
        "TpmSupportValues": {
            "enum": [
                "v2_0"
            ]
        },
        "ImdsSupportValues": {
            "enum": [
                "v2_0"
            ]
        },
        "ImageState": {
            "enum": [
                "pending",
                "available",
                "invalid",
                "deregistered",
                "transient",
                "failed",
                "error",
                "disabled"
            ]
        },
        "ArchitectureValues": {
            "enum": [
                "i386",
                "x86_64",
                "arm64",
                "x86_64_mac",
                "arm64_mac"
            ]
        },
        "ImageTypeValues": {
            "enum": [
                "machine",
                "kernel",
                "ramdisk"
            ]
        },
        "DescribeImagesRequest": {
            "type": "object",
            "properties": {
                "ExecutableUsers": {
                    "$ref": "#/$defs/ExecutableByStringList"
                },
                "ImageIds": {
                    "$ref": "#/$defs/ImageIdStringList"
                },
                "Owners": {
                    "$ref": "#/$defs/OwnerStringList"
                },
                "IncludeDeprecated": {
                    "$ref": "#/$defs/Boolean"
                },
                "IncludeDisabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "ExecutableByStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ImageIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImageId"
            }
        },
        "DescribeImportImageTasksResult": {
            "type": "object",
            "properties": {
                "ImportImageTasks": {
                    "$ref": "#/$defs/ImportImageTaskList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImportImageTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportImageTask"
            }
        },
        "ImportImageTask": {
            "type": "object",
            "properties": {
                "Architecture": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "Hypervisor": {
                    "$ref": "#/$defs/String"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "ImportTaskId": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "LicenseType": {
                    "$ref": "#/$defs/String"
                },
                "Platform": {
                    "$ref": "#/$defs/String"
                },
                "Progress": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotDetails": {
                    "$ref": "#/$defs/SnapshotDetailList"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "LicenseSpecifications": {
                    "$ref": "#/$defs/ImportImageLicenseSpecificationListResponse"
                },
                "UsageOperation": {
                    "$ref": "#/$defs/String"
                },
                "BootMode": {
                    "$ref": "#/$defs/BootModeValues"
                }
            }
        },
        "SnapshotDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SnapshotDetail"
            }
        },
        "SnapshotDetail": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "DiskImageSize": {
                    "$ref": "#/$defs/Double"
                },
                "Format": {
                    "$ref": "#/$defs/String"
                },
                "Progress": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "Url": {
                    "$ref": "#/$defs/SensitiveUrl"
                },
                "UserBucket": {
                    "$ref": "#/$defs/UserBucketDetails"
                }
            }
        },
        "SensitiveUrl": {
            "type": "string"
        },
        "UserBucketDetails": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3Key": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImportImageLicenseSpecificationListResponse": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportImageLicenseConfigurationResponse"
            }
        },
        "ImportImageLicenseConfigurationResponse": {
            "type": "object",
            "properties": {
                "LicenseConfigurationArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeImportImageTasksRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "ImportTaskIds": {
                    "$ref": "#/$defs/ImportTaskIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImportTaskIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportImageTaskId"
            }
        },
        "ImportImageTaskId": {
            "type": "string"
        },
        "DescribeImportSnapshotTasksResult": {
            "type": "object",
            "properties": {
                "ImportSnapshotTasks": {
                    "$ref": "#/$defs/ImportSnapshotTaskList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImportSnapshotTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportSnapshotTask"
            }
        },
        "ImportSnapshotTask": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ImportTaskId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotTaskDetail": {
                    "$ref": "#/$defs/SnapshotTaskDetail"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "SnapshotTaskDetail": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DiskImageSize": {
                    "$ref": "#/$defs/Double"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "Format": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                },
                "Progress": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "Url": {
                    "$ref": "#/$defs/SensitiveUrl"
                },
                "UserBucket": {
                    "$ref": "#/$defs/UserBucketDetails"
                }
            }
        },
        "DescribeImportSnapshotTasksRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "ImportTaskIds": {
                    "$ref": "#/$defs/ImportSnapshotTaskIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImportSnapshotTaskIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportSnapshotTaskId"
            }
        },
        "ImportSnapshotTaskId": {
            "type": "string"
        },
        "InstanceAttribute": {
            "type": "object",
            "properties": {
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/InstanceBlockDeviceMappingList"
                },
                "DisableApiTermination": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "EnaSupport": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "EnclaveOptions": {
                    "$ref": "#/$defs/EnclaveOptions"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceInitiatedShutdownBehavior": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "InstanceType": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "KernelId": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodeList"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "RootDeviceName": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "SourceDestCheck": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "SriovNetSupport": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "UserData": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "DisableApiStop": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupIdentifierList"
                }
            }
        },
        "InstanceBlockDeviceMappingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceBlockDeviceMapping"
            }
        },
        "InstanceBlockDeviceMapping": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "Ebs": {
                    "$ref": "#/$defs/EbsInstanceBlockDevice"
                }
            }
        },
        "EbsInstanceBlockDevice": {
            "type": "object",
            "properties": {
                "AttachTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Status": {
                    "$ref": "#/$defs/AttachmentStatus"
                },
                "VolumeId": {
                    "$ref": "#/$defs/String"
                },
                "AssociatedResource": {
                    "$ref": "#/$defs/String"
                },
                "VolumeOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorResponse"
                }
            }
        },
        "AttributeBooleanValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnclaveOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeInstanceAttributeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "Attribute": {
                    "$ref": "#/$defs/InstanceAttributeName"
                }
            }
        },
        "InstanceAttributeName": {
            "enum": [
                "instanceType",
                "kernel",
                "ramdisk",
                "userData",
                "disableApiTermination",
                "instanceInitiatedShutdownBehavior",
                "rootDeviceName",
                "blockDeviceMapping",
                "productCodes",
                "sourceDestCheck",
                "groupSet",
                "ebsOptimized",
                "sriovNetSupport",
                "enaSupport",
                "enclaveOptions",
                "disableApiStop"
            ]
        },
        "DescribeInstanceConnectEndpointsResult": {
            "type": "object",
            "properties": {
                "InstanceConnectEndpoints": {
                    "$ref": "#/$defs/InstanceConnectEndpointSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InstanceConnectEndpointSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ec2InstanceConnectEndpoint"
            }
        },
        "DescribeInstanceConnectEndpointsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxResults": {
                    "$ref": "#/$defs/InstanceConnectEndpointMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "InstanceConnectEndpointIds": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "InstanceConnectEndpointMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeInstanceCreditSpecificationsResult": {
            "type": "object",
            "properties": {
                "InstanceCreditSpecifications": {
                    "$ref": "#/$defs/InstanceCreditSpecificationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceCreditSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceCreditSpecification"
            }
        },
        "InstanceCreditSpecification": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "CpuCredits": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeInstanceCreditSpecificationsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeInstanceCreditSpecificationsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeInstanceCreditSpecificationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeInstanceEventNotificationAttributesResult": {
            "type": "object",
            "properties": {
                "InstanceTagAttribute": {
                    "$ref": "#/$defs/InstanceTagNotificationAttribute"
                }
            }
        },
        "DescribeInstanceEventNotificationAttributesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeInstanceEventWindowsResult": {
            "type": "object",
            "properties": {
                "InstanceEventWindows": {
                    "$ref": "#/$defs/InstanceEventWindowSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceEventWindowSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceEventWindow"
            }
        },
        "DescribeInstanceEventWindowsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceEventWindowIds": {
                    "$ref": "#/$defs/InstanceEventWindowIdSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ResultRange"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceEventWindowIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceEventWindowId"
            }
        },
        "ResultRange": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeInstanceImageMetadataResult": {
            "type": "object",
            "properties": {
                "InstanceImageMetadata": {
                    "$ref": "#/$defs/InstanceImageMetadataList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceImageMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceImageMetadata"
            }
        },
        "InstanceImageMetadata": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "LaunchTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "ZoneId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/InstanceState"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ImageMetadata": {
                    "$ref": "#/$defs/ImageMetadata"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorResponse"
                }
            }
        },
        "InstanceState": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/Integer"
                },
                "Name": {
                    "$ref": "#/$defs/InstanceStateName"
                }
            }
        },
        "InstanceStateName": {
            "enum": [
                "pending",
                "running",
                "shutting_down",
                "terminated",
                "stopping",
                "stopped"
            ]
        },
        "ImageMetadata": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/ImageState"
                },
                "ImageOwnerAlias": {
                    "$ref": "#/$defs/String"
                },
                "CreationDate": {
                    "$ref": "#/$defs/String"
                },
                "DeprecationTime": {
                    "$ref": "#/$defs/String"
                },
                "ImageAllowed": {
                    "$ref": "#/$defs/Boolean"
                },
                "IsPublic": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeInstanceImageMetadataRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeInstanceImageMetadataMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeInstanceImageMetadataMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeInstancesResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Reservations": {
                    "$ref": "#/$defs/ReservationList"
                }
            }
        },
        "ReservationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Reservation"
            }
        },
        "Reservation": {
            "type": "object",
            "properties": {
                "ReservationId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "RequesterId": {
                    "$ref": "#/$defs/String"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupIdentifierList"
                },
                "Instances": {
                    "$ref": "#/$defs/InstanceList"
                }
            }
        },
        "InstanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Instance"
            }
        },
        "Instance": {
            "type": "object",
            "properties": {
                "Architecture": {
                    "$ref": "#/$defs/ArchitectureValues"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/InstanceBlockDeviceMappingList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnaSupport": {
                    "$ref": "#/$defs/Boolean"
                },
                "Hypervisor": {
                    "$ref": "#/$defs/HypervisorType"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/IamInstanceProfile"
                },
                "InstanceLifecycle": {
                    "$ref": "#/$defs/InstanceLifecycleType"
                },
                "ElasticGpuAssociations": {
                    "$ref": "#/$defs/ElasticGpuAssociationList"
                },
                "ElasticInferenceAcceleratorAssociations": {
                    "$ref": "#/$defs/ElasticInferenceAcceleratorAssociationList"
                },
                "NetworkInterfaces": {
                    "$ref": "#/$defs/InstanceNetworkInterfaceList"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "RootDeviceName": {
                    "$ref": "#/$defs/String"
                },
                "RootDeviceType": {
                    "$ref": "#/$defs/DeviceType"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/GroupIdentifierList"
                },
                "SourceDestCheck": {
                    "$ref": "#/$defs/Boolean"
                },
                "SpotInstanceRequestId": {
                    "$ref": "#/$defs/String"
                },
                "SriovNetSupport": {
                    "$ref": "#/$defs/String"
                },
                "StateReason": {
                    "$ref": "#/$defs/StateReason"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VirtualizationType": {
                    "$ref": "#/$defs/VirtualizationType"
                },
                "CpuOptions": {
                    "$ref": "#/$defs/CpuOptions"
                },
                "CapacityReservationId": {
                    "$ref": "#/$defs/String"
                },
                "CapacityReservationSpecification": {
                    "$ref": "#/$defs/CapacityReservationSpecificationResponse"
                },
                "HibernationOptions": {
                    "$ref": "#/$defs/HibernationOptions"
                },
                "Licenses": {
                    "$ref": "#/$defs/LicenseList"
                },
                "MetadataOptions": {
                    "$ref": "#/$defs/InstanceMetadataOptionsResponse"
                },
                "EnclaveOptions": {
                    "$ref": "#/$defs/EnclaveOptions"
                },
                "BootMode": {
                    "$ref": "#/$defs/BootModeValues"
                },
                "PlatformDetails": {
                    "$ref": "#/$defs/String"
                },
                "UsageOperation": {
                    "$ref": "#/$defs/String"
                },
                "UsageOperationUpdateTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "PrivateDnsNameOptions": {
                    "$ref": "#/$defs/PrivateDnsNameOptionsResponse"
                },
                "Ipv6Address": {
                    "$ref": "#/$defs/String"
                },
                "TpmSupport": {
                    "$ref": "#/$defs/String"
                },
                "MaintenanceOptions": {
                    "$ref": "#/$defs/InstanceMaintenanceOptions"
                },
                "CurrentInstanceBootMode": {
                    "$ref": "#/$defs/InstanceBootModeValues"
                },
                "NetworkPerformanceOptions": {
                    "$ref": "#/$defs/InstanceNetworkPerformanceOptions"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorResponse"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/InstanceState"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PublicDnsName": {
                    "$ref": "#/$defs/String"
                },
                "StateTransitionReason": {
                    "$ref": "#/$defs/String"
                },
                "KeyName": {
                    "$ref": "#/$defs/String"
                },
                "AmiLaunchIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodeList"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "LaunchTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Placement": {
                    "$ref": "#/$defs/Placement"
                },
                "KernelId": {
                    "$ref": "#/$defs/String"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/String"
                },
                "Platform": {
                    "$ref": "#/$defs/PlatformValues"
                },
                "Monitoring": {
                    "$ref": "#/$defs/Monitoring"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "PublicIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceLifecycleType": {
            "enum": [
                "spot",
                "scheduled",
                "capacity_block"
            ]
        },
        "ElasticGpuAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticGpuAssociation"
            }
        },
        "ElasticGpuAssociation": {
            "type": "object",
            "properties": {
                "ElasticGpuId": {
                    "$ref": "#/$defs/ElasticGpuId"
                },
                "ElasticGpuAssociationId": {
                    "$ref": "#/$defs/String"
                },
                "ElasticGpuAssociationState": {
                    "$ref": "#/$defs/String"
                },
                "ElasticGpuAssociationTime": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ElasticInferenceAcceleratorAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticInferenceAcceleratorAssociation"
            }
        },
        "ElasticInferenceAcceleratorAssociation": {
            "type": "object",
            "properties": {
                "ElasticInferenceAcceleratorArn": {
                    "$ref": "#/$defs/String"
                },
                "ElasticInferenceAcceleratorAssociationId": {
                    "$ref": "#/$defs/String"
                },
                "ElasticInferenceAcceleratorAssociationState": {
                    "$ref": "#/$defs/String"
                },
                "ElasticInferenceAcceleratorAssociationTime": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "InstanceNetworkInterfaceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceNetworkInterface"
            }
        },
        "InstanceNetworkInterface": {
            "type": "object",
            "properties": {
                "Association": {
                    "$ref": "#/$defs/InstanceNetworkInterfaceAssociation"
                },
                "Attachment": {
                    "$ref": "#/$defs/InstanceNetworkInterfaceAttachment"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupIdentifierList"
                },
                "Ipv6Addresses": {
                    "$ref": "#/$defs/InstanceIpv6AddressList"
                },
                "MacAddress": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/InstancePrivateIpAddressList"
                },
                "SourceDestCheck": {
                    "$ref": "#/$defs/Boolean"
                },
                "Status": {
                    "$ref": "#/$defs/NetworkInterfaceStatus"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "InterfaceType": {
                    "$ref": "#/$defs/String"
                },
                "Ipv4Prefixes": {
                    "$ref": "#/$defs/InstanceIpv4PrefixList"
                },
                "Ipv6Prefixes": {
                    "$ref": "#/$defs/InstanceIpv6PrefixList"
                },
                "ConnectionTrackingConfiguration": {
                    "$ref": "#/$defs/ConnectionTrackingSpecificationResponse"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorResponse"
                }
            }
        },
        "InstanceNetworkInterfaceAssociation": {
            "type": "object",
            "properties": {
                "CarrierIp": {
                    "$ref": "#/$defs/String"
                },
                "CustomerOwnedIp": {
                    "$ref": "#/$defs/String"
                },
                "IpOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "PublicDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceNetworkInterfaceAttachment": {
            "type": "object",
            "properties": {
                "AttachTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "AttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeviceIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "Status": {
                    "$ref": "#/$defs/AttachmentStatus"
                },
                "NetworkCardIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "EnaSrdSpecification": {
                    "$ref": "#/$defs/InstanceAttachmentEnaSrdSpecification"
                }
            }
        },
        "InstanceAttachmentEnaSrdSpecification": {
            "type": "object",
            "properties": {
                "EnaSrdEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnaSrdUdpSpecification": {
                    "$ref": "#/$defs/InstanceAttachmentEnaSrdUdpSpecification"
                }
            }
        },
        "InstanceAttachmentEnaSrdUdpSpecification": {
            "type": "object",
            "properties": {
                "EnaSrdUdpEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "InstancePrivateIpAddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstancePrivateIpAddress"
            }
        },
        "InstancePrivateIpAddress": {
            "type": "object",
            "properties": {
                "Association": {
                    "$ref": "#/$defs/InstanceNetworkInterfaceAssociation"
                },
                "Primary": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceIpv4PrefixList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceIpv4Prefix"
            }
        },
        "InstanceIpv4Prefix": {
            "type": "object",
            "properties": {
                "Ipv4Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceIpv6PrefixList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceIpv6Prefix"
            }
        },
        "InstanceIpv6Prefix": {
            "type": "object",
            "properties": {
                "Ipv6Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ConnectionTrackingSpecificationResponse": {
            "type": "object",
            "properties": {
                "TcpEstablishedTimeout": {
                    "$ref": "#/$defs/Integer"
                },
                "UdpStreamTimeout": {
                    "$ref": "#/$defs/Integer"
                },
                "UdpTimeout": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "CpuOptions": {
            "type": "object",
            "properties": {
                "CoreCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ThreadsPerCore": {
                    "$ref": "#/$defs/Integer"
                },
                "AmdSevSnp": {
                    "$ref": "#/$defs/AmdSevSnpSpecification"
                }
            }
        },
        "CapacityReservationSpecificationResponse": {
            "type": "object",
            "properties": {
                "CapacityReservationPreference": {
                    "$ref": "#/$defs/CapacityReservationPreference"
                },
                "CapacityReservationTarget": {
                    "$ref": "#/$defs/CapacityReservationTargetResponse"
                }
            }
        },
        "HibernationOptions": {
            "type": "object",
            "properties": {
                "Configured": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LicenseList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LicenseConfiguration"
            }
        },
        "LicenseConfiguration": {
            "type": "object",
            "properties": {
                "LicenseConfigurationArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceMetadataOptionsResponse": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/InstanceMetadataOptionsState"
                },
                "HttpTokens": {
                    "$ref": "#/$defs/HttpTokensState"
                },
                "HttpPutResponseHopLimit": {
                    "$ref": "#/$defs/Integer"
                },
                "HttpEndpoint": {
                    "$ref": "#/$defs/InstanceMetadataEndpointState"
                },
                "HttpProtocolIpv6": {
                    "$ref": "#/$defs/InstanceMetadataProtocolState"
                },
                "InstanceMetadataTags": {
                    "$ref": "#/$defs/InstanceMetadataTagsState"
                }
            }
        },
        "InstanceMetadataOptionsState": {
            "enum": [
                "pending",
                "applied"
            ]
        },
        "HttpTokensState": {
            "enum": [
                "optional",
                "required"
            ]
        },
        "InstanceMetadataEndpointState": {
            "enum": [
                "disabled",
                "enabled"
            ]
        },
        "InstanceMetadataProtocolState": {
            "enum": [
                "disabled",
                "enabled"
            ]
        },
        "InstanceMetadataTagsState": {
            "enum": [
                "disabled",
                "enabled"
            ]
        },
        "PrivateDnsNameOptionsResponse": {
            "type": "object",
            "properties": {
                "HostnameType": {
                    "$ref": "#/$defs/HostnameType"
                },
                "EnableResourceNameDnsARecord": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnableResourceNameDnsAAAARecord": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "InstanceMaintenanceOptions": {
            "type": "object",
            "properties": {
                "AutoRecovery": {
                    "$ref": "#/$defs/InstanceAutoRecoveryState"
                }
            }
        },
        "InstanceAutoRecoveryState": {
            "enum": [
                "disabled",
                "default"
            ]
        },
        "InstanceBootModeValues": {
            "enum": [
                "legacy_bios",
                "uefi"
            ]
        },
        "InstanceNetworkPerformanceOptions": {
            "type": "object",
            "properties": {
                "BandwidthWeighting": {
                    "$ref": "#/$defs/InstanceBandwidthWeighting"
                }
            }
        },
        "Monitoring": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/MonitoringState"
                }
            }
        },
        "MonitoringState": {
            "enum": [
                "disabled",
                "disabling",
                "enabled",
                "pending"
            ]
        },
        "DescribeInstancesRequest": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "DescribeInstanceStatusResult": {
            "type": "object",
            "properties": {
                "InstanceStatuses": {
                    "$ref": "#/$defs/InstanceStatusList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceStatus"
            }
        },
        "InstanceStatus": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorResponse"
                },
                "Events": {
                    "$ref": "#/$defs/InstanceStatusEventList"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceState": {
                    "$ref": "#/$defs/InstanceState"
                },
                "InstanceStatus": {
                    "$ref": "#/$defs/InstanceStatusSummary"
                },
                "SystemStatus": {
                    "$ref": "#/$defs/InstanceStatusSummary"
                },
                "AttachedEbsStatus": {
                    "$ref": "#/$defs/EbsStatusSummary"
                }
            }
        },
        "InstanceStatusEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceStatusEvent"
            }
        },
        "InstanceStatusEvent": {
            "type": "object",
            "properties": {
                "InstanceEventId": {
                    "$ref": "#/$defs/InstanceEventId"
                },
                "Code": {
                    "$ref": "#/$defs/EventCode"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "NotAfter": {
                    "$ref": "#/$defs/DateTime"
                },
                "NotBefore": {
                    "$ref": "#/$defs/DateTime"
                },
                "NotBeforeDeadline": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "InstanceEventId": {
            "type": "string"
        },
        "EventCode": {
            "enum": [
                "instance_reboot",
                "system_reboot",
                "system_maintenance",
                "instance_retirement",
                "instance_stop"
            ]
        },
        "InstanceStatusSummary": {
            "type": "object",
            "properties": {
                "Details": {
                    "$ref": "#/$defs/InstanceStatusDetailsList"
                },
                "Status": {
                    "$ref": "#/$defs/SummaryStatus"
                }
            }
        },
        "InstanceStatusDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceStatusDetails"
            }
        },
        "InstanceStatusDetails": {
            "type": "object",
            "properties": {
                "ImpairedSince": {
                    "$ref": "#/$defs/DateTime"
                },
                "Name": {
                    "$ref": "#/$defs/StatusName"
                },
                "Status": {
                    "$ref": "#/$defs/StatusType"
                }
            }
        },
        "StatusName": {
            "enum": [
                "reachability"
            ]
        },
        "StatusType": {
            "enum": [
                "passed",
                "failed",
                "insufficient_data",
                "initializing"
            ]
        },
        "SummaryStatus": {
            "enum": [
                "ok",
                "impaired",
                "insufficient_data",
                "not_applicable",
                "initializing"
            ]
        },
        "EbsStatusSummary": {
            "type": "object",
            "properties": {
                "Details": {
                    "$ref": "#/$defs/EbsStatusDetailsList"
                },
                "Status": {
                    "$ref": "#/$defs/SummaryStatus"
                }
            }
        },
        "EbsStatusDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EbsStatusDetails"
            }
        },
        "EbsStatusDetails": {
            "type": "object",
            "properties": {
                "ImpairedSince": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Name": {
                    "$ref": "#/$defs/StatusName"
                },
                "Status": {
                    "$ref": "#/$defs/StatusType"
                }
            }
        },
        "DescribeInstanceStatusRequest": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "IncludeAllInstances": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeInstanceTopologyResult": {
            "type": "object",
            "properties": {
                "Instances": {
                    "$ref": "#/$defs/InstanceSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceTopology"
            }
        },
        "InstanceTopology": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "NetworkNodes": {
                    "$ref": "#/$defs/NetworkNodesList"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "ZoneId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkNodesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeInstanceTopologyRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeInstanceTopologyMaxResults"
                },
                "InstanceIds": {
                    "$ref": "#/$defs/DescribeInstanceTopologyInstanceIdSet"
                },
                "GroupNames": {
                    "$ref": "#/$defs/DescribeInstanceTopologyGroupNameSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeInstanceTopologyMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeInstanceTopologyInstanceIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceId"
            }
        },
        "DescribeInstanceTopologyGroupNameSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlacementGroupName"
            }
        },
        "DescribeInstanceTypeOfferingsResult": {
            "type": "object",
            "properties": {
                "InstanceTypeOfferings": {
                    "$ref": "#/$defs/InstanceTypeOfferingsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InstanceTypeOfferingsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceTypeOffering"
            }
        },
        "InstanceTypeOffering": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "LocationType": {
                    "$ref": "#/$defs/LocationType"
                },
                "Location": {
                    "$ref": "#/$defs/Location"
                }
            }
        },
        "LocationType": {
            "enum": [
                "region",
                "availability_zone",
                "availability_zone_id",
                "outpost"
            ]
        },
        "Location": {
            "type": "string"
        },
        "DescribeInstanceTypeOfferingsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "LocationType": {
                    "$ref": "#/$defs/LocationType"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DITOMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DITOMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeInstanceTypesResult": {
            "type": "object",
            "properties": {
                "InstanceTypes": {
                    "$ref": "#/$defs/InstanceTypeInfoList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "InstanceTypeInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceTypeInfo"
            }
        },
        "InstanceTypeInfo": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "CurrentGeneration": {
                    "$ref": "#/$defs/CurrentGenerationFlag"
                },
                "FreeTierEligible": {
                    "$ref": "#/$defs/FreeTierEligibleFlag"
                },
                "SupportedUsageClasses": {
                    "$ref": "#/$defs/UsageClassTypeList"
                },
                "SupportedRootDeviceTypes": {
                    "$ref": "#/$defs/RootDeviceTypeList"
                },
                "SupportedVirtualizationTypes": {
                    "$ref": "#/$defs/VirtualizationTypeList"
                },
                "BareMetal": {
                    "$ref": "#/$defs/BareMetalFlag"
                },
                "Hypervisor": {
                    "$ref": "#/$defs/InstanceTypeHypervisor"
                },
                "ProcessorInfo": {
                    "$ref": "#/$defs/ProcessorInfo"
                },
                "VCpuInfo": {
                    "$ref": "#/$defs/VCpuInfo"
                },
                "MemoryInfo": {
                    "$ref": "#/$defs/MemoryInfo"
                },
                "InstanceStorageSupported": {
                    "$ref": "#/$defs/InstanceStorageFlag"
                },
                "InstanceStorageInfo": {
                    "$ref": "#/$defs/InstanceStorageInfo"
                },
                "EbsInfo": {
                    "$ref": "#/$defs/EbsInfo"
                },
                "NetworkInfo": {
                    "$ref": "#/$defs/NetworkInfo"
                },
                "GpuInfo": {
                    "$ref": "#/$defs/GpuInfo"
                },
                "FpgaInfo": {
                    "$ref": "#/$defs/FpgaInfo"
                },
                "PlacementGroupInfo": {
                    "$ref": "#/$defs/PlacementGroupInfo"
                },
                "InferenceAcceleratorInfo": {
                    "$ref": "#/$defs/InferenceAcceleratorInfo"
                },
                "HibernationSupported": {
                    "$ref": "#/$defs/HibernationFlag"
                },
                "BurstablePerformanceSupported": {
                    "$ref": "#/$defs/BurstablePerformanceFlag"
                },
                "DedicatedHostsSupported": {
                    "$ref": "#/$defs/DedicatedHostFlag"
                },
                "AutoRecoverySupported": {
                    "$ref": "#/$defs/AutoRecoveryFlag"
                },
                "SupportedBootModes": {
                    "$ref": "#/$defs/BootModeTypeList"
                },
                "NitroEnclavesSupport": {
                    "$ref": "#/$defs/NitroEnclavesSupport"
                },
                "NitroTpmSupport": {
                    "$ref": "#/$defs/NitroTpmSupport"
                },
                "NitroTpmInfo": {
                    "$ref": "#/$defs/NitroTpmInfo"
                },
                "MediaAcceleratorInfo": {
                    "$ref": "#/$defs/MediaAcceleratorInfo"
                },
                "NeuronInfo": {
                    "$ref": "#/$defs/NeuronInfo"
                },
                "PhcSupport": {
                    "$ref": "#/$defs/PhcSupport"
                }
            }
        },
        "CurrentGenerationFlag": {
            "type": "boolean"
        },
        "FreeTierEligibleFlag": {
            "type": "boolean"
        },
        "UsageClassTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UsageClassType"
            }
        },
        "UsageClassType": {
            "enum": [
                "spot",
                "on_demand",
                "capacity_block"
            ]
        },
        "RootDeviceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RootDeviceType"
            }
        },
        "RootDeviceType": {
            "enum": [
                "ebs",
                "instance_store"
            ]
        },
        "VirtualizationTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VirtualizationType"
            }
        },
        "BareMetalFlag": {
            "type": "boolean"
        },
        "InstanceTypeHypervisor": {
            "enum": [
                "NITRO",
                "XEN"
            ]
        },
        "ProcessorInfo": {
            "type": "object",
            "properties": {
                "SupportedArchitectures": {
                    "$ref": "#/$defs/ArchitectureTypeList"
                },
                "SustainedClockSpeedInGhz": {
                    "$ref": "#/$defs/ProcessorSustainedClockSpeed"
                },
                "SupportedFeatures": {
                    "$ref": "#/$defs/SupportedAdditionalProcessorFeatureList"
                },
                "Manufacturer": {
                    "$ref": "#/$defs/CpuManufacturerName"
                }
            }
        },
        "ArchitectureTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ArchitectureType"
            }
        },
        "ArchitectureType": {
            "enum": [
                "i386",
                "x86_64",
                "arm64",
                "x86_64_mac",
                "arm64_mac"
            ]
        },
        "ProcessorSustainedClockSpeed": {
            "type": "number",
            "format": "double"
        },
        "SupportedAdditionalProcessorFeatureList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SupportedAdditionalProcessorFeature"
            }
        },
        "SupportedAdditionalProcessorFeature": {
            "enum": [
                "AMD_SEV_SNP"
            ]
        },
        "CpuManufacturerName": {
            "type": "string"
        },
        "VCpuInfo": {
            "type": "object",
            "properties": {
                "DefaultVCpus": {
                    "$ref": "#/$defs/VCpuCount"
                },
                "DefaultCores": {
                    "$ref": "#/$defs/CoreCount"
                },
                "DefaultThreadsPerCore": {
                    "$ref": "#/$defs/ThreadsPerCore"
                },
                "ValidCores": {
                    "$ref": "#/$defs/CoreCountList"
                },
                "ValidThreadsPerCore": {
                    "$ref": "#/$defs/ThreadsPerCoreList"
                }
            }
        },
        "VCpuCount": {
            "type": "integer",
            "format": "int32"
        },
        "CoreCount": {
            "type": "integer",
            "format": "int32"
        },
        "ThreadsPerCore": {
            "type": "integer",
            "format": "int32"
        },
        "CoreCountList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoreCount"
            }
        },
        "ThreadsPerCoreList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ThreadsPerCore"
            }
        },
        "MemoryInfo": {
            "type": "object",
            "properties": {
                "SizeInMiB": {
                    "$ref": "#/$defs/MemorySize"
                }
            }
        },
        "MemorySize": {
            "type": "integer",
            "format": "int64"
        },
        "InstanceStorageFlag": {
            "type": "boolean"
        },
        "InstanceStorageInfo": {
            "type": "object",
            "properties": {
                "TotalSizeInGB": {
                    "$ref": "#/$defs/DiskSize"
                },
                "Disks": {
                    "$ref": "#/$defs/DiskInfoList"
                },
                "NvmeSupport": {
                    "$ref": "#/$defs/EphemeralNvmeSupport"
                },
                "EncryptionSupport": {
                    "$ref": "#/$defs/InstanceStorageEncryptionSupport"
                }
            }
        },
        "DiskSize": {
            "type": "integer",
            "format": "int64"
        },
        "DiskInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DiskInfo"
            }
        },
        "DiskInfo": {
            "type": "object",
            "properties": {
                "SizeInGB": {
                    "$ref": "#/$defs/DiskSize"
                },
                "Count": {
                    "$ref": "#/$defs/DiskCount"
                },
                "Type": {
                    "$ref": "#/$defs/DiskType"
                }
            }
        },
        "DiskCount": {
            "type": "integer",
            "format": "int32"
        },
        "DiskType": {
            "enum": [
                "hdd",
                "ssd"
            ]
        },
        "EphemeralNvmeSupport": {
            "enum": [
                "UNSUPPORTED",
                "SUPPORTED",
                "REQUIRED"
            ]
        },
        "InstanceStorageEncryptionSupport": {
            "enum": [
                "unsupported",
                "required"
            ]
        },
        "EbsInfo": {
            "type": "object",
            "properties": {
                "EbsOptimizedSupport": {
                    "$ref": "#/$defs/EbsOptimizedSupport"
                },
                "EncryptionSupport": {
                    "$ref": "#/$defs/EbsEncryptionSupport"
                },
                "EbsOptimizedInfo": {
                    "$ref": "#/$defs/EbsOptimizedInfo"
                },
                "NvmeSupport": {
                    "$ref": "#/$defs/EbsNvmeSupport"
                }
            }
        },
        "EbsOptimizedSupport": {
            "enum": [
                "unsupported",
                "supported",
                "default"
            ]
        },
        "EbsEncryptionSupport": {
            "enum": [
                "unsupported",
                "supported"
            ]
        },
        "EbsOptimizedInfo": {
            "type": "object",
            "properties": {
                "BaselineBandwidthInMbps": {
                    "$ref": "#/$defs/BaselineBandwidthInMbps"
                },
                "BaselineThroughputInMBps": {
                    "$ref": "#/$defs/BaselineThroughputInMBps"
                },
                "BaselineIops": {
                    "$ref": "#/$defs/BaselineIops"
                },
                "MaximumBandwidthInMbps": {
                    "$ref": "#/$defs/MaximumBandwidthInMbps"
                },
                "MaximumThroughputInMBps": {
                    "$ref": "#/$defs/MaximumThroughputInMBps"
                },
                "MaximumIops": {
                    "$ref": "#/$defs/MaximumIops"
                }
            }
        },
        "BaselineBandwidthInMbps": {
            "type": "integer",
            "format": "int32"
        },
        "BaselineThroughputInMBps": {
            "type": "number",
            "format": "double"
        },
        "BaselineIops": {
            "type": "integer",
            "format": "int32"
        },
        "MaximumBandwidthInMbps": {
            "type": "integer",
            "format": "int32"
        },
        "MaximumThroughputInMBps": {
            "type": "number",
            "format": "double"
        },
        "MaximumIops": {
            "type": "integer",
            "format": "int32"
        },
        "EbsNvmeSupport": {
            "enum": [
                "UNSUPPORTED",
                "SUPPORTED",
                "REQUIRED"
            ]
        },
        "NetworkInfo": {
            "type": "object",
            "properties": {
                "NetworkPerformance": {
                    "$ref": "#/$defs/NetworkPerformance"
                },
                "MaximumNetworkInterfaces": {
                    "$ref": "#/$defs/MaxNetworkInterfaces"
                },
                "MaximumNetworkCards": {
                    "$ref": "#/$defs/MaximumNetworkCards"
                },
                "DefaultNetworkCardIndex": {
                    "$ref": "#/$defs/DefaultNetworkCardIndex"
                },
                "NetworkCards": {
                    "$ref": "#/$defs/NetworkCardInfoList"
                },
                "Ipv4AddressesPerInterface": {
                    "$ref": "#/$defs/MaxIpv4AddrPerInterface"
                },
                "Ipv6AddressesPerInterface": {
                    "$ref": "#/$defs/MaxIpv6AddrPerInterface"
                },
                "Ipv6Supported": {
                    "$ref": "#/$defs/Ipv6Flag"
                },
                "EnaSupport": {
                    "$ref": "#/$defs/EnaSupport"
                },
                "EfaSupported": {
                    "$ref": "#/$defs/EfaSupportedFlag"
                },
                "EfaInfo": {
                    "$ref": "#/$defs/EfaInfo"
                },
                "EncryptionInTransitSupported": {
                    "$ref": "#/$defs/EncryptionInTransitSupported"
                },
                "EnaSrdSupported": {
                    "$ref": "#/$defs/EnaSrdSupported"
                },
                "BandwidthWeightings": {
                    "$ref": "#/$defs/BandwidthWeightingTypeList"
                }
            }
        },
        "NetworkPerformance": {
            "type": "string"
        },
        "MaxNetworkInterfaces": {
            "type": "integer",
            "format": "int32"
        },
        "MaximumNetworkCards": {
            "type": "integer",
            "format": "int32"
        },
        "DefaultNetworkCardIndex": {
            "type": "integer",
            "format": "int32"
        },
        "NetworkCardInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkCardInfo"
            }
        },
        "NetworkCardInfo": {
            "type": "object",
            "properties": {
                "NetworkCardIndex": {
                    "$ref": "#/$defs/NetworkCardIndex"
                },
                "NetworkPerformance": {
                    "$ref": "#/$defs/NetworkPerformance"
                },
                "MaximumNetworkInterfaces": {
                    "$ref": "#/$defs/MaxNetworkInterfaces"
                },
                "BaselineBandwidthInGbps": {
                    "$ref": "#/$defs/BaselineBandwidthInGbps"
                },
                "PeakBandwidthInGbps": {
                    "$ref": "#/$defs/PeakBandwidthInGbps"
                }
            }
        },
        "NetworkCardIndex": {
            "type": "integer",
            "format": "int32"
        },
        "BaselineBandwidthInGbps": {
            "type": "number",
            "format": "double"
        },
        "PeakBandwidthInGbps": {
            "type": "number",
            "format": "double"
        },
        "MaxIpv4AddrPerInterface": {
            "type": "integer",
            "format": "int32"
        },
        "MaxIpv6AddrPerInterface": {
            "type": "integer",
            "format": "int32"
        },
        "Ipv6Flag": {
            "type": "boolean"
        },
        "EnaSupport": {
            "enum": [
                "unsupported",
                "supported",
                "required"
            ]
        },
        "EfaSupportedFlag": {
            "type": "boolean"
        },
        "EfaInfo": {
            "type": "object",
            "properties": {
                "MaximumEfaInterfaces": {
                    "$ref": "#/$defs/MaximumEfaInterfaces"
                }
            }
        },
        "MaximumEfaInterfaces": {
            "type": "integer",
            "format": "int32"
        },
        "EncryptionInTransitSupported": {
            "type": "boolean"
        },
        "EnaSrdSupported": {
            "type": "boolean"
        },
        "BandwidthWeightingTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BandwidthWeightingType"
            }
        },
        "BandwidthWeightingType": {
            "enum": [
                "DEFAULT",
                "VPC_1",
                "EBS_1"
            ]
        },
        "GpuInfo": {
            "type": "object",
            "properties": {
                "Gpus": {
                    "$ref": "#/$defs/GpuDeviceInfoList"
                },
                "TotalGpuMemoryInMiB": {
                    "$ref": "#/$defs/totalGpuMemory"
                }
            }
        },
        "GpuDeviceInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GpuDeviceInfo"
            }
        },
        "GpuDeviceInfo": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/GpuDeviceName"
                },
                "Manufacturer": {
                    "$ref": "#/$defs/GpuDeviceManufacturerName"
                },
                "Count": {
                    "$ref": "#/$defs/GpuDeviceCount"
                },
                "MemoryInfo": {
                    "$ref": "#/$defs/GpuDeviceMemoryInfo"
                }
            }
        },
        "GpuDeviceName": {
            "type": "string"
        },
        "GpuDeviceManufacturerName": {
            "type": "string"
        },
        "GpuDeviceCount": {
            "type": "integer",
            "format": "int32"
        },
        "GpuDeviceMemoryInfo": {
            "type": "object",
            "properties": {
                "SizeInMiB": {
                    "$ref": "#/$defs/GpuDeviceMemorySize"
                }
            }
        },
        "GpuDeviceMemorySize": {
            "type": "integer",
            "format": "int32"
        },
        "totalGpuMemory": {
            "type": "integer",
            "format": "int32"
        },
        "FpgaInfo": {
            "type": "object",
            "properties": {
                "Fpgas": {
                    "$ref": "#/$defs/FpgaDeviceInfoList"
                },
                "TotalFpgaMemoryInMiB": {
                    "$ref": "#/$defs/totalFpgaMemory"
                }
            }
        },
        "FpgaDeviceInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FpgaDeviceInfo"
            }
        },
        "FpgaDeviceInfo": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/FpgaDeviceName"
                },
                "Manufacturer": {
                    "$ref": "#/$defs/FpgaDeviceManufacturerName"
                },
                "Count": {
                    "$ref": "#/$defs/FpgaDeviceCount"
                },
                "MemoryInfo": {
                    "$ref": "#/$defs/FpgaDeviceMemoryInfo"
                }
            }
        },
        "FpgaDeviceName": {
            "type": "string"
        },
        "FpgaDeviceManufacturerName": {
            "type": "string"
        },
        "FpgaDeviceCount": {
            "type": "integer",
            "format": "int32"
        },
        "FpgaDeviceMemoryInfo": {
            "type": "object",
            "properties": {
                "SizeInMiB": {
                    "$ref": "#/$defs/FpgaDeviceMemorySize"
                }
            }
        },
        "FpgaDeviceMemorySize": {
            "type": "integer",
            "format": "int32"
        },
        "totalFpgaMemory": {
            "type": "integer",
            "format": "int32"
        },
        "PlacementGroupInfo": {
            "type": "object",
            "properties": {
                "SupportedStrategies": {
                    "$ref": "#/$defs/PlacementGroupStrategyList"
                }
            }
        },
        "PlacementGroupStrategyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlacementGroupStrategy"
            }
        },
        "PlacementGroupStrategy": {
            "enum": [
                "cluster",
                "partition",
                "spread"
            ]
        },
        "InferenceAcceleratorInfo": {
            "type": "object",
            "properties": {
                "Accelerators": {
                    "$ref": "#/$defs/InferenceDeviceInfoList"
                },
                "TotalInferenceMemoryInMiB": {
                    "$ref": "#/$defs/totalInferenceMemory"
                }
            }
        },
        "InferenceDeviceInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InferenceDeviceInfo"
            }
        },
        "InferenceDeviceInfo": {
            "type": "object",
            "properties": {
                "Count": {
                    "$ref": "#/$defs/InferenceDeviceCount"
                },
                "Name": {
                    "$ref": "#/$defs/InferenceDeviceName"
                },
                "Manufacturer": {
                    "$ref": "#/$defs/InferenceDeviceManufacturerName"
                },
                "MemoryInfo": {
                    "$ref": "#/$defs/InferenceDeviceMemoryInfo"
                }
            }
        },
        "InferenceDeviceCount": {
            "type": "integer",
            "format": "int32"
        },
        "InferenceDeviceName": {
            "type": "string"
        },
        "InferenceDeviceManufacturerName": {
            "type": "string"
        },
        "InferenceDeviceMemoryInfo": {
            "type": "object",
            "properties": {
                "SizeInMiB": {
                    "$ref": "#/$defs/InferenceDeviceMemorySize"
                }
            }
        },
        "InferenceDeviceMemorySize": {
            "type": "integer",
            "format": "int32"
        },
        "totalInferenceMemory": {
            "type": "integer",
            "format": "int32"
        },
        "HibernationFlag": {
            "type": "boolean"
        },
        "BurstablePerformanceFlag": {
            "type": "boolean"
        },
        "DedicatedHostFlag": {
            "type": "boolean"
        },
        "AutoRecoveryFlag": {
            "type": "boolean"
        },
        "BootModeTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BootModeType"
            }
        },
        "BootModeType": {
            "enum": [
                "legacy_bios",
                "uefi"
            ]
        },
        "NitroEnclavesSupport": {
            "enum": [
                "UNSUPPORTED",
                "SUPPORTED"
            ]
        },
        "NitroTpmSupport": {
            "enum": [
                "UNSUPPORTED",
                "SUPPORTED"
            ]
        },
        "NitroTpmInfo": {
            "type": "object",
            "properties": {
                "SupportedVersions": {
                    "$ref": "#/$defs/NitroTpmSupportedVersionsList"
                }
            }
        },
        "NitroTpmSupportedVersionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NitroTpmSupportedVersionType"
            }
        },
        "NitroTpmSupportedVersionType": {
            "type": "string"
        },
        "MediaAcceleratorInfo": {
            "type": "object",
            "properties": {
                "Accelerators": {
                    "$ref": "#/$defs/MediaDeviceInfoList"
                },
                "TotalMediaMemoryInMiB": {
                    "$ref": "#/$defs/TotalMediaMemory"
                }
            }
        },
        "MediaDeviceInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MediaDeviceInfo"
            }
        },
        "MediaDeviceInfo": {
            "type": "object",
            "properties": {
                "Count": {
                    "$ref": "#/$defs/MediaDeviceCount"
                },
                "Name": {
                    "$ref": "#/$defs/MediaDeviceName"
                },
                "Manufacturer": {
                    "$ref": "#/$defs/MediaDeviceManufacturerName"
                },
                "MemoryInfo": {
                    "$ref": "#/$defs/MediaDeviceMemoryInfo"
                }
            }
        },
        "MediaDeviceCount": {
            "type": "integer",
            "format": "int32"
        },
        "MediaDeviceName": {
            "type": "string"
        },
        "MediaDeviceManufacturerName": {
            "type": "string"
        },
        "MediaDeviceMemoryInfo": {
            "type": "object",
            "properties": {
                "SizeInMiB": {
                    "$ref": "#/$defs/MediaDeviceMemorySize"
                }
            }
        },
        "MediaDeviceMemorySize": {
            "type": "integer",
            "format": "int32"
        },
        "TotalMediaMemory": {
            "type": "integer",
            "format": "int32"
        },
        "NeuronInfo": {
            "type": "object",
            "properties": {
                "NeuronDevices": {
                    "$ref": "#/$defs/NeuronDeviceInfoList"
                },
                "TotalNeuronDeviceMemoryInMiB": {
                    "$ref": "#/$defs/TotalNeuronMemory"
                }
            }
        },
        "NeuronDeviceInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NeuronDeviceInfo"
            }
        },
        "NeuronDeviceInfo": {
            "type": "object",
            "properties": {
                "Count": {
                    "$ref": "#/$defs/NeuronDeviceCount"
                },
                "Name": {
                    "$ref": "#/$defs/NeuronDeviceName"
                },
                "CoreInfo": {
                    "$ref": "#/$defs/NeuronDeviceCoreInfo"
                },
                "MemoryInfo": {
                    "$ref": "#/$defs/NeuronDeviceMemoryInfo"
                }
            }
        },
        "NeuronDeviceCount": {
            "type": "integer",
            "format": "int32"
        },
        "NeuronDeviceName": {
            "type": "string"
        },
        "NeuronDeviceCoreInfo": {
            "type": "object",
            "properties": {
                "Count": {
                    "$ref": "#/$defs/NeuronDeviceCoreCount"
                },
                "Version": {
                    "$ref": "#/$defs/NeuronDeviceCoreVersion"
                }
            }
        },
        "NeuronDeviceCoreCount": {
            "type": "integer",
            "format": "int32"
        },
        "NeuronDeviceCoreVersion": {
            "type": "integer",
            "format": "int32"
        },
        "NeuronDeviceMemoryInfo": {
            "type": "object",
            "properties": {
                "SizeInMiB": {
                    "$ref": "#/$defs/NeuronDeviceMemorySize"
                }
            }
        },
        "NeuronDeviceMemorySize": {
            "type": "integer",
            "format": "int32"
        },
        "TotalNeuronMemory": {
            "type": "integer",
            "format": "int32"
        },
        "PhcSupport": {
            "enum": [
                "UNSUPPORTED",
                "SUPPORTED"
            ]
        },
        "DescribeInstanceTypesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceTypes": {
                    "$ref": "#/$defs/RequestInstanceTypeList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DITMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RequestInstanceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceType"
            }
        },
        "DITMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeInternetGatewaysResult": {
            "type": "object",
            "properties": {
                "InternetGateways": {
                    "$ref": "#/$defs/InternetGatewayList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InternetGatewayList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InternetGateway"
            }
        },
        "DescribeInternetGatewaysRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeInternetGatewaysMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InternetGatewayIds": {
                    "$ref": "#/$defs/InternetGatewayIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeInternetGatewaysMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "InternetGatewayIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InternetGatewayId"
            }
        },
        "DescribeIpamByoasnResult": {
            "type": "object",
            "properties": {
                "Byoasns": {
                    "$ref": "#/$defs/ByoasnSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ByoasnSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Byoasn"
            }
        },
        "DescribeIpamByoasnRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeIpamByoasnMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeIpamByoasnMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeIpamExternalResourceVerificationTokensResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "IpamExternalResourceVerificationTokens": {
                    "$ref": "#/$defs/IpamExternalResourceVerificationTokenSet"
                }
            }
        },
        "IpamExternalResourceVerificationTokenSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamExternalResourceVerificationToken"
            }
        },
        "DescribeIpamExternalResourceVerificationTokensRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                },
                "IpamExternalResourceVerificationTokenIds": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "IpamMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeIpamPoolsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "IpamPools": {
                    "$ref": "#/$defs/IpamPoolSet"
                }
            }
        },
        "IpamPoolSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamPool"
            }
        },
        "DescribeIpamPoolsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "IpamPoolIds": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "DescribeIpamResourceDiscoveriesResult": {
            "type": "object",
            "properties": {
                "IpamResourceDiscoveries": {
                    "$ref": "#/$defs/IpamResourceDiscoverySet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IpamResourceDiscoverySet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamResourceDiscovery"
            }
        },
        "DescribeIpamResourceDiscoveriesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamResourceDiscoveryIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeIpamResourceDiscoveryAssociationsResult": {
            "type": "object",
            "properties": {
                "IpamResourceDiscoveryAssociations": {
                    "$ref": "#/$defs/IpamResourceDiscoveryAssociationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IpamResourceDiscoveryAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamResourceDiscoveryAssociation"
            }
        },
        "DescribeIpamResourceDiscoveryAssociationsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamResourceDiscoveryAssociationIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeIpamsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Ipams": {
                    "$ref": "#/$defs/IpamSet"
                }
            }
        },
        "IpamSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipam"
            }
        },
        "DescribeIpamsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "IpamIds": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "DescribeIpamScopesResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "IpamScopes": {
                    "$ref": "#/$defs/IpamScopeSet"
                }
            }
        },
        "IpamScopeSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamScope"
            }
        },
        "DescribeIpamScopesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "IpamScopeIds": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "DescribeIpv6PoolsResult": {
            "type": "object",
            "properties": {
                "Ipv6Pools": {
                    "$ref": "#/$defs/Ipv6PoolSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Ipv6PoolSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv6Pool"
            }
        },
        "Ipv6Pool": {
            "type": "object",
            "properties": {
                "PoolId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "PoolCidrBlocks": {
                    "$ref": "#/$defs/PoolCidrBlocksSet"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "PoolCidrBlocksSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PoolCidrBlock"
            }
        },
        "PoolCidrBlock": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeIpv6PoolsRequest": {
            "type": "object",
            "properties": {
                "PoolIds": {
                    "$ref": "#/$defs/Ipv6PoolIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Ipv6PoolMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "Ipv6PoolIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv6PoolEc2Id"
            }
        },
        "Ipv6PoolMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeKeyPairsResult": {
            "type": "object",
            "properties": {
                "KeyPairs": {
                    "$ref": "#/$defs/KeyPairList"
                }
            }
        },
        "KeyPairList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyPairInfo"
            }
        },
        "KeyPairInfo": {
            "type": "object",
            "properties": {
                "KeyPairId": {
                    "$ref": "#/$defs/String"
                },
                "KeyType": {
                    "$ref": "#/$defs/KeyType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "PublicKey": {
                    "$ref": "#/$defs/String"
                },
                "CreateTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "KeyName": {
                    "$ref": "#/$defs/String"
                },
                "KeyFingerprint": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeKeyPairsRequest": {
            "type": "object",
            "properties": {
                "KeyNames": {
                    "$ref": "#/$defs/KeyNameStringList"
                },
                "KeyPairIds": {
                    "$ref": "#/$defs/KeyPairIdStringList"
                },
                "IncludePublicKey": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "KeyNameStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyPairName"
            }
        },
        "KeyPairIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/KeyPairId"
            }
        },
        "DescribeLaunchTemplatesResult": {
            "type": "object",
            "properties": {
                "LaunchTemplates": {
                    "$ref": "#/$defs/LaunchTemplateSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplate"
            }
        },
        "DescribeLaunchTemplatesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "LaunchTemplateIds": {
                    "$ref": "#/$defs/LaunchTemplateIdStringList"
                },
                "LaunchTemplateNames": {
                    "$ref": "#/$defs/LaunchTemplateNameStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeLaunchTemplatesMaxResults"
                }
            }
        },
        "LaunchTemplateIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateId"
            }
        },
        "LaunchTemplateNameStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateName"
            }
        },
        "DescribeLaunchTemplatesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeLaunchTemplateVersionsResult": {
            "type": "object",
            "properties": {
                "LaunchTemplateVersions": {
                    "$ref": "#/$defs/LaunchTemplateVersionSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LaunchTemplateVersionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateVersion"
            }
        },
        "DescribeLaunchTemplateVersionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "LaunchTemplateId": {
                    "$ref": "#/$defs/LaunchTemplateId"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                },
                "Versions": {
                    "$ref": "#/$defs/VersionStringList"
                },
                "MinVersion": {
                    "$ref": "#/$defs/String"
                },
                "MaxVersion": {
                    "$ref": "#/$defs/String"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "ResolveAlias": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeLocalGatewayRouteTablesResult": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTables": {
                    "$ref": "#/$defs/LocalGatewayRouteTableSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LocalGatewayRouteTableSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayRouteTable"
            }
        },
        "DescribeLocalGatewayRouteTablesRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableIds": {
                    "$ref": "#/$defs/LocalGatewayRouteTableIdSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/LocalGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LocalGatewayRouteTableIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayRoutetableId"
            }
        },
        "LocalGatewayMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVirtualInterfaceGroupAssociations": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVirtualInterfaceGroupAssociationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LocalGatewayRouteTableVirtualInterfaceGroupAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayRouteTableVirtualInterfaceGroupAssociation"
            }
        },
        "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVirtualInterfaceGroupAssociationIdSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/LocalGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LocalGatewayRouteTableVirtualInterfaceGroupAssociationIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayRouteTableVirtualInterfaceGroupAssociationId"
            }
        },
        "DescribeLocalGatewayRouteTableVpcAssociationsResult": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVpcAssociations": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVpcAssociationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LocalGatewayRouteTableVpcAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayRouteTableVpcAssociation"
            }
        },
        "DescribeLocalGatewayRouteTableVpcAssociationsRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableVpcAssociationIds": {
                    "$ref": "#/$defs/LocalGatewayRouteTableVpcAssociationIdSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/LocalGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LocalGatewayRouteTableVpcAssociationIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayRouteTableVpcAssociationId"
            }
        },
        "DescribeLocalGatewaysResult": {
            "type": "object",
            "properties": {
                "LocalGateways": {
                    "$ref": "#/$defs/LocalGatewaySet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LocalGatewaySet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGateway"
            }
        },
        "LocalGateway": {
            "type": "object",
            "properties": {
                "LocalGatewayId": {
                    "$ref": "#/$defs/LocalGatewayId"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DescribeLocalGatewaysRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayIds": {
                    "$ref": "#/$defs/LocalGatewayIdSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/LocalGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LocalGatewayIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayId"
            }
        },
        "DescribeLocalGatewayVirtualInterfaceGroupsResult": {
            "type": "object",
            "properties": {
                "LocalGatewayVirtualInterfaceGroups": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceGroupSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LocalGatewayVirtualInterfaceGroupSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayVirtualInterfaceGroup"
            }
        },
        "LocalGatewayVirtualInterfaceGroup": {
            "type": "object",
            "properties": {
                "LocalGatewayVirtualInterfaceGroupId": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceGroupId"
                },
                "LocalGatewayVirtualInterfaceIds": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceIdSet"
                },
                "LocalGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "LocalGatewayVirtualInterfaceIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayVirtualInterfaceId"
            }
        },
        "LocalGatewayVirtualInterfaceId": {
            "type": "string"
        },
        "DescribeLocalGatewayVirtualInterfaceGroupsRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayVirtualInterfaceGroupIds": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceGroupIdSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/LocalGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LocalGatewayVirtualInterfaceGroupIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayVirtualInterfaceGroupId"
            }
        },
        "DescribeLocalGatewayVirtualInterfacesResult": {
            "type": "object",
            "properties": {
                "LocalGatewayVirtualInterfaces": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LocalGatewayVirtualInterfaceSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayVirtualInterface"
            }
        },
        "LocalGatewayVirtualInterface": {
            "type": "object",
            "properties": {
                "LocalGatewayVirtualInterfaceId": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceId"
                },
                "LocalGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "Vlan": {
                    "$ref": "#/$defs/Integer"
                },
                "LocalAddress": {
                    "$ref": "#/$defs/String"
                },
                "PeerAddress": {
                    "$ref": "#/$defs/String"
                },
                "LocalBgpAsn": {
                    "$ref": "#/$defs/Integer"
                },
                "PeerBgpAsn": {
                    "$ref": "#/$defs/Integer"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DescribeLocalGatewayVirtualInterfacesRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayVirtualInterfaceIds": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceIdSet"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/LocalGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeLockedSnapshotsResult": {
            "type": "object",
            "properties": {
                "Snapshots": {
                    "$ref": "#/$defs/LockedSnapshotsInfoList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LockedSnapshotsInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LockedSnapshotsInfo"
            }
        },
        "LockedSnapshotsInfo": {
            "type": "object",
            "properties": {
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "LockState": {
                    "$ref": "#/$defs/LockState"
                },
                "LockDuration": {
                    "$ref": "#/$defs/RetentionPeriodResponseDays"
                },
                "CoolOffPeriod": {
                    "$ref": "#/$defs/CoolOffPeriodResponseHours"
                },
                "CoolOffPeriodExpiresOn": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "LockCreatedOn": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "LockDurationStartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "LockExpiresOn": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "LockState": {
            "enum": [
                "compliance",
                "governance",
                "compliance_cooloff",
                "expired"
            ]
        },
        "RetentionPeriodResponseDays": {
            "type": "integer",
            "format": "int32"
        },
        "CoolOffPeriodResponseHours": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeLockedSnapshotsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeLockedSnapshotsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotIds": {
                    "$ref": "#/$defs/SnapshotIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeLockedSnapshotsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "SnapshotIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SnapshotId"
            }
        },
        "DescribeMacHostsResult": {
            "type": "object",
            "properties": {
                "MacHosts": {
                    "$ref": "#/$defs/MacHostList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MacHostList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MacHost"
            }
        },
        "MacHost": {
            "type": "object",
            "properties": {
                "HostId": {
                    "$ref": "#/$defs/DedicatedHostId"
                },
                "MacOSLatestSupportedVersions": {
                    "$ref": "#/$defs/MacOSVersionStringList"
                }
            }
        },
        "MacOSVersionStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeMacHostsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "HostIds": {
                    "$ref": "#/$defs/RequestHostIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeMacHostsRequestMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeMacHostsRequestMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeManagedPrefixListsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PrefixLists": {
                    "$ref": "#/$defs/ManagedPrefixListSet"
                }
            }
        },
        "ManagedPrefixListSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ManagedPrefixList"
            }
        },
        "DescribeManagedPrefixListsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PrefixListMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PrefixListIds": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "PrefixListMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeMovingAddressesResult": {
            "type": "object",
            "properties": {
                "MovingAddressStatuses": {
                    "$ref": "#/$defs/MovingAddressStatusSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MovingAddressStatusSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MovingAddressStatus"
            }
        },
        "MovingAddressStatus": {
            "type": "object",
            "properties": {
                "MoveStatus": {
                    "$ref": "#/$defs/MoveStatus"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MoveStatus": {
            "enum": [
                "movingToVpc",
                "restoringToClassic"
            ]
        },
        "DescribeMovingAddressesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PublicIps": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeMovingAddressesMaxResults"
                }
            }
        },
        "DescribeMovingAddressesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeNatGatewaysResult": {
            "type": "object",
            "properties": {
                "NatGateways": {
                    "$ref": "#/$defs/NatGatewayList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NatGatewayList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NatGateway"
            }
        },
        "DescribeNatGatewaysRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filter": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeNatGatewaysMaxResults"
                },
                "NatGatewayIds": {
                    "$ref": "#/$defs/NatGatewayIdStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeNatGatewaysMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NatGatewayIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NatGatewayId"
            }
        },
        "DescribeNetworkAclsResult": {
            "type": "object",
            "properties": {
                "NetworkAcls": {
                    "$ref": "#/$defs/NetworkAclList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkAclList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkAcl"
            }
        },
        "DescribeNetworkAclsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeNetworkAclsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkAclIds": {
                    "$ref": "#/$defs/NetworkAclIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeNetworkAclsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NetworkAclIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkAclId"
            }
        },
        "DescribeNetworkInsightsAccessScopeAnalysesResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeAnalyses": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysisList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInsightsAccessScopeAnalysisList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysis"
            }
        },
        "NetworkInsightsAccessScopeAnalysis": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeAnalysisId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysisId"
                },
                "NetworkInsightsAccessScopeAnalysisArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "NetworkInsightsAccessScopeId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeId"
                },
                "Status": {
                    "$ref": "#/$defs/AnalysisStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "WarningMessage": {
                    "$ref": "#/$defs/String"
                },
                "StartDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "FindingsFound": {
                    "$ref": "#/$defs/FindingsFound"
                },
                "AnalyzedEniCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "AnalysisStatus": {
            "enum": [
                "running",
                "succeeded",
                "failed"
            ]
        },
        "FindingsFound": {
            "enum": [
                "true",
                "false",
                "unknown"
            ]
        },
        "DescribeNetworkInsightsAccessScopeAnalysesRequest": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeAnalysisIds": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysisIdList"
                },
                "NetworkInsightsAccessScopeId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeId"
                },
                "AnalysisStartTimeBegin": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "AnalysisStartTimeEnd": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/NetworkInsightsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "NetworkInsightsAccessScopeAnalysisIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysisId"
            }
        },
        "NetworkInsightsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeNetworkInsightsAccessScopesResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopes": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInsightsAccessScopeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInsightsAccessScope"
            }
        },
        "DescribeNetworkInsightsAccessScopesRequest": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeIds": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/NetworkInsightsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "NetworkInsightsAccessScopeIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInsightsAccessScopeId"
            }
        },
        "DescribeNetworkInsightsAnalysesResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAnalyses": {
                    "$ref": "#/$defs/NetworkInsightsAnalysisList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInsightsAnalysisList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInsightsAnalysis"
            }
        },
        "NetworkInsightsAnalysis": {
            "type": "object",
            "properties": {
                "NetworkInsightsAnalysisId": {
                    "$ref": "#/$defs/NetworkInsightsAnalysisId"
                },
                "NetworkInsightsAnalysisArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "NetworkInsightsPathId": {
                    "$ref": "#/$defs/NetworkInsightsPathId"
                },
                "AdditionalAccounts": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "FilterInArns": {
                    "$ref": "#/$defs/ArnList"
                },
                "StartDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Status": {
                    "$ref": "#/$defs/AnalysisStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "WarningMessage": {
                    "$ref": "#/$defs/String"
                },
                "NetworkPathFound": {
                    "$ref": "#/$defs/Boolean"
                },
                "ForwardPathComponents": {
                    "$ref": "#/$defs/PathComponentList"
                },
                "ReturnPathComponents": {
                    "$ref": "#/$defs/PathComponentList"
                },
                "Explanations": {
                    "$ref": "#/$defs/ExplanationList"
                },
                "AlternatePathHints": {
                    "$ref": "#/$defs/AlternatePathHintList"
                },
                "SuggestedAccounts": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ArnList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceArn"
            }
        },
        "PathComponentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PathComponent"
            }
        },
        "PathComponent": {
            "type": "object",
            "properties": {
                "SequenceNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "AclRule": {
                    "$ref": "#/$defs/AnalysisAclRule"
                },
                "AttachedTo": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "Component": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "DestinationVpc": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "OutboundHeader": {
                    "$ref": "#/$defs/AnalysisPacketHeader"
                },
                "InboundHeader": {
                    "$ref": "#/$defs/AnalysisPacketHeader"
                },
                "RouteTableRoute": {
                    "$ref": "#/$defs/AnalysisRouteTableRoute"
                },
                "SecurityGroupRule": {
                    "$ref": "#/$defs/AnalysisSecurityGroupRule"
                },
                "SourceVpc": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "Subnet": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "Vpc": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "AdditionalDetails": {
                    "$ref": "#/$defs/AdditionalDetailList"
                },
                "TransitGateway": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "TransitGatewayRouteTableRoute": {
                    "$ref": "#/$defs/TransitGatewayRouteTableRoute"
                },
                "Explanations": {
                    "$ref": "#/$defs/ExplanationList"
                },
                "ElasticLoadBalancerListener": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "FirewallStatelessRule": {
                    "$ref": "#/$defs/FirewallStatelessRule"
                },
                "FirewallStatefulRule": {
                    "$ref": "#/$defs/FirewallStatefulRule"
                },
                "ServiceName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AnalysisAclRule": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "Egress": {
                    "$ref": "#/$defs/Boolean"
                },
                "PortRange": {
                    "$ref": "#/$defs/PortRange"
                },
                "Protocol": {
                    "$ref": "#/$defs/String"
                },
                "RuleAction": {
                    "$ref": "#/$defs/String"
                },
                "RuleNumber": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "AnalysisComponent": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AnalysisPacketHeader": {
            "type": "object",
            "properties": {
                "DestinationAddresses": {
                    "$ref": "#/$defs/IpAddressList"
                },
                "DestinationPortRanges": {
                    "$ref": "#/$defs/PortRangeList"
                },
                "Protocol": {
                    "$ref": "#/$defs/String"
                },
                "SourceAddresses": {
                    "$ref": "#/$defs/IpAddressList"
                },
                "SourcePortRanges": {
                    "$ref": "#/$defs/PortRangeList"
                }
            }
        },
        "IpAddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpAddress"
            }
        },
        "PortRangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PortRange"
            }
        },
        "AnalysisRouteTableRoute": {
            "type": "object",
            "properties": {
                "DestinationCidr": {
                    "$ref": "#/$defs/String"
                },
                "DestinationPrefixListId": {
                    "$ref": "#/$defs/String"
                },
                "EgressOnlyInternetGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "GatewayId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "NatGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "Origin": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "CarrierGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "CoreNetworkArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "LocalGatewayId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AnalysisSecurityGroupRule": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "Direction": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupId": {
                    "$ref": "#/$defs/String"
                },
                "PortRange": {
                    "$ref": "#/$defs/PortRange"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/String"
                },
                "Protocol": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AdditionalDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdditionalDetail"
            }
        },
        "AdditionalDetail": {
            "type": "object",
            "properties": {
                "AdditionalDetailType": {
                    "$ref": "#/$defs/String"
                },
                "Component": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "VpcEndpointService": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "RuleOptions": {
                    "$ref": "#/$defs/RuleOptionList"
                },
                "RuleGroupTypePairs": {
                    "$ref": "#/$defs/RuleGroupTypePairList"
                },
                "RuleGroupRuleOptionsPairs": {
                    "$ref": "#/$defs/RuleGroupRuleOptionsPairList"
                },
                "ServiceName": {
                    "$ref": "#/$defs/String"
                },
                "LoadBalancers": {
                    "$ref": "#/$defs/AnalysisComponentList"
                }
            }
        },
        "RuleOptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RuleOption"
            }
        },
        "RuleOption": {
            "type": "object",
            "properties": {
                "Keyword": {
                    "$ref": "#/$defs/String"
                },
                "Settings": {
                    "$ref": "#/$defs/StringList"
                }
            }
        },
        "StringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "RuleGroupTypePairList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RuleGroupTypePair"
            }
        },
        "RuleGroupTypePair": {
            "type": "object",
            "properties": {
                "RuleGroupArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "RuleGroupType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RuleGroupRuleOptionsPairList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RuleGroupRuleOptionsPair"
            }
        },
        "RuleGroupRuleOptionsPair": {
            "type": "object",
            "properties": {
                "RuleGroupArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "RuleOptions": {
                    "$ref": "#/$defs/RuleOptionList"
                }
            }
        },
        "AnalysisComponentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnalysisComponent"
            }
        },
        "TransitGatewayRouteTableRoute": {
            "type": "object",
            "properties": {
                "DestinationCidr": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "RouteOrigin": {
                    "$ref": "#/$defs/String"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/String"
                },
                "AttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ExplanationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Explanation"
            }
        },
        "Explanation": {
            "type": "object",
            "properties": {
                "Acl": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "AclRule": {
                    "$ref": "#/$defs/AnalysisAclRule"
                },
                "Address": {
                    "$ref": "#/$defs/IpAddress"
                },
                "Addresses": {
                    "$ref": "#/$defs/IpAddressList"
                },
                "AttachedTo": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Cidrs": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Component": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "CustomerGateway": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "Destination": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "DestinationVpc": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "Direction": {
                    "$ref": "#/$defs/String"
                },
                "ExplanationCode": {
                    "$ref": "#/$defs/String"
                },
                "IngressRouteTable": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "InternetGateway": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "LoadBalancerArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "ClassicLoadBalancerListener": {
                    "$ref": "#/$defs/AnalysisLoadBalancerListener"
                },
                "LoadBalancerListenerPort": {
                    "$ref": "#/$defs/Port"
                },
                "LoadBalancerTarget": {
                    "$ref": "#/$defs/AnalysisLoadBalancerTarget"
                },
                "LoadBalancerTargetGroup": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "LoadBalancerTargetGroups": {
                    "$ref": "#/$defs/AnalysisComponentList"
                },
                "LoadBalancerTargetPort": {
                    "$ref": "#/$defs/Port"
                },
                "ElasticLoadBalancerListener": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "MissingComponent": {
                    "$ref": "#/$defs/String"
                },
                "NatGateway": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "NetworkInterface": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "PacketField": {
                    "$ref": "#/$defs/String"
                },
                "VpcPeeringConnection": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "Port": {
                    "$ref": "#/$defs/Port"
                },
                "PortRanges": {
                    "$ref": "#/$defs/PortRangeList"
                },
                "PrefixList": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "Protocols": {
                    "$ref": "#/$defs/StringList"
                },
                "RouteTableRoute": {
                    "$ref": "#/$defs/AnalysisRouteTableRoute"
                },
                "RouteTable": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "SecurityGroup": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "SecurityGroupRule": {
                    "$ref": "#/$defs/AnalysisSecurityGroupRule"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/AnalysisComponentList"
                },
                "SourceVpc": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "State": {
                    "$ref": "#/$defs/String"
                },
                "Subnet": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "SubnetRouteTable": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "Vpc": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "VpcEndpoint": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "VpnConnection": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "VpnGateway": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "TransitGateway": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "TransitGatewayRouteTable": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "TransitGatewayRouteTableRoute": {
                    "$ref": "#/$defs/TransitGatewayRouteTableRoute"
                },
                "TransitGatewayAttachment": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "ComponentAccount": {
                    "$ref": "#/$defs/ComponentAccount"
                },
                "ComponentRegion": {
                    "$ref": "#/$defs/ComponentRegion"
                },
                "FirewallStatelessRule": {
                    "$ref": "#/$defs/FirewallStatelessRule"
                },
                "FirewallStatefulRule": {
                    "$ref": "#/$defs/FirewallStatefulRule"
                }
            }
        },
        "AnalysisLoadBalancerListener": {
            "type": "object",
            "properties": {
                "LoadBalancerPort": {
                    "$ref": "#/$defs/Port"
                },
                "InstancePort": {
                    "$ref": "#/$defs/Port"
                }
            }
        },
        "AnalysisLoadBalancerTarget": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/IpAddress"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "Instance": {
                    "$ref": "#/$defs/AnalysisComponent"
                },
                "Port": {
                    "$ref": "#/$defs/Port"
                }
            }
        },
        "ComponentAccount": {
            "type": "string"
        },
        "ComponentRegion": {
            "type": "string"
        },
        "FirewallStatelessRule": {
            "type": "object",
            "properties": {
                "RuleGroupArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Sources": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Destinations": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SourcePorts": {
                    "$ref": "#/$defs/PortRangeList"
                },
                "DestinationPorts": {
                    "$ref": "#/$defs/PortRangeList"
                },
                "Protocols": {
                    "$ref": "#/$defs/ProtocolIntList"
                },
                "RuleAction": {
                    "$ref": "#/$defs/String"
                },
                "Priority": {
                    "$ref": "#/$defs/Priority"
                }
            }
        },
        "ProtocolIntList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ProtocolInt"
            }
        },
        "ProtocolInt": {
            "type": "integer",
            "format": "int32"
        },
        "Priority": {
            "type": "integer",
            "format": "int32"
        },
        "FirewallStatefulRule": {
            "type": "object",
            "properties": {
                "RuleGroupArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Sources": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Destinations": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "SourcePorts": {
                    "$ref": "#/$defs/PortRangeList"
                },
                "DestinationPorts": {
                    "$ref": "#/$defs/PortRangeList"
                },
                "Protocol": {
                    "$ref": "#/$defs/String"
                },
                "RuleAction": {
                    "$ref": "#/$defs/String"
                },
                "Direction": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AlternatePathHintList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AlternatePathHint"
            }
        },
        "AlternatePathHint": {
            "type": "object",
            "properties": {
                "ComponentId": {
                    "$ref": "#/$defs/String"
                },
                "ComponentArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeNetworkInsightsAnalysesRequest": {
            "type": "object",
            "properties": {
                "NetworkInsightsAnalysisIds": {
                    "$ref": "#/$defs/NetworkInsightsAnalysisIdList"
                },
                "NetworkInsightsPathId": {
                    "$ref": "#/$defs/NetworkInsightsPathId"
                },
                "AnalysisStartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "AnalysisEndTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/NetworkInsightsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "NetworkInsightsAnalysisIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInsightsAnalysisId"
            }
        },
        "DescribeNetworkInsightsPathsResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsPaths": {
                    "$ref": "#/$defs/NetworkInsightsPathList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInsightsPathList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInsightsPath"
            }
        },
        "DescribeNetworkInsightsPathsRequest": {
            "type": "object",
            "properties": {
                "NetworkInsightsPathIds": {
                    "$ref": "#/$defs/NetworkInsightsPathIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/NetworkInsightsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "NetworkInsightsPathIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInsightsPathId"
            }
        },
        "DescribeNetworkInterfaceAttributeResult": {
            "type": "object",
            "properties": {
                "Attachment": {
                    "$ref": "#/$defs/NetworkInterfaceAttachment"
                },
                "Description": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupIdentifierList"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "SourceDestCheck": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "AssociatePublicIpAddress": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeNetworkInterfaceAttributeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "Attribute": {
                    "$ref": "#/$defs/NetworkInterfaceAttribute"
                }
            }
        },
        "NetworkInterfaceAttribute": {
            "enum": [
                "description",
                "groupSet",
                "sourceDestCheck",
                "attachment",
                "associatePublicIpAddress"
            ]
        },
        "DescribeNetworkInterfacePermissionsResult": {
            "type": "object",
            "properties": {
                "NetworkInterfacePermissions": {
                    "$ref": "#/$defs/NetworkInterfacePermissionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInterfacePermissionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterfacePermission"
            }
        },
        "DescribeNetworkInterfacePermissionsRequest": {
            "type": "object",
            "properties": {
                "NetworkInterfacePermissionIds": {
                    "$ref": "#/$defs/NetworkInterfacePermissionIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeNetworkInterfacePermissionsMaxResults"
                }
            }
        },
        "NetworkInterfacePermissionIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterfacePermissionId"
            }
        },
        "DescribeNetworkInterfacePermissionsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeNetworkInterfacesResult": {
            "type": "object",
            "properties": {
                "NetworkInterfaces": {
                    "$ref": "#/$defs/NetworkInterfaceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "NetworkInterfaceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterface"
            }
        },
        "DescribeNetworkInterfacesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeNetworkInterfacesMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceIds": {
                    "$ref": "#/$defs/NetworkInterfaceIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeNetworkInterfacesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NetworkInterfaceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NetworkInterfaceId"
            }
        },
        "DescribePlacementGroupsResult": {
            "type": "object",
            "properties": {
                "PlacementGroups": {
                    "$ref": "#/$defs/PlacementGroupList"
                }
            }
        },
        "PlacementGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlacementGroup"
            }
        },
        "DescribePlacementGroupsRequest": {
            "type": "object",
            "properties": {
                "GroupIds": {
                    "$ref": "#/$defs/PlacementGroupIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "GroupNames": {
                    "$ref": "#/$defs/PlacementGroupStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "PlacementGroupIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlacementGroupId"
            }
        },
        "PlacementGroupStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PlacementGroupName"
            }
        },
        "DescribePrefixListsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "PrefixLists": {
                    "$ref": "#/$defs/PrefixListSet"
                }
            }
        },
        "PrefixListSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrefixList"
            }
        },
        "PrefixList": {
            "type": "object",
            "properties": {
                "Cidrs": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/String"
                },
                "PrefixListName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribePrefixListsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "PrefixListIds": {
                    "$ref": "#/$defs/PrefixListResourceIdStringList"
                }
            }
        },
        "PrefixListResourceIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrefixListResourceId"
            }
        },
        "DescribePrincipalIdFormatResult": {
            "type": "object",
            "properties": {
                "Principals": {
                    "$ref": "#/$defs/PrincipalIdFormatList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PrincipalIdFormatList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrincipalIdFormat"
            }
        },
        "PrincipalIdFormat": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Statuses": {
                    "$ref": "#/$defs/IdFormatList"
                }
            }
        },
        "DescribePrincipalIdFormatRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Resources": {
                    "$ref": "#/$defs/ResourceList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribePrincipalIdFormatMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ResourceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribePrincipalIdFormatMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribePublicIpv4PoolsResult": {
            "type": "object",
            "properties": {
                "PublicIpv4Pools": {
                    "$ref": "#/$defs/PublicIpv4PoolSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PublicIpv4PoolSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PublicIpv4Pool"
            }
        },
        "PublicIpv4Pool": {
            "type": "object",
            "properties": {
                "PoolId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "PoolAddressRanges": {
                    "$ref": "#/$defs/PublicIpv4PoolRangeSet"
                },
                "TotalAddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "TotalAvailableAddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "PublicIpv4PoolRangeSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PublicIpv4PoolRange"
            }
        },
        "PublicIpv4PoolRange": {
            "type": "object",
            "properties": {
                "FirstAddress": {
                    "$ref": "#/$defs/String"
                },
                "LastAddress": {
                    "$ref": "#/$defs/String"
                },
                "AddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "AvailableAddressCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "DescribePublicIpv4PoolsRequest": {
            "type": "object",
            "properties": {
                "PoolIds": {
                    "$ref": "#/$defs/PublicIpv4PoolIdStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PoolMaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "PublicIpv4PoolIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv4PoolEc2Id"
            }
        },
        "PoolMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeRegionsResult": {
            "type": "object",
            "properties": {
                "Regions": {
                    "$ref": "#/$defs/RegionList"
                }
            }
        },
        "RegionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Region"
            }
        },
        "Region": {
            "type": "object",
            "properties": {
                "OptInStatus": {
                    "$ref": "#/$defs/String"
                },
                "RegionName": {
                    "$ref": "#/$defs/String"
                },
                "Endpoint": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeRegionsRequest": {
            "type": "object",
            "properties": {
                "RegionNames": {
                    "$ref": "#/$defs/RegionNameStringList"
                },
                "AllRegions": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "RegionNameStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeReplaceRootVolumeTasksResult": {
            "type": "object",
            "properties": {
                "ReplaceRootVolumeTasks": {
                    "$ref": "#/$defs/ReplaceRootVolumeTasks"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ReplaceRootVolumeTasks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplaceRootVolumeTask"
            }
        },
        "DescribeReplaceRootVolumeTasksRequest": {
            "type": "object",
            "properties": {
                "ReplaceRootVolumeTaskIds": {
                    "$ref": "#/$defs/ReplaceRootVolumeTaskIds"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeReplaceRootVolumeTasksMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ReplaceRootVolumeTaskIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplaceRootVolumeTaskId"
            }
        },
        "DescribeReplaceRootVolumeTasksMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeReservedInstancesResult": {
            "type": "object",
            "properties": {
                "ReservedInstances": {
                    "$ref": "#/$defs/ReservedInstancesList"
                }
            }
        },
        "ReservedInstancesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstances"
            }
        },
        "ReservedInstances": {
            "type": "object",
            "properties": {
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                },
                "InstanceTenancy": {
                    "$ref": "#/$defs/Tenancy"
                },
                "OfferingClass": {
                    "$ref": "#/$defs/OfferingClassType"
                },
                "OfferingType": {
                    "$ref": "#/$defs/OfferingTypeValues"
                },
                "RecurringCharges": {
                    "$ref": "#/$defs/RecurringChargesList"
                },
                "Scope": {
                    "$ref": "#/$defs/scope"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ReservedInstancesId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "Start": {
                    "$ref": "#/$defs/DateTime"
                },
                "End": {
                    "$ref": "#/$defs/DateTime"
                },
                "Duration": {
                    "$ref": "#/$defs/Long"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/Float"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/Float"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ProductDescription": {
                    "$ref": "#/$defs/RIProductDescription"
                },
                "State": {
                    "$ref": "#/$defs/ReservedInstanceState"
                }
            }
        },
        "OfferingClassType": {
            "enum": [
                "STANDARD",
                "CONVERTIBLE"
            ]
        },
        "OfferingTypeValues": {
            "enum": [
                "Heavy_Utilization",
                "Medium_Utilization",
                "Light_Utilization",
                "No_Upfront",
                "Partial_Upfront",
                "All_Upfront"
            ]
        },
        "RecurringChargesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RecurringCharge"
            }
        },
        "RecurringCharge": {
            "type": "object",
            "properties": {
                "Amount": {
                    "$ref": "#/$defs/Double"
                },
                "Frequency": {
                    "$ref": "#/$defs/RecurringChargeFrequency"
                }
            }
        },
        "RecurringChargeFrequency": {
            "enum": [
                "Hourly"
            ]
        },
        "scope": {
            "enum": [
                "AVAILABILITY_ZONE",
                "REGIONAL"
            ]
        },
        "Float": {
            "type": "number",
            "format": "float"
        },
        "RIProductDescription": {
            "enum": [
                "Linux_UNIX",
                "Linux_UNIX_Amazon_VPC_",
                "Windows",
                "Windows_Amazon_VPC_"
            ]
        },
        "ReservedInstanceState": {
            "enum": [
                "payment_pending",
                "active",
                "payment_failed",
                "retired",
                "queued",
                "queued_deleted"
            ]
        },
        "DescribeReservedInstancesRequest": {
            "type": "object",
            "properties": {
                "OfferingClass": {
                    "$ref": "#/$defs/OfferingClassType"
                },
                "ReservedInstancesIds": {
                    "$ref": "#/$defs/ReservedInstancesIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "OfferingType": {
                    "$ref": "#/$defs/OfferingTypeValues"
                }
            }
        },
        "ReservedInstancesIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservationId"
            }
        },
        "DescribeReservedInstancesListingsResult": {
            "type": "object",
            "properties": {
                "ReservedInstancesListings": {
                    "$ref": "#/$defs/ReservedInstancesListingList"
                }
            }
        },
        "DescribeReservedInstancesListingsRequest": {
            "type": "object",
            "properties": {
                "ReservedInstancesId": {
                    "$ref": "#/$defs/ReservationId"
                },
                "ReservedInstancesListingId": {
                    "$ref": "#/$defs/ReservedInstancesListingId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeReservedInstancesModificationsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ReservedInstancesModifications": {
                    "$ref": "#/$defs/ReservedInstancesModificationList"
                }
            }
        },
        "ReservedInstancesModificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstancesModification"
            }
        },
        "ReservedInstancesModification": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "CreateDate": {
                    "$ref": "#/$defs/DateTime"
                },
                "EffectiveDate": {
                    "$ref": "#/$defs/DateTime"
                },
                "ModificationResults": {
                    "$ref": "#/$defs/ReservedInstancesModificationResultList"
                },
                "ReservedInstancesIds": {
                    "$ref": "#/$defs/ReservedIntancesIds"
                },
                "ReservedInstancesModificationId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "UpdateDate": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "ReservedInstancesModificationResultList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstancesModificationResult"
            }
        },
        "ReservedInstancesModificationResult": {
            "type": "object",
            "properties": {
                "ReservedInstancesId": {
                    "$ref": "#/$defs/String"
                },
                "TargetConfiguration": {
                    "$ref": "#/$defs/ReservedInstancesConfiguration"
                }
            }
        },
        "ReservedInstancesConfiguration": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "Platform": {
                    "$ref": "#/$defs/String"
                },
                "Scope": {
                    "$ref": "#/$defs/scope"
                }
            }
        },
        "ReservedIntancesIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstancesId"
            }
        },
        "ReservedInstancesId": {
            "type": "object",
            "properties": {
                "ReservedInstancesId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeReservedInstancesModificationsRequest": {
            "type": "object",
            "properties": {
                "ReservedInstancesModificationIds": {
                    "$ref": "#/$defs/ReservedInstancesModificationIdStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "ReservedInstancesModificationIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstancesModificationId"
            }
        },
        "ReservedInstancesModificationId": {
            "type": "string"
        },
        "DescribeReservedInstancesOfferingsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ReservedInstancesOfferings": {
                    "$ref": "#/$defs/ReservedInstancesOfferingList"
                }
            }
        },
        "ReservedInstancesOfferingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstancesOffering"
            }
        },
        "ReservedInstancesOffering": {
            "type": "object",
            "properties": {
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                },
                "InstanceTenancy": {
                    "$ref": "#/$defs/Tenancy"
                },
                "Marketplace": {
                    "$ref": "#/$defs/Boolean"
                },
                "OfferingClass": {
                    "$ref": "#/$defs/OfferingClassType"
                },
                "OfferingType": {
                    "$ref": "#/$defs/OfferingTypeValues"
                },
                "PricingDetails": {
                    "$ref": "#/$defs/PricingDetailsList"
                },
                "RecurringCharges": {
                    "$ref": "#/$defs/RecurringChargesList"
                },
                "Scope": {
                    "$ref": "#/$defs/scope"
                },
                "ReservedInstancesOfferingId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "Duration": {
                    "$ref": "#/$defs/Long"
                },
                "UsagePrice": {
                    "$ref": "#/$defs/Float"
                },
                "FixedPrice": {
                    "$ref": "#/$defs/Float"
                },
                "ProductDescription": {
                    "$ref": "#/$defs/RIProductDescription"
                }
            }
        },
        "PricingDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PricingDetail"
            }
        },
        "PricingDetail": {
            "type": "object",
            "properties": {
                "Count": {
                    "$ref": "#/$defs/Integer"
                },
                "Price": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "DescribeReservedInstancesOfferingsRequest": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "IncludeMarketplace": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "MaxDuration": {
                    "$ref": "#/$defs/Long"
                },
                "MaxInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "MinDuration": {
                    "$ref": "#/$defs/Long"
                },
                "OfferingClass": {
                    "$ref": "#/$defs/OfferingClassType"
                },
                "ProductDescription": {
                    "$ref": "#/$defs/RIProductDescription"
                },
                "ReservedInstancesOfferingIds": {
                    "$ref": "#/$defs/ReservedInstancesOfferingIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "InstanceTenancy": {
                    "$ref": "#/$defs/Tenancy"
                },
                "OfferingType": {
                    "$ref": "#/$defs/OfferingTypeValues"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ReservedInstancesOfferingIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstancesOfferingId"
            }
        },
        "DescribeRouteTablesResult": {
            "type": "object",
            "properties": {
                "RouteTables": {
                    "$ref": "#/$defs/RouteTableList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RouteTableList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RouteTable"
            }
        },
        "DescribeRouteTablesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeRouteTablesMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "RouteTableIds": {
                    "$ref": "#/$defs/RouteTableIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeRouteTablesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "RouteTableIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RouteTableId"
            }
        },
        "DescribeScheduledInstanceAvailabilityResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ScheduledInstanceAvailabilitySet": {
                    "$ref": "#/$defs/ScheduledInstanceAvailabilitySet"
                }
            }
        },
        "ScheduledInstanceAvailabilitySet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledInstanceAvailability"
            }
        },
        "ScheduledInstanceAvailability": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "AvailableInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "FirstSlotStartTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "HourlyPrice": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "MaxTermDurationInDays": {
                    "$ref": "#/$defs/Integer"
                },
                "MinTermDurationInDays": {
                    "$ref": "#/$defs/Integer"
                },
                "NetworkPlatform": {
                    "$ref": "#/$defs/String"
                },
                "Platform": {
                    "$ref": "#/$defs/String"
                },
                "PurchaseToken": {
                    "$ref": "#/$defs/String"
                },
                "Recurrence": {
                    "$ref": "#/$defs/ScheduledInstanceRecurrence"
                },
                "SlotDurationInHours": {
                    "$ref": "#/$defs/Integer"
                },
                "TotalScheduledInstanceHours": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ScheduledInstanceRecurrence": {
            "type": "object",
            "properties": {
                "Frequency": {
                    "$ref": "#/$defs/String"
                },
                "Interval": {
                    "$ref": "#/$defs/Integer"
                },
                "OccurrenceDaySet": {
                    "$ref": "#/$defs/OccurrenceDaySet"
                },
                "OccurrenceRelativeToEnd": {
                    "$ref": "#/$defs/Boolean"
                },
                "OccurrenceUnit": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "OccurrenceDaySet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Integer"
            }
        },
        "DescribeScheduledInstanceAvailabilityRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "FirstSlotStartTimeRange": {
                    "$ref": "#/$defs/SlotDateTimeRangeRequest"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeScheduledInstanceAvailabilityMaxResults"
                },
                "MaxSlotDurationInHours": {
                    "$ref": "#/$defs/Integer"
                },
                "MinSlotDurationInHours": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Recurrence": {
                    "$ref": "#/$defs/ScheduledInstanceRecurrenceRequest"
                }
            }
        },
        "SlotDateTimeRangeRequest": {
            "type": "object",
            "properties": {
                "EarliestTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "LatestTime": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "DescribeScheduledInstanceAvailabilityMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ScheduledInstanceRecurrenceRequest": {
            "type": "object",
            "properties": {
                "Frequency": {
                    "$ref": "#/$defs/String"
                },
                "Interval": {
                    "$ref": "#/$defs/Integer"
                },
                "OccurrenceDays": {
                    "$ref": "#/$defs/OccurrenceDayRequestSet"
                },
                "OccurrenceRelativeToEnd": {
                    "$ref": "#/$defs/Boolean"
                },
                "OccurrenceUnit": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "OccurrenceDayRequestSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Integer"
            }
        },
        "DescribeScheduledInstancesResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ScheduledInstanceSet": {
                    "$ref": "#/$defs/ScheduledInstanceSet"
                }
            }
        },
        "ScheduledInstanceSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledInstance"
            }
        },
        "ScheduledInstance": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "CreateDate": {
                    "$ref": "#/$defs/DateTime"
                },
                "HourlyPrice": {
                    "$ref": "#/$defs/String"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "NetworkPlatform": {
                    "$ref": "#/$defs/String"
                },
                "NextSlotStartTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Platform": {
                    "$ref": "#/$defs/String"
                },
                "PreviousSlotEndTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Recurrence": {
                    "$ref": "#/$defs/ScheduledInstanceRecurrence"
                },
                "ScheduledInstanceId": {
                    "$ref": "#/$defs/String"
                },
                "SlotDurationInHours": {
                    "$ref": "#/$defs/Integer"
                },
                "TermEndDate": {
                    "$ref": "#/$defs/DateTime"
                },
                "TermStartDate": {
                    "$ref": "#/$defs/DateTime"
                },
                "TotalScheduledInstanceHours": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "DescribeScheduledInstancesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ScheduledInstanceIds": {
                    "$ref": "#/$defs/ScheduledInstanceIdRequestSet"
                },
                "SlotStartTimeRange": {
                    "$ref": "#/$defs/SlotStartTimeRangeRequest"
                }
            }
        },
        "ScheduledInstanceIdRequestSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledInstanceId"
            }
        },
        "ScheduledInstanceId": {
            "type": "string"
        },
        "SlotStartTimeRangeRequest": {
            "type": "object",
            "properties": {
                "EarliestTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "LatestTime": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "DescribeSecurityGroupReferencesResult": {
            "type": "object",
            "properties": {
                "SecurityGroupReferenceSet": {
                    "$ref": "#/$defs/SecurityGroupReferences"
                }
            }
        },
        "SecurityGroupReferences": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupReference"
            }
        },
        "SecurityGroupReference": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "ReferencingVpcId": {
                    "$ref": "#/$defs/String"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeSecurityGroupReferencesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "GroupId": {
                    "$ref": "#/$defs/GroupIds"
                }
            }
        },
        "GroupIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "DescribeSecurityGroupRulesResult": {
            "type": "object",
            "properties": {
                "SecurityGroupRules": {
                    "$ref": "#/$defs/SecurityGroupRuleList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeSecurityGroupRulesRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "SecurityGroupRuleIds": {
                    "$ref": "#/$defs/SecurityGroupRuleIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeSecurityGroupRulesMaxResults"
                }
            }
        },
        "SecurityGroupRuleIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeSecurityGroupRulesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeSecurityGroupsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroupList"
                }
            }
        },
        "SecurityGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroup"
            }
        },
        "SecurityGroup": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "IpPermissionsEgress": {
                    "$ref": "#/$defs/IpPermissionList"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "IpPermissions": {
                    "$ref": "#/$defs/IpPermissionList"
                }
            }
        },
        "DescribeSecurityGroupsRequest": {
            "type": "object",
            "properties": {
                "GroupIds": {
                    "$ref": "#/$defs/GroupIdStringList"
                },
                "GroupNames": {
                    "$ref": "#/$defs/GroupNameStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeSecurityGroupsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "GroupNameStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupName"
            }
        },
        "DescribeSecurityGroupsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeSecurityGroupVpcAssociationsResult": {
            "type": "object",
            "properties": {
                "SecurityGroupVpcAssociations": {
                    "$ref": "#/$defs/SecurityGroupVpcAssociationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SecurityGroupVpcAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupVpcAssociation"
            }
        },
        "SecurityGroupVpcAssociation": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "VpcOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/SecurityGroupVpcAssociationState"
                },
                "StateReason": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeSecurityGroupVpcAssociationsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeSecurityGroupVpcAssociationsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeSecurityGroupVpcAssociationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeSnapshotAttributeResult": {
            "type": "object",
            "properties": {
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodeList"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "CreateVolumePermissions": {
                    "$ref": "#/$defs/CreateVolumePermissionList"
                }
            }
        },
        "CreateVolumePermissionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CreateVolumePermission"
            }
        },
        "CreateVolumePermission": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/String"
                },
                "Group": {
                    "$ref": "#/$defs/PermissionGroup"
                }
            }
        },
        "DescribeSnapshotAttributeRequest": {
            "type": "object",
            "properties": {
                "Attribute": {
                    "$ref": "#/$defs/SnapshotAttributeName"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SnapshotAttributeName": {
            "enum": [
                "productCodes",
                "createVolumePermission"
            ]
        },
        "DescribeSnapshotsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Snapshots": {
                    "$ref": "#/$defs/SnapshotList"
                }
            }
        },
        "SnapshotList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Snapshot"
            }
        },
        "DescribeSnapshotsRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "OwnerIds": {
                    "$ref": "#/$defs/OwnerStringList"
                },
                "RestorableByUserIds": {
                    "$ref": "#/$defs/RestorableByStringList"
                },
                "SnapshotIds": {
                    "$ref": "#/$defs/SnapshotIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "RestorableByStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeSnapshotTierStatusResult": {
            "type": "object",
            "properties": {
                "SnapshotTierStatuses": {
                    "$ref": "#/$defs/snapshotTierStatusSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "snapshotTierStatusSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SnapshotTierStatus"
            }
        },
        "SnapshotTierStatus": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "VolumeId": {
                    "$ref": "#/$defs/VolumeId"
                },
                "Status": {
                    "$ref": "#/$defs/SnapshotState"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "StorageTier": {
                    "$ref": "#/$defs/StorageTier"
                },
                "LastTieringStartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "LastTieringProgress": {
                    "$ref": "#/$defs/Integer"
                },
                "LastTieringOperationStatus": {
                    "$ref": "#/$defs/TieringOperationStatus"
                },
                "LastTieringOperationStatusDetail": {
                    "$ref": "#/$defs/String"
                },
                "ArchivalCompleteTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "RestoreExpiryTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "TieringOperationStatus": {
            "enum": [
                "archival_in_progress",
                "archival_completed",
                "archival_failed",
                "temporary_restore_in_progress",
                "temporary_restore_completed",
                "temporary_restore_failed",
                "permanent_restore_in_progress",
                "permanent_restore_completed",
                "permanent_restore_failed"
            ]
        },
        "DescribeSnapshotTierStatusRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeSnapshotTierStatusMaxResults"
                }
            }
        },
        "DescribeSnapshotTierStatusMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeSpotDatafeedSubscriptionResult": {
            "type": "object",
            "properties": {
                "SpotDatafeedSubscription": {
                    "$ref": "#/$defs/SpotDatafeedSubscription"
                }
            }
        },
        "DescribeSpotDatafeedSubscriptionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeSpotFleetInstancesResponse": {
            "type": "object",
            "properties": {
                "ActiveInstances": {
                    "$ref": "#/$defs/ActiveInstanceSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "SpotFleetRequestId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeSpotFleetInstancesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SpotFleetRequestId": {
                    "$ref": "#/$defs/SpotFleetRequestId"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeSpotFleetInstancesMaxResults"
                }
            }
        },
        "DescribeSpotFleetInstancesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeSpotFleetRequestHistoryResponse": {
            "type": "object",
            "properties": {
                "HistoryRecords": {
                    "$ref": "#/$defs/HistoryRecords"
                },
                "LastEvaluatedTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "SpotFleetRequestId": {
                    "$ref": "#/$defs/String"
                },
                "StartTime": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "HistoryRecords": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/HistoryRecord"
            }
        },
        "HistoryRecord": {
            "type": "object",
            "properties": {
                "EventInformation": {
                    "$ref": "#/$defs/EventInformation"
                },
                "EventType": {
                    "$ref": "#/$defs/EventType"
                },
                "Timestamp": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "EventType": {
            "enum": [
                "INSTANCE_CHANGE",
                "BATCH_CHANGE",
                "ERROR",
                "INFORMATION"
            ]
        },
        "DescribeSpotFleetRequestHistoryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SpotFleetRequestId": {
                    "$ref": "#/$defs/SpotFleetRequestId"
                },
                "EventType": {
                    "$ref": "#/$defs/EventType"
                },
                "StartTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeSpotFleetRequestHistoryMaxResults"
                }
            }
        },
        "DescribeSpotFleetRequestHistoryMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeSpotFleetRequestsResponse": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "SpotFleetRequestConfigs": {
                    "$ref": "#/$defs/SpotFleetRequestConfigSet"
                }
            }
        },
        "SpotFleetRequestConfigSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SpotFleetRequestConfig"
            }
        },
        "SpotFleetRequestConfig": {
            "type": "object",
            "properties": {
                "ActivityStatus": {
                    "$ref": "#/$defs/ActivityStatus"
                },
                "CreateTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "SpotFleetRequestConfig": {
                    "$ref": "#/$defs/SpotFleetRequestConfigData"
                },
                "SpotFleetRequestId": {
                    "$ref": "#/$defs/String"
                },
                "SpotFleetRequestState": {
                    "$ref": "#/$defs/BatchState"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ActivityStatus": {
            "enum": [
                "ERROR",
                "PENDING_FULFILLMENT",
                "PENDING_TERMINATION",
                "FULFILLED"
            ]
        },
        "SpotFleetRequestConfigData": {
            "type": "object",
            "properties": {
                "AllocationStrategy": {
                    "$ref": "#/$defs/AllocationStrategy"
                },
                "OnDemandAllocationStrategy": {
                    "$ref": "#/$defs/OnDemandAllocationStrategy"
                },
                "SpotMaintenanceStrategies": {
                    "$ref": "#/$defs/SpotMaintenanceStrategies"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "ExcessCapacityTerminationPolicy": {
                    "$ref": "#/$defs/ExcessCapacityTerminationPolicy"
                },
                "FulfilledCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "OnDemandFulfilledCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "IamFleetRole": {
                    "$ref": "#/$defs/String"
                },
                "LaunchSpecifications": {
                    "$ref": "#/$defs/LaunchSpecsList"
                },
                "LaunchTemplateConfigs": {
                    "$ref": "#/$defs/LaunchTemplateConfigList"
                },
                "SpotPrice": {
                    "$ref": "#/$defs/String"
                },
                "TargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "OnDemandTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "OnDemandMaxTotalPrice": {
                    "$ref": "#/$defs/String"
                },
                "SpotMaxTotalPrice": {
                    "$ref": "#/$defs/String"
                },
                "TerminateInstancesWithExpiration": {
                    "$ref": "#/$defs/Boolean"
                },
                "Type": {
                    "$ref": "#/$defs/FleetType"
                },
                "ValidFrom": {
                    "$ref": "#/$defs/DateTime"
                },
                "ValidUntil": {
                    "$ref": "#/$defs/DateTime"
                },
                "ReplaceUnhealthyInstances": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceInterruptionBehavior": {
                    "$ref": "#/$defs/InstanceInterruptionBehavior"
                },
                "LoadBalancersConfig": {
                    "$ref": "#/$defs/LoadBalancersConfig"
                },
                "InstancePoolsToUseCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Context": {
                    "$ref": "#/$defs/String"
                },
                "TargetCapacityUnitType": {
                    "$ref": "#/$defs/TargetCapacityUnitType"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "AllocationStrategy": {
            "enum": [
                "LOWEST_PRICE",
                "DIVERSIFIED",
                "CAPACITY_OPTIMIZED",
                "CAPACITY_OPTIMIZED_PRIORITIZED",
                "PRICE_CAPACITY_OPTIMIZED"
            ]
        },
        "OnDemandAllocationStrategy": {
            "enum": [
                "LOWEST_PRICE",
                "PRIORITIZED"
            ]
        },
        "SpotMaintenanceStrategies": {
            "type": "object",
            "properties": {
                "CapacityRebalance": {
                    "$ref": "#/$defs/SpotCapacityRebalance"
                }
            }
        },
        "SpotCapacityRebalance": {
            "type": "object",
            "properties": {
                "ReplacementStrategy": {
                    "$ref": "#/$defs/ReplacementStrategy"
                },
                "TerminationDelay": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ReplacementStrategy": {
            "enum": [
                "LAUNCH",
                "LAUNCH_BEFORE_TERMINATE"
            ]
        },
        "ExcessCapacityTerminationPolicy": {
            "enum": [
                "NO_TERMINATION",
                "DEFAULT"
            ]
        },
        "LaunchSpecsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SpotFleetLaunchSpecification"
            }
        },
        "SpotFleetLaunchSpecification": {
            "type": "object",
            "properties": {
                "AddressingType": {
                    "$ref": "#/$defs/String"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappingList"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/IamInstanceProfileSpecification"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "KernelId": {
                    "$ref": "#/$defs/String"
                },
                "KeyName": {
                    "$ref": "#/$defs/KeyPairName"
                },
                "Monitoring": {
                    "$ref": "#/$defs/SpotFleetMonitoring"
                },
                "NetworkInterfaces": {
                    "$ref": "#/$defs/InstanceNetworkInterfaceSpecificationList"
                },
                "Placement": {
                    "$ref": "#/$defs/SpotPlacement"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/String"
                },
                "SpotPrice": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "UserData": {
                    "$ref": "#/$defs/SensitiveUserData"
                },
                "WeightedCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/SpotFleetTagSpecificationList"
                },
                "InstanceRequirements": {
                    "$ref": "#/$defs/InstanceRequirements"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/GroupIdentifierList"
                }
            }
        },
        "SpotFleetMonitoring": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "InstanceNetworkInterfaceSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceNetworkInterfaceSpecification"
            }
        },
        "InstanceNetworkInterfaceSpecification": {
            "type": "object",
            "properties": {
                "AssociatePublicIpAddress": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DeviceIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "Groups": {
                    "$ref": "#/$defs/SecurityGroupIdStringList"
                },
                "Ipv6AddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Addresses": {
                    "$ref": "#/$defs/InstanceIpv6AddressList"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/PrivateIpAddressSpecificationList"
                },
                "SecondaryPrivateIpAddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "AssociateCarrierIpAddress": {
                    "$ref": "#/$defs/Boolean"
                },
                "InterfaceType": {
                    "$ref": "#/$defs/String"
                },
                "NetworkCardIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv4Prefixes": {
                    "$ref": "#/$defs/Ipv4PrefixList"
                },
                "Ipv4PrefixCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Prefixes": {
                    "$ref": "#/$defs/Ipv6PrefixList"
                },
                "Ipv6PrefixCount": {
                    "$ref": "#/$defs/Integer"
                },
                "PrimaryIpv6": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnaSrdSpecification": {
                    "$ref": "#/$defs/EnaSrdSpecificationRequest"
                },
                "ConnectionTrackingSpecification": {
                    "$ref": "#/$defs/ConnectionTrackingSpecificationRequest"
                }
            }
        },
        "SpotPlacement": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/PlacementGroupName"
                },
                "Tenancy": {
                    "$ref": "#/$defs/Tenancy"
                }
            }
        },
        "SpotFleetTagSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SpotFleetTagSpecification"
            }
        },
        "SpotFleetTagSpecification": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "LaunchTemplateConfigList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateConfig"
            }
        },
        "LaunchTemplateConfig": {
            "type": "object",
            "properties": {
                "LaunchTemplateSpecification": {
                    "$ref": "#/$defs/FleetLaunchTemplateSpecification"
                },
                "Overrides": {
                    "$ref": "#/$defs/LaunchTemplateOverridesList"
                }
            }
        },
        "LaunchTemplateOverridesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LaunchTemplateOverrides"
            }
        },
        "LaunchTemplateOverrides": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "SpotPrice": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "WeightedCapacity": {
                    "$ref": "#/$defs/Double"
                },
                "Priority": {
                    "$ref": "#/$defs/Double"
                },
                "InstanceRequirements": {
                    "$ref": "#/$defs/InstanceRequirements"
                }
            }
        },
        "LoadBalancersConfig": {
            "type": "object",
            "properties": {
                "ClassicLoadBalancersConfig": {
                    "$ref": "#/$defs/ClassicLoadBalancersConfig"
                },
                "TargetGroupsConfig": {
                    "$ref": "#/$defs/TargetGroupsConfig"
                }
            }
        },
        "ClassicLoadBalancersConfig": {
            "type": "object",
            "properties": {
                "ClassicLoadBalancers": {
                    "$ref": "#/$defs/ClassicLoadBalancers"
                }
            }
        },
        "ClassicLoadBalancers": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClassicLoadBalancer"
            }
        },
        "ClassicLoadBalancer": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TargetGroupsConfig": {
            "type": "object",
            "properties": {
                "TargetGroups": {
                    "$ref": "#/$defs/TargetGroups"
                }
            }
        },
        "TargetGroups": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetGroup"
            }
        },
        "TargetGroup": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeSpotFleetRequestsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SpotFleetRequestIds": {
                    "$ref": "#/$defs/SpotFleetRequestIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "DescribeSpotInstanceRequestsResult": {
            "type": "object",
            "properties": {
                "SpotInstanceRequests": {
                    "$ref": "#/$defs/SpotInstanceRequestList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SpotInstanceRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SpotInstanceRequest"
            }
        },
        "SpotInstanceRequest": {
            "type": "object",
            "properties": {
                "ActualBlockHourlyPrice": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZoneGroup": {
                    "$ref": "#/$defs/String"
                },
                "BlockDurationMinutes": {
                    "$ref": "#/$defs/Integer"
                },
                "CreateTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Fault": {
                    "$ref": "#/$defs/SpotInstanceStateFault"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "LaunchGroup": {
                    "$ref": "#/$defs/String"
                },
                "LaunchSpecification": {
                    "$ref": "#/$defs/LaunchSpecification"
                },
                "LaunchedAvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "ProductDescription": {
                    "$ref": "#/$defs/RIProductDescription"
                },
                "SpotInstanceRequestId": {
                    "$ref": "#/$defs/String"
                },
                "SpotPrice": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/SpotInstanceState"
                },
                "Status": {
                    "$ref": "#/$defs/SpotInstanceStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "Type": {
                    "$ref": "#/$defs/SpotInstanceType"
                },
                "ValidFrom": {
                    "$ref": "#/$defs/DateTime"
                },
                "ValidUntil": {
                    "$ref": "#/$defs/DateTime"
                },
                "InstanceInterruptionBehavior": {
                    "$ref": "#/$defs/InstanceInterruptionBehavior"
                }
            }
        },
        "LaunchSpecification": {
            "type": "object",
            "properties": {
                "UserData": {
                    "$ref": "#/$defs/SensitiveUserData"
                },
                "AddressingType": {
                    "$ref": "#/$defs/String"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappingList"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/IamInstanceProfileSpecification"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "KernelId": {
                    "$ref": "#/$defs/String"
                },
                "KeyName": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaces": {
                    "$ref": "#/$defs/InstanceNetworkInterfaceSpecificationList"
                },
                "Placement": {
                    "$ref": "#/$defs/SpotPlacement"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/GroupIdentifierList"
                },
                "Monitoring": {
                    "$ref": "#/$defs/RunInstancesMonitoringEnabled"
                }
            }
        },
        "RunInstancesMonitoringEnabled": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SpotInstanceState": {
            "enum": [
                "open",
                "active",
                "closed",
                "cancelled",
                "failed",
                "disabled"
            ]
        },
        "SpotInstanceStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                },
                "UpdateTime": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "DescribeSpotInstanceRequestsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SpotInstanceRequestIds": {
                    "$ref": "#/$defs/SpotInstanceRequestIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeSpotPriceHistoryResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "SpotPriceHistory": {
                    "$ref": "#/$defs/SpotPriceHistoryList"
                }
            }
        },
        "SpotPriceHistoryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SpotPrice"
            }
        },
        "SpotPrice": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "ProductDescription": {
                    "$ref": "#/$defs/RIProductDescription"
                },
                "SpotPrice": {
                    "$ref": "#/$defs/String"
                },
                "Timestamp": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "DescribeSpotPriceHistoryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "StartTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "EndTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "InstanceTypes": {
                    "$ref": "#/$defs/InstanceTypeList"
                },
                "ProductDescriptions": {
                    "$ref": "#/$defs/ProductDescriptionList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceType"
            }
        },
        "ProductDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeStaleSecurityGroupsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "StaleSecurityGroupSet": {
                    "$ref": "#/$defs/StaleSecurityGroupSet"
                }
            }
        },
        "StaleSecurityGroupSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StaleSecurityGroup"
            }
        },
        "StaleSecurityGroup": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "StaleIpPermissions": {
                    "$ref": "#/$defs/StaleIpPermissionSet"
                },
                "StaleIpPermissionsEgress": {
                    "$ref": "#/$defs/StaleIpPermissionSet"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StaleIpPermissionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StaleIpPermission"
            }
        },
        "StaleIpPermission": {
            "type": "object",
            "properties": {
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "IpProtocol": {
                    "$ref": "#/$defs/String"
                },
                "IpRanges": {
                    "$ref": "#/$defs/IpRanges"
                },
                "PrefixListIds": {
                    "$ref": "#/$defs/PrefixListIdSet"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                },
                "UserIdGroupPairs": {
                    "$ref": "#/$defs/UserIdGroupPairSet"
                }
            }
        },
        "IpRanges": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "PrefixListIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "UserIdGroupPairSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserIdGroupPair"
            }
        },
        "DescribeStaleSecurityGroupsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeStaleSecurityGroupsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/DescribeStaleSecurityGroupsNextToken"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "DescribeStaleSecurityGroupsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeStaleSecurityGroupsNextToken": {
            "type": "string"
        },
        "DescribeStoreImageTasksResult": {
            "type": "object",
            "properties": {
                "StoreImageTaskResults": {
                    "$ref": "#/$defs/StoreImageTaskResultSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StoreImageTaskResultSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/StoreImageTaskResult"
            }
        },
        "StoreImageTaskResult": {
            "type": "object",
            "properties": {
                "AmiId": {
                    "$ref": "#/$defs/String"
                },
                "TaskStartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3objectKey": {
                    "$ref": "#/$defs/String"
                },
                "ProgressPercentage": {
                    "$ref": "#/$defs/Integer"
                },
                "StoreTaskState": {
                    "$ref": "#/$defs/String"
                },
                "StoreTaskFailureReason": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeStoreImageTasksRequest": {
            "type": "object",
            "properties": {
                "ImageIds": {
                    "$ref": "#/$defs/ImageIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeStoreImageTasksRequestMaxResults"
                }
            }
        },
        "ImageIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImageId"
            }
        },
        "DescribeStoreImageTasksRequestMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeSubnetsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Subnets": {
                    "$ref": "#/$defs/SubnetList"
                }
            }
        },
        "SubnetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Subnet"
            }
        },
        "DescribeSubnetsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/SubnetIdStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeSubnetsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SubnetIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "DescribeSubnetsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeTagsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagDescriptionList"
                }
            }
        },
        "TagDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagDescription"
            }
        },
        "TagDescription": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/ResourceType"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeTagsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeTrafficMirrorFilterRulesResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterRules": {
                    "$ref": "#/$defs/TrafficMirrorFilterRuleSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrafficMirrorFilterRuleSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorFilterRule"
            }
        },
        "DescribeTrafficMirrorFilterRulesRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterRuleIds": {
                    "$ref": "#/$defs/TrafficMirrorFilterRuleIdList"
                },
                "TrafficMirrorFilterId": {
                    "$ref": "#/$defs/TrafficMirrorFilterId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TrafficMirroringMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TrafficMirrorFilterRuleIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorFilterRuleIdWithResolver"
            }
        },
        "TrafficMirroringMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeTrafficMirrorFiltersResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilters": {
                    "$ref": "#/$defs/TrafficMirrorFilterSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrafficMirrorFilterSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorFilter"
            }
        },
        "DescribeTrafficMirrorFiltersRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterIds": {
                    "$ref": "#/$defs/TrafficMirrorFilterIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TrafficMirroringMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TrafficMirrorFilterIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorFilterId"
            }
        },
        "DescribeTrafficMirrorSessionsResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorSessions": {
                    "$ref": "#/$defs/TrafficMirrorSessionSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrafficMirrorSessionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorSession"
            }
        },
        "DescribeTrafficMirrorSessionsRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorSessionIds": {
                    "$ref": "#/$defs/TrafficMirrorSessionIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TrafficMirroringMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TrafficMirrorSessionIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorSessionId"
            }
        },
        "DescribeTrafficMirrorTargetsResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorTargets": {
                    "$ref": "#/$defs/TrafficMirrorTargetSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrafficMirrorTargetSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorTarget"
            }
        },
        "DescribeTrafficMirrorTargetsRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorTargetIds": {
                    "$ref": "#/$defs/TrafficMirrorTargetIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TrafficMirroringMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TrafficMirrorTargetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorTargetId"
            }
        },
        "DescribeTransitGatewayAttachmentsResult": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachments": {
                    "$ref": "#/$defs/TransitGatewayAttachmentList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayAttachmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayAttachment"
            }
        },
        "TransitGatewayAttachment": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayAttachmentState"
                },
                "Association": {
                    "$ref": "#/$defs/TransitGatewayAttachmentAssociation"
                },
                "CreationTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "TransitGatewayAttachmentAssociation": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayAssociationState"
                }
            }
        },
        "DescribeTransitGatewayAttachmentsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentIds": {
                    "$ref": "#/$defs/TransitGatewayAttachmentIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayAttachmentIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayAttachmentId"
            }
        },
        "TransitGatewayMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeTransitGatewayConnectPeersResult": {
            "type": "object",
            "properties": {
                "TransitGatewayConnectPeers": {
                    "$ref": "#/$defs/TransitGatewayConnectPeerList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayConnectPeerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayConnectPeer"
            }
        },
        "DescribeTransitGatewayConnectPeersRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayConnectPeerIds": {
                    "$ref": "#/$defs/TransitGatewayConnectPeerIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayConnectPeerIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayConnectPeerId"
            }
        },
        "DescribeTransitGatewayConnectsResult": {
            "type": "object",
            "properties": {
                "TransitGatewayConnects": {
                    "$ref": "#/$defs/TransitGatewayConnectList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayConnectList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayConnect"
            }
        },
        "DescribeTransitGatewayConnectsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentIds": {
                    "$ref": "#/$defs/TransitGatewayAttachmentIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeTransitGatewayMulticastDomainsResult": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomains": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayMulticastDomainList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayMulticastDomain"
            }
        },
        "DescribeTransitGatewayMulticastDomainsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainIds": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayMulticastDomainIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayMulticastDomainId"
            }
        },
        "DescribeTransitGatewayPeeringAttachmentsResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPeeringAttachments": {
                    "$ref": "#/$defs/TransitGatewayPeeringAttachmentList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayPeeringAttachmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayPeeringAttachment"
            }
        },
        "DescribeTransitGatewayPeeringAttachmentsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentIds": {
                    "$ref": "#/$defs/TransitGatewayAttachmentIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeTransitGatewayPolicyTablesResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTables": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayPolicyTableList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayPolicyTable"
            }
        },
        "DescribeTransitGatewayPolicyTablesRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTableIds": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayPolicyTableIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayPolicyTableId"
            }
        },
        "DescribeTransitGatewayRouteTableAnnouncementsResult": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableAnnouncements": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayRouteTableAnnouncementList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayRouteTableAnnouncement"
            }
        },
        "DescribeTransitGatewayRouteTableAnnouncementsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableAnnouncementIds": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayRouteTableAnnouncementIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementId"
            }
        },
        "DescribeTransitGatewayRouteTablesResult": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTables": {
                    "$ref": "#/$defs/TransitGatewayRouteTableList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayRouteTableList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayRouteTable"
            }
        },
        "DescribeTransitGatewayRouteTablesRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableIds": {
                    "$ref": "#/$defs/TransitGatewayRouteTableIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayRouteTableIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayRouteTableId"
            }
        },
        "DescribeTransitGatewaysResult": {
            "type": "object",
            "properties": {
                "TransitGateways": {
                    "$ref": "#/$defs/TransitGatewayList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGateway"
            }
        },
        "DescribeTransitGatewaysRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayIds": {
                    "$ref": "#/$defs/TransitGatewayIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayId"
            }
        },
        "DescribeTransitGatewayVpcAttachmentsResult": {
            "type": "object",
            "properties": {
                "TransitGatewayVpcAttachments": {
                    "$ref": "#/$defs/TransitGatewayVpcAttachmentList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayVpcAttachmentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayVpcAttachment"
            }
        },
        "DescribeTransitGatewayVpcAttachmentsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentIds": {
                    "$ref": "#/$defs/TransitGatewayAttachmentIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeTrunkInterfaceAssociationsResult": {
            "type": "object",
            "properties": {
                "InterfaceAssociations": {
                    "$ref": "#/$defs/TrunkInterfaceAssociationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TrunkInterfaceAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrunkInterfaceAssociation"
            }
        },
        "DescribeTrunkInterfaceAssociationsRequest": {
            "type": "object",
            "properties": {
                "AssociationIds": {
                    "$ref": "#/$defs/TrunkInterfaceAssociationIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeTrunkInterfaceAssociationsMaxResults"
                }
            }
        },
        "TrunkInterfaceAssociationIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrunkInterfaceAssociationId"
            }
        },
        "DescribeTrunkInterfaceAssociationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeVerifiedAccessEndpointsResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpoints": {
                    "$ref": "#/$defs/VerifiedAccessEndpointList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VerifiedAccessEndpointList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessEndpoint"
            }
        },
        "DescribeVerifiedAccessEndpointsRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpointIds": {
                    "$ref": "#/$defs/VerifiedAccessEndpointIdList"
                },
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/VerifiedAccessInstanceId"
                },
                "VerifiedAccessGroupId": {
                    "$ref": "#/$defs/VerifiedAccessGroupId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeVerifiedAccessEndpointsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VerifiedAccessEndpointIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessEndpointId"
            }
        },
        "DescribeVerifiedAccessEndpointsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeVerifiedAccessGroupsResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroups": {
                    "$ref": "#/$defs/VerifiedAccessGroupList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VerifiedAccessGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessGroup"
            }
        },
        "DescribeVerifiedAccessGroupsRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroupIds": {
                    "$ref": "#/$defs/VerifiedAccessGroupIdList"
                },
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/VerifiedAccessInstanceId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeVerifiedAccessGroupMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VerifiedAccessGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessGroupId"
            }
        },
        "DescribeVerifiedAccessGroupMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeVerifiedAccessInstanceLoggingConfigurationsResult": {
            "type": "object",
            "properties": {
                "LoggingConfigurations": {
                    "$ref": "#/$defs/VerifiedAccessInstanceLoggingConfigurationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VerifiedAccessInstanceLoggingConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessInstanceLoggingConfiguration"
            }
        },
        "VerifiedAccessInstanceLoggingConfiguration": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/String"
                },
                "AccessLogs": {
                    "$ref": "#/$defs/VerifiedAccessLogs"
                }
            }
        },
        "VerifiedAccessLogs": {
            "type": "object",
            "properties": {
                "S3": {
                    "$ref": "#/$defs/VerifiedAccessLogS3Destination"
                },
                "CloudWatchLogs": {
                    "$ref": "#/$defs/VerifiedAccessLogCloudWatchLogsDestination"
                },
                "KinesisDataFirehose": {
                    "$ref": "#/$defs/VerifiedAccessLogKinesisDataFirehoseDestination"
                },
                "LogVersion": {
                    "$ref": "#/$defs/String"
                },
                "IncludeTrustContext": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VerifiedAccessLogS3Destination": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeliveryStatus": {
                    "$ref": "#/$defs/VerifiedAccessLogDeliveryStatus"
                },
                "BucketName": {
                    "$ref": "#/$defs/String"
                },
                "Prefix": {
                    "$ref": "#/$defs/String"
                },
                "BucketOwner": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VerifiedAccessLogDeliveryStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/VerifiedAccessLogDeliveryStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VerifiedAccessLogDeliveryStatusCode": {
            "enum": [
                "SUCCESS",
                "FAILED"
            ]
        },
        "VerifiedAccessLogCloudWatchLogsDestination": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeliveryStatus": {
                    "$ref": "#/$defs/VerifiedAccessLogDeliveryStatus"
                },
                "LogGroup": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VerifiedAccessLogKinesisDataFirehoseDestination": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeliveryStatus": {
                    "$ref": "#/$defs/VerifiedAccessLogDeliveryStatus"
                },
                "DeliveryStream": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVerifiedAccessInstanceLoggingConfigurationsRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceIds": {
                    "$ref": "#/$defs/VerifiedAccessInstanceIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeVerifiedAccessInstanceLoggingConfigurationsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VerifiedAccessInstanceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessInstanceId"
            }
        },
        "DescribeVerifiedAccessInstanceLoggingConfigurationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeVerifiedAccessInstancesResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstances": {
                    "$ref": "#/$defs/VerifiedAccessInstanceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VerifiedAccessInstanceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessInstance"
            }
        },
        "DescribeVerifiedAccessInstancesRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceIds": {
                    "$ref": "#/$defs/VerifiedAccessInstanceIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeVerifiedAccessInstancesMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeVerifiedAccessInstancesMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeVerifiedAccessTrustProvidersResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProviders": {
                    "$ref": "#/$defs/VerifiedAccessTrustProviderList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VerifiedAccessTrustProviderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessTrustProvider"
            }
        },
        "DescribeVerifiedAccessTrustProvidersRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProviderIds": {
                    "$ref": "#/$defs/VerifiedAccessTrustProviderIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeVerifiedAccessTrustProvidersMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VerifiedAccessTrustProviderIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessTrustProviderId"
            }
        },
        "DescribeVerifiedAccessTrustProvidersMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeVolumeAttributeResult": {
            "type": "object",
            "properties": {
                "AutoEnableIO": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodeList"
                },
                "VolumeId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVolumeAttributeRequest": {
            "type": "object",
            "properties": {
                "Attribute": {
                    "$ref": "#/$defs/VolumeAttributeName"
                },
                "VolumeId": {
                    "$ref": "#/$defs/VolumeId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VolumeAttributeName": {
            "enum": [
                "autoEnableIO",
                "productCodes"
            ]
        },
        "DescribeVolumesResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Volumes": {
                    "$ref": "#/$defs/VolumeList"
                }
            }
        },
        "VolumeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Volume"
            }
        },
        "DescribeVolumesRequest": {
            "type": "object",
            "properties": {
                "VolumeIds": {
                    "$ref": "#/$defs/VolumeIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "DescribeVolumesModificationsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "VolumesModifications": {
                    "$ref": "#/$defs/VolumeModificationList"
                }
            }
        },
        "VolumeModificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeModification"
            }
        },
        "VolumeModification": {
            "type": "object",
            "properties": {
                "VolumeId": {
                    "$ref": "#/$defs/String"
                },
                "ModificationState": {
                    "$ref": "#/$defs/VolumeModificationState"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "TargetSize": {
                    "$ref": "#/$defs/Integer"
                },
                "TargetIops": {
                    "$ref": "#/$defs/Integer"
                },
                "TargetVolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "TargetThroughput": {
                    "$ref": "#/$defs/Integer"
                },
                "TargetMultiAttachEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "OriginalSize": {
                    "$ref": "#/$defs/Integer"
                },
                "OriginalIops": {
                    "$ref": "#/$defs/Integer"
                },
                "OriginalVolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "OriginalThroughput": {
                    "$ref": "#/$defs/Integer"
                },
                "OriginalMultiAttachEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "Progress": {
                    "$ref": "#/$defs/Long"
                },
                "StartTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "EndTime": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "VolumeModificationState": {
            "enum": [
                "modifying",
                "optimizing",
                "completed",
                "failed"
            ]
        },
        "DescribeVolumesModificationsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VolumeIds": {
                    "$ref": "#/$defs/VolumeIdStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "DescribeVolumeStatusResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "VolumeStatuses": {
                    "$ref": "#/$defs/VolumeStatusList"
                }
            }
        },
        "VolumeStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeStatusItem"
            }
        },
        "VolumeStatusItem": {
            "type": "object",
            "properties": {
                "Actions": {
                    "$ref": "#/$defs/VolumeStatusActionsList"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "Events": {
                    "$ref": "#/$defs/VolumeStatusEventsList"
                },
                "VolumeId": {
                    "$ref": "#/$defs/String"
                },
                "VolumeStatus": {
                    "$ref": "#/$defs/VolumeStatusInfo"
                },
                "AttachmentStatuses": {
                    "$ref": "#/$defs/VolumeStatusAttachmentStatusList"
                }
            }
        },
        "VolumeStatusActionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeStatusAction"
            }
        },
        "VolumeStatusAction": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "EventId": {
                    "$ref": "#/$defs/String"
                },
                "EventType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VolumeStatusEventsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeStatusEvent"
            }
        },
        "VolumeStatusEvent": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "EventId": {
                    "$ref": "#/$defs/String"
                },
                "EventType": {
                    "$ref": "#/$defs/String"
                },
                "NotAfter": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "NotBefore": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VolumeStatusInfo": {
            "type": "object",
            "properties": {
                "Details": {
                    "$ref": "#/$defs/VolumeStatusDetailsList"
                },
                "Status": {
                    "$ref": "#/$defs/VolumeStatusInfoStatus"
                }
            }
        },
        "VolumeStatusDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeStatusDetails"
            }
        },
        "VolumeStatusDetails": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/VolumeStatusName"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VolumeStatusName": {
            "enum": [
                "io_enabled",
                "io_performance"
            ]
        },
        "VolumeStatusInfoStatus": {
            "enum": [
                "ok",
                "impaired",
                "insufficient_data"
            ]
        },
        "VolumeStatusAttachmentStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VolumeStatusAttachmentStatus"
            }
        },
        "VolumeStatusAttachmentStatus": {
            "type": "object",
            "properties": {
                "IoPerformance": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVolumeStatusRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "VolumeIds": {
                    "$ref": "#/$defs/VolumeIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeVpcAttributeResult": {
            "type": "object",
            "properties": {
                "EnableDnsHostnames": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "EnableDnsSupport": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "EnableNetworkAddressUsageMetrics": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVpcAttributeRequest": {
            "type": "object",
            "properties": {
                "Attribute": {
                    "$ref": "#/$defs/VpcAttributeName"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VpcAttributeName": {
            "enum": [
                "enableDnsSupport",
                "enableDnsHostnames",
                "enableNetworkAddressUsageMetrics"
            ]
        },
        "DescribeVpcBlockPublicAccessExclusionsResult": {
            "type": "object",
            "properties": {
                "VpcBlockPublicAccessExclusions": {
                    "$ref": "#/$defs/VpcBlockPublicAccessExclusionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcBlockPublicAccessExclusionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcBlockPublicAccessExclusion"
            }
        },
        "DescribeVpcBlockPublicAccessExclusionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "ExclusionIds": {
                    "$ref": "#/$defs/VpcBlockPublicAccessExclusionIdList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeVpcBlockPublicAccessExclusionsMaxResults"
                }
            }
        },
        "VpcBlockPublicAccessExclusionIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcBlockPublicAccessExclusionId"
            }
        },
        "DescribeVpcBlockPublicAccessExclusionsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeVpcBlockPublicAccessOptionsResult": {
            "type": "object",
            "properties": {
                "VpcBlockPublicAccessOptions": {
                    "$ref": "#/$defs/VpcBlockPublicAccessOptions"
                }
            }
        },
        "VpcBlockPublicAccessOptions": {
            "type": "object",
            "properties": {
                "AwsAccountId": {
                    "$ref": "#/$defs/String"
                },
                "AwsRegion": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/VpcBlockPublicAccessState"
                },
                "InternetGatewayBlockMode": {
                    "$ref": "#/$defs/InternetGatewayBlockMode"
                },
                "Reason": {
                    "$ref": "#/$defs/String"
                },
                "LastUpdateTimestamp": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "ManagedBy": {
                    "$ref": "#/$defs/ManagedBy"
                },
                "ExclusionsAllowed": {
                    "$ref": "#/$defs/VpcBlockPublicAccessExclusionsAllowed"
                }
            }
        },
        "VpcBlockPublicAccessState": {
            "enum": [
                "default_state",
                "update_in_progress",
                "update_complete"
            ]
        },
        "InternetGatewayBlockMode": {
            "enum": [
                "off",
                "block_bidirectional",
                "block_ingress"
            ]
        },
        "ManagedBy": {
            "enum": [
                "account",
                "declarative_policy"
            ]
        },
        "VpcBlockPublicAccessExclusionsAllowed": {
            "enum": [
                "allowed",
                "not_allowed"
            ]
        },
        "DescribeVpcBlockPublicAccessOptionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DescribeVpcClassicLinkResult": {
            "type": "object",
            "properties": {
                "Vpcs": {
                    "$ref": "#/$defs/VpcClassicLinkList"
                }
            }
        },
        "VpcClassicLinkList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcClassicLink"
            }
        },
        "VpcClassicLink": {
            "type": "object",
            "properties": {
                "ClassicLinkEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVpcClassicLinkRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcIds": {
                    "$ref": "#/$defs/VpcClassicLinkIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "VpcClassicLinkIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcId"
            }
        },
        "DescribeVpcClassicLinkDnsSupportResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/DescribeVpcClassicLinkDnsSupportNextToken"
                },
                "Vpcs": {
                    "$ref": "#/$defs/ClassicLinkDnsSupportList"
                }
            }
        },
        "DescribeVpcClassicLinkDnsSupportNextToken": {
            "type": "string"
        },
        "ClassicLinkDnsSupportList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ClassicLinkDnsSupport"
            }
        },
        "ClassicLinkDnsSupport": {
            "type": "object",
            "properties": {
                "ClassicLinkDnsSupported": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVpcClassicLinkDnsSupportRequest": {
            "type": "object",
            "properties": {
                "VpcIds": {
                    "$ref": "#/$defs/VpcClassicLinkIdList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeVpcClassicLinkDnsSupportMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/DescribeVpcClassicLinkDnsSupportNextToken"
                }
            }
        },
        "DescribeVpcClassicLinkDnsSupportMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeVpcEndpointAssociationsResult": {
            "type": "object",
            "properties": {
                "VpcEndpointAssociations": {
                    "$ref": "#/$defs/VpcEndpointAssociationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcEndpointAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointAssociation"
            }
        },
        "VpcEndpointAssociation": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "ServiceNetworkArn": {
                    "$ref": "#/$defs/ServiceNetworkArn"
                },
                "ServiceNetworkName": {
                    "$ref": "#/$defs/String"
                },
                "AssociatedResourceAccessibility": {
                    "$ref": "#/$defs/String"
                },
                "FailureReason": {
                    "$ref": "#/$defs/String"
                },
                "FailureCode": {
                    "$ref": "#/$defs/String"
                },
                "DnsEntry": {
                    "$ref": "#/$defs/DnsEntry"
                },
                "PrivateDnsEntry": {
                    "$ref": "#/$defs/DnsEntry"
                },
                "AssociatedResourceArn": {
                    "$ref": "#/$defs/String"
                },
                "ResourceConfigurationGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DescribeVpcEndpointAssociationsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcEndpointIds": {
                    "$ref": "#/$defs/VpcEndpointIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults2"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MaxResults2": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeVpcEndpointConnectionNotificationsResult": {
            "type": "object",
            "properties": {
                "ConnectionNotificationSet": {
                    "$ref": "#/$defs/ConnectionNotificationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ConnectionNotificationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConnectionNotification"
            }
        },
        "DescribeVpcEndpointConnectionNotificationsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ConnectionNotificationId": {
                    "$ref": "#/$defs/ConnectionNotificationId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVpcEndpointConnectionsResult": {
            "type": "object",
            "properties": {
                "VpcEndpointConnections": {
                    "$ref": "#/$defs/VpcEndpointConnectionSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcEndpointConnectionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpointConnection"
            }
        },
        "VpcEndpointConnection": {
            "type": "object",
            "properties": {
                "ServiceId": {
                    "$ref": "#/$defs/String"
                },
                "VpcEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "VpcEndpointOwner": {
                    "$ref": "#/$defs/String"
                },
                "VpcEndpointState": {
                    "$ref": "#/$defs/State"
                },
                "CreationTimestamp": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DnsEntries": {
                    "$ref": "#/$defs/DnsEntrySet"
                },
                "NetworkLoadBalancerArns": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "GatewayLoadBalancerArns": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "VpcEndpointConnectionId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "VpcEndpointRegion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVpcEndpointConnectionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVpcEndpointsResult": {
            "type": "object",
            "properties": {
                "VpcEndpoints": {
                    "$ref": "#/$defs/VpcEndpointSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcEndpointSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcEndpoint"
            }
        },
        "DescribeVpcEndpointsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcEndpointIds": {
                    "$ref": "#/$defs/VpcEndpointIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVpcEndpointServiceConfigurationsResult": {
            "type": "object",
            "properties": {
                "ServiceConfigurations": {
                    "$ref": "#/$defs/ServiceConfigurationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceConfigurationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceConfiguration"
            }
        },
        "DescribeVpcEndpointServiceConfigurationsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceIds": {
                    "$ref": "#/$defs/VpcEndpointServiceIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVpcEndpointServicePermissionsResult": {
            "type": "object",
            "properties": {
                "AllowedPrincipals": {
                    "$ref": "#/$defs/AllowedPrincipalSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AllowedPrincipalSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AllowedPrincipal"
            }
        },
        "AllowedPrincipal": {
            "type": "object",
            "properties": {
                "PrincipalType": {
                    "$ref": "#/$defs/PrincipalType"
                },
                "Principal": {
                    "$ref": "#/$defs/String"
                },
                "ServicePermissionId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "ServiceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PrincipalType": {
            "enum": [
                "All",
                "Service",
                "OrganizationUnit",
                "Account",
                "User",
                "Role"
            ]
        },
        "DescribeVpcEndpointServicePermissionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceId": {
                    "$ref": "#/$defs/VpcEndpointServiceId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVpcEndpointServicesResult": {
            "type": "object",
            "properties": {
                "ServiceNames": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "ServiceDetails": {
                    "$ref": "#/$defs/ServiceDetailSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ServiceDetailSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ServiceDetail"
            }
        },
        "ServiceDetail": {
            "type": "object",
            "properties": {
                "ServiceName": {
                    "$ref": "#/$defs/String"
                },
                "ServiceId": {
                    "$ref": "#/$defs/String"
                },
                "ServiceType": {
                    "$ref": "#/$defs/ServiceTypeDetailSet"
                },
                "ServiceRegion": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZones": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Owner": {
                    "$ref": "#/$defs/String"
                },
                "BaseEndpointDnsNames": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "PrivateDnsNames": {
                    "$ref": "#/$defs/PrivateDnsDetailsSet"
                },
                "VpcEndpointPolicySupported": {
                    "$ref": "#/$defs/Boolean"
                },
                "AcceptanceRequired": {
                    "$ref": "#/$defs/Boolean"
                },
                "ManagesVpcEndpoints": {
                    "$ref": "#/$defs/Boolean"
                },
                "PayerResponsibility": {
                    "$ref": "#/$defs/PayerResponsibility"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "PrivateDnsNameVerificationState": {
                    "$ref": "#/$defs/DnsNameState"
                },
                "SupportedIpAddressTypes": {
                    "$ref": "#/$defs/SupportedIpAddressTypes"
                }
            }
        },
        "PrivateDnsDetailsSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrivateDnsDetails"
            }
        },
        "PrivateDnsDetails": {
            "type": "object",
            "properties": {
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DescribeVpcEndpointServicesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceNames": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "ServiceRegions": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "DescribeVpcPeeringConnectionsResult": {
            "type": "object",
            "properties": {
                "VpcPeeringConnections": {
                    "$ref": "#/$defs/VpcPeeringConnectionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VpcPeeringConnectionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcPeeringConnection"
            }
        },
        "DescribeVpcPeeringConnectionsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeVpcPeeringConnectionsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcPeeringConnectionIds": {
                    "$ref": "#/$defs/VpcPeeringConnectionIdList"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                }
            }
        },
        "DescribeVpcPeeringConnectionsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "VpcPeeringConnectionIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcPeeringConnectionId"
            }
        },
        "DescribeVpcsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "Vpcs": {
                    "$ref": "#/$defs/VpcList"
                }
            }
        },
        "VpcList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Vpc"
            }
        },
        "DescribeVpcsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "VpcIds": {
                    "$ref": "#/$defs/VpcIdStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/DescribeVpcsMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VpcIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpcId"
            }
        },
        "DescribeVpcsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeVpnConnectionsResult": {
            "type": "object",
            "properties": {
                "VpnConnections": {
                    "$ref": "#/$defs/VpnConnectionList"
                }
            }
        },
        "VpnConnectionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpnConnection"
            }
        },
        "DescribeVpnConnectionsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "VpnConnectionIds": {
                    "$ref": "#/$defs/VpnConnectionIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VpnConnectionIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpnConnectionId"
            }
        },
        "DescribeVpnGatewaysResult": {
            "type": "object",
            "properties": {
                "VpnGateways": {
                    "$ref": "#/$defs/VpnGatewayList"
                }
            }
        },
        "VpnGatewayList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpnGateway"
            }
        },
        "DescribeVpnGatewaysRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "VpnGatewayIds": {
                    "$ref": "#/$defs/VpnGatewayIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VpnGatewayIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpnGatewayId"
            }
        },
        "DetachClassicLinkVpcResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DetachClassicLinkVpcRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "DetachInternetGatewayRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InternetGatewayId": {
                    "$ref": "#/$defs/InternetGatewayId"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "DetachNetworkInterfaceRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "AttachmentId": {
                    "$ref": "#/$defs/NetworkInterfaceAttachmentId"
                },
                "Force": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "NetworkInterfaceAttachmentId": {
            "type": "string"
        },
        "DetachVerifiedAccessTrustProviderResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProvider": {
                    "$ref": "#/$defs/VerifiedAccessTrustProvider"
                },
                "VerifiedAccessInstance": {
                    "$ref": "#/$defs/VerifiedAccessInstance"
                }
            }
        },
        "DetachVerifiedAccessTrustProviderRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/VerifiedAccessInstanceId"
                },
                "VerifiedAccessTrustProviderId": {
                    "$ref": "#/$defs/VerifiedAccessTrustProviderId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DetachVolumeRequest": {
            "type": "object",
            "properties": {
                "Device": {
                    "$ref": "#/$defs/String"
                },
                "Force": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceIdForResolver"
                },
                "VolumeId": {
                    "$ref": "#/$defs/VolumeIdWithResolver"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "InstanceIdForResolver": {
            "type": "string"
        },
        "VolumeIdWithResolver": {
            "type": "string"
        },
        "DetachVpnGatewayRequest": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "VpnGatewayId": {
                    "$ref": "#/$defs/VpnGatewayId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableAddressTransferResult": {
            "type": "object",
            "properties": {
                "AddressTransfer": {
                    "$ref": "#/$defs/AddressTransfer"
                }
            }
        },
        "DisableAddressTransferRequest": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/AllocationId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableAllowedImagesSettingsResult": {
            "type": "object",
            "properties": {
                "AllowedImagesSettingsState": {
                    "$ref": "#/$defs/AllowedImagesSettingsDisabledState"
                }
            }
        },
        "AllowedImagesSettingsDisabledState": {
            "enum": [
                "disabled"
            ]
        },
        "DisableAllowedImagesSettingsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableAwsNetworkPerformanceMetricSubscriptionResult": {
            "type": "object",
            "properties": {
                "Output": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableAwsNetworkPerformanceMetricSubscriptionRequest": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "Destination": {
                    "$ref": "#/$defs/String"
                },
                "Metric": {
                    "$ref": "#/$defs/MetricType"
                },
                "Statistic": {
                    "$ref": "#/$defs/StatisticType"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableEbsEncryptionByDefaultResult": {
            "type": "object",
            "properties": {
                "EbsEncryptionByDefault": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableEbsEncryptionByDefaultRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableFastLaunchResult": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/FastLaunchResourceType"
                },
                "SnapshotConfiguration": {
                    "$ref": "#/$defs/FastLaunchSnapshotConfigurationResponse"
                },
                "LaunchTemplate": {
                    "$ref": "#/$defs/FastLaunchLaunchTemplateSpecificationResponse"
                },
                "MaxParallelLaunches": {
                    "$ref": "#/$defs/Integer"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/FastLaunchStateCode"
                },
                "StateTransitionReason": {
                    "$ref": "#/$defs/String"
                },
                "StateTransitionTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "DisableFastLaunchRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "Force": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableFastSnapshotRestoresResult": {
            "type": "object",
            "properties": {
                "Successful": {
                    "$ref": "#/$defs/DisableFastSnapshotRestoreSuccessSet"
                },
                "Unsuccessful": {
                    "$ref": "#/$defs/DisableFastSnapshotRestoreErrorSet"
                }
            }
        },
        "DisableFastSnapshotRestoreSuccessSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DisableFastSnapshotRestoreSuccessItem"
            }
        },
        "DisableFastSnapshotRestoreSuccessItem": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/FastSnapshotRestoreStateCode"
                },
                "StateTransitionReason": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerAlias": {
                    "$ref": "#/$defs/String"
                },
                "EnablingTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "OptimizingTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EnabledTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DisablingTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DisabledTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "DisableFastSnapshotRestoreErrorSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DisableFastSnapshotRestoreErrorItem"
            }
        },
        "DisableFastSnapshotRestoreErrorItem": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "FastSnapshotRestoreStateErrors": {
                    "$ref": "#/$defs/DisableFastSnapshotRestoreStateErrorSet"
                }
            }
        },
        "DisableFastSnapshotRestoreStateErrorSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DisableFastSnapshotRestoreStateErrorItem"
            }
        },
        "DisableFastSnapshotRestoreStateErrorItem": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "Error": {
                    "$ref": "#/$defs/DisableFastSnapshotRestoreStateError"
                }
            }
        },
        "DisableFastSnapshotRestoreStateError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DisableFastSnapshotRestoresRequest": {
            "type": "object",
            "properties": {
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZoneStringList"
                },
                "SourceSnapshotIds": {
                    "$ref": "#/$defs/SnapshotIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AvailabilityZoneStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "DisableImageResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableImageRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableImageBlockPublicAccessResult": {
            "type": "object",
            "properties": {
                "ImageBlockPublicAccessState": {
                    "$ref": "#/$defs/ImageBlockPublicAccessDisabledState"
                }
            }
        },
        "ImageBlockPublicAccessDisabledState": {
            "enum": [
                "unblocked"
            ]
        },
        "DisableImageBlockPublicAccessRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableImageDeprecationResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableImageDeprecationRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableImageDeregistrationProtectionResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DisableImageDeregistrationProtectionRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableIpamOrganizationAdminAccountResult": {
            "type": "object",
            "properties": {
                "Success": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableIpamOrganizationAdminAccountRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "DelegatedAdminAccountId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DisableSerialConsoleAccessResult": {
            "type": "object",
            "properties": {
                "SerialConsoleAccessEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableSerialConsoleAccessRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableSnapshotBlockPublicAccessResult": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/SnapshotBlockPublicAccessState"
                }
            }
        },
        "SnapshotBlockPublicAccessState": {
            "enum": [
                "block_all_sharing",
                "block_new_sharing",
                "unblocked"
            ]
        },
        "DisableSnapshotBlockPublicAccessRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableTransitGatewayRouteTablePropagationResult": {
            "type": "object",
            "properties": {
                "Propagation": {
                    "$ref": "#/$defs/TransitGatewayPropagation"
                }
            }
        },
        "TransitGatewayPropagation": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                },
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayPropagationState"
                },
                "TransitGatewayRouteTableAnnouncementId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementId"
                }
            }
        },
        "TransitGatewayPropagationState": {
            "enum": [
                "enabling",
                "enabled",
                "disabling",
                "disabled"
            ]
        },
        "DisableTransitGatewayRouteTablePropagationRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "TransitGatewayRouteTableAnnouncementId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementId"
                }
            }
        },
        "DisableVgwRoutePropagationRequest": {
            "type": "object",
            "properties": {
                "GatewayId": {
                    "$ref": "#/$defs/VpnGatewayId"
                },
                "RouteTableId": {
                    "$ref": "#/$defs/RouteTableId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableVpcClassicLinkResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableVpcClassicLinkRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "DisableVpcClassicLinkDnsSupportResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisableVpcClassicLinkDnsSupportRequest": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "DisassociateAddressRequest": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/ElasticIpAssociationId"
                },
                "PublicIp": {
                    "$ref": "#/$defs/EipAllocationPublicIp"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ElasticIpAssociationId": {
            "type": "string"
        },
        "DisassociateCapacityReservationBillingOwnerResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisassociateCapacityReservationBillingOwnerRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "UnusedReservationBillingOwnerId": {
                    "$ref": "#/$defs/AccountID"
                }
            }
        },
        "DisassociateClientVpnTargetNetworkResult": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/AssociationStatus"
                }
            }
        },
        "DisassociateClientVpnTargetNetworkRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "AssociationId": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisassociateEnclaveCertificateIamRoleResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisassociateEnclaveCertificateIamRoleRequest": {
            "type": "object",
            "properties": {
                "CertificateArn": {
                    "$ref": "#/$defs/CertificateId"
                },
                "RoleArn": {
                    "$ref": "#/$defs/RoleId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisassociateIamInstanceProfileResult": {
            "type": "object",
            "properties": {
                "IamInstanceProfileAssociation": {
                    "$ref": "#/$defs/IamInstanceProfileAssociation"
                }
            }
        },
        "DisassociateIamInstanceProfileRequest": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/IamInstanceProfileAssociationId"
                }
            }
        },
        "DisassociateInstanceEventWindowResult": {
            "type": "object",
            "properties": {
                "InstanceEventWindow": {
                    "$ref": "#/$defs/InstanceEventWindow"
                }
            }
        },
        "DisassociateInstanceEventWindowRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceEventWindowId": {
                    "$ref": "#/$defs/InstanceEventWindowId"
                },
                "AssociationTarget": {
                    "$ref": "#/$defs/InstanceEventWindowDisassociationRequest"
                }
            }
        },
        "InstanceEventWindowDisassociationRequest": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdList"
                },
                "InstanceTags": {
                    "$ref": "#/$defs/TagList"
                },
                "DedicatedHostIds": {
                    "$ref": "#/$defs/DedicatedHostIdList"
                }
            }
        },
        "DisassociateIpamByoasnResult": {
            "type": "object",
            "properties": {
                "AsnAssociation": {
                    "$ref": "#/$defs/AsnAssociation"
                }
            }
        },
        "DisassociateIpamByoasnRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Asn": {
                    "$ref": "#/$defs/String"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DisassociateIpamResourceDiscoveryResult": {
            "type": "object",
            "properties": {
                "IpamResourceDiscoveryAssociation": {
                    "$ref": "#/$defs/IpamResourceDiscoveryAssociation"
                }
            }
        },
        "DisassociateIpamResourceDiscoveryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamResourceDiscoveryAssociationId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryAssociationId"
                }
            }
        },
        "DisassociateNatGatewayAddressResult": {
            "type": "object",
            "properties": {
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                },
                "NatGatewayAddresses": {
                    "$ref": "#/$defs/NatGatewayAddressList"
                }
            }
        },
        "DisassociateNatGatewayAddressRequest": {
            "type": "object",
            "properties": {
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                },
                "AssociationIds": {
                    "$ref": "#/$defs/EipAssociationIdList"
                },
                "MaxDrainDurationSeconds": {
                    "$ref": "#/$defs/DrainSeconds"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EipAssociationIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticIpAssociationId"
            }
        },
        "DrainSeconds": {
            "type": "integer",
            "format": "int32"
        },
        "DisassociateRouteTableRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "AssociationId": {
                    "$ref": "#/$defs/RouteTableAssociationId"
                }
            }
        },
        "RouteTableAssociationId": {
            "type": "string"
        },
        "DisassociateSecurityGroupVpcResult": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/SecurityGroupVpcAssociationState"
                }
            }
        },
        "DisassociateSecurityGroupVpcRequest": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/DisassociateSecurityGroupVpcSecurityGroupId"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisassociateSecurityGroupVpcSecurityGroupId": {
            "type": "string"
        },
        "DisassociateSubnetCidrBlockResult": {
            "type": "object",
            "properties": {
                "Ipv6CidrBlockAssociation": {
                    "$ref": "#/$defs/SubnetIpv6CidrBlockAssociation"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DisassociateSubnetCidrBlockRequest": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/SubnetCidrAssociationId"
                }
            }
        },
        "DisassociateTransitGatewayMulticastDomainResult": {
            "type": "object",
            "properties": {
                "Associations": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainAssociations"
                }
            }
        },
        "DisassociateTransitGatewayMulticastDomainRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/TransitGatewaySubnetIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisassociateTransitGatewayPolicyTableResult": {
            "type": "object",
            "properties": {
                "Association": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableAssociation"
                }
            }
        },
        "DisassociateTransitGatewayPolicyTableRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTableId": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisassociateTransitGatewayRouteTableResult": {
            "type": "object",
            "properties": {
                "Association": {
                    "$ref": "#/$defs/TransitGatewayAssociation"
                }
            }
        },
        "DisassociateTransitGatewayRouteTableRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisassociateTrunkInterfaceResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DisassociateTrunkInterfaceRequest": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/TrunkInterfaceAssociationId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DisassociateVpcCidrBlockResult": {
            "type": "object",
            "properties": {
                "Ipv6CidrBlockAssociation": {
                    "$ref": "#/$defs/VpcIpv6CidrBlockAssociation"
                },
                "CidrBlockAssociation": {
                    "$ref": "#/$defs/VpcCidrBlockAssociation"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DisassociateVpcCidrBlockRequest": {
            "type": "object",
            "properties": {
                "AssociationId": {
                    "$ref": "#/$defs/VpcCidrAssociationId"
                }
            }
        },
        "VpcCidrAssociationId": {
            "type": "string"
        },
        "EnableAddressTransferResult": {
            "type": "object",
            "properties": {
                "AddressTransfer": {
                    "$ref": "#/$defs/AddressTransfer"
                }
            }
        },
        "EnableAddressTransferRequest": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/AllocationId"
                },
                "TransferAccountId": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableAllowedImagesSettingsResult": {
            "type": "object",
            "properties": {
                "AllowedImagesSettingsState": {
                    "$ref": "#/$defs/AllowedImagesSettingsEnabledState"
                }
            }
        },
        "AllowedImagesSettingsEnabledState": {
            "enum": [
                "enabled",
                "audit_mode"
            ]
        },
        "EnableAllowedImagesSettingsRequest": {
            "type": "object",
            "properties": {
                "AllowedImagesSettingsState": {
                    "$ref": "#/$defs/AllowedImagesSettingsEnabledState"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableAwsNetworkPerformanceMetricSubscriptionResult": {
            "type": "object",
            "properties": {
                "Output": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableAwsNetworkPerformanceMetricSubscriptionRequest": {
            "type": "object",
            "properties": {
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "Destination": {
                    "$ref": "#/$defs/String"
                },
                "Metric": {
                    "$ref": "#/$defs/MetricType"
                },
                "Statistic": {
                    "$ref": "#/$defs/StatisticType"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableEbsEncryptionByDefaultResult": {
            "type": "object",
            "properties": {
                "EbsEncryptionByDefault": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableEbsEncryptionByDefaultRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableFastLaunchResult": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/FastLaunchResourceType"
                },
                "SnapshotConfiguration": {
                    "$ref": "#/$defs/FastLaunchSnapshotConfigurationResponse"
                },
                "LaunchTemplate": {
                    "$ref": "#/$defs/FastLaunchLaunchTemplateSpecificationResponse"
                },
                "MaxParallelLaunches": {
                    "$ref": "#/$defs/Integer"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/FastLaunchStateCode"
                },
                "StateTransitionReason": {
                    "$ref": "#/$defs/String"
                },
                "StateTransitionTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "EnableFastLaunchRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "ResourceType": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotConfiguration": {
                    "$ref": "#/$defs/FastLaunchSnapshotConfigurationRequest"
                },
                "LaunchTemplate": {
                    "$ref": "#/$defs/FastLaunchLaunchTemplateSpecificationRequest"
                },
                "MaxParallelLaunches": {
                    "$ref": "#/$defs/Integer"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "FastLaunchSnapshotConfigurationRequest": {
            "type": "object",
            "properties": {
                "TargetResourceCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "FastLaunchLaunchTemplateSpecificationRequest": {
            "type": "object",
            "properties": {
                "LaunchTemplateId": {
                    "$ref": "#/$defs/LaunchTemplateId"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/String"
                },
                "Version": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EnableFastSnapshotRestoresResult": {
            "type": "object",
            "properties": {
                "Successful": {
                    "$ref": "#/$defs/EnableFastSnapshotRestoreSuccessSet"
                },
                "Unsuccessful": {
                    "$ref": "#/$defs/EnableFastSnapshotRestoreErrorSet"
                }
            }
        },
        "EnableFastSnapshotRestoreSuccessSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnableFastSnapshotRestoreSuccessItem"
            }
        },
        "EnableFastSnapshotRestoreSuccessItem": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/FastSnapshotRestoreStateCode"
                },
                "StateTransitionReason": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "OwnerAlias": {
                    "$ref": "#/$defs/String"
                },
                "EnablingTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "OptimizingTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EnabledTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DisablingTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DisabledTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "EnableFastSnapshotRestoreErrorSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnableFastSnapshotRestoreErrorItem"
            }
        },
        "EnableFastSnapshotRestoreErrorItem": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "FastSnapshotRestoreStateErrors": {
                    "$ref": "#/$defs/EnableFastSnapshotRestoreStateErrorSet"
                }
            }
        },
        "EnableFastSnapshotRestoreStateErrorSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EnableFastSnapshotRestoreStateErrorItem"
            }
        },
        "EnableFastSnapshotRestoreStateErrorItem": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "Error": {
                    "$ref": "#/$defs/EnableFastSnapshotRestoreStateError"
                }
            }
        },
        "EnableFastSnapshotRestoreStateError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/String"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EnableFastSnapshotRestoresRequest": {
            "type": "object",
            "properties": {
                "AvailabilityZones": {
                    "$ref": "#/$defs/AvailabilityZoneStringList"
                },
                "SourceSnapshotIds": {
                    "$ref": "#/$defs/SnapshotIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableImageResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableImageRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableImageBlockPublicAccessResult": {
            "type": "object",
            "properties": {
                "ImageBlockPublicAccessState": {
                    "$ref": "#/$defs/ImageBlockPublicAccessEnabledState"
                }
            }
        },
        "ImageBlockPublicAccessEnabledState": {
            "enum": [
                "block_new_sharing"
            ]
        },
        "EnableImageBlockPublicAccessRequest": {
            "type": "object",
            "properties": {
                "ImageBlockPublicAccessState": {
                    "$ref": "#/$defs/ImageBlockPublicAccessEnabledState"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableImageDeprecationResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableImageDeprecationRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DeprecateAt": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableImageDeregistrationProtectionResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EnableImageDeregistrationProtectionRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "WithCooldown": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableIpamOrganizationAdminAccountResult": {
            "type": "object",
            "properties": {
                "Success": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableIpamOrganizationAdminAccountRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "DelegatedAdminAccountId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EnableReachabilityAnalyzerOrganizationSharingResult": {
            "type": "object",
            "properties": {
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableReachabilityAnalyzerOrganizationSharingRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableSerialConsoleAccessResult": {
            "type": "object",
            "properties": {
                "SerialConsoleAccessEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableSerialConsoleAccessRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableSnapshotBlockPublicAccessResult": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/SnapshotBlockPublicAccessState"
                }
            }
        },
        "EnableSnapshotBlockPublicAccessRequest": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/SnapshotBlockPublicAccessState"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableTransitGatewayRouteTablePropagationResult": {
            "type": "object",
            "properties": {
                "Propagation": {
                    "$ref": "#/$defs/TransitGatewayPropagation"
                }
            }
        },
        "EnableTransitGatewayRouteTablePropagationRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "TransitGatewayRouteTableAnnouncementId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementId"
                }
            }
        },
        "EnableVgwRoutePropagationRequest": {
            "type": "object",
            "properties": {
                "GatewayId": {
                    "$ref": "#/$defs/VpnGatewayId"
                },
                "RouteTableId": {
                    "$ref": "#/$defs/RouteTableId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableVolumeIORequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VolumeId": {
                    "$ref": "#/$defs/VolumeId"
                }
            }
        },
        "EnableVpcClassicLinkResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableVpcClassicLinkRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "EnableVpcClassicLinkDnsSupportResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "EnableVpcClassicLinkDnsSupportRequest": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                }
            }
        },
        "ExportClientVpnClientCertificateRevocationListResult": {
            "type": "object",
            "properties": {
                "CertificateRevocationList": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/ClientCertificateRevocationListStatus"
                }
            }
        },
        "ClientCertificateRevocationListStatus": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/ClientCertificateRevocationListStatusCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ClientCertificateRevocationListStatusCode": {
            "enum": [
                "pending",
                "active"
            ]
        },
        "ExportClientVpnClientCertificateRevocationListRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ExportClientVpnClientConfigurationResult": {
            "type": "object",
            "properties": {
                "ClientConfiguration": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ExportClientVpnClientConfigurationRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ExportImageResult": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DiskImageFormat": {
                    "$ref": "#/$defs/DiskImageFormat"
                },
                "ExportImageTaskId": {
                    "$ref": "#/$defs/String"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "RoleName": {
                    "$ref": "#/$defs/String"
                },
                "Progress": {
                    "$ref": "#/$defs/String"
                },
                "S3ExportLocation": {
                    "$ref": "#/$defs/ExportTaskS3Location"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ExportImageRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DiskImageFormat": {
                    "$ref": "#/$defs/DiskImageFormat"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "S3ExportLocation": {
                    "$ref": "#/$defs/ExportTaskS3LocationRequest"
                },
                "RoleName": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "ExportTaskS3LocationRequest": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ExportTransitGatewayRoutesResult": {
            "type": "object",
            "properties": {
                "S3Location": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ExportTransitGatewayRoutesRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ExportVerifiedAccessInstanceClientConfigurationResult": {
            "type": "object",
            "properties": {
                "Version": {
                    "$ref": "#/$defs/String"
                },
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Region": {
                    "$ref": "#/$defs/String"
                },
                "DeviceTrustProviders": {
                    "$ref": "#/$defs/DeviceTrustProviderTypeList"
                },
                "UserTrustProvider": {
                    "$ref": "#/$defs/VerifiedAccessInstanceUserTrustProviderClientConfiguration"
                },
                "OpenVpnConfigurations": {
                    "$ref": "#/$defs/VerifiedAccessInstanceOpenVpnClientConfigurationList"
                }
            }
        },
        "DeviceTrustProviderTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceTrustProviderType"
            }
        },
        "VerifiedAccessInstanceUserTrustProviderClientConfiguration": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/UserTrustProviderType"
                },
                "Scopes": {
                    "$ref": "#/$defs/String"
                },
                "Issuer": {
                    "$ref": "#/$defs/String"
                },
                "AuthorizationEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "PublicSigningKeyEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "TokenEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "UserInfoEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "ClientId": {
                    "$ref": "#/$defs/String"
                },
                "ClientSecret": {
                    "$ref": "#/$defs/ClientSecretType"
                },
                "PkceEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VerifiedAccessInstanceOpenVpnClientConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessInstanceOpenVpnClientConfiguration"
            }
        },
        "VerifiedAccessInstanceOpenVpnClientConfiguration": {
            "type": "object",
            "properties": {
                "Config": {
                    "$ref": "#/$defs/String"
                },
                "Routes": {
                    "$ref": "#/$defs/VerifiedAccessInstanceOpenVpnClientConfigurationRouteList"
                }
            }
        },
        "VerifiedAccessInstanceOpenVpnClientConfigurationRouteList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessInstanceOpenVpnClientConfigurationRoute"
            }
        },
        "VerifiedAccessInstanceOpenVpnClientConfigurationRoute": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ExportVerifiedAccessInstanceClientConfigurationRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/VerifiedAccessInstanceId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetAllowedImagesSettingsResult": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/String"
                },
                "ImageCriteria": {
                    "$ref": "#/$defs/ImageCriterionList"
                },
                "ManagedBy": {
                    "$ref": "#/$defs/ManagedBy"
                }
            }
        },
        "ImageCriterionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImageCriterion"
            }
        },
        "ImageCriterion": {
            "type": "object",
            "properties": {
                "ImageProviders": {
                    "$ref": "#/$defs/ImageProviderList"
                }
            }
        },
        "ImageProviderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImageProvider"
            }
        },
        "ImageProvider": {
            "type": "string"
        },
        "GetAllowedImagesSettingsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetAssociatedEnclaveCertificateIamRolesResult": {
            "type": "object",
            "properties": {
                "AssociatedRoles": {
                    "$ref": "#/$defs/AssociatedRolesList"
                }
            }
        },
        "AssociatedRolesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AssociatedRole"
            }
        },
        "AssociatedRole": {
            "type": "object",
            "properties": {
                "AssociatedRoleArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "CertificateS3BucketName": {
                    "$ref": "#/$defs/String"
                },
                "CertificateS3ObjectKey": {
                    "$ref": "#/$defs/String"
                },
                "EncryptionKmsKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetAssociatedEnclaveCertificateIamRolesRequest": {
            "type": "object",
            "properties": {
                "CertificateArn": {
                    "$ref": "#/$defs/CertificateId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetAssociatedIpv6PoolCidrsResult": {
            "type": "object",
            "properties": {
                "Ipv6CidrAssociations": {
                    "$ref": "#/$defs/Ipv6CidrAssociationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Ipv6CidrAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ipv6CidrAssociation"
            }
        },
        "Ipv6CidrAssociation": {
            "type": "object",
            "properties": {
                "Ipv6Cidr": {
                    "$ref": "#/$defs/String"
                },
                "AssociatedResource": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetAssociatedIpv6PoolCidrsRequest": {
            "type": "object",
            "properties": {
                "PoolId": {
                    "$ref": "#/$defs/Ipv6PoolEc2Id"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Ipv6PoolMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetAwsNetworkPerformanceDataResult": {
            "type": "object",
            "properties": {
                "DataResponses": {
                    "$ref": "#/$defs/DataResponses"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DataResponses": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataResponse"
            }
        },
        "DataResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "Destination": {
                    "$ref": "#/$defs/String"
                },
                "Metric": {
                    "$ref": "#/$defs/MetricType"
                },
                "Statistic": {
                    "$ref": "#/$defs/StatisticType"
                },
                "Period": {
                    "$ref": "#/$defs/PeriodType"
                },
                "MetricPoints": {
                    "$ref": "#/$defs/MetricPoints"
                }
            }
        },
        "MetricPoints": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricPoint"
            }
        },
        "MetricPoint": {
            "type": "object",
            "properties": {
                "StartDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Value": {
                    "$ref": "#/$defs/Float"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetAwsNetworkPerformanceDataRequest": {
            "type": "object",
            "properties": {
                "DataQueries": {
                    "$ref": "#/$defs/DataQueries"
                },
                "StartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EndTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DataQueries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataQuery"
            }
        },
        "DataQuery": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/String"
                },
                "Source": {
                    "$ref": "#/$defs/String"
                },
                "Destination": {
                    "$ref": "#/$defs/String"
                },
                "Metric": {
                    "$ref": "#/$defs/MetricType"
                },
                "Statistic": {
                    "$ref": "#/$defs/StatisticType"
                },
                "Period": {
                    "$ref": "#/$defs/PeriodType"
                }
            }
        },
        "GetCapacityReservationUsageResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "CapacityReservationId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "TotalInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "AvailableInstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "State": {
                    "$ref": "#/$defs/CapacityReservationState"
                },
                "InstanceUsages": {
                    "$ref": "#/$defs/InstanceUsageSet"
                }
            }
        },
        "InstanceUsageSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceUsage"
            }
        },
        "InstanceUsage": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "UsedInstanceCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GetCapacityReservationUsageRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/GetCapacityReservationUsageRequestMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetCapacityReservationUsageRequestMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetCoipPoolUsageResult": {
            "type": "object",
            "properties": {
                "CoipPoolId": {
                    "$ref": "#/$defs/String"
                },
                "CoipAddressUsages": {
                    "$ref": "#/$defs/CoipAddressUsageSet"
                },
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CoipAddressUsageSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CoipAddressUsage"
            }
        },
        "CoipAddressUsage": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/String"
                },
                "AwsAccountId": {
                    "$ref": "#/$defs/String"
                },
                "AwsService": {
                    "$ref": "#/$defs/String"
                },
                "CoIp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetCoipPoolUsageRequest": {
            "type": "object",
            "properties": {
                "PoolId": {
                    "$ref": "#/$defs/Ipv4PoolCoipId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/CoipPoolMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetConsoleOutputResult": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Timestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "Output": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetConsoleOutputRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "Latest": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetConsoleScreenshotResult": {
            "type": "object",
            "properties": {
                "ImageData": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetConsoleScreenshotRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "WakeUp": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetDeclarativePoliciesReportSummaryResult": {
            "type": "object",
            "properties": {
                "ReportId": {
                    "$ref": "#/$defs/String"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/String"
                },
                "TargetId": {
                    "$ref": "#/$defs/String"
                },
                "StartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EndTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "NumberOfAccounts": {
                    "$ref": "#/$defs/Integer"
                },
                "NumberOfFailedAccounts": {
                    "$ref": "#/$defs/Integer"
                },
                "AttributeSummaries": {
                    "$ref": "#/$defs/AttributeSummaryList"
                }
            }
        },
        "AttributeSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AttributeSummary"
            }
        },
        "AttributeSummary": {
            "type": "object",
            "properties": {
                "AttributeName": {
                    "$ref": "#/$defs/String"
                },
                "MostFrequentValue": {
                    "$ref": "#/$defs/String"
                },
                "NumberOfMatchedAccounts": {
                    "$ref": "#/$defs/Integer"
                },
                "NumberOfUnmatchedAccounts": {
                    "$ref": "#/$defs/Integer"
                },
                "RegionalSummaries": {
                    "$ref": "#/$defs/RegionalSummaryList"
                }
            }
        },
        "RegionalSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RegionalSummary"
            }
        },
        "RegionalSummary": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/String"
                },
                "NumberOfMatchedAccounts": {
                    "$ref": "#/$defs/Integer"
                },
                "NumberOfUnmatchedAccounts": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GetDeclarativePoliciesReportSummaryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ReportId": {
                    "$ref": "#/$defs/DeclarativePoliciesReportId"
                }
            }
        },
        "GetDefaultCreditSpecificationResult": {
            "type": "object",
            "properties": {
                "InstanceFamilyCreditSpecification": {
                    "$ref": "#/$defs/InstanceFamilyCreditSpecification"
                }
            }
        },
        "InstanceFamilyCreditSpecification": {
            "type": "object",
            "properties": {
                "InstanceFamily": {
                    "$ref": "#/$defs/UnlimitedSupportedInstanceFamily"
                },
                "CpuCredits": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UnlimitedSupportedInstanceFamily": {
            "enum": [
                "t2",
                "t3",
                "t3a",
                "t4g"
            ]
        },
        "GetDefaultCreditSpecificationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceFamily": {
                    "$ref": "#/$defs/UnlimitedSupportedInstanceFamily"
                }
            }
        },
        "GetEbsDefaultKmsKeyIdResult": {
            "type": "object",
            "properties": {
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetEbsDefaultKmsKeyIdRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetEbsEncryptionByDefaultResult": {
            "type": "object",
            "properties": {
                "EbsEncryptionByDefault": {
                    "$ref": "#/$defs/Boolean"
                },
                "SseType": {
                    "$ref": "#/$defs/SSEType"
                }
            }
        },
        "GetEbsEncryptionByDefaultRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetFlowLogsIntegrationTemplateResult": {
            "type": "object",
            "properties": {
                "Result": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetFlowLogsIntegrationTemplateRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "FlowLogId": {
                    "$ref": "#/$defs/VpcFlowLogId"
                },
                "ConfigDeliveryS3DestinationArn": {
                    "$ref": "#/$defs/String"
                },
                "IntegrateServices": {
                    "$ref": "#/$defs/IntegrateServices"
                }
            }
        },
        "IntegrateServices": {
            "type": "object",
            "properties": {
                "AthenaIntegrations": {
                    "$ref": "#/$defs/AthenaIntegrationsSet"
                }
            }
        },
        "AthenaIntegrationsSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AthenaIntegration"
            }
        },
        "AthenaIntegration": {
            "type": "object",
            "properties": {
                "IntegrationResultS3DestinationArn": {
                    "$ref": "#/$defs/String"
                },
                "PartitionLoadFrequency": {
                    "$ref": "#/$defs/PartitionLoadFrequency"
                },
                "PartitionStartDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "PartitionEndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "PartitionLoadFrequency": {
            "enum": [
                "NONE",
                "DAILY",
                "WEEKLY",
                "MONTHLY"
            ]
        },
        "GetGroupsForCapacityReservationResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "CapacityReservationGroups": {
                    "$ref": "#/$defs/CapacityReservationGroupSet"
                }
            }
        },
        "CapacityReservationGroupSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CapacityReservationGroup"
            }
        },
        "CapacityReservationGroup": {
            "type": "object",
            "properties": {
                "GroupArn": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetGroupsForCapacityReservationRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/GetGroupsForCapacityReservationRequestMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetGroupsForCapacityReservationRequestMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetHostReservationPurchasePreviewResult": {
            "type": "object",
            "properties": {
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                },
                "Purchase": {
                    "$ref": "#/$defs/PurchaseSet"
                },
                "TotalHourlyPrice": {
                    "$ref": "#/$defs/String"
                },
                "TotalUpfrontPrice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PurchaseSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Purchase"
            }
        },
        "Purchase": {
            "type": "object",
            "properties": {
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                },
                "Duration": {
                    "$ref": "#/$defs/Integer"
                },
                "HostIdSet": {
                    "$ref": "#/$defs/ResponseHostIdSet"
                },
                "HostReservationId": {
                    "$ref": "#/$defs/HostReservationId"
                },
                "HourlyPrice": {
                    "$ref": "#/$defs/String"
                },
                "InstanceFamily": {
                    "$ref": "#/$defs/String"
                },
                "PaymentOption": {
                    "$ref": "#/$defs/PaymentOption"
                },
                "UpfrontPrice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetHostReservationPurchasePreviewRequest": {
            "type": "object",
            "properties": {
                "HostIdSet": {
                    "$ref": "#/$defs/RequestHostIdSet"
                },
                "OfferingId": {
                    "$ref": "#/$defs/OfferingId"
                }
            }
        },
        "RequestHostIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DedicatedHostId"
            }
        },
        "GetImageBlockPublicAccessStateResult": {
            "type": "object",
            "properties": {
                "ImageBlockPublicAccessState": {
                    "$ref": "#/$defs/String"
                },
                "ManagedBy": {
                    "$ref": "#/$defs/ManagedBy"
                }
            }
        },
        "GetImageBlockPublicAccessStateRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetInstanceMetadataDefaultsResult": {
            "type": "object",
            "properties": {
                "AccountLevel": {
                    "$ref": "#/$defs/InstanceMetadataDefaultsResponse"
                }
            }
        },
        "InstanceMetadataDefaultsResponse": {
            "type": "object",
            "properties": {
                "HttpTokens": {
                    "$ref": "#/$defs/HttpTokensState"
                },
                "HttpPutResponseHopLimit": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "HttpEndpoint": {
                    "$ref": "#/$defs/InstanceMetadataEndpointState"
                },
                "InstanceMetadataTags": {
                    "$ref": "#/$defs/InstanceMetadataTagsState"
                },
                "ManagedBy": {
                    "$ref": "#/$defs/ManagedBy"
                },
                "ManagedExceptionMessage": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "BoxedInteger": {
            "type": "integer",
            "format": "int32"
        },
        "GetInstanceMetadataDefaultsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetInstanceTpmEkPubResult": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "KeyType": {
                    "$ref": "#/$defs/EkPubKeyType"
                },
                "KeyFormat": {
                    "$ref": "#/$defs/EkPubKeyFormat"
                },
                "KeyValue": {
                    "$ref": "#/$defs/EkPubKeyValue"
                }
            }
        },
        "EkPubKeyType": {
            "enum": [
                "RSA_2048",
                "ECC_SEC_P384"
            ]
        },
        "EkPubKeyFormat": {
            "enum": [
                "der",
                "tpmt"
            ]
        },
        "EkPubKeyValue": {
            "type": "string"
        },
        "GetInstanceTpmEkPubRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "KeyType": {
                    "$ref": "#/$defs/EkPubKeyType"
                },
                "KeyFormat": {
                    "$ref": "#/$defs/EkPubKeyFormat"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetInstanceTypesFromInstanceRequirementsResult": {
            "type": "object",
            "properties": {
                "InstanceTypes": {
                    "$ref": "#/$defs/InstanceTypeInfoFromInstanceRequirementsSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceTypeInfoFromInstanceRequirementsSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceTypeInfoFromInstanceRequirements"
            }
        },
        "InstanceTypeInfoFromInstanceRequirements": {
            "type": "object",
            "properties": {
                "InstanceType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetInstanceTypesFromInstanceRequirementsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ArchitectureTypes": {
                    "$ref": "#/$defs/ArchitectureTypeSet"
                },
                "VirtualizationTypes": {
                    "$ref": "#/$defs/VirtualizationTypeSet"
                },
                "InstanceRequirements": {
                    "$ref": "#/$defs/InstanceRequirementsRequest"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ArchitectureTypeSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ArchitectureType"
            }
        },
        "VirtualizationTypeSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VirtualizationType"
            }
        },
        "GetInstanceUefiDataResult": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "UefiData": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetInstanceUefiDataRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetIpamAddressHistoryResult": {
            "type": "object",
            "properties": {
                "HistoryRecords": {
                    "$ref": "#/$defs/IpamAddressHistoryRecordSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IpamAddressHistoryRecordSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamAddressHistoryRecord"
            }
        },
        "IpamAddressHistoryRecord": {
            "type": "object",
            "properties": {
                "ResourceOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/IpamAddressHistoryResourceType"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceCidr": {
                    "$ref": "#/$defs/String"
                },
                "ResourceName": {
                    "$ref": "#/$defs/String"
                },
                "ResourceComplianceStatus": {
                    "$ref": "#/$defs/IpamComplianceStatus"
                },
                "ResourceOverlapStatus": {
                    "$ref": "#/$defs/IpamOverlapStatus"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "SampledStartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "SampledEndTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "IpamAddressHistoryResourceType": {
            "enum": [
                "eip",
                "vpc",
                "subnet",
                "network_interface",
                "instance"
            ]
        },
        "IpamComplianceStatus": {
            "enum": [
                "compliant",
                "noncompliant",
                "unmanaged",
                "ignored"
            ]
        },
        "IpamOverlapStatus": {
            "enum": [
                "overlapping",
                "nonoverlapping",
                "ignored"
            ]
        },
        "GetIpamAddressHistoryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "IpamScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "StartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "EndTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamAddressHistoryMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IpamAddressHistoryMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetIpamDiscoveredAccountsResult": {
            "type": "object",
            "properties": {
                "IpamDiscoveredAccounts": {
                    "$ref": "#/$defs/IpamDiscoveredAccountSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IpamDiscoveredAccountSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamDiscoveredAccount"
            }
        },
        "IpamDiscoveredAccount": {
            "type": "object",
            "properties": {
                "AccountId": {
                    "$ref": "#/$defs/String"
                },
                "DiscoveryRegion": {
                    "$ref": "#/$defs/String"
                },
                "FailureReason": {
                    "$ref": "#/$defs/IpamDiscoveryFailureReason"
                },
                "LastAttemptedDiscoveryTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "LastSuccessfulDiscoveryTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "OrganizationalUnitId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamDiscoveryFailureReason": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/IpamDiscoveryFailureCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamDiscoveryFailureCode": {
            "enum": [
                "assume_role_failure",
                "throttling_failure",
                "unauthorized_failure"
            ]
        },
        "GetIpamDiscoveredAccountsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                },
                "DiscoveryRegion": {
                    "$ref": "#/$defs/String"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                }
            }
        },
        "GetIpamDiscoveredPublicAddressesResult": {
            "type": "object",
            "properties": {
                "IpamDiscoveredPublicAddresses": {
                    "$ref": "#/$defs/IpamDiscoveredPublicAddressSet"
                },
                "OldestSampleTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IpamDiscoveredPublicAddressSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamDiscoveredPublicAddress"
            }
        },
        "IpamDiscoveredPublicAddress": {
            "type": "object",
            "properties": {
                "IpamResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                },
                "AddressRegion": {
                    "$ref": "#/$defs/String"
                },
                "Address": {
                    "$ref": "#/$defs/String"
                },
                "AddressOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "AddressAllocationId": {
                    "$ref": "#/$defs/String"
                },
                "AssociationStatus": {
                    "$ref": "#/$defs/IpamPublicAddressAssociationStatus"
                },
                "AddressType": {
                    "$ref": "#/$defs/IpamPublicAddressType"
                },
                "Service": {
                    "$ref": "#/$defs/IpamPublicAddressAwsService"
                },
                "ServiceResource": {
                    "$ref": "#/$defs/String"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "PublicIpv4PoolId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceDescription": {
                    "$ref": "#/$defs/String"
                },
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/IpamPublicAddressTags"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/IpamPublicAddressSecurityGroupList"
                },
                "SampleTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "IpamPublicAddressAssociationStatus": {
            "enum": [
                "ASSOCIATED",
                "DISASSOCIATED"
            ]
        },
        "IpamPublicAddressType": {
            "enum": [
                "SERVICE_MANAGED_IP",
                "SERVICE_MANAGED_BYOIP",
                "AMAZON_OWNED_EIP",
                "AMAZON_OWNED_CONTIG",
                "BYOIP",
                "EC2_PUBLIC_IP"
            ]
        },
        "IpamPublicAddressAwsService": {
            "enum": [
                "NAT_GATEWAY",
                "DMS",
                "REDSHIFT",
                "ECS",
                "RDS",
                "S2S_VPN",
                "EC2_LB",
                "AGA",
                "OTHER"
            ]
        },
        "IpamPublicAddressTags": {
            "type": "object",
            "properties": {
                "EipTags": {
                    "$ref": "#/$defs/IpamPublicAddressTagList"
                }
            }
        },
        "IpamPublicAddressTagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamPublicAddressTag"
            }
        },
        "IpamPublicAddressTag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/String"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamPublicAddressSecurityGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamPublicAddressSecurityGroup"
            }
        },
        "IpamPublicAddressSecurityGroup": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "GroupId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetIpamDiscoveredPublicAddressesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                },
                "AddressRegion": {
                    "$ref": "#/$defs/String"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                }
            }
        },
        "GetIpamDiscoveredResourceCidrsResult": {
            "type": "object",
            "properties": {
                "IpamDiscoveredResourceCidrs": {
                    "$ref": "#/$defs/IpamDiscoveredResourceCidrSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IpamDiscoveredResourceCidrSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamDiscoveredResourceCidr"
            }
        },
        "IpamDiscoveredResourceCidr": {
            "type": "object",
            "properties": {
                "IpamResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                },
                "ResourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceCidr": {
                    "$ref": "#/$defs/String"
                },
                "IpSource": {
                    "$ref": "#/$defs/IpamResourceCidrIpSource"
                },
                "ResourceType": {
                    "$ref": "#/$defs/IpamResourceType"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/IpamResourceTagList"
                },
                "IpUsage": {
                    "$ref": "#/$defs/BoxedDouble"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceAttachmentStatus": {
                    "$ref": "#/$defs/IpamNetworkInterfaceAttachmentStatus"
                },
                "SampleTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamResourceCidrIpSource": {
            "enum": [
                "amazon",
                "byoip",
                "none"
            ]
        },
        "IpamResourceType": {
            "enum": [
                "vpc",
                "subnet",
                "eip",
                "public_ipv4_pool",
                "ipv6_pool",
                "eni"
            ]
        },
        "BoxedDouble": {
            "type": "number",
            "format": "double"
        },
        "IpamNetworkInterfaceAttachmentStatus": {
            "enum": [
                "available",
                "in_use"
            ]
        },
        "GetIpamDiscoveredResourceCidrsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                },
                "ResourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                }
            }
        },
        "GetIpamPoolAllocationsResult": {
            "type": "object",
            "properties": {
                "IpamPoolAllocations": {
                    "$ref": "#/$defs/IpamPoolAllocationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IpamPoolAllocationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamPoolAllocation"
            }
        },
        "GetIpamPoolAllocationsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "IpamPoolAllocationId": {
                    "$ref": "#/$defs/IpamPoolAllocationId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/GetIpamPoolAllocationsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GetIpamPoolAllocationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetIpamPoolCidrsResult": {
            "type": "object",
            "properties": {
                "IpamPoolCidrs": {
                    "$ref": "#/$defs/IpamPoolCidrSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IpamPoolCidrSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamPoolCidr"
            }
        },
        "GetIpamPoolCidrsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GetIpamResourceCidrsResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "IpamResourceCidrs": {
                    "$ref": "#/$defs/IpamResourceCidrSet"
                }
            }
        },
        "IpamResourceCidrSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpamResourceCidr"
            }
        },
        "IpamResourceCidr": {
            "type": "object",
            "properties": {
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "IpamScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "ResourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "ResourceOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceName": {
                    "$ref": "#/$defs/String"
                },
                "ResourceCidr": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/IpamResourceType"
                },
                "ResourceTags": {
                    "$ref": "#/$defs/IpamResourceTagList"
                },
                "IpUsage": {
                    "$ref": "#/$defs/BoxedDouble"
                },
                "ComplianceStatus": {
                    "$ref": "#/$defs/IpamComplianceStatus"
                },
                "ManagementState": {
                    "$ref": "#/$defs/IpamManagementState"
                },
                "OverlapStatus": {
                    "$ref": "#/$defs/IpamOverlapStatus"
                },
                "VpcId": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "IpamManagementState": {
            "enum": [
                "managed",
                "unmanaged",
                "ignored"
            ]
        },
        "GetIpamResourceCidrsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/IpamMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "IpamScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/IpamResourceType"
                },
                "ResourceTag": {
                    "$ref": "#/$defs/RequestIpamResourceTag"
                },
                "ResourceOwner": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetLaunchTemplateDataResult": {
            "type": "object",
            "properties": {
                "LaunchTemplateData": {
                    "$ref": "#/$defs/ResponseLaunchTemplateData"
                }
            }
        },
        "GetLaunchTemplateDataRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                }
            }
        },
        "GetManagedPrefixListAssociationsResult": {
            "type": "object",
            "properties": {
                "PrefixListAssociations": {
                    "$ref": "#/$defs/PrefixListAssociationSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PrefixListAssociationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrefixListAssociation"
            }
        },
        "PrefixListAssociation": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceOwner": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetManagedPrefixListAssociationsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/GetManagedPrefixListAssociationsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GetManagedPrefixListAssociationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetManagedPrefixListEntriesResult": {
            "type": "object",
            "properties": {
                "Entries": {
                    "$ref": "#/$defs/PrefixListEntrySet"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PrefixListEntrySet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrefixListEntry"
            }
        },
        "PrefixListEntry": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetManagedPrefixListEntriesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "TargetVersion": {
                    "$ref": "#/$defs/Long"
                },
                "MaxResults": {
                    "$ref": "#/$defs/PrefixListMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GetNetworkInsightsAccessScopeAnalysisFindingsResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeAnalysisId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysisId"
                },
                "AnalysisStatus": {
                    "$ref": "#/$defs/AnalysisStatus"
                },
                "AnalysisFindings": {
                    "$ref": "#/$defs/AccessScopeAnalysisFindingList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AccessScopeAnalysisFindingList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AccessScopeAnalysisFinding"
            }
        },
        "AccessScopeAnalysisFinding": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeAnalysisId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysisId"
                },
                "NetworkInsightsAccessScopeId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeId"
                },
                "FindingId": {
                    "$ref": "#/$defs/String"
                },
                "FindingComponents": {
                    "$ref": "#/$defs/PathComponentList"
                }
            }
        },
        "GetNetworkInsightsAccessScopeAnalysisFindingsRequest": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeAnalysisId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysisId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/GetNetworkInsightsAccessScopeAnalysisFindingsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetNetworkInsightsAccessScopeAnalysisFindingsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetNetworkInsightsAccessScopeContentResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeContent": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeContent"
                }
            }
        },
        "GetNetworkInsightsAccessScopeContentRequest": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetPasswordDataResult": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Timestamp": {
                    "$ref": "#/$defs/DateTime"
                },
                "PasswordData": {
                    "$ref": "#/$defs/PasswordData"
                }
            }
        },
        "PasswordData": {
            "type": "string"
        },
        "GetPasswordDataRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetReservedInstancesExchangeQuoteResult": {
            "type": "object",
            "properties": {
                "CurrencyCode": {
                    "$ref": "#/$defs/String"
                },
                "IsValidExchange": {
                    "$ref": "#/$defs/Boolean"
                },
                "OutputReservedInstancesWillExpireAt": {
                    "$ref": "#/$defs/DateTime"
                },
                "PaymentDue": {
                    "$ref": "#/$defs/String"
                },
                "ReservedInstanceValueRollup": {
                    "$ref": "#/$defs/ReservationValue"
                },
                "ReservedInstanceValueSet": {
                    "$ref": "#/$defs/ReservedInstanceReservationValueSet"
                },
                "TargetConfigurationValueRollup": {
                    "$ref": "#/$defs/ReservationValue"
                },
                "TargetConfigurationValueSet": {
                    "$ref": "#/$defs/TargetReservationValueSet"
                },
                "ValidationFailureReason": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ReservationValue": {
            "type": "object",
            "properties": {
                "HourlyPrice": {
                    "$ref": "#/$defs/String"
                },
                "RemainingTotalValue": {
                    "$ref": "#/$defs/String"
                },
                "RemainingUpfrontValue": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ReservedInstanceReservationValueSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstanceReservationValue"
            }
        },
        "ReservedInstanceReservationValue": {
            "type": "object",
            "properties": {
                "ReservationValue": {
                    "$ref": "#/$defs/ReservationValue"
                },
                "ReservedInstanceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TargetReservationValueSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TargetReservationValue"
            }
        },
        "TargetReservationValue": {
            "type": "object",
            "properties": {
                "ReservationValue": {
                    "$ref": "#/$defs/ReservationValue"
                },
                "TargetConfiguration": {
                    "$ref": "#/$defs/TargetConfiguration"
                }
            }
        },
        "TargetConfiguration": {
            "type": "object",
            "properties": {
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "OfferingId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetReservedInstancesExchangeQuoteRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ReservedInstanceIds": {
                    "$ref": "#/$defs/ReservedInstanceIdSet"
                },
                "TargetConfigurations": {
                    "$ref": "#/$defs/TargetConfigurationRequestSet"
                }
            }
        },
        "GetSecurityGroupsForVpcResult": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "SecurityGroupForVpcs": {
                    "$ref": "#/$defs/SecurityGroupForVpcList"
                }
            }
        },
        "SecurityGroupForVpcList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupForVpc"
            }
        },
        "SecurityGroupForVpc": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "GroupId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "PrimaryVpcId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetSecurityGroupsForVpcRequest": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/GetSecurityGroupsForVpcRequestMaxResults"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetSecurityGroupsForVpcRequestMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetSerialConsoleAccessStatusResult": {
            "type": "object",
            "properties": {
                "SerialConsoleAccessEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "ManagedBy": {
                    "$ref": "#/$defs/ManagedBy"
                }
            }
        },
        "GetSerialConsoleAccessStatusRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetSnapshotBlockPublicAccessStateResult": {
            "type": "object",
            "properties": {
                "State": {
                    "$ref": "#/$defs/SnapshotBlockPublicAccessState"
                },
                "ManagedBy": {
                    "$ref": "#/$defs/ManagedBy"
                }
            }
        },
        "GetSnapshotBlockPublicAccessStateRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetSpotPlacementScoresResult": {
            "type": "object",
            "properties": {
                "SpotPlacementScores": {
                    "$ref": "#/$defs/SpotPlacementScores"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SpotPlacementScores": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SpotPlacementScore"
            }
        },
        "SpotPlacementScore": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZoneId": {
                    "$ref": "#/$defs/String"
                },
                "Score": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GetSpotPlacementScoresRequest": {
            "type": "object",
            "properties": {
                "InstanceTypes": {
                    "$ref": "#/$defs/InstanceTypes"
                },
                "TargetCapacity": {
                    "$ref": "#/$defs/SpotPlacementScoresTargetCapacity"
                },
                "TargetCapacityUnitType": {
                    "$ref": "#/$defs/TargetCapacityUnitType"
                },
                "SingleAvailabilityZone": {
                    "$ref": "#/$defs/Boolean"
                },
                "RegionNames": {
                    "$ref": "#/$defs/RegionNames"
                },
                "InstanceRequirementsWithMetadata": {
                    "$ref": "#/$defs/InstanceRequirementsWithMetadataRequest"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "MaxResults": {
                    "$ref": "#/$defs/SpotPlacementScoresMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "SpotPlacementScoresTargetCapacity": {
            "type": "integer",
            "format": "int32"
        },
        "RegionNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "InstanceRequirementsWithMetadataRequest": {
            "type": "object",
            "properties": {
                "ArchitectureTypes": {
                    "$ref": "#/$defs/ArchitectureTypeSet"
                },
                "VirtualizationTypes": {
                    "$ref": "#/$defs/VirtualizationTypeSet"
                },
                "InstanceRequirements": {
                    "$ref": "#/$defs/InstanceRequirementsRequest"
                }
            }
        },
        "SpotPlacementScoresMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetSubnetCidrReservationsResult": {
            "type": "object",
            "properties": {
                "SubnetIpv4CidrReservations": {
                    "$ref": "#/$defs/SubnetCidrReservationList"
                },
                "SubnetIpv6CidrReservations": {
                    "$ref": "#/$defs/SubnetCidrReservationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SubnetCidrReservationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetCidrReservation"
            }
        },
        "GetSubnetCidrReservationsRequest": {
            "type": "object",
            "properties": {
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/GetSubnetCidrReservationsMaxResults"
                }
            }
        },
        "GetSubnetCidrReservationsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetTransitGatewayAttachmentPropagationsResult": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentPropagations": {
                    "$ref": "#/$defs/TransitGatewayAttachmentPropagationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayAttachmentPropagationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayAttachmentPropagation"
            }
        },
        "TransitGatewayAttachmentPropagation": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/String"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayPropagationState"
                }
            }
        },
        "GetTransitGatewayAttachmentPropagationsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetTransitGatewayMulticastDomainAssociationsResult": {
            "type": "object",
            "properties": {
                "MulticastDomainAssociations": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainAssociationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayMulticastDomainAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayMulticastDomainAssociation"
            }
        },
        "TransitGatewayMulticastDomainAssociation": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                },
                "ResourceOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Subnet": {
                    "$ref": "#/$defs/SubnetAssociation"
                }
            }
        },
        "GetTransitGatewayMulticastDomainAssociationsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetTransitGatewayPolicyTableAssociationsResult": {
            "type": "object",
            "properties": {
                "Associations": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableAssociationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayPolicyTableAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayPolicyTableAssociation"
            }
        },
        "GetTransitGatewayPolicyTableAssociationsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTableId": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetTransitGatewayPolicyTableEntriesResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTableEntries": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableEntryList"
                }
            }
        },
        "TransitGatewayPolicyTableEntryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayPolicyTableEntry"
            }
        },
        "TransitGatewayPolicyTableEntry": {
            "type": "object",
            "properties": {
                "PolicyRuleNumber": {
                    "$ref": "#/$defs/String"
                },
                "PolicyRule": {
                    "$ref": "#/$defs/TransitGatewayPolicyRule"
                },
                "TargetRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                }
            }
        },
        "TransitGatewayPolicyRule": {
            "type": "object",
            "properties": {
                "SourceCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "SourcePortRange": {
                    "$ref": "#/$defs/String"
                },
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "DestinationPortRange": {
                    "$ref": "#/$defs/String"
                },
                "Protocol": {
                    "$ref": "#/$defs/String"
                },
                "MetaData": {
                    "$ref": "#/$defs/TransitGatewayPolicyRuleMetaData"
                }
            }
        },
        "TransitGatewayPolicyRuleMetaData": {
            "type": "object",
            "properties": {
                "MetaDataKey": {
                    "$ref": "#/$defs/String"
                },
                "MetaDataValue": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetTransitGatewayPolicyTableEntriesRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayPolicyTableId": {
                    "$ref": "#/$defs/TransitGatewayPolicyTableId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetTransitGatewayPrefixListReferencesResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPrefixListReferences": {
                    "$ref": "#/$defs/TransitGatewayPrefixListReferenceSet"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayPrefixListReferenceSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayPrefixListReference"
            }
        },
        "GetTransitGatewayPrefixListReferencesRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetTransitGatewayRouteTableAssociationsResult": {
            "type": "object",
            "properties": {
                "Associations": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAssociationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayRouteTableAssociationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayRouteTableAssociation"
            }
        },
        "TransitGatewayRouteTableAssociation": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayAssociationState"
                }
            }
        },
        "GetTransitGatewayRouteTableAssociationsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetTransitGatewayRouteTablePropagationsResult": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTablePropagations": {
                    "$ref": "#/$defs/TransitGatewayRouteTablePropagationList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayRouteTablePropagationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayRouteTablePropagation"
            }
        },
        "TransitGatewayRouteTablePropagation": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                },
                "State": {
                    "$ref": "#/$defs/TransitGatewayPropagationState"
                },
                "TransitGatewayRouteTableAnnouncementId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableAnnouncementId"
                }
            }
        },
        "GetTransitGatewayRouteTablePropagationsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetVerifiedAccessEndpointPolicyResult": {
            "type": "object",
            "properties": {
                "PolicyEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetVerifiedAccessEndpointPolicyRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpointId": {
                    "$ref": "#/$defs/VerifiedAccessEndpointId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetVerifiedAccessEndpointTargetsResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpointTargets": {
                    "$ref": "#/$defs/VerifiedAccessEndpointTargetList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VerifiedAccessEndpointTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VerifiedAccessEndpointTarget"
            }
        },
        "VerifiedAccessEndpointTarget": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpointId": {
                    "$ref": "#/$defs/VerifiedAccessEndpointId"
                },
                "VerifiedAccessEndpointTargetIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "VerifiedAccessEndpointTargetDns": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetVerifiedAccessEndpointTargetsRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpointId": {
                    "$ref": "#/$defs/VerifiedAccessEndpointId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/GetVerifiedAccessEndpointTargetsMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetVerifiedAccessEndpointTargetsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetVerifiedAccessGroupPolicyResult": {
            "type": "object",
            "properties": {
                "PolicyEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetVerifiedAccessGroupPolicyRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroupId": {
                    "$ref": "#/$defs/VerifiedAccessGroupId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetVpnConnectionDeviceSampleConfigurationResult": {
            "type": "object",
            "properties": {
                "VpnConnectionDeviceSampleConfiguration": {
                    "$ref": "#/$defs/VpnConnectionDeviceSampleConfiguration"
                }
            }
        },
        "VpnConnectionDeviceSampleConfiguration": {
            "type": "string"
        },
        "GetVpnConnectionDeviceSampleConfigurationRequest": {
            "type": "object",
            "properties": {
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                },
                "VpnConnectionDeviceTypeId": {
                    "$ref": "#/$defs/VpnConnectionDeviceTypeId"
                },
                "InternetKeyExchangeVersion": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VpnConnectionDeviceTypeId": {
            "type": "string"
        },
        "GetVpnConnectionDeviceTypesResult": {
            "type": "object",
            "properties": {
                "VpnConnectionDeviceTypes": {
                    "$ref": "#/$defs/VpnConnectionDeviceTypeList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "VpnConnectionDeviceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/VpnConnectionDeviceType"
            }
        },
        "VpnConnectionDeviceType": {
            "type": "object",
            "properties": {
                "VpnConnectionDeviceTypeId": {
                    "$ref": "#/$defs/String"
                },
                "Vendor": {
                    "$ref": "#/$defs/String"
                },
                "Platform": {
                    "$ref": "#/$defs/String"
                },
                "Software": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "GetVpnConnectionDeviceTypesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/GVCDMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GVCDMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetVpnTunnelReplacementStatusResult": {
            "type": "object",
            "properties": {
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "CustomerGatewayId": {
                    "$ref": "#/$defs/CustomerGatewayId"
                },
                "VpnGatewayId": {
                    "$ref": "#/$defs/VpnGatewayId"
                },
                "VpnTunnelOutsideIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "MaintenanceDetails": {
                    "$ref": "#/$defs/MaintenanceDetails"
                }
            }
        },
        "MaintenanceDetails": {
            "type": "object",
            "properties": {
                "PendingMaintenance": {
                    "$ref": "#/$defs/String"
                },
                "MaintenanceAutoAppliedAfter": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "LastMaintenanceApplied": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "GetVpnTunnelReplacementStatusRequest": {
            "type": "object",
            "properties": {
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                },
                "VpnTunnelOutsideIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ImportClientVpnClientCertificateRevocationListResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ImportClientVpnClientCertificateRevocationListRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "CertificateRevocationList": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ImportImageResult": {
            "type": "object",
            "properties": {
                "Architecture": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "Hypervisor": {
                    "$ref": "#/$defs/String"
                },
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "ImportTaskId": {
                    "$ref": "#/$defs/ImportImageTaskId"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "LicenseType": {
                    "$ref": "#/$defs/String"
                },
                "Platform": {
                    "$ref": "#/$defs/String"
                },
                "Progress": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotDetails": {
                    "$ref": "#/$defs/SnapshotDetailList"
                },
                "Status": {
                    "$ref": "#/$defs/String"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "LicenseSpecifications": {
                    "$ref": "#/$defs/ImportImageLicenseSpecificationListResponse"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                },
                "UsageOperation": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImportImageRequest": {
            "type": "object",
            "properties": {
                "Architecture": {
                    "$ref": "#/$defs/String"
                },
                "ClientData": {
                    "$ref": "#/$defs/ClientData"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DiskContainers": {
                    "$ref": "#/$defs/ImageDiskContainerList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "Hypervisor": {
                    "$ref": "#/$defs/String"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "LicenseType": {
                    "$ref": "#/$defs/String"
                },
                "Platform": {
                    "$ref": "#/$defs/String"
                },
                "RoleName": {
                    "$ref": "#/$defs/String"
                },
                "LicenseSpecifications": {
                    "$ref": "#/$defs/ImportImageLicenseSpecificationListRequest"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "UsageOperation": {
                    "$ref": "#/$defs/String"
                },
                "BootMode": {
                    "$ref": "#/$defs/BootModeValues"
                }
            }
        },
        "ClientData": {
            "type": "object",
            "properties": {
                "Comment": {
                    "$ref": "#/$defs/String"
                },
                "UploadEnd": {
                    "$ref": "#/$defs/DateTime"
                },
                "UploadSize": {
                    "$ref": "#/$defs/Double"
                },
                "UploadStart": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "ImageDiskContainerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImageDiskContainer"
            }
        },
        "ImageDiskContainer": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "Format": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "Url": {
                    "$ref": "#/$defs/SensitiveUrl"
                },
                "UserBucket": {
                    "$ref": "#/$defs/UserBucket"
                }
            }
        },
        "UserBucket": {
            "type": "object",
            "properties": {
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3Key": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImportImageLicenseSpecificationListRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportImageLicenseConfigurationRequest"
            }
        },
        "ImportImageLicenseConfigurationRequest": {
            "type": "object",
            "properties": {
                "LicenseConfigurationArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImportInstanceResult": {
            "type": "object",
            "properties": {
                "ConversionTask": {
                    "$ref": "#/$defs/ConversionTask"
                }
            }
        },
        "ImportInstanceRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "LaunchSpecification": {
                    "$ref": "#/$defs/ImportInstanceLaunchSpecification"
                },
                "DiskImages": {
                    "$ref": "#/$defs/DiskImageList"
                },
                "Platform": {
                    "$ref": "#/$defs/PlatformValues"
                }
            }
        },
        "ImportInstanceLaunchSpecification": {
            "type": "object",
            "properties": {
                "Architecture": {
                    "$ref": "#/$defs/ArchitectureValues"
                },
                "GroupNames": {
                    "$ref": "#/$defs/SecurityGroupStringList"
                },
                "GroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdStringList"
                },
                "AdditionalInfo": {
                    "$ref": "#/$defs/String"
                },
                "UserData": {
                    "$ref": "#/$defs/UserData"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "Placement": {
                    "$ref": "#/$defs/Placement"
                },
                "Monitoring": {
                    "$ref": "#/$defs/Boolean"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "InstanceInitiatedShutdownBehavior": {
                    "$ref": "#/$defs/ShutdownBehavior"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UserData": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DiskImageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DiskImage"
            }
        },
        "DiskImage": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Image": {
                    "$ref": "#/$defs/DiskImageDetail"
                },
                "Volume": {
                    "$ref": "#/$defs/VolumeDetail"
                }
            }
        },
        "DiskImageDetail": {
            "type": "object",
            "properties": {
                "Format": {
                    "$ref": "#/$defs/DiskImageFormat"
                },
                "Bytes": {
                    "$ref": "#/$defs/Long"
                },
                "ImportManifestUrl": {
                    "$ref": "#/$defs/ImportManifestUrl"
                }
            }
        },
        "VolumeDetail": {
            "type": "object",
            "properties": {
                "Size": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "ImportKeyPairResult": {
            "type": "object",
            "properties": {
                "KeyFingerprint": {
                    "$ref": "#/$defs/String"
                },
                "KeyName": {
                    "$ref": "#/$defs/String"
                },
                "KeyPairId": {
                    "$ref": "#/$defs/String"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ImportKeyPairRequest": {
            "type": "object",
            "properties": {
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "KeyName": {
                    "$ref": "#/$defs/String"
                },
                "PublicKeyMaterial": {
                    "$ref": "#/$defs/Blob"
                }
            }
        },
        "ImportSnapshotResult": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ImportTaskId": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotTaskDetail": {
                    "$ref": "#/$defs/SnapshotTaskDetail"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ImportSnapshotRequest": {
            "type": "object",
            "properties": {
                "ClientData": {
                    "$ref": "#/$defs/ClientData"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DiskContainer": {
                    "$ref": "#/$defs/SnapshotDiskContainer"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "RoleName": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "SnapshotDiskContainer": {
            "type": "object",
            "properties": {
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Format": {
                    "$ref": "#/$defs/String"
                },
                "Url": {
                    "$ref": "#/$defs/SensitiveUrl"
                },
                "UserBucket": {
                    "$ref": "#/$defs/UserBucket"
                }
            }
        },
        "ImportVolumeResult": {
            "type": "object",
            "properties": {
                "ConversionTask": {
                    "$ref": "#/$defs/ConversionTask"
                }
            }
        },
        "ImportVolumeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "Image": {
                    "$ref": "#/$defs/DiskImageDetail"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Volume": {
                    "$ref": "#/$defs/VolumeDetail"
                }
            }
        },
        "ListImagesInRecycleBinResult": {
            "type": "object",
            "properties": {
                "Images": {
                    "$ref": "#/$defs/ImageRecycleBinInfoList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ImageRecycleBinInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImageRecycleBinInfo"
            }
        },
        "ImageRecycleBinInfo": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "RecycleBinEnterTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "RecycleBinExitTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "ListImagesInRecycleBinRequest": {
            "type": "object",
            "properties": {
                "ImageIds": {
                    "$ref": "#/$defs/ImageIdStringList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "MaxResults": {
                    "$ref": "#/$defs/ListImagesInRecycleBinMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ListImagesInRecycleBinMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "ListSnapshotsInRecycleBinResult": {
            "type": "object",
            "properties": {
                "Snapshots": {
                    "$ref": "#/$defs/SnapshotRecycleBinInfoList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "SnapshotRecycleBinInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SnapshotRecycleBinInfo"
            }
        },
        "SnapshotRecycleBinInfo": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "RecycleBinEnterTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "RecycleBinExitTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "VolumeId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListSnapshotsInRecycleBinRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/ListSnapshotsInRecycleBinMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "SnapshotIds": {
                    "$ref": "#/$defs/SnapshotIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ListSnapshotsInRecycleBinMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "LockSnapshotResult": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "LockState": {
                    "$ref": "#/$defs/LockState"
                },
                "LockDuration": {
                    "$ref": "#/$defs/RetentionPeriodResponseDays"
                },
                "CoolOffPeriod": {
                    "$ref": "#/$defs/CoolOffPeriodResponseHours"
                },
                "CoolOffPeriodExpiresOn": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "LockCreatedOn": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "LockExpiresOn": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "LockDurationStartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "LockSnapshotRequest": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "LockMode": {
                    "$ref": "#/$defs/LockMode"
                },
                "CoolOffPeriod": {
                    "$ref": "#/$defs/CoolOffPeriodRequestHours"
                },
                "LockDuration": {
                    "$ref": "#/$defs/RetentionPeriodRequestDays"
                },
                "ExpirationDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "LockMode": {
            "enum": [
                "compliance",
                "governance"
            ]
        },
        "CoolOffPeriodRequestHours": {
            "type": "integer",
            "format": "int32"
        },
        "RetentionPeriodRequestDays": {
            "type": "integer",
            "format": "int32"
        },
        "ModifyAddressAttributeResult": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/AddressAttribute"
                }
            }
        },
        "ModifyAddressAttributeRequest": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/AllocationId"
                },
                "DomainName": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyAvailabilityZoneGroupResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyAvailabilityZoneGroupRequest": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/String"
                },
                "OptInStatus": {
                    "$ref": "#/$defs/ModifyAvailabilityZoneOptInStatus"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyAvailabilityZoneOptInStatus": {
            "enum": [
                "opted_in",
                "not_opted_in"
            ]
        },
        "ModifyCapacityReservationResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyCapacityReservationRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "EndDate": {
                    "$ref": "#/$defs/DateTime"
                },
                "EndDateType": {
                    "$ref": "#/$defs/EndDateType"
                },
                "Accept": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "AdditionalInfo": {
                    "$ref": "#/$defs/String"
                },
                "InstanceMatchCriteria": {
                    "$ref": "#/$defs/InstanceMatchCriteria"
                }
            }
        },
        "ModifyCapacityReservationFleetResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyCapacityReservationFleetRequest": {
            "type": "object",
            "properties": {
                "CapacityReservationFleetId": {
                    "$ref": "#/$defs/CapacityReservationFleetId"
                },
                "TotalTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "EndDate": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "RemoveEndDate": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyClientVpnEndpointResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyClientVpnEndpointRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "ServerCertificateArn": {
                    "$ref": "#/$defs/String"
                },
                "ConnectionLogOptions": {
                    "$ref": "#/$defs/ConnectionLogOptions"
                },
                "DnsServers": {
                    "$ref": "#/$defs/DnsServersOptionsModifyStructure"
                },
                "VpnPort": {
                    "$ref": "#/$defs/Integer"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "SplitTunnel": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/ClientVpnSecurityGroupIdSet"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "SelfServicePortal": {
                    "$ref": "#/$defs/SelfServicePortal"
                },
                "ClientConnectOptions": {
                    "$ref": "#/$defs/ClientConnectOptions"
                },
                "SessionTimeoutHours": {
                    "$ref": "#/$defs/Integer"
                },
                "ClientLoginBannerOptions": {
                    "$ref": "#/$defs/ClientLoginBannerOptions"
                },
                "DisconnectOnSessionTimeout": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DnsServersOptionsModifyStructure": {
            "type": "object",
            "properties": {
                "CustomDnsServers": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyDefaultCreditSpecificationResult": {
            "type": "object",
            "properties": {
                "InstanceFamilyCreditSpecification": {
                    "$ref": "#/$defs/InstanceFamilyCreditSpecification"
                }
            }
        },
        "ModifyDefaultCreditSpecificationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceFamily": {
                    "$ref": "#/$defs/UnlimitedSupportedInstanceFamily"
                },
                "CpuCredits": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyEbsDefaultKmsKeyIdResult": {
            "type": "object",
            "properties": {
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyEbsDefaultKmsKeyIdRequest": {
            "type": "object",
            "properties": {
                "KmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyFleetResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyFleetRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ExcessCapacityTerminationPolicy": {
                    "$ref": "#/$defs/FleetExcessCapacityTerminationPolicy"
                },
                "LaunchTemplateConfigs": {
                    "$ref": "#/$defs/FleetLaunchTemplateConfigListRequest"
                },
                "FleetId": {
                    "$ref": "#/$defs/FleetId"
                },
                "TargetCapacitySpecification": {
                    "$ref": "#/$defs/TargetCapacitySpecificationRequest"
                },
                "Context": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyFpgaImageAttributeResult": {
            "type": "object",
            "properties": {
                "FpgaImageAttribute": {
                    "$ref": "#/$defs/FpgaImageAttribute"
                }
            }
        },
        "ModifyFpgaImageAttributeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "FpgaImageId": {
                    "$ref": "#/$defs/FpgaImageId"
                },
                "Attribute": {
                    "$ref": "#/$defs/FpgaImageAttributeName"
                },
                "OperationType": {
                    "$ref": "#/$defs/OperationType"
                },
                "UserIds": {
                    "$ref": "#/$defs/UserIdStringList"
                },
                "UserGroups": {
                    "$ref": "#/$defs/UserGroupStringList"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodeStringList"
                },
                "LoadPermission": {
                    "$ref": "#/$defs/LoadPermissionModifications"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "OperationType": {
            "enum": [
                "add",
                "remove"
            ]
        },
        "UserIdStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "UserGroupStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ProductCodeStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "LoadPermissionModifications": {
            "type": "object",
            "properties": {
                "Add": {
                    "$ref": "#/$defs/LoadPermissionListRequest"
                },
                "Remove": {
                    "$ref": "#/$defs/LoadPermissionListRequest"
                }
            }
        },
        "LoadPermissionListRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LoadPermissionRequest"
            }
        },
        "LoadPermissionRequest": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/PermissionGroup"
                },
                "UserId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyHostsResult": {
            "type": "object",
            "properties": {
                "Successful": {
                    "$ref": "#/$defs/ResponseHostIdList"
                },
                "Unsuccessful": {
                    "$ref": "#/$defs/UnsuccessfulItemList"
                }
            }
        },
        "UnsuccessfulItemList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsuccessfulItem"
            }
        },
        "ModifyHostsRequest": {
            "type": "object",
            "properties": {
                "HostRecovery": {
                    "$ref": "#/$defs/HostRecovery"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "InstanceFamily": {
                    "$ref": "#/$defs/String"
                },
                "HostMaintenance": {
                    "$ref": "#/$defs/HostMaintenance"
                },
                "HostIds": {
                    "$ref": "#/$defs/RequestHostIdList"
                },
                "AutoPlacement": {
                    "$ref": "#/$defs/AutoPlacement"
                }
            }
        },
        "ModifyIdentityIdFormatRequest": {
            "type": "object",
            "properties": {
                "Resource": {
                    "$ref": "#/$defs/String"
                },
                "UseLongIds": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrincipalArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyIdFormatRequest": {
            "type": "object",
            "properties": {
                "Resource": {
                    "$ref": "#/$defs/String"
                },
                "UseLongIds": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyImageAttributeRequest": {
            "type": "object",
            "properties": {
                "Attribute": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "LaunchPermission": {
                    "$ref": "#/$defs/LaunchPermissionModifications"
                },
                "OperationType": {
                    "$ref": "#/$defs/OperationType"
                },
                "ProductCodes": {
                    "$ref": "#/$defs/ProductCodeStringList"
                },
                "UserGroups": {
                    "$ref": "#/$defs/UserGroupStringList"
                },
                "UserIds": {
                    "$ref": "#/$defs/UserIdStringList"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                },
                "OrganizationArns": {
                    "$ref": "#/$defs/OrganizationArnStringList"
                },
                "OrganizationalUnitArns": {
                    "$ref": "#/$defs/OrganizationalUnitArnStringList"
                },
                "ImdsSupport": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LaunchPermissionModifications": {
            "type": "object",
            "properties": {
                "Add": {
                    "$ref": "#/$defs/LaunchPermissionList"
                },
                "Remove": {
                    "$ref": "#/$defs/LaunchPermissionList"
                }
            }
        },
        "OrganizationArnStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "OrganizationalUnitArnStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ModifyInstanceAttributeRequest": {
            "type": "object",
            "properties": {
                "SourceDestCheck": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "DisableApiStop": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "Attribute": {
                    "$ref": "#/$defs/InstanceAttributeName"
                },
                "Value": {
                    "$ref": "#/$defs/String"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/InstanceBlockDeviceMappingSpecificationList"
                },
                "DisableApiTermination": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "InstanceType": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "Kernel": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "Ramdisk": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "UserData": {
                    "$ref": "#/$defs/BlobAttributeValue"
                },
                "InstanceInitiatedShutdownBehavior": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupIdStringList"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "SriovNetSupport": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "EnaSupport": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                }
            }
        },
        "InstanceBlockDeviceMappingSpecificationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceBlockDeviceMappingSpecification"
            }
        },
        "InstanceBlockDeviceMappingSpecification": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "Ebs": {
                    "$ref": "#/$defs/EbsInstanceBlockDeviceSpecification"
                },
                "VirtualName": {
                    "$ref": "#/$defs/String"
                },
                "NoDevice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "EbsInstanceBlockDeviceSpecification": {
            "type": "object",
            "properties": {
                "VolumeId": {
                    "$ref": "#/$defs/VolumeId"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "BlobAttributeValue": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/Blob"
                }
            }
        },
        "ModifyInstanceCapacityReservationAttributesResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyInstanceCapacityReservationAttributesRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "CapacityReservationSpecification": {
                    "$ref": "#/$defs/CapacityReservationSpecification"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CapacityReservationSpecification": {
            "type": "object",
            "properties": {
                "CapacityReservationPreference": {
                    "$ref": "#/$defs/CapacityReservationPreference"
                },
                "CapacityReservationTarget": {
                    "$ref": "#/$defs/CapacityReservationTarget"
                }
            }
        },
        "ModifyInstanceCpuOptionsResult": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "CoreCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ThreadsPerCore": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ModifyInstanceCpuOptionsRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "CoreCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ThreadsPerCore": {
                    "$ref": "#/$defs/Integer"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyInstanceCreditSpecificationResult": {
            "type": "object",
            "properties": {
                "SuccessfulInstanceCreditSpecifications": {
                    "$ref": "#/$defs/SuccessfulInstanceCreditSpecificationSet"
                },
                "UnsuccessfulInstanceCreditSpecifications": {
                    "$ref": "#/$defs/UnsuccessfulInstanceCreditSpecificationSet"
                }
            }
        },
        "SuccessfulInstanceCreditSpecificationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SuccessfulInstanceCreditSpecificationItem"
            }
        },
        "SuccessfulInstanceCreditSpecificationItem": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UnsuccessfulInstanceCreditSpecificationSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UnsuccessfulInstanceCreditSpecificationItem"
            }
        },
        "UnsuccessfulInstanceCreditSpecificationItem": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Error": {
                    "$ref": "#/$defs/UnsuccessfulInstanceCreditSpecificationItemError"
                }
            }
        },
        "UnsuccessfulInstanceCreditSpecificationItemError": {
            "type": "object",
            "properties": {
                "Code": {
                    "$ref": "#/$defs/UnsuccessfulInstanceCreditSpecificationErrorCode"
                },
                "Message": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UnsuccessfulInstanceCreditSpecificationErrorCode": {
            "enum": [
                "INVALID_INSTANCE_ID",
                "INSTANCE_NOT_FOUND",
                "INCORRECT_INSTANCE_STATE",
                "INSTANCE_CREDIT_SPECIFICATION_NOT_SUPPORTED"
            ]
        },
        "ModifyInstanceCreditSpecificationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "InstanceCreditSpecifications": {
                    "$ref": "#/$defs/InstanceCreditSpecificationListRequest"
                }
            }
        },
        "InstanceCreditSpecificationListRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceCreditSpecificationRequest"
            }
        },
        "InstanceCreditSpecificationRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "CpuCredits": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyInstanceEventStartTimeResult": {
            "type": "object",
            "properties": {
                "Event": {
                    "$ref": "#/$defs/InstanceStatusEvent"
                }
            }
        },
        "ModifyInstanceEventStartTimeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "InstanceEventId": {
                    "$ref": "#/$defs/String"
                },
                "NotBefore": {
                    "$ref": "#/$defs/DateTime"
                }
            }
        },
        "ModifyInstanceEventWindowResult": {
            "type": "object",
            "properties": {
                "InstanceEventWindow": {
                    "$ref": "#/$defs/InstanceEventWindow"
                }
            }
        },
        "ModifyInstanceEventWindowRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "InstanceEventWindowId": {
                    "$ref": "#/$defs/InstanceEventWindowId"
                },
                "TimeRanges": {
                    "$ref": "#/$defs/InstanceEventWindowTimeRangeRequestSet"
                },
                "CronExpression": {
                    "$ref": "#/$defs/InstanceEventWindowCronExpression"
                }
            }
        },
        "ModifyInstanceMaintenanceOptionsResult": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "AutoRecovery": {
                    "$ref": "#/$defs/InstanceAutoRecoveryState"
                }
            }
        },
        "ModifyInstanceMaintenanceOptionsRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "AutoRecovery": {
                    "$ref": "#/$defs/InstanceAutoRecoveryState"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyInstanceMetadataDefaultsResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyInstanceMetadataDefaultsRequest": {
            "type": "object",
            "properties": {
                "HttpTokens": {
                    "$ref": "#/$defs/MetadataDefaultHttpTokensState"
                },
                "HttpPutResponseHopLimit": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "HttpEndpoint": {
                    "$ref": "#/$defs/DefaultInstanceMetadataEndpointState"
                },
                "InstanceMetadataTags": {
                    "$ref": "#/$defs/DefaultInstanceMetadataTagsState"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "MetadataDefaultHttpTokensState": {
            "enum": [
                "optional",
                "required",
                "no_preference"
            ]
        },
        "DefaultInstanceMetadataEndpointState": {
            "enum": [
                "disabled",
                "enabled",
                "no_preference"
            ]
        },
        "DefaultInstanceMetadataTagsState": {
            "enum": [
                "disabled",
                "enabled",
                "no_preference"
            ]
        },
        "ModifyInstanceMetadataOptionsResult": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "InstanceMetadataOptions": {
                    "$ref": "#/$defs/InstanceMetadataOptionsResponse"
                }
            }
        },
        "ModifyInstanceMetadataOptionsRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "HttpTokens": {
                    "$ref": "#/$defs/HttpTokensState"
                },
                "HttpPutResponseHopLimit": {
                    "$ref": "#/$defs/Integer"
                },
                "HttpEndpoint": {
                    "$ref": "#/$defs/InstanceMetadataEndpointState"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "HttpProtocolIpv6": {
                    "$ref": "#/$defs/InstanceMetadataProtocolState"
                },
                "InstanceMetadataTags": {
                    "$ref": "#/$defs/InstanceMetadataTagsState"
                }
            }
        },
        "ModifyInstanceNetworkPerformanceResult": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "BandwidthWeighting": {
                    "$ref": "#/$defs/InstanceBandwidthWeighting"
                }
            }
        },
        "ModifyInstanceNetworkPerformanceRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "BandwidthWeighting": {
                    "$ref": "#/$defs/InstanceBandwidthWeighting"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyInstancePlacementResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyInstancePlacementRequest": {
            "type": "object",
            "properties": {
                "GroupName": {
                    "$ref": "#/$defs/PlacementGroupName"
                },
                "PartitionNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "HostResourceGroupArn": {
                    "$ref": "#/$defs/String"
                },
                "GroupId": {
                    "$ref": "#/$defs/PlacementGroupId"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "Tenancy": {
                    "$ref": "#/$defs/HostTenancy"
                },
                "Affinity": {
                    "$ref": "#/$defs/Affinity"
                },
                "HostId": {
                    "$ref": "#/$defs/DedicatedHostId"
                }
            }
        },
        "HostTenancy": {
            "enum": [
                "default",
                "dedicated",
                "host"
            ]
        },
        "Affinity": {
            "enum": [
                "default",
                "host"
            ]
        },
        "ModifyIpamResult": {
            "type": "object",
            "properties": {
                "Ipam": {
                    "$ref": "#/$defs/Ipam"
                }
            }
        },
        "ModifyIpamRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "AddOperatingRegions": {
                    "$ref": "#/$defs/AddIpamOperatingRegionSet"
                },
                "RemoveOperatingRegions": {
                    "$ref": "#/$defs/RemoveIpamOperatingRegionSet"
                },
                "Tier": {
                    "$ref": "#/$defs/IpamTier"
                },
                "EnablePrivateGua": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RemoveIpamOperatingRegionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RemoveIpamOperatingRegion"
            }
        },
        "RemoveIpamOperatingRegion": {
            "type": "object",
            "properties": {
                "RegionName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyIpamPoolResult": {
            "type": "object",
            "properties": {
                "IpamPool": {
                    "$ref": "#/$defs/IpamPool"
                }
            }
        },
        "ModifyIpamPoolRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "AutoImport": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllocationMinNetmaskLength": {
                    "$ref": "#/$defs/IpamNetmaskLength"
                },
                "AllocationMaxNetmaskLength": {
                    "$ref": "#/$defs/IpamNetmaskLength"
                },
                "AllocationDefaultNetmaskLength": {
                    "$ref": "#/$defs/IpamNetmaskLength"
                },
                "ClearAllocationDefaultNetmaskLength": {
                    "$ref": "#/$defs/Boolean"
                },
                "AddAllocationResourceTags": {
                    "$ref": "#/$defs/RequestIpamResourceTagList"
                },
                "RemoveAllocationResourceTags": {
                    "$ref": "#/$defs/RequestIpamResourceTagList"
                }
            }
        },
        "ModifyIpamResourceCidrResult": {
            "type": "object",
            "properties": {
                "IpamResourceCidr": {
                    "$ref": "#/$defs/IpamResourceCidr"
                }
            }
        },
        "ModifyIpamResourceCidrRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceCidr": {
                    "$ref": "#/$defs/String"
                },
                "ResourceRegion": {
                    "$ref": "#/$defs/String"
                },
                "CurrentIpamScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                },
                "DestinationIpamScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                },
                "Monitored": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyIpamResourceDiscoveryResult": {
            "type": "object",
            "properties": {
                "IpamResourceDiscovery": {
                    "$ref": "#/$defs/IpamResourceDiscovery"
                }
            }
        },
        "ModifyIpamResourceDiscoveryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamResourceDiscoveryId": {
                    "$ref": "#/$defs/IpamResourceDiscoveryId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "AddOperatingRegions": {
                    "$ref": "#/$defs/AddIpamOperatingRegionSet"
                },
                "RemoveOperatingRegions": {
                    "$ref": "#/$defs/RemoveIpamOperatingRegionSet"
                },
                "AddOrganizationalUnitExclusions": {
                    "$ref": "#/$defs/AddIpamOrganizationalUnitExclusionSet"
                },
                "RemoveOrganizationalUnitExclusions": {
                    "$ref": "#/$defs/RemoveIpamOrganizationalUnitExclusionSet"
                }
            }
        },
        "AddIpamOrganizationalUnitExclusionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddIpamOrganizationalUnitExclusion"
            }
        },
        "AddIpamOrganizationalUnitExclusion": {
            "type": "object",
            "properties": {
                "OrganizationsEntityPath": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RemoveIpamOrganizationalUnitExclusionSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RemoveIpamOrganizationalUnitExclusion"
            }
        },
        "RemoveIpamOrganizationalUnitExclusion": {
            "type": "object",
            "properties": {
                "OrganizationsEntityPath": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyIpamScopeResult": {
            "type": "object",
            "properties": {
                "IpamScope": {
                    "$ref": "#/$defs/IpamScope"
                }
            }
        },
        "ModifyIpamScopeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamScopeId": {
                    "$ref": "#/$defs/IpamScopeId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyLaunchTemplateResult": {
            "type": "object",
            "properties": {
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplate"
                }
            }
        },
        "ModifyLaunchTemplateRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "LaunchTemplateId": {
                    "$ref": "#/$defs/LaunchTemplateId"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/LaunchTemplateName"
                },
                "DefaultVersion": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyLocalGatewayRouteResult": {
            "type": "object",
            "properties": {
                "Route": {
                    "$ref": "#/$defs/LocalGatewayRoute"
                }
            }
        },
        "ModifyLocalGatewayRouteRequest": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayRoutetableId"
                },
                "LocalGatewayVirtualInterfaceGroupId": {
                    "$ref": "#/$defs/LocalGatewayVirtualInterfaceGroupId"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "DestinationPrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                }
            }
        },
        "ModifyManagedPrefixListResult": {
            "type": "object",
            "properties": {
                "PrefixList": {
                    "$ref": "#/$defs/ManagedPrefixList"
                }
            }
        },
        "ModifyManagedPrefixListRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/Long"
                },
                "PrefixListName": {
                    "$ref": "#/$defs/String"
                },
                "AddEntries": {
                    "$ref": "#/$defs/AddPrefixListEntries"
                },
                "RemoveEntries": {
                    "$ref": "#/$defs/RemovePrefixListEntries"
                },
                "MaxEntries": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "RemovePrefixListEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RemovePrefixListEntry"
            }
        },
        "RemovePrefixListEntry": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyNetworkInterfaceAttributeRequest": {
            "type": "object",
            "properties": {
                "EnaSrdSpecification": {
                    "$ref": "#/$defs/EnaSrdSpecification"
                },
                "EnablePrimaryIpv6": {
                    "$ref": "#/$defs/Boolean"
                },
                "ConnectionTrackingSpecification": {
                    "$ref": "#/$defs/ConnectionTrackingSpecificationRequest"
                },
                "AssociatePublicIpAddress": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "Description": {
                    "$ref": "#/$defs/AttributeValue"
                },
                "SourceDestCheck": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "Groups": {
                    "$ref": "#/$defs/SecurityGroupIdStringList"
                },
                "Attachment": {
                    "$ref": "#/$defs/NetworkInterfaceAttachmentChanges"
                }
            }
        },
        "NetworkInterfaceAttachmentChanges": {
            "type": "object",
            "properties": {
                "AttachmentId": {
                    "$ref": "#/$defs/NetworkInterfaceAttachmentId"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyPrivateDnsNameOptionsResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyPrivateDnsNameOptionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "PrivateDnsHostnameType": {
                    "$ref": "#/$defs/HostnameType"
                },
                "EnableResourceNameDnsARecord": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnableResourceNameDnsAAAARecord": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyReservedInstancesResult": {
            "type": "object",
            "properties": {
                "ReservedInstancesModificationId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyReservedInstancesRequest": {
            "type": "object",
            "properties": {
                "ReservedInstancesIds": {
                    "$ref": "#/$defs/ReservedInstancesIdStringList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "TargetConfigurations": {
                    "$ref": "#/$defs/ReservedInstancesConfigurationList"
                }
            }
        },
        "ReservedInstancesConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReservedInstancesConfiguration"
            }
        },
        "ModifySecurityGroupRulesResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifySecurityGroupRulesRequest": {
            "type": "object",
            "properties": {
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "SecurityGroupRules": {
                    "$ref": "#/$defs/SecurityGroupRuleUpdateList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SecurityGroupRuleUpdateList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupRuleUpdate"
            }
        },
        "SecurityGroupRuleUpdate": {
            "type": "object",
            "properties": {
                "SecurityGroupRuleId": {
                    "$ref": "#/$defs/SecurityGroupRuleId"
                },
                "SecurityGroupRule": {
                    "$ref": "#/$defs/SecurityGroupRuleRequest"
                }
            }
        },
        "SecurityGroupRuleRequest": {
            "type": "object",
            "properties": {
                "IpProtocol": {
                    "$ref": "#/$defs/String"
                },
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                },
                "CidrIpv4": {
                    "$ref": "#/$defs/String"
                },
                "CidrIpv6": {
                    "$ref": "#/$defs/String"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "ReferencedGroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifySnapshotAttributeRequest": {
            "type": "object",
            "properties": {
                "Attribute": {
                    "$ref": "#/$defs/SnapshotAttributeName"
                },
                "CreateVolumePermission": {
                    "$ref": "#/$defs/CreateVolumePermissionModifications"
                },
                "GroupNames": {
                    "$ref": "#/$defs/GroupNameStringList"
                },
                "OperationType": {
                    "$ref": "#/$defs/OperationType"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "UserIds": {
                    "$ref": "#/$defs/UserIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CreateVolumePermissionModifications": {
            "type": "object",
            "properties": {
                "Add": {
                    "$ref": "#/$defs/CreateVolumePermissionList"
                },
                "Remove": {
                    "$ref": "#/$defs/CreateVolumePermissionList"
                }
            }
        },
        "ModifySnapshotTierResult": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "TieringStartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                }
            }
        },
        "ModifySnapshotTierRequest": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "StorageTier": {
                    "$ref": "#/$defs/TargetStorageTier"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TargetStorageTier": {
            "enum": [
                "archive"
            ]
        },
        "ModifySpotFleetRequestResponse": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifySpotFleetRequestRequest": {
            "type": "object",
            "properties": {
                "LaunchTemplateConfigs": {
                    "$ref": "#/$defs/LaunchTemplateConfigList"
                },
                "OnDemandTargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "Context": {
                    "$ref": "#/$defs/String"
                },
                "SpotFleetRequestId": {
                    "$ref": "#/$defs/SpotFleetRequestId"
                },
                "TargetCapacity": {
                    "$ref": "#/$defs/Integer"
                },
                "ExcessCapacityTerminationPolicy": {
                    "$ref": "#/$defs/ExcessCapacityTerminationPolicy"
                }
            }
        },
        "ModifySubnetAttributeRequest": {
            "type": "object",
            "properties": {
                "AssignIpv6AddressOnCreation": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "MapPublicIpOnLaunch": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "MapCustomerOwnedIpOnLaunch": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "CustomerOwnedIpv4Pool": {
                    "$ref": "#/$defs/CoipPoolId"
                },
                "EnableDns64": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "PrivateDnsHostnameTypeOnLaunch": {
                    "$ref": "#/$defs/HostnameType"
                },
                "EnableResourceNameDnsARecordOnLaunch": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "EnableResourceNameDnsAAAARecordOnLaunch": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "EnableLniAtDeviceIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "DisableLniAtDeviceIndex": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                }
            }
        },
        "ModifyTrafficMirrorFilterNetworkServicesResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilter": {
                    "$ref": "#/$defs/TrafficMirrorFilter"
                }
            }
        },
        "ModifyTrafficMirrorFilterNetworkServicesRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterId": {
                    "$ref": "#/$defs/TrafficMirrorFilterId"
                },
                "AddNetworkServices": {
                    "$ref": "#/$defs/TrafficMirrorNetworkServiceList"
                },
                "RemoveNetworkServices": {
                    "$ref": "#/$defs/TrafficMirrorNetworkServiceList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyTrafficMirrorFilterRuleResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterRule": {
                    "$ref": "#/$defs/TrafficMirrorFilterRule"
                }
            }
        },
        "ModifyTrafficMirrorFilterRuleRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorFilterRuleId": {
                    "$ref": "#/$defs/TrafficMirrorFilterRuleIdWithResolver"
                },
                "TrafficDirection": {
                    "$ref": "#/$defs/TrafficDirection"
                },
                "RuleNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "RuleAction": {
                    "$ref": "#/$defs/TrafficMirrorRuleAction"
                },
                "DestinationPortRange": {
                    "$ref": "#/$defs/TrafficMirrorPortRangeRequest"
                },
                "SourcePortRange": {
                    "$ref": "#/$defs/TrafficMirrorPortRangeRequest"
                },
                "Protocol": {
                    "$ref": "#/$defs/Integer"
                },
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "SourceCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "RemoveFields": {
                    "$ref": "#/$defs/TrafficMirrorFilterRuleFieldList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TrafficMirrorFilterRuleFieldList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorFilterRuleField"
            }
        },
        "TrafficMirrorFilterRuleField": {
            "enum": [
                "destination_port_range",
                "source_port_range",
                "protocol",
                "description"
            ]
        },
        "ModifyTrafficMirrorSessionResult": {
            "type": "object",
            "properties": {
                "TrafficMirrorSession": {
                    "$ref": "#/$defs/TrafficMirrorSession"
                }
            }
        },
        "ModifyTrafficMirrorSessionRequest": {
            "type": "object",
            "properties": {
                "TrafficMirrorSessionId": {
                    "$ref": "#/$defs/TrafficMirrorSessionId"
                },
                "TrafficMirrorTargetId": {
                    "$ref": "#/$defs/TrafficMirrorTargetId"
                },
                "TrafficMirrorFilterId": {
                    "$ref": "#/$defs/TrafficMirrorFilterId"
                },
                "PacketLength": {
                    "$ref": "#/$defs/Integer"
                },
                "SessionNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "VirtualNetworkId": {
                    "$ref": "#/$defs/Integer"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "RemoveFields": {
                    "$ref": "#/$defs/TrafficMirrorSessionFieldList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TrafficMirrorSessionFieldList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TrafficMirrorSessionField"
            }
        },
        "TrafficMirrorSessionField": {
            "enum": [
                "packet_length",
                "description",
                "virtual_network_id"
            ]
        },
        "ModifyTransitGatewayResult": {
            "type": "object",
            "properties": {
                "TransitGateway": {
                    "$ref": "#/$defs/TransitGateway"
                }
            }
        },
        "ModifyTransitGatewayRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Options": {
                    "$ref": "#/$defs/ModifyTransitGatewayOptions"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyTransitGatewayOptions": {
            "type": "object",
            "properties": {
                "AddTransitGatewayCidrBlocks": {
                    "$ref": "#/$defs/TransitGatewayCidrBlockStringList"
                },
                "RemoveTransitGatewayCidrBlocks": {
                    "$ref": "#/$defs/TransitGatewayCidrBlockStringList"
                },
                "VpnEcmpSupport": {
                    "$ref": "#/$defs/VpnEcmpSupportValue"
                },
                "DnsSupport": {
                    "$ref": "#/$defs/DnsSupportValue"
                },
                "SecurityGroupReferencingSupport": {
                    "$ref": "#/$defs/SecurityGroupReferencingSupportValue"
                },
                "AutoAcceptSharedAttachments": {
                    "$ref": "#/$defs/AutoAcceptSharedAttachmentsValue"
                },
                "DefaultRouteTableAssociation": {
                    "$ref": "#/$defs/DefaultRouteTableAssociationValue"
                },
                "AssociationDefaultRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "DefaultRouteTablePropagation": {
                    "$ref": "#/$defs/DefaultRouteTablePropagationValue"
                },
                "PropagationDefaultRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "AmazonSideAsn": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "ModifyTransitGatewayPrefixListReferenceResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPrefixListReference": {
                    "$ref": "#/$defs/TransitGatewayPrefixListReference"
                }
            }
        },
        "ModifyTransitGatewayPrefixListReferenceRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "Blackhole": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyTransitGatewayVpcAttachmentResult": {
            "type": "object",
            "properties": {
                "TransitGatewayVpcAttachment": {
                    "$ref": "#/$defs/TransitGatewayVpcAttachment"
                }
            }
        },
        "ModifyTransitGatewayVpcAttachmentRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "AddSubnetIds": {
                    "$ref": "#/$defs/TransitGatewaySubnetIdList"
                },
                "RemoveSubnetIds": {
                    "$ref": "#/$defs/TransitGatewaySubnetIdList"
                },
                "Options": {
                    "$ref": "#/$defs/ModifyTransitGatewayVpcAttachmentRequestOptions"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyTransitGatewayVpcAttachmentRequestOptions": {
            "type": "object",
            "properties": {
                "DnsSupport": {
                    "$ref": "#/$defs/DnsSupportValue"
                },
                "SecurityGroupReferencingSupport": {
                    "$ref": "#/$defs/SecurityGroupReferencingSupportValue"
                },
                "Ipv6Support": {
                    "$ref": "#/$defs/Ipv6SupportValue"
                },
                "ApplianceModeSupport": {
                    "$ref": "#/$defs/ApplianceModeSupportValue"
                }
            }
        },
        "ModifyVerifiedAccessEndpointResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpoint": {
                    "$ref": "#/$defs/VerifiedAccessEndpoint"
                }
            }
        },
        "ModifyVerifiedAccessEndpointRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpointId": {
                    "$ref": "#/$defs/VerifiedAccessEndpointId"
                },
                "VerifiedAccessGroupId": {
                    "$ref": "#/$defs/VerifiedAccessGroupId"
                },
                "LoadBalancerOptions": {
                    "$ref": "#/$defs/ModifyVerifiedAccessEndpointLoadBalancerOptions"
                },
                "NetworkInterfaceOptions": {
                    "$ref": "#/$defs/ModifyVerifiedAccessEndpointEniOptions"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "RdsOptions": {
                    "$ref": "#/$defs/ModifyVerifiedAccessEndpointRdsOptions"
                },
                "CidrOptions": {
                    "$ref": "#/$defs/ModifyVerifiedAccessEndpointCidrOptions"
                }
            }
        },
        "ModifyVerifiedAccessEndpointLoadBalancerOptions": {
            "type": "object",
            "properties": {
                "SubnetIds": {
                    "$ref": "#/$defs/ModifyVerifiedAccessEndpointSubnetIdList"
                },
                "Protocol": {
                    "$ref": "#/$defs/VerifiedAccessEndpointProtocol"
                },
                "Port": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "PortRanges": {
                    "$ref": "#/$defs/ModifyVerifiedAccessEndpointPortRangeList"
                }
            }
        },
        "ModifyVerifiedAccessEndpointSubnetIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubnetId"
            }
        },
        "ModifyVerifiedAccessEndpointPortRangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ModifyVerifiedAccessEndpointPortRange"
            }
        },
        "ModifyVerifiedAccessEndpointPortRange": {
            "type": "object",
            "properties": {
                "FromPort": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "ToPort": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                }
            }
        },
        "ModifyVerifiedAccessEndpointEniOptions": {
            "type": "object",
            "properties": {
                "Protocol": {
                    "$ref": "#/$defs/VerifiedAccessEndpointProtocol"
                },
                "Port": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "PortRanges": {
                    "$ref": "#/$defs/ModifyVerifiedAccessEndpointPortRangeList"
                }
            }
        },
        "ModifyVerifiedAccessEndpointRdsOptions": {
            "type": "object",
            "properties": {
                "SubnetIds": {
                    "$ref": "#/$defs/ModifyVerifiedAccessEndpointSubnetIdList"
                },
                "Port": {
                    "$ref": "#/$defs/VerifiedAccessEndpointPortNumber"
                },
                "RdsEndpoint": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyVerifiedAccessEndpointCidrOptions": {
            "type": "object",
            "properties": {
                "PortRanges": {
                    "$ref": "#/$defs/ModifyVerifiedAccessEndpointPortRangeList"
                }
            }
        },
        "ModifyVerifiedAccessEndpointPolicyResult": {
            "type": "object",
            "properties": {
                "PolicyEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationResponse"
                }
            }
        },
        "ModifyVerifiedAccessEndpointPolicyRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessEndpointId": {
                    "$ref": "#/$defs/VerifiedAccessEndpointId"
                },
                "PolicyEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationRequest"
                }
            }
        },
        "ModifyVerifiedAccessGroupResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroup": {
                    "$ref": "#/$defs/VerifiedAccessGroup"
                }
            }
        },
        "ModifyVerifiedAccessGroupRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroupId": {
                    "$ref": "#/$defs/VerifiedAccessGroupId"
                },
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/VerifiedAccessInstanceId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVerifiedAccessGroupPolicyResult": {
            "type": "object",
            "properties": {
                "PolicyEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationResponse"
                }
            }
        },
        "ModifyVerifiedAccessGroupPolicyRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessGroupId": {
                    "$ref": "#/$defs/VerifiedAccessGroupId"
                },
                "PolicyEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationRequest"
                }
            }
        },
        "ModifyVerifiedAccessInstanceResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstance": {
                    "$ref": "#/$defs/VerifiedAccessInstance"
                }
            }
        },
        "ModifyVerifiedAccessInstanceRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/VerifiedAccessInstanceId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "CidrEndpointsCustomSubDomain": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyVerifiedAccessInstanceLoggingConfigurationResult": {
            "type": "object",
            "properties": {
                "LoggingConfiguration": {
                    "$ref": "#/$defs/VerifiedAccessInstanceLoggingConfiguration"
                }
            }
        },
        "ModifyVerifiedAccessInstanceLoggingConfigurationRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessInstanceId": {
                    "$ref": "#/$defs/VerifiedAccessInstanceId"
                },
                "AccessLogs": {
                    "$ref": "#/$defs/VerifiedAccessLogOptions"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VerifiedAccessLogOptions": {
            "type": "object",
            "properties": {
                "S3": {
                    "$ref": "#/$defs/VerifiedAccessLogS3DestinationOptions"
                },
                "CloudWatchLogs": {
                    "$ref": "#/$defs/VerifiedAccessLogCloudWatchLogsDestinationOptions"
                },
                "KinesisDataFirehose": {
                    "$ref": "#/$defs/VerifiedAccessLogKinesisDataFirehoseDestinationOptions"
                },
                "LogVersion": {
                    "$ref": "#/$defs/String"
                },
                "IncludeTrustContext": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VerifiedAccessLogS3DestinationOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "BucketName": {
                    "$ref": "#/$defs/String"
                },
                "Prefix": {
                    "$ref": "#/$defs/String"
                },
                "BucketOwner": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VerifiedAccessLogCloudWatchLogsDestinationOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "LogGroup": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VerifiedAccessLogKinesisDataFirehoseDestinationOptions": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeliveryStream": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyVerifiedAccessTrustProviderResult": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProvider": {
                    "$ref": "#/$defs/VerifiedAccessTrustProvider"
                }
            }
        },
        "ModifyVerifiedAccessTrustProviderRequest": {
            "type": "object",
            "properties": {
                "VerifiedAccessTrustProviderId": {
                    "$ref": "#/$defs/VerifiedAccessTrustProviderId"
                },
                "OidcOptions": {
                    "$ref": "#/$defs/ModifyVerifiedAccessTrustProviderOidcOptions"
                },
                "DeviceOptions": {
                    "$ref": "#/$defs/ModifyVerifiedAccessTrustProviderDeviceOptions"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "SseSpecification": {
                    "$ref": "#/$defs/VerifiedAccessSseSpecificationRequest"
                },
                "NativeApplicationOidcOptions": {
                    "$ref": "#/$defs/ModifyVerifiedAccessNativeApplicationOidcOptions"
                }
            }
        },
        "ModifyVerifiedAccessTrustProviderOidcOptions": {
            "type": "object",
            "properties": {
                "Issuer": {
                    "$ref": "#/$defs/String"
                },
                "AuthorizationEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "TokenEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "UserInfoEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "ClientId": {
                    "$ref": "#/$defs/String"
                },
                "ClientSecret": {
                    "$ref": "#/$defs/ClientSecretType"
                },
                "Scope": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyVerifiedAccessTrustProviderDeviceOptions": {
            "type": "object",
            "properties": {
                "PublicSigningKeyUrl": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyVerifiedAccessNativeApplicationOidcOptions": {
            "type": "object",
            "properties": {
                "PublicSigningKeyEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "Issuer": {
                    "$ref": "#/$defs/String"
                },
                "AuthorizationEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "TokenEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "UserInfoEndpoint": {
                    "$ref": "#/$defs/String"
                },
                "ClientId": {
                    "$ref": "#/$defs/String"
                },
                "ClientSecret": {
                    "$ref": "#/$defs/ClientSecretType"
                },
                "Scope": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyVolumeResult": {
            "type": "object",
            "properties": {
                "VolumeModification": {
                    "$ref": "#/$defs/VolumeModification"
                }
            }
        },
        "ModifyVolumeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VolumeId": {
                    "$ref": "#/$defs/VolumeId"
                },
                "Size": {
                    "$ref": "#/$defs/Integer"
                },
                "VolumeType": {
                    "$ref": "#/$defs/VolumeType"
                },
                "Iops": {
                    "$ref": "#/$defs/Integer"
                },
                "Throughput": {
                    "$ref": "#/$defs/Integer"
                },
                "MultiAttachEnabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVolumeAttributeRequest": {
            "type": "object",
            "properties": {
                "AutoEnableIO": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "VolumeId": {
                    "$ref": "#/$defs/VolumeId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpcAttributeRequest": {
            "type": "object",
            "properties": {
                "EnableDnsHostnames": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "EnableDnsSupport": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                },
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "EnableNetworkAddressUsageMetrics": {
                    "$ref": "#/$defs/AttributeBooleanValue"
                }
            }
        },
        "ModifyVpcBlockPublicAccessExclusionResult": {
            "type": "object",
            "properties": {
                "VpcBlockPublicAccessExclusion": {
                    "$ref": "#/$defs/VpcBlockPublicAccessExclusion"
                }
            }
        },
        "ModifyVpcBlockPublicAccessExclusionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ExclusionId": {
                    "$ref": "#/$defs/VpcBlockPublicAccessExclusionId"
                },
                "InternetGatewayExclusionMode": {
                    "$ref": "#/$defs/InternetGatewayExclusionMode"
                }
            }
        },
        "ModifyVpcBlockPublicAccessOptionsResult": {
            "type": "object",
            "properties": {
                "VpcBlockPublicAccessOptions": {
                    "$ref": "#/$defs/VpcBlockPublicAccessOptions"
                }
            }
        },
        "ModifyVpcBlockPublicAccessOptionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InternetGatewayBlockMode": {
                    "$ref": "#/$defs/InternetGatewayBlockMode"
                }
            }
        },
        "ModifyVpcEndpointResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpcEndpointRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "ResetPolicy": {
                    "$ref": "#/$defs/Boolean"
                },
                "PolicyDocument": {
                    "$ref": "#/$defs/String"
                },
                "AddRouteTableIds": {
                    "$ref": "#/$defs/VpcEndpointRouteTableIdList"
                },
                "RemoveRouteTableIds": {
                    "$ref": "#/$defs/VpcEndpointRouteTableIdList"
                },
                "AddSubnetIds": {
                    "$ref": "#/$defs/VpcEndpointSubnetIdList"
                },
                "RemoveSubnetIds": {
                    "$ref": "#/$defs/VpcEndpointSubnetIdList"
                },
                "AddSecurityGroupIds": {
                    "$ref": "#/$defs/VpcEndpointSecurityGroupIdList"
                },
                "RemoveSecurityGroupIds": {
                    "$ref": "#/$defs/VpcEndpointSecurityGroupIdList"
                },
                "IpAddressType": {
                    "$ref": "#/$defs/IpAddressType"
                },
                "DnsOptions": {
                    "$ref": "#/$defs/DnsOptionsSpecification"
                },
                "PrivateDnsEnabled": {
                    "$ref": "#/$defs/Boolean"
                },
                "SubnetConfigurations": {
                    "$ref": "#/$defs/SubnetConfigurationsList"
                }
            }
        },
        "ModifyVpcEndpointConnectionNotificationResult": {
            "type": "object",
            "properties": {
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpcEndpointConnectionNotificationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ConnectionNotificationId": {
                    "$ref": "#/$defs/ConnectionNotificationId"
                },
                "ConnectionNotificationArn": {
                    "$ref": "#/$defs/String"
                },
                "ConnectionEvents": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "ModifyVpcEndpointServiceConfigurationResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpcEndpointServiceConfigurationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceId": {
                    "$ref": "#/$defs/VpcEndpointServiceId"
                },
                "PrivateDnsName": {
                    "$ref": "#/$defs/String"
                },
                "RemovePrivateDnsName": {
                    "$ref": "#/$defs/Boolean"
                },
                "AcceptanceRequired": {
                    "$ref": "#/$defs/Boolean"
                },
                "AddNetworkLoadBalancerArns": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "RemoveNetworkLoadBalancerArns": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "AddGatewayLoadBalancerArns": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "RemoveGatewayLoadBalancerArns": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "AddSupportedIpAddressTypes": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "RemoveSupportedIpAddressTypes": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "AddSupportedRegions": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "RemoveSupportedRegions": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "ModifyVpcEndpointServicePayerResponsibilityResult": {
            "type": "object",
            "properties": {
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpcEndpointServicePayerResponsibilityRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceId": {
                    "$ref": "#/$defs/VpcEndpointServiceId"
                },
                "PayerResponsibility": {
                    "$ref": "#/$defs/PayerResponsibility"
                }
            }
        },
        "ModifyVpcEndpointServicePermissionsResult": {
            "type": "object",
            "properties": {
                "AddedPrincipals": {
                    "$ref": "#/$defs/AddedPrincipalSet"
                },
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "AddedPrincipalSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AddedPrincipal"
            }
        },
        "AddedPrincipal": {
            "type": "object",
            "properties": {
                "PrincipalType": {
                    "$ref": "#/$defs/PrincipalType"
                },
                "Principal": {
                    "$ref": "#/$defs/String"
                },
                "ServicePermissionId": {
                    "$ref": "#/$defs/String"
                },
                "ServiceId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ModifyVpcEndpointServicePermissionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceId": {
                    "$ref": "#/$defs/VpcEndpointServiceId"
                },
                "AddAllowedPrincipals": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "RemoveAllowedPrincipals": {
                    "$ref": "#/$defs/ValueStringList"
                }
            }
        },
        "ModifyVpcPeeringConnectionOptionsResult": {
            "type": "object",
            "properties": {
                "AccepterPeeringConnectionOptions": {
                    "$ref": "#/$defs/PeeringConnectionOptions"
                },
                "RequesterPeeringConnectionOptions": {
                    "$ref": "#/$defs/PeeringConnectionOptions"
                }
            }
        },
        "PeeringConnectionOptions": {
            "type": "object",
            "properties": {
                "AllowDnsResolutionFromRemoteVpc": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllowEgressFromLocalClassicLinkToRemoteVpc": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllowEgressFromLocalVpcToRemoteClassicLink": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpcPeeringConnectionOptionsRequest": {
            "type": "object",
            "properties": {
                "AccepterPeeringConnectionOptions": {
                    "$ref": "#/$defs/PeeringConnectionOptionsRequest"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "RequesterPeeringConnectionOptions": {
                    "$ref": "#/$defs/PeeringConnectionOptionsRequest"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/VpcPeeringConnectionId"
                }
            }
        },
        "PeeringConnectionOptionsRequest": {
            "type": "object",
            "properties": {
                "AllowDnsResolutionFromRemoteVpc": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllowEgressFromLocalClassicLinkToRemoteVpc": {
                    "$ref": "#/$defs/Boolean"
                },
                "AllowEgressFromLocalVpcToRemoteClassicLink": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpcTenancyResult": {
            "type": "object",
            "properties": {
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpcTenancyRequest": {
            "type": "object",
            "properties": {
                "VpcId": {
                    "$ref": "#/$defs/VpcId"
                },
                "InstanceTenancy": {
                    "$ref": "#/$defs/VpcTenancy"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "VpcTenancy": {
            "enum": [
                "default"
            ]
        },
        "ModifyVpnConnectionResult": {
            "type": "object",
            "properties": {
                "VpnConnection": {
                    "$ref": "#/$defs/VpnConnection"
                }
            }
        },
        "ModifyVpnConnectionRequest": {
            "type": "object",
            "properties": {
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "CustomerGatewayId": {
                    "$ref": "#/$defs/CustomerGatewayId"
                },
                "VpnGatewayId": {
                    "$ref": "#/$defs/VpnGatewayId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpnConnectionOptionsResult": {
            "type": "object",
            "properties": {
                "VpnConnection": {
                    "$ref": "#/$defs/VpnConnection"
                }
            }
        },
        "ModifyVpnConnectionOptionsRequest": {
            "type": "object",
            "properties": {
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                },
                "LocalIpv4NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "RemoteIpv4NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "LocalIpv6NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "RemoteIpv6NetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpnTunnelCertificateResult": {
            "type": "object",
            "properties": {
                "VpnConnection": {
                    "$ref": "#/$defs/VpnConnection"
                }
            }
        },
        "ModifyVpnTunnelCertificateRequest": {
            "type": "object",
            "properties": {
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                },
                "VpnTunnelOutsideIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpnTunnelOptionsResult": {
            "type": "object",
            "properties": {
                "VpnConnection": {
                    "$ref": "#/$defs/VpnConnection"
                }
            }
        },
        "ModifyVpnTunnelOptionsRequest": {
            "type": "object",
            "properties": {
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                },
                "VpnTunnelOutsideIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "TunnelOptions": {
                    "$ref": "#/$defs/ModifyVpnTunnelOptionsSpecification"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SkipTunnelReplacement": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ModifyVpnTunnelOptionsSpecification": {
            "type": "object",
            "properties": {
                "TunnelInsideCidr": {
                    "$ref": "#/$defs/String"
                },
                "TunnelInsideIpv6Cidr": {
                    "$ref": "#/$defs/String"
                },
                "PreSharedKey": {
                    "$ref": "#/$defs/preSharedKey"
                },
                "Phase1LifetimeSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "Phase2LifetimeSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "RekeyMarginTimeSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "RekeyFuzzPercentage": {
                    "$ref": "#/$defs/Integer"
                },
                "ReplayWindowSize": {
                    "$ref": "#/$defs/Integer"
                },
                "DPDTimeoutSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "DPDTimeoutAction": {
                    "$ref": "#/$defs/String"
                },
                "Phase1EncryptionAlgorithms": {
                    "$ref": "#/$defs/Phase1EncryptionAlgorithmsRequestList"
                },
                "Phase2EncryptionAlgorithms": {
                    "$ref": "#/$defs/Phase2EncryptionAlgorithmsRequestList"
                },
                "Phase1IntegrityAlgorithms": {
                    "$ref": "#/$defs/Phase1IntegrityAlgorithmsRequestList"
                },
                "Phase2IntegrityAlgorithms": {
                    "$ref": "#/$defs/Phase2IntegrityAlgorithmsRequestList"
                },
                "Phase1DHGroupNumbers": {
                    "$ref": "#/$defs/Phase1DHGroupNumbersRequestList"
                },
                "Phase2DHGroupNumbers": {
                    "$ref": "#/$defs/Phase2DHGroupNumbersRequestList"
                },
                "IKEVersions": {
                    "$ref": "#/$defs/IKEVersionsRequestList"
                },
                "StartupAction": {
                    "$ref": "#/$defs/String"
                },
                "LogOptions": {
                    "$ref": "#/$defs/VpnTunnelLogOptionsSpecification"
                },
                "EnableTunnelLifecycleControl": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "MonitorInstancesResult": {
            "type": "object",
            "properties": {
                "InstanceMonitorings": {
                    "$ref": "#/$defs/InstanceMonitoringList"
                }
            }
        },
        "InstanceMonitoringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceMonitoring"
            }
        },
        "InstanceMonitoring": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "Monitoring": {
                    "$ref": "#/$defs/Monitoring"
                }
            }
        },
        "MonitorInstancesRequest": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "MoveAddressToVpcResult": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "Status": {
            "enum": [
                "moveInProgress",
                "inVpc",
                "inClassic"
            ]
        },
        "MoveAddressToVpcRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MoveByoipCidrToIpamResult": {
            "type": "object",
            "properties": {
                "ByoipCidr": {
                    "$ref": "#/$defs/ByoipCidr"
                }
            }
        },
        "MoveByoipCidrToIpamRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "IpamPoolOwner": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "MoveCapacityReservationInstancesResult": {
            "type": "object",
            "properties": {
                "SourceCapacityReservation": {
                    "$ref": "#/$defs/CapacityReservation"
                },
                "DestinationCapacityReservation": {
                    "$ref": "#/$defs/CapacityReservation"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "MoveCapacityReservationInstancesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "SourceCapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "DestinationCapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "ProvisionByoipCidrResult": {
            "type": "object",
            "properties": {
                "ByoipCidr": {
                    "$ref": "#/$defs/ByoipCidr"
                }
            }
        },
        "ProvisionByoipCidrRequest": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "CidrAuthorizationContext": {
                    "$ref": "#/$defs/CidrAuthorizationContext"
                },
                "PubliclyAdvertisable": {
                    "$ref": "#/$defs/Boolean"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PoolTagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "MultiRegion": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CidrAuthorizationContext": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/String"
                },
                "Signature": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ProvisionIpamByoasnResult": {
            "type": "object",
            "properties": {
                "Byoasn": {
                    "$ref": "#/$defs/Byoasn"
                }
            }
        },
        "ProvisionIpamByoasnRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamId": {
                    "$ref": "#/$defs/IpamId"
                },
                "Asn": {
                    "$ref": "#/$defs/String"
                },
                "AsnAuthorizationContext": {
                    "$ref": "#/$defs/AsnAuthorizationContext"
                }
            }
        },
        "AsnAuthorizationContext": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/String"
                },
                "Signature": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ProvisionIpamPoolCidrResult": {
            "type": "object",
            "properties": {
                "IpamPoolCidr": {
                    "$ref": "#/$defs/IpamPoolCidr"
                }
            }
        },
        "ProvisionIpamPoolCidrRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "CidrAuthorizationContext": {
                    "$ref": "#/$defs/IpamCidrAuthorizationContext"
                },
                "NetmaskLength": {
                    "$ref": "#/$defs/Integer"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "VerificationMethod": {
                    "$ref": "#/$defs/VerificationMethod"
                },
                "IpamExternalResourceVerificationTokenId": {
                    "$ref": "#/$defs/IpamExternalResourceVerificationTokenId"
                }
            }
        },
        "IpamCidrAuthorizationContext": {
            "type": "object",
            "properties": {
                "Message": {
                    "$ref": "#/$defs/String"
                },
                "Signature": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "VerificationMethod": {
            "enum": [
                "remarks_x509",
                "dns_token"
            ]
        },
        "ProvisionPublicIpv4PoolCidrResult": {
            "type": "object",
            "properties": {
                "PoolId": {
                    "$ref": "#/$defs/Ipv4PoolEc2Id"
                },
                "PoolAddressRange": {
                    "$ref": "#/$defs/PublicIpv4PoolRange"
                }
            }
        },
        "ProvisionPublicIpv4PoolCidrRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "PoolId": {
                    "$ref": "#/$defs/Ipv4PoolEc2Id"
                },
                "NetmaskLength": {
                    "$ref": "#/$defs/Integer"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PurchaseCapacityBlockResult": {
            "type": "object",
            "properties": {
                "CapacityReservation": {
                    "$ref": "#/$defs/CapacityReservation"
                }
            }
        },
        "PurchaseCapacityBlockRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "CapacityBlockOfferingId": {
                    "$ref": "#/$defs/OfferingId"
                },
                "InstancePlatform": {
                    "$ref": "#/$defs/CapacityReservationInstancePlatform"
                }
            }
        },
        "PurchaseCapacityBlockExtensionResult": {
            "type": "object",
            "properties": {
                "CapacityBlockExtensions": {
                    "$ref": "#/$defs/CapacityBlockExtensionSet"
                }
            }
        },
        "PurchaseCapacityBlockExtensionRequest": {
            "type": "object",
            "properties": {
                "CapacityBlockExtensionOfferingId": {
                    "$ref": "#/$defs/OfferingId"
                },
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "PurchaseHostReservationResult": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                },
                "Purchase": {
                    "$ref": "#/$defs/PurchaseSet"
                },
                "TotalHourlyPrice": {
                    "$ref": "#/$defs/String"
                },
                "TotalUpfrontPrice": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PurchaseHostReservationRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                },
                "HostIdSet": {
                    "$ref": "#/$defs/RequestHostIdSet"
                },
                "LimitPrice": {
                    "$ref": "#/$defs/String"
                },
                "OfferingId": {
                    "$ref": "#/$defs/OfferingId"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "PurchaseReservedInstancesOfferingResult": {
            "type": "object",
            "properties": {
                "ReservedInstancesId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "PurchaseReservedInstancesOfferingRequest": {
            "type": "object",
            "properties": {
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ReservedInstancesOfferingId": {
                    "$ref": "#/$defs/ReservedInstancesOfferingId"
                },
                "PurchaseTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "LimitPrice": {
                    "$ref": "#/$defs/ReservedInstanceLimitPrice"
                }
            }
        },
        "ReservedInstanceLimitPrice": {
            "type": "object",
            "properties": {
                "Amount": {
                    "$ref": "#/$defs/Double"
                },
                "CurrencyCode": {
                    "$ref": "#/$defs/CurrencyCodeValues"
                }
            }
        },
        "PurchaseScheduledInstancesResult": {
            "type": "object",
            "properties": {
                "ScheduledInstanceSet": {
                    "$ref": "#/$defs/PurchasedScheduledInstanceSet"
                }
            }
        },
        "PurchasedScheduledInstanceSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledInstance"
            }
        },
        "PurchaseScheduledInstancesRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PurchaseRequests": {
                    "$ref": "#/$defs/PurchaseRequestSet"
                }
            }
        },
        "PurchaseRequestSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PurchaseRequest"
            }
        },
        "PurchaseRequest": {
            "type": "object",
            "properties": {
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "PurchaseToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RebootInstancesRequest": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RegisterImageResult": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RegisterImageRequest": {
            "type": "object",
            "properties": {
                "ImageLocation": {
                    "$ref": "#/$defs/String"
                },
                "BillingProducts": {
                    "$ref": "#/$defs/BillingProductList"
                },
                "BootMode": {
                    "$ref": "#/$defs/BootModeValues"
                },
                "TpmSupport": {
                    "$ref": "#/$defs/TpmSupportValues"
                },
                "UefiData": {
                    "$ref": "#/$defs/StringType"
                },
                "ImdsSupport": {
                    "$ref": "#/$defs/ImdsSupportValues"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Architecture": {
                    "$ref": "#/$defs/ArchitectureValues"
                },
                "KernelId": {
                    "$ref": "#/$defs/KernelId"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/RamdiskId"
                },
                "RootDeviceName": {
                    "$ref": "#/$defs/String"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappingRequestList"
                },
                "VirtualizationType": {
                    "$ref": "#/$defs/String"
                },
                "SriovNetSupport": {
                    "$ref": "#/$defs/String"
                },
                "EnaSupport": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "BillingProductList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "StringType": {
            "type": "string"
        },
        "RegisterInstanceEventNotificationAttributesResult": {
            "type": "object",
            "properties": {
                "InstanceTagAttribute": {
                    "$ref": "#/$defs/InstanceTagNotificationAttribute"
                }
            }
        },
        "RegisterInstanceEventNotificationAttributesRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceTagAttribute": {
                    "$ref": "#/$defs/RegisterInstanceTagAttributeRequest"
                }
            }
        },
        "RegisterInstanceTagAttributeRequest": {
            "type": "object",
            "properties": {
                "IncludeAllTagsOfInstance": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceTagKeys": {
                    "$ref": "#/$defs/InstanceTagKeySet"
                }
            }
        },
        "RegisterTransitGatewayMulticastGroupMembersResult": {
            "type": "object",
            "properties": {
                "RegisteredMulticastGroupMembers": {
                    "$ref": "#/$defs/TransitGatewayMulticastRegisteredGroupMembers"
                }
            }
        },
        "TransitGatewayMulticastRegisteredGroupMembers": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/String"
                },
                "RegisteredNetworkInterfaceIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "GroupIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RegisterTransitGatewayMulticastGroupMembersRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "GroupIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceIds": {
                    "$ref": "#/$defs/TransitGatewayNetworkInterfaceIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RegisterTransitGatewayMulticastGroupSourcesResult": {
            "type": "object",
            "properties": {
                "RegisteredMulticastGroupSources": {
                    "$ref": "#/$defs/TransitGatewayMulticastRegisteredGroupSources"
                }
            }
        },
        "TransitGatewayMulticastRegisteredGroupSources": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/String"
                },
                "RegisteredNetworkInterfaceIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "GroupIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RegisterTransitGatewayMulticastGroupSourcesRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "GroupIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceIds": {
                    "$ref": "#/$defs/TransitGatewayNetworkInterfaceIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RejectCapacityReservationBillingOwnershipResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RejectCapacityReservationBillingOwnershipRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "CapacityReservationId": {
                    "$ref": "#/$defs/CapacityReservationId"
                }
            }
        },
        "RejectTransitGatewayMulticastDomainAssociationsResult": {
            "type": "object",
            "properties": {
                "Associations": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainAssociations"
                }
            }
        },
        "RejectTransitGatewayMulticastDomainAssociationsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "SubnetIds": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RejectTransitGatewayPeeringAttachmentResult": {
            "type": "object",
            "properties": {
                "TransitGatewayPeeringAttachment": {
                    "$ref": "#/$defs/TransitGatewayPeeringAttachment"
                }
            }
        },
        "RejectTransitGatewayPeeringAttachmentRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RejectTransitGatewayVpcAttachmentResult": {
            "type": "object",
            "properties": {
                "TransitGatewayVpcAttachment": {
                    "$ref": "#/$defs/TransitGatewayVpcAttachment"
                }
            }
        },
        "RejectTransitGatewayVpcAttachmentRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RejectVpcEndpointConnectionsResult": {
            "type": "object",
            "properties": {
                "Unsuccessful": {
                    "$ref": "#/$defs/UnsuccessfulItemSet"
                }
            }
        },
        "RejectVpcEndpointConnectionsRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceId": {
                    "$ref": "#/$defs/VpcEndpointServiceId"
                },
                "VpcEndpointIds": {
                    "$ref": "#/$defs/VpcEndpointIdList"
                }
            }
        },
        "RejectVpcPeeringConnectionResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RejectVpcPeeringConnectionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/VpcPeeringConnectionId"
                }
            }
        },
        "ReleaseAddressRequest": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/AllocationId"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                },
                "NetworkBorderGroup": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ReleaseHostsResult": {
            "type": "object",
            "properties": {
                "Successful": {
                    "$ref": "#/$defs/ResponseHostIdList"
                },
                "Unsuccessful": {
                    "$ref": "#/$defs/UnsuccessfulItemList"
                }
            }
        },
        "ReleaseHostsRequest": {
            "type": "object",
            "properties": {
                "HostIds": {
                    "$ref": "#/$defs/RequestHostIdList"
                }
            }
        },
        "ReleaseIpamPoolAllocationResult": {
            "type": "object",
            "properties": {
                "Success": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ReleaseIpamPoolAllocationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpamPoolId": {
                    "$ref": "#/$defs/IpamPoolId"
                },
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "IpamPoolAllocationId": {
                    "$ref": "#/$defs/IpamPoolAllocationId"
                }
            }
        },
        "ReplaceIamInstanceProfileAssociationResult": {
            "type": "object",
            "properties": {
                "IamInstanceProfileAssociation": {
                    "$ref": "#/$defs/IamInstanceProfileAssociation"
                }
            }
        },
        "ReplaceIamInstanceProfileAssociationRequest": {
            "type": "object",
            "properties": {
                "IamInstanceProfile": {
                    "$ref": "#/$defs/IamInstanceProfileSpecification"
                },
                "AssociationId": {
                    "$ref": "#/$defs/IamInstanceProfileAssociationId"
                }
            }
        },
        "ReplaceImageCriteriaInAllowedImagesSettingsResult": {
            "type": "object",
            "properties": {
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ReplaceImageCriteriaInAllowedImagesSettingsRequest": {
            "type": "object",
            "properties": {
                "ImageCriteria": {
                    "$ref": "#/$defs/ImageCriterionRequestList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ImageCriterionRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImageCriterionRequest"
            }
        },
        "ImageCriterionRequest": {
            "type": "object",
            "properties": {
                "ImageProviders": {
                    "$ref": "#/$defs/ImageProviderRequestList"
                }
            }
        },
        "ImageProviderRequestList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImageProviderRequest"
            }
        },
        "ImageProviderRequest": {
            "type": "string"
        },
        "ReplaceNetworkAclAssociationResult": {
            "type": "object",
            "properties": {
                "NewAssociationId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ReplaceNetworkAclAssociationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "AssociationId": {
                    "$ref": "#/$defs/NetworkAclAssociationId"
                },
                "NetworkAclId": {
                    "$ref": "#/$defs/NetworkAclId"
                }
            }
        },
        "NetworkAclAssociationId": {
            "type": "string"
        },
        "ReplaceNetworkAclEntryRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkAclId": {
                    "$ref": "#/$defs/NetworkAclId"
                },
                "RuleNumber": {
                    "$ref": "#/$defs/Integer"
                },
                "Protocol": {
                    "$ref": "#/$defs/String"
                },
                "RuleAction": {
                    "$ref": "#/$defs/RuleAction"
                },
                "Egress": {
                    "$ref": "#/$defs/Boolean"
                },
                "CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "Ipv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "IcmpTypeCode": {
                    "$ref": "#/$defs/IcmpTypeCode"
                },
                "PortRange": {
                    "$ref": "#/$defs/PortRange"
                }
            }
        },
        "ReplaceRouteRequest": {
            "type": "object",
            "properties": {
                "DestinationPrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "VpcEndpointId": {
                    "$ref": "#/$defs/VpcEndpointId"
                },
                "LocalTarget": {
                    "$ref": "#/$defs/Boolean"
                },
                "TransitGatewayId": {
                    "$ref": "#/$defs/TransitGatewayId"
                },
                "LocalGatewayId": {
                    "$ref": "#/$defs/LocalGatewayId"
                },
                "CarrierGatewayId": {
                    "$ref": "#/$defs/CarrierGatewayId"
                },
                "CoreNetworkArn": {
                    "$ref": "#/$defs/CoreNetworkArn"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "RouteTableId": {
                    "$ref": "#/$defs/RouteTableId"
                },
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "GatewayId": {
                    "$ref": "#/$defs/RouteGatewayId"
                },
                "DestinationIpv6CidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "EgressOnlyInternetGatewayId": {
                    "$ref": "#/$defs/EgressOnlyInternetGatewayId"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "VpcPeeringConnectionId": {
                    "$ref": "#/$defs/VpcPeeringConnectionId"
                },
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                }
            }
        },
        "ReplaceRouteTableAssociationResult": {
            "type": "object",
            "properties": {
                "NewAssociationId": {
                    "$ref": "#/$defs/String"
                },
                "AssociationState": {
                    "$ref": "#/$defs/RouteTableAssociationState"
                }
            }
        },
        "ReplaceRouteTableAssociationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "AssociationId": {
                    "$ref": "#/$defs/RouteTableAssociationId"
                },
                "RouteTableId": {
                    "$ref": "#/$defs/RouteTableId"
                }
            }
        },
        "ReplaceTransitGatewayRouteResult": {
            "type": "object",
            "properties": {
                "Route": {
                    "$ref": "#/$defs/TransitGatewayRoute"
                }
            }
        },
        "ReplaceTransitGatewayRouteRequest": {
            "type": "object",
            "properties": {
                "DestinationCidrBlock": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/TransitGatewayAttachmentId"
                },
                "Blackhole": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ReplaceVpnTunnelResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ReplaceVpnTunnelRequest": {
            "type": "object",
            "properties": {
                "VpnConnectionId": {
                    "$ref": "#/$defs/VpnConnectionId"
                },
                "VpnTunnelOutsideIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "ApplyPendingMaintenance": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ReportInstanceStatusRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Instances": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "Status": {
                    "$ref": "#/$defs/ReportStatusType"
                },
                "StartTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "EndTime": {
                    "$ref": "#/$defs/DateTime"
                },
                "ReasonCodes": {
                    "$ref": "#/$defs/ReasonCodesList"
                },
                "Description": {
                    "$ref": "#/$defs/ReportInstanceStatusRequestDescription"
                }
            }
        },
        "ReportStatusType": {
            "enum": [
                "ok",
                "impaired"
            ]
        },
        "ReasonCodesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReportInstanceReasonCodes"
            }
        },
        "ReportInstanceReasonCodes": {
            "enum": [
                "instance_stuck_in_state",
                "unresponsive",
                "not_accepting_credentials",
                "password_not_available",
                "performance_network",
                "performance_instance_store",
                "performance_ebs_volume",
                "performance_other",
                "other"
            ]
        },
        "ReportInstanceStatusRequestDescription": {
            "type": "string"
        },
        "RequestSpotFleetResponse": {
            "type": "object",
            "properties": {
                "SpotFleetRequestId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RequestSpotFleetRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SpotFleetRequestConfig": {
                    "$ref": "#/$defs/SpotFleetRequestConfigData"
                }
            }
        },
        "RequestSpotInstancesResult": {
            "type": "object",
            "properties": {
                "SpotInstanceRequests": {
                    "$ref": "#/$defs/SpotInstanceRequestList"
                }
            }
        },
        "RequestSpotInstancesRequest": {
            "type": "object",
            "properties": {
                "LaunchSpecification": {
                    "$ref": "#/$defs/RequestSpotLaunchSpecification"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "InstanceInterruptionBehavior": {
                    "$ref": "#/$defs/InstanceInterruptionBehavior"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "SpotPrice": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Type": {
                    "$ref": "#/$defs/SpotInstanceType"
                },
                "ValidFrom": {
                    "$ref": "#/$defs/DateTime"
                },
                "ValidUntil": {
                    "$ref": "#/$defs/DateTime"
                },
                "LaunchGroup": {
                    "$ref": "#/$defs/String"
                },
                "AvailabilityZoneGroup": {
                    "$ref": "#/$defs/String"
                },
                "BlockDurationMinutes": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "RequestSpotLaunchSpecification": {
            "type": "object",
            "properties": {
                "SecurityGroupIds": {
                    "$ref": "#/$defs/RequestSpotLaunchSpecificationSecurityGroupIdList"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/RequestSpotLaunchSpecificationSecurityGroupList"
                },
                "AddressingType": {
                    "$ref": "#/$defs/String"
                },
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappingList"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/IamInstanceProfileSpecification"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "KernelId": {
                    "$ref": "#/$defs/KernelId"
                },
                "KeyName": {
                    "$ref": "#/$defs/KeyPairNameWithResolver"
                },
                "Monitoring": {
                    "$ref": "#/$defs/RunInstancesMonitoringEnabled"
                },
                "NetworkInterfaces": {
                    "$ref": "#/$defs/InstanceNetworkInterfaceSpecificationList"
                },
                "Placement": {
                    "$ref": "#/$defs/SpotPlacement"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/RamdiskId"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "UserData": {
                    "$ref": "#/$defs/SensitiveUserData"
                }
            }
        },
        "RequestSpotLaunchSpecificationSecurityGroupIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "RequestSpotLaunchSpecificationSecurityGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "ResetAddressAttributeResult": {
            "type": "object",
            "properties": {
                "Address": {
                    "$ref": "#/$defs/AddressAttribute"
                }
            }
        },
        "ResetAddressAttributeRequest": {
            "type": "object",
            "properties": {
                "AllocationId": {
                    "$ref": "#/$defs/AllocationId"
                },
                "Attribute": {
                    "$ref": "#/$defs/AddressAttributeName"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ResetEbsDefaultKmsKeyIdResult": {
            "type": "object",
            "properties": {
                "KmsKeyId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ResetEbsDefaultKmsKeyIdRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ResetFpgaImageAttributeResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ResetFpgaImageAttributeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "FpgaImageId": {
                    "$ref": "#/$defs/FpgaImageId"
                },
                "Attribute": {
                    "$ref": "#/$defs/ResetFpgaImageAttributeName"
                }
            }
        },
        "ResetFpgaImageAttributeName": {
            "enum": [
                "loadPermission"
            ]
        },
        "ResetImageAttributeRequest": {
            "type": "object",
            "properties": {
                "Attribute": {
                    "$ref": "#/$defs/ResetImageAttributeName"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ResetImageAttributeName": {
            "enum": [
                "launchPermission"
            ]
        },
        "ResetInstanceAttributeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "Attribute": {
                    "$ref": "#/$defs/InstanceAttributeName"
                }
            }
        },
        "ResetNetworkInterfaceAttributeRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "SourceDestCheck": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ResetSnapshotAttributeRequest": {
            "type": "object",
            "properties": {
                "Attribute": {
                    "$ref": "#/$defs/SnapshotAttributeName"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RestoreAddressToClassicResult": {
            "type": "object",
            "properties": {
                "PublicIp": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/Status"
                }
            }
        },
        "RestoreAddressToClassicRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PublicIp": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RestoreImageFromRecycleBinResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RestoreImageFromRecycleBinRequest": {
            "type": "object",
            "properties": {
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RestoreManagedPrefixListVersionResult": {
            "type": "object",
            "properties": {
                "PrefixList": {
                    "$ref": "#/$defs/ManagedPrefixList"
                }
            }
        },
        "RestoreManagedPrefixListVersionRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "PreviousVersion": {
                    "$ref": "#/$defs/Long"
                },
                "CurrentVersion": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "RestoreSnapshotFromRecycleBinResult": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "OutpostArn": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "OwnerId": {
                    "$ref": "#/$defs/String"
                },
                "Progress": {
                    "$ref": "#/$defs/String"
                },
                "StartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "State": {
                    "$ref": "#/$defs/SnapshotState"
                },
                "VolumeId": {
                    "$ref": "#/$defs/String"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "SseType": {
                    "$ref": "#/$defs/SSEType"
                }
            }
        },
        "RestoreSnapshotFromRecycleBinRequest": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RestoreSnapshotTierResult": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                },
                "RestoreStartTime": {
                    "$ref": "#/$defs/MillisecondDateTime"
                },
                "RestoreDuration": {
                    "$ref": "#/$defs/Integer"
                },
                "IsPermanentRestore": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RestoreSnapshotTierRequest": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "TemporaryRestoreDays": {
                    "$ref": "#/$defs/RestoreSnapshotTierRequestTemporaryRestoreDays"
                },
                "PermanentRestore": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RestoreSnapshotTierRequestTemporaryRestoreDays": {
            "type": "integer",
            "format": "int32"
        },
        "RevokeClientVpnIngressResult": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/ClientVpnAuthorizationRuleStatus"
                }
            }
        },
        "RevokeClientVpnIngressRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "TargetNetworkCidr": {
                    "$ref": "#/$defs/String"
                },
                "AccessGroupId": {
                    "$ref": "#/$defs/String"
                },
                "RevokeAllGroups": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RevokeSecurityGroupEgressResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                },
                "UnknownIpPermissions": {
                    "$ref": "#/$defs/IpPermissionList"
                },
                "RevokedSecurityGroupRules": {
                    "$ref": "#/$defs/RevokedSecurityGroupRuleList"
                }
            }
        },
        "RevokedSecurityGroupRuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RevokedSecurityGroupRule"
            }
        },
        "RevokedSecurityGroupRule": {
            "type": "object",
            "properties": {
                "SecurityGroupRuleId": {
                    "$ref": "#/$defs/SecurityGroupRuleId"
                },
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "IsEgress": {
                    "$ref": "#/$defs/Boolean"
                },
                "IpProtocol": {
                    "$ref": "#/$defs/String"
                },
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                },
                "CidrIpv4": {
                    "$ref": "#/$defs/String"
                },
                "CidrIpv6": {
                    "$ref": "#/$defs/String"
                },
                "PrefixListId": {
                    "$ref": "#/$defs/PrefixListResourceId"
                },
                "ReferencedGroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "RevokeSecurityGroupEgressRequest": {
            "type": "object",
            "properties": {
                "SecurityGroupRuleIds": {
                    "$ref": "#/$defs/SecurityGroupRuleIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "SourceSecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "SourceSecurityGroupOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "IpProtocol": {
                    "$ref": "#/$defs/String"
                },
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                },
                "CidrIp": {
                    "$ref": "#/$defs/String"
                },
                "IpPermissions": {
                    "$ref": "#/$defs/IpPermissionList"
                }
            }
        },
        "RevokeSecurityGroupIngressResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                },
                "UnknownIpPermissions": {
                    "$ref": "#/$defs/IpPermissionList"
                },
                "RevokedSecurityGroupRules": {
                    "$ref": "#/$defs/RevokedSecurityGroupRuleList"
                }
            }
        },
        "RevokeSecurityGroupIngressRequest": {
            "type": "object",
            "properties": {
                "CidrIp": {
                    "$ref": "#/$defs/String"
                },
                "FromPort": {
                    "$ref": "#/$defs/Integer"
                },
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "GroupName": {
                    "$ref": "#/$defs/SecurityGroupName"
                },
                "IpPermissions": {
                    "$ref": "#/$defs/IpPermissionList"
                },
                "IpProtocol": {
                    "$ref": "#/$defs/String"
                },
                "SourceSecurityGroupName": {
                    "$ref": "#/$defs/String"
                },
                "SourceSecurityGroupOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "ToPort": {
                    "$ref": "#/$defs/Integer"
                },
                "SecurityGroupRuleIds": {
                    "$ref": "#/$defs/SecurityGroupRuleIdList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RunInstancesRequest": {
            "type": "object",
            "properties": {
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/BlockDeviceMappingRequestList"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "InstanceType": {
                    "$ref": "#/$defs/InstanceType"
                },
                "Ipv6AddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Addresses": {
                    "$ref": "#/$defs/InstanceIpv6AddressList"
                },
                "KernelId": {
                    "$ref": "#/$defs/KernelId"
                },
                "KeyName": {
                    "$ref": "#/$defs/KeyPairName"
                },
                "MaxCount": {
                    "$ref": "#/$defs/Integer"
                },
                "MinCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Monitoring": {
                    "$ref": "#/$defs/RunInstancesMonitoringEnabled"
                },
                "Placement": {
                    "$ref": "#/$defs/Placement"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/RamdiskId"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/SecurityGroupIdStringList"
                },
                "SecurityGroups": {
                    "$ref": "#/$defs/SecurityGroupStringList"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "UserData": {
                    "$ref": "#/$defs/RunInstancesUserData"
                },
                "ElasticGpuSpecification": {
                    "$ref": "#/$defs/ElasticGpuSpecifications"
                },
                "ElasticInferenceAccelerators": {
                    "$ref": "#/$defs/ElasticInferenceAccelerators"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "LaunchTemplate": {
                    "$ref": "#/$defs/LaunchTemplateSpecification"
                },
                "InstanceMarketOptions": {
                    "$ref": "#/$defs/InstanceMarketOptionsRequest"
                },
                "CreditSpecification": {
                    "$ref": "#/$defs/CreditSpecificationRequest"
                },
                "CpuOptions": {
                    "$ref": "#/$defs/CpuOptionsRequest"
                },
                "CapacityReservationSpecification": {
                    "$ref": "#/$defs/CapacityReservationSpecification"
                },
                "HibernationOptions": {
                    "$ref": "#/$defs/HibernationOptionsRequest"
                },
                "LicenseSpecifications": {
                    "$ref": "#/$defs/LicenseSpecificationListRequest"
                },
                "MetadataOptions": {
                    "$ref": "#/$defs/InstanceMetadataOptionsRequest"
                },
                "EnclaveOptions": {
                    "$ref": "#/$defs/EnclaveOptionsRequest"
                },
                "PrivateDnsNameOptions": {
                    "$ref": "#/$defs/PrivateDnsNameOptionsRequest"
                },
                "MaintenanceOptions": {
                    "$ref": "#/$defs/InstanceMaintenanceOptionsRequest"
                },
                "DisableApiStop": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnablePrimaryIpv6": {
                    "$ref": "#/$defs/Boolean"
                },
                "NetworkPerformanceOptions": {
                    "$ref": "#/$defs/InstanceNetworkPerformanceOptionsRequest"
                },
                "Operator": {
                    "$ref": "#/$defs/OperatorRequest"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "DisableApiTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceInitiatedShutdownBehavior": {
                    "$ref": "#/$defs/ShutdownBehavior"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "AdditionalInfo": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaces": {
                    "$ref": "#/$defs/InstanceNetworkInterfaceSpecificationList"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/IamInstanceProfileSpecification"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "RunInstancesUserData": {
            "type": "string"
        },
        "ElasticGpuSpecifications": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticGpuSpecification"
            }
        },
        "ElasticInferenceAccelerators": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ElasticInferenceAccelerator"
            }
        },
        "ElasticInferenceAccelerator": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/String"
                },
                "Count": {
                    "$ref": "#/$defs/ElasticInferenceAcceleratorCount"
                }
            }
        },
        "ElasticInferenceAcceleratorCount": {
            "type": "integer",
            "format": "int32"
        },
        "LaunchTemplateSpecification": {
            "type": "object",
            "properties": {
                "LaunchTemplateId": {
                    "$ref": "#/$defs/LaunchTemplateId"
                },
                "LaunchTemplateName": {
                    "$ref": "#/$defs/String"
                },
                "Version": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceMarketOptionsRequest": {
            "type": "object",
            "properties": {
                "MarketType": {
                    "$ref": "#/$defs/MarketType"
                },
                "SpotOptions": {
                    "$ref": "#/$defs/SpotMarketOptions"
                }
            }
        },
        "SpotMarketOptions": {
            "type": "object",
            "properties": {
                "MaxPrice": {
                    "$ref": "#/$defs/String"
                },
                "SpotInstanceType": {
                    "$ref": "#/$defs/SpotInstanceType"
                },
                "BlockDurationMinutes": {
                    "$ref": "#/$defs/Integer"
                },
                "ValidUntil": {
                    "$ref": "#/$defs/DateTime"
                },
                "InstanceInterruptionBehavior": {
                    "$ref": "#/$defs/InstanceInterruptionBehavior"
                }
            }
        },
        "CpuOptionsRequest": {
            "type": "object",
            "properties": {
                "CoreCount": {
                    "$ref": "#/$defs/Integer"
                },
                "ThreadsPerCore": {
                    "$ref": "#/$defs/Integer"
                },
                "AmdSevSnp": {
                    "$ref": "#/$defs/AmdSevSnpSpecification"
                }
            }
        },
        "HibernationOptionsRequest": {
            "type": "object",
            "properties": {
                "Configured": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LicenseSpecificationListRequest": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LicenseConfigurationRequest"
            }
        },
        "LicenseConfigurationRequest": {
            "type": "object",
            "properties": {
                "LicenseConfigurationArn": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "InstanceMetadataOptionsRequest": {
            "type": "object",
            "properties": {
                "HttpTokens": {
                    "$ref": "#/$defs/HttpTokensState"
                },
                "HttpPutResponseHopLimit": {
                    "$ref": "#/$defs/Integer"
                },
                "HttpEndpoint": {
                    "$ref": "#/$defs/InstanceMetadataEndpointState"
                },
                "HttpProtocolIpv6": {
                    "$ref": "#/$defs/InstanceMetadataProtocolState"
                },
                "InstanceMetadataTags": {
                    "$ref": "#/$defs/InstanceMetadataTagsState"
                }
            }
        },
        "EnclaveOptionsRequest": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "PrivateDnsNameOptionsRequest": {
            "type": "object",
            "properties": {
                "HostnameType": {
                    "$ref": "#/$defs/HostnameType"
                },
                "EnableResourceNameDnsARecord": {
                    "$ref": "#/$defs/Boolean"
                },
                "EnableResourceNameDnsAAAARecord": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "InstanceMaintenanceOptionsRequest": {
            "type": "object",
            "properties": {
                "AutoRecovery": {
                    "$ref": "#/$defs/InstanceAutoRecoveryState"
                }
            }
        },
        "InstanceNetworkPerformanceOptionsRequest": {
            "type": "object",
            "properties": {
                "BandwidthWeighting": {
                    "$ref": "#/$defs/InstanceBandwidthWeighting"
                }
            }
        },
        "RunScheduledInstancesResult": {
            "type": "object",
            "properties": {
                "InstanceIdSet": {
                    "$ref": "#/$defs/InstanceIdSet"
                }
            }
        },
        "InstanceIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceId"
            }
        },
        "RunScheduledInstancesRequest": {
            "type": "object",
            "properties": {
                "ClientToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "InstanceCount": {
                    "$ref": "#/$defs/Integer"
                },
                "LaunchSpecification": {
                    "$ref": "#/$defs/ScheduledInstancesLaunchSpecification"
                },
                "ScheduledInstanceId": {
                    "$ref": "#/$defs/ScheduledInstanceId"
                }
            }
        },
        "ScheduledInstancesLaunchSpecification": {
            "type": "object",
            "properties": {
                "BlockDeviceMappings": {
                    "$ref": "#/$defs/ScheduledInstancesBlockDeviceMappingSet"
                },
                "EbsOptimized": {
                    "$ref": "#/$defs/Boolean"
                },
                "IamInstanceProfile": {
                    "$ref": "#/$defs/ScheduledInstancesIamInstanceProfile"
                },
                "ImageId": {
                    "$ref": "#/$defs/ImageId"
                },
                "InstanceType": {
                    "$ref": "#/$defs/String"
                },
                "KernelId": {
                    "$ref": "#/$defs/KernelId"
                },
                "KeyName": {
                    "$ref": "#/$defs/KeyPairName"
                },
                "Monitoring": {
                    "$ref": "#/$defs/ScheduledInstancesMonitoring"
                },
                "NetworkInterfaces": {
                    "$ref": "#/$defs/ScheduledInstancesNetworkInterfaceSet"
                },
                "Placement": {
                    "$ref": "#/$defs/ScheduledInstancesPlacement"
                },
                "RamdiskId": {
                    "$ref": "#/$defs/RamdiskId"
                },
                "SecurityGroupIds": {
                    "$ref": "#/$defs/ScheduledInstancesSecurityGroupIdSet"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                },
                "UserData": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ScheduledInstancesBlockDeviceMappingSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledInstancesBlockDeviceMapping"
            }
        },
        "ScheduledInstancesBlockDeviceMapping": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/String"
                },
                "Ebs": {
                    "$ref": "#/$defs/ScheduledInstancesEbs"
                },
                "NoDevice": {
                    "$ref": "#/$defs/String"
                },
                "VirtualName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ScheduledInstancesEbs": {
            "type": "object",
            "properties": {
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Encrypted": {
                    "$ref": "#/$defs/Boolean"
                },
                "Iops": {
                    "$ref": "#/$defs/Integer"
                },
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "VolumeSize": {
                    "$ref": "#/$defs/Integer"
                },
                "VolumeType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ScheduledInstancesIamInstanceProfile": {
            "type": "object",
            "properties": {
                "Arn": {
                    "$ref": "#/$defs/String"
                },
                "Name": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ScheduledInstancesMonitoring": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ScheduledInstancesNetworkInterfaceSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledInstancesNetworkInterface"
            }
        },
        "ScheduledInstancesNetworkInterface": {
            "type": "object",
            "properties": {
                "AssociatePublicIpAddress": {
                    "$ref": "#/$defs/Boolean"
                },
                "DeleteOnTermination": {
                    "$ref": "#/$defs/Boolean"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                },
                "DeviceIndex": {
                    "$ref": "#/$defs/Integer"
                },
                "Groups": {
                    "$ref": "#/$defs/ScheduledInstancesSecurityGroupIdSet"
                },
                "Ipv6AddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "Ipv6Addresses": {
                    "$ref": "#/$defs/ScheduledInstancesIpv6AddressList"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "PrivateIpAddressConfigs": {
                    "$ref": "#/$defs/PrivateIpAddressConfigSet"
                },
                "SecondaryPrivateIpAddressCount": {
                    "$ref": "#/$defs/Integer"
                },
                "SubnetId": {
                    "$ref": "#/$defs/SubnetId"
                }
            }
        },
        "ScheduledInstancesSecurityGroupIdSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupId"
            }
        },
        "ScheduledInstancesIpv6AddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledInstancesIpv6Address"
            }
        },
        "ScheduledInstancesIpv6Address": {
            "type": "object",
            "properties": {
                "Ipv6Address": {
                    "$ref": "#/$defs/Ipv6Address"
                }
            }
        },
        "Ipv6Address": {
            "type": "string"
        },
        "PrivateIpAddressConfigSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ScheduledInstancesPrivateIpAddressConfig"
            }
        },
        "ScheduledInstancesPrivateIpAddressConfig": {
            "type": "object",
            "properties": {
                "Primary": {
                    "$ref": "#/$defs/Boolean"
                },
                "PrivateIpAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ScheduledInstancesPlacement": {
            "type": "object",
            "properties": {
                "AvailabilityZone": {
                    "$ref": "#/$defs/String"
                },
                "GroupName": {
                    "$ref": "#/$defs/PlacementGroupName"
                }
            }
        },
        "SearchLocalGatewayRoutesResult": {
            "type": "object",
            "properties": {
                "Routes": {
                    "$ref": "#/$defs/LocalGatewayRouteList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "LocalGatewayRouteList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LocalGatewayRoute"
            }
        },
        "SearchLocalGatewayRoutesRequest": {
            "type": "object",
            "properties": {
                "LocalGatewayRouteTableId": {
                    "$ref": "#/$defs/LocalGatewayRoutetableId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "SearchTransitGatewayMulticastGroupsResult": {
            "type": "object",
            "properties": {
                "MulticastGroups": {
                    "$ref": "#/$defs/TransitGatewayMulticastGroupList"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "TransitGatewayMulticastGroupList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayMulticastGroup"
            }
        },
        "TransitGatewayMulticastGroup": {
            "type": "object",
            "properties": {
                "GroupIpAddress": {
                    "$ref": "#/$defs/String"
                },
                "TransitGatewayAttachmentId": {
                    "$ref": "#/$defs/String"
                },
                "SubnetId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceId": {
                    "$ref": "#/$defs/String"
                },
                "ResourceType": {
                    "$ref": "#/$defs/TransitGatewayAttachmentResourceType"
                },
                "ResourceOwnerId": {
                    "$ref": "#/$defs/String"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "GroupMember": {
                    "$ref": "#/$defs/Boolean"
                },
                "GroupSource": {
                    "$ref": "#/$defs/Boolean"
                },
                "MemberType": {
                    "$ref": "#/$defs/MembershipType"
                },
                "SourceType": {
                    "$ref": "#/$defs/MembershipType"
                }
            }
        },
        "MembershipType": {
            "enum": [
                "static",
                "igmp"
            ]
        },
        "SearchTransitGatewayMulticastGroupsRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayMulticastDomainId": {
                    "$ref": "#/$defs/TransitGatewayMulticastDomainId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SearchTransitGatewayRoutesResult": {
            "type": "object",
            "properties": {
                "Routes": {
                    "$ref": "#/$defs/TransitGatewayRouteList"
                },
                "AdditionalRoutesAvailable": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TransitGatewayRouteList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TransitGatewayRoute"
            }
        },
        "SearchTransitGatewayRoutesRequest": {
            "type": "object",
            "properties": {
                "TransitGatewayRouteTableId": {
                    "$ref": "#/$defs/TransitGatewayRouteTableId"
                },
                "Filters": {
                    "$ref": "#/$defs/FilterList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/TransitGatewayMaxResults"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "SendDiagnosticInterruptRequest": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/InstanceId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "StartDeclarativePoliciesReportResult": {
            "type": "object",
            "properties": {
                "ReportId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartDeclarativePoliciesReportRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "S3Bucket": {
                    "$ref": "#/$defs/String"
                },
                "S3Prefix": {
                    "$ref": "#/$defs/String"
                },
                "TargetId": {
                    "$ref": "#/$defs/String"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                }
            }
        },
        "StartInstancesResult": {
            "type": "object",
            "properties": {
                "StartingInstances": {
                    "$ref": "#/$defs/InstanceStateChangeList"
                }
            }
        },
        "InstanceStateChangeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/InstanceStateChange"
            }
        },
        "InstanceStateChange": {
            "type": "object",
            "properties": {
                "InstanceId": {
                    "$ref": "#/$defs/String"
                },
                "CurrentState": {
                    "$ref": "#/$defs/InstanceState"
                },
                "PreviousState": {
                    "$ref": "#/$defs/InstanceState"
                }
            }
        },
        "StartInstancesRequest": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "AdditionalInfo": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "StartNetworkInsightsAccessScopeAnalysisResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeAnalysis": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeAnalysis"
                }
            }
        },
        "StartNetworkInsightsAccessScopeAnalysisRequest": {
            "type": "object",
            "properties": {
                "NetworkInsightsAccessScopeId": {
                    "$ref": "#/$defs/NetworkInsightsAccessScopeId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartNetworkInsightsAnalysisResult": {
            "type": "object",
            "properties": {
                "NetworkInsightsAnalysis": {
                    "$ref": "#/$defs/NetworkInsightsAnalysis"
                }
            }
        },
        "StartNetworkInsightsAnalysisRequest": {
            "type": "object",
            "properties": {
                "NetworkInsightsPathId": {
                    "$ref": "#/$defs/NetworkInsightsPathId"
                },
                "AdditionalAccounts": {
                    "$ref": "#/$defs/ValueStringList"
                },
                "FilterInArns": {
                    "$ref": "#/$defs/ArnList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "TagSpecifications": {
                    "$ref": "#/$defs/TagSpecificationList"
                },
                "ClientToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartVpcEndpointServicePrivateDnsVerificationResult": {
            "type": "object",
            "properties": {
                "ReturnValue": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "StartVpcEndpointServicePrivateDnsVerificationRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "ServiceId": {
                    "$ref": "#/$defs/VpcEndpointServiceId"
                }
            }
        },
        "StopInstancesResult": {
            "type": "object",
            "properties": {
                "StoppingInstances": {
                    "$ref": "#/$defs/InstanceStateChangeList"
                }
            }
        },
        "StopInstancesRequest": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "Hibernate": {
                    "$ref": "#/$defs/Boolean"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "Force": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TerminateClientVpnConnectionsResult": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/String"
                },
                "Username": {
                    "$ref": "#/$defs/String"
                },
                "ConnectionStatuses": {
                    "$ref": "#/$defs/TerminateConnectionStatusSet"
                }
            }
        },
        "TerminateConnectionStatusSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TerminateConnectionStatus"
            }
        },
        "TerminateConnectionStatus": {
            "type": "object",
            "properties": {
                "ConnectionId": {
                    "$ref": "#/$defs/String"
                },
                "PreviousStatus": {
                    "$ref": "#/$defs/ClientVpnConnectionStatus"
                },
                "CurrentStatus": {
                    "$ref": "#/$defs/ClientVpnConnectionStatus"
                }
            }
        },
        "TerminateClientVpnConnectionsRequest": {
            "type": "object",
            "properties": {
                "ClientVpnEndpointId": {
                    "$ref": "#/$defs/ClientVpnEndpointId"
                },
                "ConnectionId": {
                    "$ref": "#/$defs/String"
                },
                "Username": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "TerminateInstancesResult": {
            "type": "object",
            "properties": {
                "TerminatingInstances": {
                    "$ref": "#/$defs/InstanceStateChangeList"
                }
            }
        },
        "TerminateInstancesRequest": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UnassignIpv6AddressesResult": {
            "type": "object",
            "properties": {
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/String"
                },
                "UnassignedIpv6Addresses": {
                    "$ref": "#/$defs/Ipv6AddressList"
                },
                "UnassignedIpv6Prefixes": {
                    "$ref": "#/$defs/IpPrefixList"
                }
            }
        },
        "UnassignIpv6AddressesRequest": {
            "type": "object",
            "properties": {
                "Ipv6Prefixes": {
                    "$ref": "#/$defs/IpPrefixList"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "Ipv6Addresses": {
                    "$ref": "#/$defs/Ipv6AddressList"
                }
            }
        },
        "UnassignPrivateIpAddressesRequest": {
            "type": "object",
            "properties": {
                "Ipv4Prefixes": {
                    "$ref": "#/$defs/IpPrefixList"
                },
                "NetworkInterfaceId": {
                    "$ref": "#/$defs/NetworkInterfaceId"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/PrivateIpAddressStringList"
                }
            }
        },
        "UnassignPrivateNatGatewayAddressResult": {
            "type": "object",
            "properties": {
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                },
                "NatGatewayAddresses": {
                    "$ref": "#/$defs/NatGatewayAddressList"
                }
            }
        },
        "UnassignPrivateNatGatewayAddressRequest": {
            "type": "object",
            "properties": {
                "NatGatewayId": {
                    "$ref": "#/$defs/NatGatewayId"
                },
                "PrivateIpAddresses": {
                    "$ref": "#/$defs/IpList"
                },
                "MaxDrainDurationSeconds": {
                    "$ref": "#/$defs/DrainSeconds"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UnlockSnapshotResult": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UnlockSnapshotRequest": {
            "type": "object",
            "properties": {
                "SnapshotId": {
                    "$ref": "#/$defs/SnapshotId"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UnmonitorInstancesResult": {
            "type": "object",
            "properties": {
                "InstanceMonitorings": {
                    "$ref": "#/$defs/InstanceMonitoringList"
                }
            }
        },
        "UnmonitorInstancesRequest": {
            "type": "object",
            "properties": {
                "InstanceIds": {
                    "$ref": "#/$defs/InstanceIdStringList"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UpdateSecurityGroupRuleDescriptionsEgressResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UpdateSecurityGroupRuleDescriptionsEgressRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "GroupName": {
                    "$ref": "#/$defs/SecurityGroupName"
                },
                "IpPermissions": {
                    "$ref": "#/$defs/IpPermissionList"
                },
                "SecurityGroupRuleDescriptions": {
                    "$ref": "#/$defs/SecurityGroupRuleDescriptionList"
                }
            }
        },
        "SecurityGroupRuleDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SecurityGroupRuleDescription"
            }
        },
        "SecurityGroupRuleDescription": {
            "type": "object",
            "properties": {
                "SecurityGroupRuleId": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "UpdateSecurityGroupRuleDescriptionsIngressResult": {
            "type": "object",
            "properties": {
                "Return": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "UpdateSecurityGroupRuleDescriptionsIngressRequest": {
            "type": "object",
            "properties": {
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                },
                "GroupId": {
                    "$ref": "#/$defs/SecurityGroupId"
                },
                "GroupName": {
                    "$ref": "#/$defs/SecurityGroupName"
                },
                "IpPermissions": {
                    "$ref": "#/$defs/IpPermissionList"
                },
                "SecurityGroupRuleDescriptions": {
                    "$ref": "#/$defs/SecurityGroupRuleDescriptionList"
                }
            }
        },
        "WithdrawByoipCidrResult": {
            "type": "object",
            "properties": {
                "ByoipCidr": {
                    "$ref": "#/$defs/ByoipCidr"
                }
            }
        },
        "WithdrawByoipCidrRequest": {
            "type": "object",
            "properties": {
                "Cidr": {
                    "$ref": "#/$defs/String"
                },
                "DryRun": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://ec2-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [
                                                        {
                                                            "fn": "stringEquals",
                                                            "argv": [
                                                                {
                                                                    "fn": "getAttr",
                                                                    "argv": [
                                                                        {
                                                                            "ref": "PartitionResult"
                                                                        },
                                                                        "name"
                                                                    ]
                                                                },
                                                                "aws-us-gov"
                                                            ]
                                                        }
                                                    ],
                                                    "endpoint": {
                                                        "url": "https://ec2.{Region}.amazonaws.com",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                },
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://ec2-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://ec2.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://ec2.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}