{
    "commands": [
        {
            "name": "CancelComponentDeployment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.CancelComponentDeployment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelComponentDeploymentOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelComponentDeploymentInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelEnvironmentDeployment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.CancelEnvironmentDeployment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelEnvironmentDeploymentOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelEnvironmentDeploymentInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelServiceInstanceDeployment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.CancelServiceInstanceDeployment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelServiceInstanceDeploymentOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelServiceInstanceDeploymentInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CancelServicePipelineDeployment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.CancelServicePipelineDeployment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelServicePipelineDeploymentOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CancelServicePipelineDeploymentInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRepositorySyncStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.GetRepositorySyncStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRepositorySyncStatusOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRepositorySyncStatusInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourcesSummary",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.GetResourcesSummary"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcesSummaryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcesSummaryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetServiceInstanceSyncStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.GetServiceInstanceSyncStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetServiceInstanceSyncStatusOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetServiceInstanceSyncStatusInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetTemplateSyncStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.GetTemplateSyncStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetTemplateSyncStatusOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetTemplateSyncStatusInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRepositorySyncDefinitions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.ListRepositorySyncDefinitions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRepositorySyncDefinitionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRepositorySyncDefinitionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "NotifyResourceDeploymentStatusChange",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.NotifyResourceDeploymentStatusChange"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/NotifyResourceDeploymentStatusChangeOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/NotifyResourceDeploymentStatusChangeInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AwsProton20200720.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CancelComponentDeploymentOutput": {
            "type": "object",
            "properties": {
                "component": {
                    "$ref": "#/$defs/Component"
                }
            }
        },
        "Component": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "arn": {
                    "$ref": "#/$defs/ComponentArn"
                },
                "environmentName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "serviceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "serviceInstanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "lastModifiedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "lastDeploymentAttemptedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "lastDeploymentSucceededAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "deploymentStatus": {
                    "$ref": "#/$defs/DeploymentStatus"
                },
                "deploymentStatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "serviceSpec": {
                    "$ref": "#/$defs/SpecContents"
                },
                "lastClientRequestToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "lastAttemptedDeploymentId": {
                    "$ref": "#/$defs/DeploymentId"
                },
                "lastSucceededDeploymentId": {
                    "$ref": "#/$defs/DeploymentId"
                }
            }
        },
        "ResourceName": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "ComponentArn": {
            "type": "string"
        },
        "DeploymentStatus": {
            "type": "string"
        },
        "StatusMessage": {
            "type": "string"
        },
        "SpecContents": {
            "type": "string"
        },
        "DeploymentId": {
            "type": "string"
        },
        "CancelComponentDeploymentInput": {
            "type": "object",
            "properties": {
                "componentName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "CancelEnvironmentDeploymentOutput": {
            "type": "object",
            "properties": {
                "environment": {
                    "$ref": "#/$defs/Environment"
                }
            }
        },
        "Environment": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "lastDeploymentAttemptedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "lastDeploymentSucceededAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "arn": {
                    "$ref": "#/$defs/EnvironmentArn"
                },
                "templateName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "templateMajorVersion": {
                    "$ref": "#/$defs/TemplateVersionPart"
                },
                "templateMinorVersion": {
                    "$ref": "#/$defs/TemplateVersionPart"
                },
                "deploymentStatus": {
                    "$ref": "#/$defs/DeploymentStatus"
                },
                "deploymentStatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "protonServiceRoleArn": {
                    "$ref": "#/$defs/Arn"
                },
                "environmentAccountConnectionId": {
                    "$ref": "#/$defs/EnvironmentAccountConnectionId"
                },
                "environmentAccountId": {
                    "$ref": "#/$defs/AwsAccountId"
                },
                "spec": {
                    "$ref": "#/$defs/SpecContents"
                },
                "provisioning": {
                    "$ref": "#/$defs/Provisioning"
                },
                "provisioningRepository": {
                    "$ref": "#/$defs/RepositoryBranch"
                },
                "componentRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "codebuildRoleArn": {
                    "$ref": "#/$defs/RoleArn"
                },
                "lastAttemptedDeploymentId": {
                    "$ref": "#/$defs/DeploymentId"
                },
                "lastSucceededDeploymentId": {
                    "$ref": "#/$defs/DeploymentId"
                }
            }
        },
        "EnvironmentArn": {
            "type": "string"
        },
        "TemplateVersionPart": {
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "EnvironmentAccountConnectionId": {
            "type": "string"
        },
        "AwsAccountId": {
            "type": "string"
        },
        "Provisioning": {
            "type": "string"
        },
        "RepositoryBranch": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/RepositoryArn"
                },
                "provider": {
                    "$ref": "#/$defs/RepositoryProvider"
                },
                "name": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "branch": {
                    "$ref": "#/$defs/GitBranchName"
                }
            }
        },
        "RepositoryArn": {
            "type": "string"
        },
        "RepositoryProvider": {
            "type": "string"
        },
        "RepositoryName": {
            "type": "string"
        },
        "GitBranchName": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "CancelEnvironmentDeploymentInput": {
            "type": "object",
            "properties": {
                "environmentName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "CancelServiceInstanceDeploymentOutput": {
            "type": "object",
            "properties": {
                "serviceInstance": {
                    "$ref": "#/$defs/ServiceInstance"
                }
            }
        },
        "ServiceInstance": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ResourceName"
                },
                "arn": {
                    "$ref": "#/$defs/ServiceInstanceArn"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "lastDeploymentAttemptedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "lastDeploymentSucceededAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "serviceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "environmentName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "templateName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "templateMajorVersion": {
                    "$ref": "#/$defs/TemplateVersionPart"
                },
                "templateMinorVersion": {
                    "$ref": "#/$defs/TemplateVersionPart"
                },
                "deploymentStatus": {
                    "$ref": "#/$defs/DeploymentStatus"
                },
                "deploymentStatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "spec": {
                    "$ref": "#/$defs/SpecContents"
                },
                "lastClientRequestToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "lastAttemptedDeploymentId": {
                    "$ref": "#/$defs/DeploymentId"
                },
                "lastSucceededDeploymentId": {
                    "$ref": "#/$defs/DeploymentId"
                }
            }
        },
        "ServiceInstanceArn": {
            "type": "string"
        },
        "CancelServiceInstanceDeploymentInput": {
            "type": "object",
            "properties": {
                "serviceInstanceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "serviceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "CancelServicePipelineDeploymentOutput": {
            "type": "object",
            "properties": {
                "pipeline": {
                    "$ref": "#/$defs/ServicePipeline"
                }
            }
        },
        "ServicePipeline": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/Arn"
                },
                "createdAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "lastDeploymentAttemptedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "lastDeploymentSucceededAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "templateName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "templateMajorVersion": {
                    "$ref": "#/$defs/TemplateVersionPart"
                },
                "templateMinorVersion": {
                    "$ref": "#/$defs/TemplateVersionPart"
                },
                "deploymentStatus": {
                    "$ref": "#/$defs/DeploymentStatus"
                },
                "deploymentStatusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                },
                "spec": {
                    "$ref": "#/$defs/SpecContents"
                },
                "lastAttemptedDeploymentId": {
                    "$ref": "#/$defs/DeploymentId"
                },
                "lastSucceededDeploymentId": {
                    "$ref": "#/$defs/DeploymentId"
                }
            }
        },
        "CancelServicePipelineDeploymentInput": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetRepositorySyncStatusOutput": {
            "type": "object",
            "properties": {
                "latestSync": {
                    "$ref": "#/$defs/RepositorySyncAttempt"
                }
            }
        },
        "RepositorySyncAttempt": {
            "type": "object",
            "properties": {
                "startedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/RepositorySyncStatus"
                },
                "events": {
                    "$ref": "#/$defs/RepositorySyncEvents"
                }
            }
        },
        "RepositorySyncStatus": {
            "type": "string"
        },
        "RepositorySyncEvents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositorySyncEvent"
            }
        },
        "RepositorySyncEvent": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "externalId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "time": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "event": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "GetRepositorySyncStatusInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "repositoryProvider": {
                    "$ref": "#/$defs/RepositoryProvider"
                },
                "branch": {
                    "$ref": "#/$defs/GitBranchName"
                },
                "syncType": {
                    "$ref": "#/$defs/SyncType"
                }
            }
        },
        "SyncType": {
            "type": "string"
        },
        "GetResourcesSummaryOutput": {
            "type": "object",
            "properties": {
                "counts": {
                    "$ref": "#/$defs/CountsSummary"
                }
            }
        },
        "CountsSummary": {
            "type": "object",
            "properties": {
                "components": {
                    "$ref": "#/$defs/ResourceCountsSummary"
                },
                "environments": {
                    "$ref": "#/$defs/ResourceCountsSummary"
                },
                "environmentTemplates": {
                    "$ref": "#/$defs/ResourceCountsSummary"
                },
                "serviceInstances": {
                    "$ref": "#/$defs/ResourceCountsSummary"
                },
                "services": {
                    "$ref": "#/$defs/ResourceCountsSummary"
                },
                "serviceTemplates": {
                    "$ref": "#/$defs/ResourceCountsSummary"
                },
                "pipelines": {
                    "$ref": "#/$defs/ResourceCountsSummary"
                }
            }
        },
        "ResourceCountsSummary": {
            "type": "object",
            "properties": {
                "total": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "failed": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "upToDate": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "behindMajor": {
                    "$ref": "#/$defs/smithy.api#Integer"
                },
                "behindMinor": {
                    "$ref": "#/$defs/smithy.api#Integer"
                }
            }
        },
        "GetResourcesSummaryInput": {
            "type": "object",
            "properties": {}
        },
        "GetServiceInstanceSyncStatusOutput": {
            "type": "object",
            "properties": {
                "latestSync": {
                    "$ref": "#/$defs/ResourceSyncAttempt"
                },
                "latestSuccessfulSync": {
                    "$ref": "#/$defs/ResourceSyncAttempt"
                },
                "desiredState": {
                    "$ref": "#/$defs/Revision"
                }
            }
        },
        "ResourceSyncAttempt": {
            "type": "object",
            "properties": {
                "initialRevision": {
                    "$ref": "#/$defs/Revision"
                },
                "targetRevision": {
                    "$ref": "#/$defs/Revision"
                },
                "target": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "startedAt": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/ResourceSyncStatus"
                },
                "events": {
                    "$ref": "#/$defs/ResourceSyncEvents"
                }
            }
        },
        "Revision": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "repositoryProvider": {
                    "$ref": "#/$defs/RepositoryProvider"
                },
                "sha": {
                    "$ref": "#/$defs/SHA"
                },
                "directory": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "branch": {
                    "$ref": "#/$defs/GitBranchName"
                }
            }
        },
        "SHA": {
            "type": "string"
        },
        "ResourceSyncStatus": {
            "type": "string"
        },
        "ResourceSyncEvents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourceSyncEvent"
            }
        },
        "ResourceSyncEvent": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "externalId": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "time": {
                    "$ref": "#/$defs/smithy.api#Timestamp"
                },
                "event": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "GetServiceInstanceSyncStatusInput": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "serviceInstanceName": {
                    "$ref": "#/$defs/ResourceName"
                }
            }
        },
        "GetTemplateSyncStatusOutput": {
            "type": "object",
            "properties": {
                "latestSync": {
                    "$ref": "#/$defs/ResourceSyncAttempt"
                },
                "latestSuccessfulSync": {
                    "$ref": "#/$defs/ResourceSyncAttempt"
                },
                "desiredState": {
                    "$ref": "#/$defs/Revision"
                }
            }
        },
        "GetTemplateSyncStatusInput": {
            "type": "object",
            "properties": {
                "templateName": {
                    "$ref": "#/$defs/ResourceName"
                },
                "templateType": {
                    "$ref": "#/$defs/TemplateType"
                },
                "templateVersion": {
                    "$ref": "#/$defs/TemplateVersionPart"
                }
            }
        },
        "TemplateType": {
            "type": "string"
        },
        "ListRepositorySyncDefinitionsOutput": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/EmptyNextToken"
                },
                "syncDefinitions": {
                    "$ref": "#/$defs/RepositorySyncDefinitionList"
                }
            }
        },
        "EmptyNextToken": {
            "type": "string"
        },
        "RepositorySyncDefinitionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositorySyncDefinition"
            }
        },
        "RepositorySyncDefinition": {
            "type": "object",
            "properties": {
                "target": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "parent": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "branch": {
                    "$ref": "#/$defs/GitBranchName"
                },
                "directory": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "ListRepositorySyncDefinitionsInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "repositoryProvider": {
                    "$ref": "#/$defs/RepositoryProvider"
                },
                "syncType": {
                    "$ref": "#/$defs/SyncType"
                },
                "nextToken": {
                    "$ref": "#/$defs/EmptyNextToken"
                }
            }
        },
        "ListTagsForResourceOutput": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagList"
                },
                "nextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "ListTagsForResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "nextToken": {
                    "$ref": "#/$defs/smithy.api#String"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxPageResults"
                }
            }
        },
        "MaxPageResults": {
            "type": "integer",
            "format": "int32"
        },
        "NotifyResourceDeploymentStatusChangeOutput": {
            "type": "object",
            "properties": {}
        },
        "NotifyResourceDeploymentStatusChangeInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "status": {
                    "$ref": "#/$defs/ResourceDeploymentStatus"
                },
                "outputs": {
                    "$ref": "#/$defs/OutputsList"
                },
                "deploymentId": {
                    "$ref": "#/$defs/DeploymentId"
                },
                "statusMessage": {
                    "$ref": "#/$defs/StatusMessage"
                }
            }
        },
        "ResourceDeploymentStatus": {
            "type": "string"
        },
        "OutputsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Output"
            }
        },
        "Output": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/OutputKey"
                },
                "valueString": {
                    "$ref": "#/$defs/OutputValueString"
                }
            }
        },
        "OutputKey": {
            "type": "string"
        },
        "OutputValueString": {
            "type": "string"
        },
        "TagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceOutput": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/Arn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://proton-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://proton-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://proton.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://proton.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}