{
    "name": "ses",
    "commands": [
        {
            "name": "CreateConfigurationSet",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/email/configuration-sets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConfigurationSetResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateConfigurationSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateConfigurationSetEventDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/v1/email/configuration-sets/{ConfigurationSetName}/event-destinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateConfigurationSetEventDestinationResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateConfigurationSetEventDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateDedicatedIpPool",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/email/dedicated-ip-pools"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDedicatedIpPoolResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDedicatedIpPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateDeliverabilityTestReport",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/email/deliverability-dashboard/test"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateDeliverabilityTestReportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateDeliverabilityTestReportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "CreateEmailIdentity",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/email/identities"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEmailIdentityResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateEmailIdentityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteConfigurationSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/email/configuration-sets/{ConfigurationSetName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConfigurationSetResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteConfigurationSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteConfigurationSetEventDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "EventDestinationName": "route.EventDestinationName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteConfigurationSetEventDestinationResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0.EventDestinationName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteConfigurationSetEventDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDedicatedIpPool",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PoolName": "route.PoolName",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/email/dedicated-ip-pools/{PoolName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDedicatedIpPoolResponse"
                    },
                    "inject": [
                        "param.0.PoolName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDedicatedIpPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEmailIdentity",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/v1/email/identities/{EmailIdentity}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEmailIdentityResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteEmailIdentityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetAccount",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/email/account"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetAccountResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetAccountRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetBlacklistReports",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/email/deliverability-dashboard/blacklist-report"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBlacklistReportsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBlacklistReportsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetConfigurationSet",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/email/configuration-sets/{ConfigurationSetName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConfigurationSetResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConfigurationSetRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetConfigurationSetEventDestinations",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/email/configuration-sets/{ConfigurationSetName}/event-destinations"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetConfigurationSetEventDestinationsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetConfigurationSetEventDestinationsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDedicatedIp",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Ip": "route.Ip",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/email/dedicated-ips/{Ip}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDedicatedIpResponse"
                    },
                    "inject": [
                        "param.0.Ip",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDedicatedIpRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDedicatedIps",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/email/dedicated-ips"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDedicatedIpsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDedicatedIpsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDeliverabilityDashboardOptions",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/email/deliverability-dashboard"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDeliverabilityDashboardOptionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDeliverabilityDashboardOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDeliverabilityTestReport",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ReportId": "route.ReportId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/email/deliverability-dashboard/test-reports/{ReportId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDeliverabilityTestReportResponse"
                    },
                    "inject": [
                        "param.0.ReportId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDeliverabilityTestReportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDomainDeliverabilityCampaign",
            "config": {
                "http": {
                    "inject": [
                        {
                            "CampaignId": "route.CampaignId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/email/deliverability-dashboard/campaigns/{CampaignId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDomainDeliverabilityCampaignResponse"
                    },
                    "inject": [
                        "param.0.CampaignId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainDeliverabilityCampaignRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDomainStatisticsReport",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Domain": "route.Domain",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/email/deliverability-dashboard/statistics-report/{Domain}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDomainStatisticsReportResponse"
                    },
                    "inject": [
                        "param.0.Domain",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDomainStatisticsReportRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetEmailIdentity",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/email/identities/{EmailIdentity}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEmailIdentityResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetEmailIdentityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListConfigurationSets",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/email/configuration-sets"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListConfigurationSetsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListConfigurationSetsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListDedicatedIpPools",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/email/dedicated-ip-pools"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDedicatedIpPoolsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDedicatedIpPoolsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListDeliverabilityTestReports",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/email/deliverability-dashboard/test-reports"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDeliverabilityTestReportsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDeliverabilityTestReportsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListDomainDeliverabilityCampaigns",
            "config": {
                "http": {
                    "inject": [
                        {
                            "SubscribedDomain": "route.SubscribedDomain",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/v1/email/deliverability-dashboard/domains/{SubscribedDomain}/campaigns"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDomainDeliverabilityCampaignsResponse"
                    },
                    "inject": [
                        "param.0.SubscribedDomain",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDomainDeliverabilityCampaignsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListEmailIdentities",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/email/identities"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEmailIdentitiesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListEmailIdentitiesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/v1/email/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutAccountDedicatedIpWarmupAttributes",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v1/email/account/dedicated-ips/warmup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountDedicatedIpWarmupAttributesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccountDedicatedIpWarmupAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutAccountSendingAttributes",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v1/email/account/sending"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutAccountSendingAttributesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutAccountSendingAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetDeliveryOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/configuration-sets/{ConfigurationSetName}/delivery-options"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetDeliveryOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetDeliveryOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetReputationOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/configuration-sets/{ConfigurationSetName}/reputation-options"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetReputationOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetReputationOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetSendingOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/configuration-sets/{ConfigurationSetName}/sending"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetSendingOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetSendingOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutConfigurationSetTrackingOptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/configuration-sets/{ConfigurationSetName}/tracking-options"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutConfigurationSetTrackingOptionsResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutConfigurationSetTrackingOptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutDedicatedIpInPool",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Ip": "route.Ip",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/dedicated-ips/{Ip}/pool"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDedicatedIpInPoolResponse"
                    },
                    "inject": [
                        "param.0.Ip",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutDedicatedIpInPoolRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutDedicatedIpWarmupAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "Ip": "route.Ip",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/dedicated-ips/{Ip}/warmup"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDedicatedIpWarmupAttributesResponse"
                    },
                    "inject": [
                        "param.0.Ip",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutDedicatedIpWarmupAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutDeliverabilityDashboardOption",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "PUT",
                    "route": "/v1/email/deliverability-dashboard"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutDeliverabilityDashboardOptionResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutDeliverabilityDashboardOptionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutEmailIdentityDkimAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/identities/{EmailIdentity}/dkim"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEmailIdentityDkimAttributesResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutEmailIdentityDkimAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutEmailIdentityFeedbackAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/identities/{EmailIdentity}/feedback"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEmailIdentityFeedbackAttributesResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutEmailIdentityFeedbackAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "PutEmailIdentityMailFromAttributes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "EmailIdentity": "route.EmailIdentity",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/identities/{EmailIdentity}/mail-from"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutEmailIdentityMailFromAttributesResponse"
                    },
                    "inject": [
                        "param.0.EmailIdentity",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutEmailIdentityMailFromAttributesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SendEmail",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/email/outbound-emails"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SendEmailResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendEmailRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/v1/email/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/v1/email/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "UpdateConfigurationSetEventDestination",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ConfigurationSetName": "route.ConfigurationSetName",
                            "EventDestinationName": "route.EventDestinationName",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/v1/email/configuration-sets/{ConfigurationSetName}/event-destinations/{EventDestinationName}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateConfigurationSetEventDestinationResponse"
                    },
                    "inject": [
                        "param.0.ConfigurationSetName",
                        "param.0.EventDestinationName",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateConfigurationSetEventDestinationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateConfigurationSetResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateConfigurationSetRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "TrackingOptions": {
                    "$ref": "#/$defs/TrackingOptions"
                },
                "DeliveryOptions": {
                    "$ref": "#/$defs/DeliveryOptions"
                },
                "ReputationOptions": {
                    "$ref": "#/$defs/ReputationOptions"
                },
                "SendingOptions": {
                    "$ref": "#/$defs/SendingOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ConfigurationSetName": {
            "type": "string"
        },
        "TrackingOptions": {
            "type": "object",
            "properties": {
                "CustomRedirectDomain": {
                    "$ref": "#/$defs/CustomRedirectDomain"
                }
            }
        },
        "CustomRedirectDomain": {
            "type": "string"
        },
        "DeliveryOptions": {
            "type": "object",
            "properties": {
                "TlsPolicy": {
                    "$ref": "#/$defs/TlsPolicy"
                },
                "SendingPoolName": {
                    "$ref": "#/$defs/PoolName"
                }
            }
        },
        "TlsPolicy": {
            "enum": [
                "REQUIRE",
                "OPTIONAL"
            ]
        },
        "PoolName": {
            "type": "string"
        },
        "ReputationOptions": {
            "type": "object",
            "properties": {
                "ReputationMetricsEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "LastFreshStart": {
                    "$ref": "#/$defs/LastFreshStart"
                }
            }
        },
        "Enabled": {
            "type": "boolean"
        },
        "LastFreshStart": {
            "type": "string",
            "format": "date-time"
        },
        "SendingOptions": {
            "type": "object",
            "properties": {
                "SendingEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "CreateConfigurationSetEventDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateConfigurationSetEventDestinationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "EventDestinationName": {
                    "$ref": "#/$defs/EventDestinationName"
                },
                "EventDestination": {
                    "$ref": "#/$defs/EventDestinationDefinition"
                }
            }
        },
        "EventDestinationName": {
            "type": "string"
        },
        "EventDestinationDefinition": {
            "type": "object",
            "properties": {
                "Enabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "MatchingEventTypes": {
                    "$ref": "#/$defs/EventTypes"
                },
                "KinesisFirehoseDestination": {
                    "$ref": "#/$defs/KinesisFirehoseDestination"
                },
                "CloudWatchDestination": {
                    "$ref": "#/$defs/CloudWatchDestination"
                },
                "SnsDestination": {
                    "$ref": "#/$defs/SnsDestination"
                },
                "PinpointDestination": {
                    "$ref": "#/$defs/PinpointDestination"
                }
            }
        },
        "EventTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventType"
            }
        },
        "EventType": {
            "enum": [
                "SEND",
                "REJECT",
                "BOUNCE",
                "COMPLAINT",
                "DELIVERY",
                "OPEN",
                "CLICK",
                "RENDERING_FAILURE"
            ]
        },
        "KinesisFirehoseDestination": {
            "type": "object",
            "properties": {
                "IamRoleArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "DeliveryStreamArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "CloudWatchDestination": {
            "type": "object",
            "properties": {
                "DimensionConfigurations": {
                    "$ref": "#/$defs/CloudWatchDimensionConfigurations"
                }
            }
        },
        "CloudWatchDimensionConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CloudWatchDimensionConfiguration"
            }
        },
        "CloudWatchDimensionConfiguration": {
            "type": "object",
            "properties": {
                "DimensionName": {
                    "$ref": "#/$defs/DimensionName"
                },
                "DimensionValueSource": {
                    "$ref": "#/$defs/DimensionValueSource"
                },
                "DefaultDimensionValue": {
                    "$ref": "#/$defs/DefaultDimensionValue"
                }
            }
        },
        "DimensionName": {
            "type": "string"
        },
        "DimensionValueSource": {
            "enum": [
                "MESSAGE_TAG",
                "EMAIL_HEADER",
                "LINK_TAG"
            ]
        },
        "DefaultDimensionValue": {
            "type": "string"
        },
        "SnsDestination": {
            "type": "object",
            "properties": {
                "TopicArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "PinpointDestination": {
            "type": "object",
            "properties": {
                "ApplicationArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "CreateDedicatedIpPoolResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateDedicatedIpPoolRequest": {
            "type": "object",
            "properties": {
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "CreateDeliverabilityTestReportResponse": {
            "type": "object",
            "properties": {
                "ReportId": {
                    "$ref": "#/$defs/ReportId"
                },
                "DeliverabilityTestStatus": {
                    "$ref": "#/$defs/DeliverabilityTestStatus"
                }
            }
        },
        "ReportId": {
            "type": "string"
        },
        "DeliverabilityTestStatus": {
            "enum": [
                "IN_PROGRESS",
                "COMPLETED"
            ]
        },
        "CreateDeliverabilityTestReportRequest": {
            "type": "object",
            "properties": {
                "ReportName": {
                    "$ref": "#/$defs/ReportName"
                },
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Content": {
                    "$ref": "#/$defs/EmailContent"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ReportName": {
            "type": "string"
        },
        "EmailAddress": {
            "type": "string"
        },
        "EmailContent": {
            "type": "object",
            "properties": {
                "Simple": {
                    "$ref": "#/$defs/Message"
                },
                "Raw": {
                    "$ref": "#/$defs/RawMessage"
                },
                "Template": {
                    "$ref": "#/$defs/Template"
                }
            }
        },
        "Message": {
            "type": "object",
            "properties": {
                "Subject": {
                    "$ref": "#/$defs/Content"
                },
                "Body": {
                    "$ref": "#/$defs/Body"
                }
            }
        },
        "Content": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/$defs/MessageData"
                },
                "Charset": {
                    "$ref": "#/$defs/Charset"
                }
            }
        },
        "MessageData": {
            "type": "string"
        },
        "Charset": {
            "type": "string"
        },
        "Body": {
            "type": "object",
            "properties": {
                "Text": {
                    "$ref": "#/$defs/Content"
                },
                "Html": {
                    "$ref": "#/$defs/Content"
                }
            }
        },
        "RawMessage": {
            "type": "object",
            "properties": {
                "Data": {
                    "$ref": "#/$defs/RawMessageData"
                }
            }
        },
        "RawMessageData": {
            "type": "string",
            "format": "binary"
        },
        "Template": {
            "type": "object",
            "properties": {
                "TemplateArn": {
                    "$ref": "#/$defs/TemplateArn"
                },
                "TemplateData": {
                    "$ref": "#/$defs/TemplateData"
                }
            }
        },
        "TemplateArn": {
            "type": "string"
        },
        "TemplateData": {
            "type": "string"
        },
        "CreateEmailIdentityResponse": {
            "type": "object",
            "properties": {
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "VerifiedForSendingStatus": {
                    "$ref": "#/$defs/Enabled"
                },
                "DkimAttributes": {
                    "$ref": "#/$defs/DkimAttributes"
                }
            }
        },
        "IdentityType": {
            "enum": [
                "EMAIL_ADDRESS",
                "DOMAIN",
                "MANAGED_DOMAIN"
            ]
        },
        "DkimAttributes": {
            "type": "object",
            "properties": {
                "SigningEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "Status": {
                    "$ref": "#/$defs/DkimStatus"
                },
                "Tokens": {
                    "$ref": "#/$defs/DnsTokenList"
                }
            }
        },
        "DkimStatus": {
            "enum": [
                "PENDING",
                "SUCCESS",
                "FAILED",
                "TEMPORARY_FAILURE",
                "NOT_STARTED"
            ]
        },
        "DnsTokenList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DnsToken"
            }
        },
        "DnsToken": {
            "type": "string"
        },
        "CreateEmailIdentityRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "Identity": {
            "type": "string"
        },
        "DeleteConfigurationSetResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteConfigurationSetRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                }
            }
        },
        "DeleteConfigurationSetEventDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteConfigurationSetEventDestinationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "EventDestinationName": {
                    "$ref": "#/$defs/EventDestinationName"
                }
            }
        },
        "DeleteDedicatedIpPoolResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDedicatedIpPoolRequest": {
            "type": "object",
            "properties": {
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                }
            }
        },
        "DeleteEmailIdentityResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteEmailIdentityRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                }
            }
        },
        "GetAccountResponse": {
            "type": "object",
            "properties": {
                "SendQuota": {
                    "$ref": "#/$defs/SendQuota"
                },
                "SendingEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "DedicatedIpAutoWarmupEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "EnforcementStatus": {
                    "$ref": "#/$defs/GeneralEnforcementStatus"
                },
                "ProductionAccessEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "SendQuota": {
            "type": "object",
            "properties": {
                "Max24HourSend": {
                    "$ref": "#/$defs/Max24HourSend"
                },
                "MaxSendRate": {
                    "$ref": "#/$defs/MaxSendRate"
                },
                "SentLast24Hours": {
                    "$ref": "#/$defs/SentLast24Hours"
                }
            }
        },
        "Max24HourSend": {
            "type": "number",
            "format": "double"
        },
        "MaxSendRate": {
            "type": "number",
            "format": "double"
        },
        "SentLast24Hours": {
            "type": "number",
            "format": "double"
        },
        "GeneralEnforcementStatus": {
            "type": "string"
        },
        "GetAccountRequest": {
            "type": "object",
            "properties": {}
        },
        "GetBlacklistReportsResponse": {
            "type": "object",
            "properties": {
                "BlacklistReport": {
                    "$ref": "#/$defs/BlacklistReport"
                }
            }
        },
        "BlacklistReport": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/BlacklistEntries"
            }
        },
        "BlacklistEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BlacklistEntry"
            }
        },
        "BlacklistEntry": {
            "type": "object",
            "properties": {
                "RblName": {
                    "$ref": "#/$defs/RblName"
                },
                "ListingTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "Description": {
                    "$ref": "#/$defs/BlacklistingDescription"
                }
            }
        },
        "RblName": {
            "type": "string"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "BlacklistingDescription": {
            "type": "string"
        },
        "GetBlacklistReportsRequest": {
            "type": "object",
            "properties": {
                "BlacklistItemNames": {
                    "$ref": "#/$defs/BlacklistItemNames"
                }
            }
        },
        "BlacklistItemNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BlacklistItemName"
            }
        },
        "BlacklistItemName": {
            "type": "string"
        },
        "GetConfigurationSetResponse": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "TrackingOptions": {
                    "$ref": "#/$defs/TrackingOptions"
                },
                "DeliveryOptions": {
                    "$ref": "#/$defs/DeliveryOptions"
                },
                "ReputationOptions": {
                    "$ref": "#/$defs/ReputationOptions"
                },
                "SendingOptions": {
                    "$ref": "#/$defs/SendingOptions"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "GetConfigurationSetRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                }
            }
        },
        "GetConfigurationSetEventDestinationsResponse": {
            "type": "object",
            "properties": {
                "EventDestinations": {
                    "$ref": "#/$defs/EventDestinations"
                }
            }
        },
        "EventDestinations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EventDestination"
            }
        },
        "EventDestination": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/EventDestinationName"
                },
                "Enabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "MatchingEventTypes": {
                    "$ref": "#/$defs/EventTypes"
                },
                "KinesisFirehoseDestination": {
                    "$ref": "#/$defs/KinesisFirehoseDestination"
                },
                "CloudWatchDestination": {
                    "$ref": "#/$defs/CloudWatchDestination"
                },
                "SnsDestination": {
                    "$ref": "#/$defs/SnsDestination"
                },
                "PinpointDestination": {
                    "$ref": "#/$defs/PinpointDestination"
                }
            }
        },
        "GetConfigurationSetEventDestinationsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                }
            }
        },
        "GetDedicatedIpResponse": {
            "type": "object",
            "properties": {
                "DedicatedIp": {
                    "$ref": "#/$defs/DedicatedIp"
                }
            }
        },
        "DedicatedIp": {
            "type": "object",
            "properties": {
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "WarmupStatus": {
                    "$ref": "#/$defs/WarmupStatus"
                },
                "WarmupPercentage": {
                    "$ref": "#/$defs/Percentage100Wrapper"
                },
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                }
            }
        },
        "Ip": {
            "type": "string"
        },
        "WarmupStatus": {
            "enum": [
                "IN_PROGRESS",
                "DONE"
            ]
        },
        "Percentage100Wrapper": {
            "type": "integer",
            "format": "int32"
        },
        "GetDedicatedIpRequest": {
            "type": "object",
            "properties": {
                "Ip": {
                    "$ref": "#/$defs/Ip"
                }
            }
        },
        "GetDedicatedIpsResponse": {
            "type": "object",
            "properties": {
                "DedicatedIps": {
                    "$ref": "#/$defs/DedicatedIpList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DedicatedIpList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DedicatedIp"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "GetDedicatedIpsRequest": {
            "type": "object",
            "properties": {
                "PoolName": {
                    "$ref": "#/$defs/PoolName"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "MaxItems": {
            "type": "integer",
            "format": "int32"
        },
        "GetDeliverabilityDashboardOptionsResponse": {
            "type": "object",
            "properties": {
                "DashboardEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "SubscriptionExpiryDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "AccountStatus": {
                    "$ref": "#/$defs/DeliverabilityDashboardAccountStatus"
                },
                "ActiveSubscribedDomains": {
                    "$ref": "#/$defs/DomainDeliverabilityTrackingOptions"
                },
                "PendingExpirationSubscribedDomains": {
                    "$ref": "#/$defs/DomainDeliverabilityTrackingOptions"
                }
            }
        },
        "DeliverabilityDashboardAccountStatus": {
            "enum": [
                "ACTIVE",
                "PENDING_EXPIRATION",
                "DISABLED"
            ]
        },
        "DomainDeliverabilityTrackingOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainDeliverabilityTrackingOption"
            }
        },
        "DomainDeliverabilityTrackingOption": {
            "type": "object",
            "properties": {
                "Domain": {
                    "$ref": "#/$defs/Domain"
                },
                "SubscriptionStartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InboxPlacementTrackingOption": {
                    "$ref": "#/$defs/InboxPlacementTrackingOption"
                }
            }
        },
        "Domain": {
            "type": "string"
        },
        "InboxPlacementTrackingOption": {
            "type": "object",
            "properties": {
                "Global": {
                    "$ref": "#/$defs/Enabled"
                },
                "TrackedIsps": {
                    "$ref": "#/$defs/IspNameList"
                }
            }
        },
        "IspNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IspName"
            }
        },
        "IspName": {
            "type": "string"
        },
        "GetDeliverabilityDashboardOptionsRequest": {
            "type": "object",
            "properties": {}
        },
        "GetDeliverabilityTestReportResponse": {
            "type": "object",
            "properties": {
                "DeliverabilityTestReport": {
                    "$ref": "#/$defs/DeliverabilityTestReport"
                },
                "OverallPlacement": {
                    "$ref": "#/$defs/PlacementStatistics"
                },
                "IspPlacements": {
                    "$ref": "#/$defs/IspPlacements"
                },
                "Message": {
                    "$ref": "#/$defs/MessageContent"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "DeliverabilityTestReport": {
            "type": "object",
            "properties": {
                "ReportId": {
                    "$ref": "#/$defs/ReportId"
                },
                "ReportName": {
                    "$ref": "#/$defs/ReportName"
                },
                "Subject": {
                    "$ref": "#/$defs/DeliverabilityTestSubject"
                },
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "CreateDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DeliverabilityTestStatus": {
                    "$ref": "#/$defs/DeliverabilityTestStatus"
                }
            }
        },
        "DeliverabilityTestSubject": {
            "type": "string"
        },
        "PlacementStatistics": {
            "type": "object",
            "properties": {
                "InboxPercentage": {
                    "$ref": "#/$defs/Percentage"
                },
                "SpamPercentage": {
                    "$ref": "#/$defs/Percentage"
                },
                "MissingPercentage": {
                    "$ref": "#/$defs/Percentage"
                },
                "SpfPercentage": {
                    "$ref": "#/$defs/Percentage"
                },
                "DkimPercentage": {
                    "$ref": "#/$defs/Percentage"
                }
            }
        },
        "Percentage": {
            "type": "number",
            "format": "double"
        },
        "IspPlacements": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IspPlacement"
            }
        },
        "IspPlacement": {
            "type": "object",
            "properties": {
                "IspName": {
                    "$ref": "#/$defs/IspName"
                },
                "PlacementStatistics": {
                    "$ref": "#/$defs/PlacementStatistics"
                }
            }
        },
        "MessageContent": {
            "type": "string"
        },
        "GetDeliverabilityTestReportRequest": {
            "type": "object",
            "properties": {
                "ReportId": {
                    "$ref": "#/$defs/ReportId"
                }
            }
        },
        "GetDomainDeliverabilityCampaignResponse": {
            "type": "object",
            "properties": {
                "DomainDeliverabilityCampaign": {
                    "$ref": "#/$defs/DomainDeliverabilityCampaign"
                }
            }
        },
        "DomainDeliverabilityCampaign": {
            "type": "object",
            "properties": {
                "CampaignId": {
                    "$ref": "#/$defs/CampaignId"
                },
                "ImageUrl": {
                    "$ref": "#/$defs/ImageUrl"
                },
                "Subject": {
                    "$ref": "#/$defs/Subject"
                },
                "FromAddress": {
                    "$ref": "#/$defs/Identity"
                },
                "SendingIps": {
                    "$ref": "#/$defs/IpList"
                },
                "FirstSeenDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LastSeenDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "InboxCount": {
                    "$ref": "#/$defs/Volume"
                },
                "SpamCount": {
                    "$ref": "#/$defs/Volume"
                },
                "ReadRate": {
                    "$ref": "#/$defs/Percentage"
                },
                "DeleteRate": {
                    "$ref": "#/$defs/Percentage"
                },
                "ReadDeleteRate": {
                    "$ref": "#/$defs/Percentage"
                },
                "ProjectedVolume": {
                    "$ref": "#/$defs/Volume"
                },
                "Esps": {
                    "$ref": "#/$defs/Esps"
                }
            }
        },
        "CampaignId": {
            "type": "string"
        },
        "ImageUrl": {
            "type": "string"
        },
        "Subject": {
            "type": "string"
        },
        "IpList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Ip"
            }
        },
        "Volume": {
            "type": "integer",
            "format": "int64"
        },
        "Esps": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Esp"
            }
        },
        "Esp": {
            "type": "string"
        },
        "GetDomainDeliverabilityCampaignRequest": {
            "type": "object",
            "properties": {
                "CampaignId": {
                    "$ref": "#/$defs/CampaignId"
                }
            }
        },
        "GetDomainStatisticsReportResponse": {
            "type": "object",
            "properties": {
                "OverallVolume": {
                    "$ref": "#/$defs/OverallVolume"
                },
                "DailyVolumes": {
                    "$ref": "#/$defs/DailyVolumes"
                }
            }
        },
        "OverallVolume": {
            "type": "object",
            "properties": {
                "VolumeStatistics": {
                    "$ref": "#/$defs/VolumeStatistics"
                },
                "ReadRatePercent": {
                    "$ref": "#/$defs/Percentage"
                },
                "DomainIspPlacements": {
                    "$ref": "#/$defs/DomainIspPlacements"
                }
            }
        },
        "VolumeStatistics": {
            "type": "object",
            "properties": {
                "InboxRawCount": {
                    "$ref": "#/$defs/Volume"
                },
                "SpamRawCount": {
                    "$ref": "#/$defs/Volume"
                },
                "ProjectedInbox": {
                    "$ref": "#/$defs/Volume"
                },
                "ProjectedSpam": {
                    "$ref": "#/$defs/Volume"
                }
            }
        },
        "DomainIspPlacements": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainIspPlacement"
            }
        },
        "DomainIspPlacement": {
            "type": "object",
            "properties": {
                "IspName": {
                    "$ref": "#/$defs/IspName"
                },
                "InboxRawCount": {
                    "$ref": "#/$defs/Volume"
                },
                "SpamRawCount": {
                    "$ref": "#/$defs/Volume"
                },
                "InboxPercentage": {
                    "$ref": "#/$defs/Percentage"
                },
                "SpamPercentage": {
                    "$ref": "#/$defs/Percentage"
                }
            }
        },
        "DailyVolumes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DailyVolume"
            }
        },
        "DailyVolume": {
            "type": "object",
            "properties": {
                "StartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "VolumeStatistics": {
                    "$ref": "#/$defs/VolumeStatistics"
                },
                "DomainIspPlacements": {
                    "$ref": "#/$defs/DomainIspPlacements"
                }
            }
        },
        "GetDomainStatisticsReportRequest": {
            "type": "object",
            "properties": {
                "Domain": {
                    "$ref": "#/$defs/Identity"
                },
                "StartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndDate": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "GetEmailIdentityResponse": {
            "type": "object",
            "properties": {
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "FeedbackForwardingStatus": {
                    "$ref": "#/$defs/Enabled"
                },
                "VerifiedForSendingStatus": {
                    "$ref": "#/$defs/Enabled"
                },
                "DkimAttributes": {
                    "$ref": "#/$defs/DkimAttributes"
                },
                "MailFromAttributes": {
                    "$ref": "#/$defs/MailFromAttributes"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "MailFromAttributes": {
            "type": "object",
            "properties": {
                "MailFromDomain": {
                    "$ref": "#/$defs/MailFromDomainName"
                },
                "MailFromDomainStatus": {
                    "$ref": "#/$defs/MailFromDomainStatus"
                },
                "BehaviorOnMxFailure": {
                    "$ref": "#/$defs/BehaviorOnMxFailure"
                }
            }
        },
        "MailFromDomainName": {
            "type": "string"
        },
        "MailFromDomainStatus": {
            "enum": [
                "PENDING",
                "SUCCESS",
                "FAILED",
                "TEMPORARY_FAILURE"
            ]
        },
        "BehaviorOnMxFailure": {
            "enum": [
                "USE_DEFAULT_VALUE",
                "REJECT_MESSAGE"
            ]
        },
        "GetEmailIdentityRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                }
            }
        },
        "ListConfigurationSetsResponse": {
            "type": "object",
            "properties": {
                "ConfigurationSets": {
                    "$ref": "#/$defs/ConfigurationSetNameList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ConfigurationSetNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfigurationSetName"
            }
        },
        "ListConfigurationSetsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListDedicatedIpPoolsResponse": {
            "type": "object",
            "properties": {
                "DedicatedIpPools": {
                    "$ref": "#/$defs/ListOfDedicatedIpPools"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListOfDedicatedIpPools": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PoolName"
            }
        },
        "ListDedicatedIpPoolsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListDeliverabilityTestReportsResponse": {
            "type": "object",
            "properties": {
                "DeliverabilityTestReports": {
                    "$ref": "#/$defs/DeliverabilityTestReports"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DeliverabilityTestReports": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeliverabilityTestReport"
            }
        },
        "ListDeliverabilityTestReportsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListDomainDeliverabilityCampaignsResponse": {
            "type": "object",
            "properties": {
                "DomainDeliverabilityCampaigns": {
                    "$ref": "#/$defs/DomainDeliverabilityCampaignList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DomainDeliverabilityCampaignList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DomainDeliverabilityCampaign"
            }
        },
        "ListDomainDeliverabilityCampaignsRequest": {
            "type": "object",
            "properties": {
                "StartDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "EndDate": {
                    "$ref": "#/$defs/Timestamp"
                },
                "SubscribedDomain": {
                    "$ref": "#/$defs/Domain"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListEmailIdentitiesResponse": {
            "type": "object",
            "properties": {
                "EmailIdentities": {
                    "$ref": "#/$defs/IdentityInfoList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IdentityInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IdentityInfo"
            }
        },
        "IdentityInfo": {
            "type": "object",
            "properties": {
                "IdentityType": {
                    "$ref": "#/$defs/IdentityType"
                },
                "IdentityName": {
                    "$ref": "#/$defs/Identity"
                },
                "SendingEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "ListEmailIdentitiesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PageSize": {
                    "$ref": "#/$defs/MaxItems"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "PutAccountDedicatedIpWarmupAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAccountDedicatedIpWarmupAttributesRequest": {
            "type": "object",
            "properties": {
                "AutoWarmupEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutAccountSendingAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutAccountSendingAttributesRequest": {
            "type": "object",
            "properties": {
                "SendingEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutConfigurationSetDeliveryOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetDeliveryOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "TlsPolicy": {
                    "$ref": "#/$defs/TlsPolicy"
                },
                "SendingPoolName": {
                    "$ref": "#/$defs/SendingPoolName"
                }
            }
        },
        "SendingPoolName": {
            "type": "string"
        },
        "PutConfigurationSetReputationOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetReputationOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "ReputationMetricsEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutConfigurationSetSendingOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetSendingOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "SendingEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutConfigurationSetTrackingOptionsResponse": {
            "type": "object",
            "properties": {}
        },
        "PutConfigurationSetTrackingOptionsRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "CustomRedirectDomain": {
                    "$ref": "#/$defs/CustomRedirectDomain"
                }
            }
        },
        "PutDedicatedIpInPoolResponse": {
            "type": "object",
            "properties": {}
        },
        "PutDedicatedIpInPoolRequest": {
            "type": "object",
            "properties": {
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "DestinationPoolName": {
                    "$ref": "#/$defs/PoolName"
                }
            }
        },
        "PutDedicatedIpWarmupAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutDedicatedIpWarmupAttributesRequest": {
            "type": "object",
            "properties": {
                "Ip": {
                    "$ref": "#/$defs/Ip"
                },
                "WarmupPercentage": {
                    "$ref": "#/$defs/Percentage100Wrapper"
                }
            }
        },
        "PutDeliverabilityDashboardOptionResponse": {
            "type": "object",
            "properties": {}
        },
        "PutDeliverabilityDashboardOptionRequest": {
            "type": "object",
            "properties": {
                "DashboardEnabled": {
                    "$ref": "#/$defs/Enabled"
                },
                "SubscribedDomains": {
                    "$ref": "#/$defs/DomainDeliverabilityTrackingOptions"
                }
            }
        },
        "PutEmailIdentityDkimAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutEmailIdentityDkimAttributesRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "SigningEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutEmailIdentityFeedbackAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutEmailIdentityFeedbackAttributesRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "EmailForwardingEnabled": {
                    "$ref": "#/$defs/Enabled"
                }
            }
        },
        "PutEmailIdentityMailFromAttributesResponse": {
            "type": "object",
            "properties": {}
        },
        "PutEmailIdentityMailFromAttributesRequest": {
            "type": "object",
            "properties": {
                "EmailIdentity": {
                    "$ref": "#/$defs/Identity"
                },
                "MailFromDomain": {
                    "$ref": "#/$defs/MailFromDomainName"
                },
                "BehaviorOnMxFailure": {
                    "$ref": "#/$defs/BehaviorOnMxFailure"
                }
            }
        },
        "SendEmailResponse": {
            "type": "object",
            "properties": {
                "MessageId": {
                    "$ref": "#/$defs/OutboundMessageId"
                }
            }
        },
        "OutboundMessageId": {
            "type": "string"
        },
        "SendEmailRequest": {
            "type": "object",
            "properties": {
                "FromEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Destination": {
                    "$ref": "#/$defs/Destination"
                },
                "ReplyToAddresses": {
                    "$ref": "#/$defs/EmailAddressList"
                },
                "FeedbackForwardingEmailAddress": {
                    "$ref": "#/$defs/EmailAddress"
                },
                "Content": {
                    "$ref": "#/$defs/EmailContent"
                },
                "EmailTags": {
                    "$ref": "#/$defs/MessageTagList"
                },
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                }
            }
        },
        "Destination": {
            "type": "object",
            "properties": {
                "ToAddresses": {
                    "$ref": "#/$defs/EmailAddressList"
                },
                "CcAddresses": {
                    "$ref": "#/$defs/EmailAddressList"
                },
                "BccAddresses": {
                    "$ref": "#/$defs/EmailAddressList"
                }
            }
        },
        "EmailAddressList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EmailAddress"
            }
        },
        "MessageTagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MessageTag"
            }
        },
        "MessageTag": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/MessageTagName"
                },
                "Value": {
                    "$ref": "#/$defs/MessageTagValue"
                }
            }
        },
        "MessageTagName": {
            "type": "string"
        },
        "MessageTagValue": {
            "type": "string"
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "UpdateConfigurationSetEventDestinationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateConfigurationSetEventDestinationRequest": {
            "type": "object",
            "properties": {
                "ConfigurationSetName": {
                    "$ref": "#/$defs/ConfigurationSetName"
                },
                "EventDestinationName": {
                    "$ref": "#/$defs/EventDestinationName"
                },
                "EventDestination": {
                    "$ref": "#/$defs/EventDestinationDefinition"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://email-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://email-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://email.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://email.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}