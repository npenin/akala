{
    "name": "pi",
    "commands": [
        {
            "name": "CreatePerformanceAnalysisReport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.CreatePerformanceAnalysisReport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePerformanceAnalysisReportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePerformanceAnalysisReportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePerformanceAnalysisReport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.DeletePerformanceAnalysisReport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePerformanceAnalysisReportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePerformanceAnalysisReportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeDimensionKeys",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.DescribeDimensionKeys"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDimensionKeysResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDimensionKeysRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDimensionKeyDetails",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.GetDimensionKeyDetails"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDimensionKeyDetailsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDimensionKeyDetailsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPerformanceAnalysisReport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.GetPerformanceAnalysisReport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPerformanceAnalysisReportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPerformanceAnalysisReportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourceMetadata",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.GetResourceMetadata"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourceMetadataResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourceMetadataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "GetResourceMetrics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.GetResourceMetrics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourceMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourceMetricsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAvailableResourceDimensions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.ListAvailableResourceDimensions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAvailableResourceDimensionsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAvailableResourceDimensionsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAvailableResourceMetrics",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.ListAvailableResourceMetrics"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAvailableResourceMetricsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAvailableResourceMetricsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPerformanceAnalysisReports",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.ListPerformanceAnalysisReports"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPerformanceAnalysisReportsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPerformanceAnalysisReportsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "PerformanceInsightsv20180227.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreatePerformanceAnalysisReportResponse": {
            "type": "object",
            "properties": {
                "AnalysisReportId": {
                    "$ref": "#/$defs/AnalysisReportId"
                }
            }
        },
        "AnalysisReportId": {
            "type": "string"
        },
        "CreatePerformanceAnalysisReportRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                },
                "StartTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ServiceType": {
            "enum": [
                "RDS",
                "DOCDB"
            ]
        },
        "IdentifierString": {
            "type": "string"
        },
        "ISOTimestamp": {
            "type": "string",
            "format": "date-time"
        },
        "TagList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/TagKey"
                },
                "Value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "DeletePerformanceAnalysisReportResponse": {
            "type": "object",
            "properties": {}
        },
        "DeletePerformanceAnalysisReportRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                },
                "AnalysisReportId": {
                    "$ref": "#/$defs/AnalysisReportId"
                }
            }
        },
        "DescribeDimensionKeysResponse": {
            "type": "object",
            "properties": {
                "AlignedStartTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "AlignedEndTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "PartitionKeys": {
                    "$ref": "#/$defs/ResponsePartitionKeyList"
                },
                "Keys": {
                    "$ref": "#/$defs/DimensionKeyDescriptionList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ResponsePartitionKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResponsePartitionKey"
            }
        },
        "ResponsePartitionKey": {
            "type": "object",
            "properties": {
                "Dimensions": {
                    "$ref": "#/$defs/DimensionMap"
                }
            }
        },
        "DimensionMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/RequestString"
            }
        },
        "RequestString": {
            "type": "string"
        },
        "DimensionKeyDescriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionKeyDescription"
            }
        },
        "DimensionKeyDescription": {
            "type": "object",
            "properties": {
                "Dimensions": {
                    "$ref": "#/$defs/DimensionMap"
                },
                "Total": {
                    "$ref": "#/$defs/Double"
                },
                "AdditionalMetrics": {
                    "$ref": "#/$defs/AdditionalMetricsMap"
                },
                "Partitions": {
                    "$ref": "#/$defs/MetricValuesList"
                }
            }
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "AdditionalMetricsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Double"
            }
        },
        "MetricValuesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Double"
            }
        },
        "NextToken": {
            "type": "string"
        },
        "DescribeDimensionKeysRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                },
                "StartTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "Metric": {
                    "$ref": "#/$defs/RequestString"
                },
                "PeriodInSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "GroupBy": {
                    "$ref": "#/$defs/DimensionGroup"
                },
                "AdditionalMetrics": {
                    "$ref": "#/$defs/AdditionalMetricsList"
                },
                "PartitionBy": {
                    "$ref": "#/$defs/DimensionGroup"
                },
                "Filter": {
                    "$ref": "#/$defs/MetricQueryFilterMap"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "DimensionGroup": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/SanitizedString"
                },
                "Dimensions": {
                    "$ref": "#/$defs/SanitizedStringList"
                },
                "Limit": {
                    "$ref": "#/$defs/Limit"
                }
            }
        },
        "SanitizedString": {
            "type": "string"
        },
        "SanitizedStringList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SanitizedString"
            }
        },
        "Limit": {
            "type": "integer",
            "format": "int32"
        },
        "AdditionalMetricsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SanitizedString"
            }
        },
        "MetricQueryFilterMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/RequestString"
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "GetDimensionKeyDetailsResponse": {
            "type": "object",
            "properties": {
                "Dimensions": {
                    "$ref": "#/$defs/DimensionKeyDetailList"
                }
            }
        },
        "DimensionKeyDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionKeyDetail"
            }
        },
        "DimensionKeyDetail": {
            "type": "object",
            "properties": {
                "Value": {
                    "$ref": "#/$defs/String"
                },
                "Dimension": {
                    "$ref": "#/$defs/String"
                },
                "Status": {
                    "$ref": "#/$defs/DetailStatus"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "DetailStatus": {
            "enum": [
                "AVAILABLE",
                "PROCESSING",
                "UNAVAILABLE"
            ]
        },
        "GetDimensionKeyDetailsRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                },
                "Group": {
                    "$ref": "#/$defs/RequestString"
                },
                "GroupIdentifier": {
                    "$ref": "#/$defs/RequestString"
                },
                "RequestedDimensions": {
                    "$ref": "#/$defs/RequestedDimensionList"
                }
            }
        },
        "RequestedDimensionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SanitizedString"
            }
        },
        "GetPerformanceAnalysisReportResponse": {
            "type": "object",
            "properties": {
                "AnalysisReport": {
                    "$ref": "#/$defs/AnalysisReport"
                }
            }
        },
        "AnalysisReport": {
            "type": "object",
            "properties": {
                "AnalysisReportId": {
                    "$ref": "#/$defs/AnalysisReportId"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                },
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "CreateTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "StartTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "Status": {
                    "$ref": "#/$defs/AnalysisStatus"
                },
                "Insights": {
                    "$ref": "#/$defs/InsightList"
                }
            }
        },
        "AnalysisStatus": {
            "enum": [
                "RUNNING",
                "SUCCEEDED",
                "FAILED"
            ]
        },
        "InsightList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Insight"
            }
        },
        "Insight": {
            "type": "object",
            "properties": {
                "InsightId": {
                    "$ref": "#/$defs/String"
                },
                "InsightType": {
                    "$ref": "#/$defs/String"
                },
                "Context": {
                    "$ref": "#/$defs/ContextType"
                },
                "StartTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "Severity": {
                    "$ref": "#/$defs/Severity"
                },
                "SupportingInsights": {
                    "$ref": "#/$defs/InsightList"
                },
                "Description": {
                    "$ref": "#/$defs/MarkdownString"
                },
                "Recommendations": {
                    "$ref": "#/$defs/RecommendationList"
                },
                "InsightData": {
                    "$ref": "#/$defs/DataList"
                },
                "BaselineData": {
                    "$ref": "#/$defs/DataList"
                }
            }
        },
        "ContextType": {
            "enum": [
                "CAUSAL",
                "CONTEXTUAL"
            ]
        },
        "Severity": {
            "enum": [
                "LOW",
                "MEDIUM",
                "HIGH"
            ]
        },
        "MarkdownString": {
            "type": "string"
        },
        "RecommendationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Recommendation"
            }
        },
        "Recommendation": {
            "type": "object",
            "properties": {
                "RecommendationId": {
                    "$ref": "#/$defs/String"
                },
                "RecommendationDescription": {
                    "$ref": "#/$defs/MarkdownString"
                }
            }
        },
        "DataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Data"
            }
        },
        "Data": {
            "type": "object",
            "properties": {
                "PerformanceInsightsMetric": {
                    "$ref": "#/$defs/PerformanceInsightsMetric"
                }
            }
        },
        "PerformanceInsightsMetric": {
            "type": "object",
            "properties": {
                "Metric": {
                    "$ref": "#/$defs/DescriptiveString"
                },
                "DisplayName": {
                    "$ref": "#/$defs/DescriptiveString"
                },
                "Dimensions": {
                    "$ref": "#/$defs/DescriptiveMap"
                },
                "Filter": {
                    "$ref": "#/$defs/DescriptiveMap"
                },
                "Value": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "DescriptiveString": {
            "type": "string"
        },
        "DescriptiveMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DescriptiveString"
            }
        },
        "GetPerformanceAnalysisReportRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                },
                "AnalysisReportId": {
                    "$ref": "#/$defs/AnalysisReportId"
                },
                "TextFormat": {
                    "$ref": "#/$defs/TextFormat"
                },
                "AcceptLanguage": {
                    "$ref": "#/$defs/AcceptLanguage"
                }
            }
        },
        "TextFormat": {
            "enum": [
                "PLAIN_TEXT",
                "MARKDOWN"
            ]
        },
        "AcceptLanguage": {
            "enum": [
                "EN_US"
            ]
        },
        "GetResourceMetadataResponse": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/String"
                },
                "Features": {
                    "$ref": "#/$defs/FeatureMetadataMap"
                }
            }
        },
        "FeatureMetadataMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/FeatureMetadata"
            }
        },
        "FeatureMetadata": {
            "type": "object",
            "properties": {
                "Status": {
                    "$ref": "#/$defs/FeatureStatus"
                }
            }
        },
        "FeatureStatus": {
            "enum": [
                "ENABLED",
                "DISABLED",
                "UNSUPPORTED",
                "ENABLED_PENDING_REBOOT",
                "DISABLED_PENDING_REBOOT",
                "UNKNOWN"
            ]
        },
        "GetResourceMetadataRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                }
            }
        },
        "GetResourceMetricsResponse": {
            "type": "object",
            "properties": {
                "AlignedStartTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "AlignedEndTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "Identifier": {
                    "$ref": "#/$defs/String"
                },
                "MetricList": {
                    "$ref": "#/$defs/MetricKeyDataPointsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MetricKeyDataPointsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricKeyDataPoints"
            }
        },
        "MetricKeyDataPoints": {
            "type": "object",
            "properties": {
                "Key": {
                    "$ref": "#/$defs/ResponseResourceMetricKey"
                },
                "DataPoints": {
                    "$ref": "#/$defs/DataPointsList"
                }
            }
        },
        "ResponseResourceMetricKey": {
            "type": "object",
            "properties": {
                "Metric": {
                    "$ref": "#/$defs/String"
                },
                "Dimensions": {
                    "$ref": "#/$defs/DimensionMap"
                }
            }
        },
        "DataPointsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataPoint"
            }
        },
        "DataPoint": {
            "type": "object",
            "properties": {
                "Timestamp": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "Value": {
                    "$ref": "#/$defs/Double"
                }
            }
        },
        "GetResourceMetricsRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                },
                "MetricQueries": {
                    "$ref": "#/$defs/MetricQueryList"
                },
                "StartTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "PeriodInSeconds": {
                    "$ref": "#/$defs/Integer"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "PeriodAlignment": {
                    "$ref": "#/$defs/PeriodAlignment"
                }
            }
        },
        "MetricQueryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricQuery"
            }
        },
        "MetricQuery": {
            "type": "object",
            "properties": {
                "Metric": {
                    "$ref": "#/$defs/SanitizedString"
                },
                "GroupBy": {
                    "$ref": "#/$defs/DimensionGroup"
                },
                "Filter": {
                    "$ref": "#/$defs/MetricQueryFilterMap"
                }
            }
        },
        "PeriodAlignment": {
            "enum": [
                "END_TIME",
                "START_TIME"
            ]
        },
        "ListAvailableResourceDimensionsResponse": {
            "type": "object",
            "properties": {
                "MetricDimensions": {
                    "$ref": "#/$defs/MetricDimensionsList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MetricDimensionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetricDimensionGroups"
            }
        },
        "MetricDimensionGroups": {
            "type": "object",
            "properties": {
                "Metric": {
                    "$ref": "#/$defs/String"
                },
                "Groups": {
                    "$ref": "#/$defs/DimensionGroupDetailList"
                }
            }
        },
        "DimensionGroupDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionGroupDetail"
            }
        },
        "DimensionGroupDetail": {
            "type": "object",
            "properties": {
                "Group": {
                    "$ref": "#/$defs/String"
                },
                "Dimensions": {
                    "$ref": "#/$defs/DimensionDetailList"
                }
            }
        },
        "DimensionDetailList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DimensionDetail"
            }
        },
        "DimensionDetail": {
            "type": "object",
            "properties": {
                "Identifier": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListAvailableResourceDimensionsRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                },
                "Metrics": {
                    "$ref": "#/$defs/DimensionsMetricList"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "AuthorizedActions": {
                    "$ref": "#/$defs/AuthorizedActionsList"
                }
            }
        },
        "DimensionsMetricList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SanitizedString"
            }
        },
        "AuthorizedActionsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FineGrainedAction"
            }
        },
        "FineGrainedAction": {
            "enum": [
                "DESCRIBE_DIMENSION_KEYS",
                "GET_DIMENSION_KEY_DETAILS",
                "GET_RESOURCE_METRICS"
            ]
        },
        "ListAvailableResourceMetricsResponse": {
            "type": "object",
            "properties": {
                "Metrics": {
                    "$ref": "#/$defs/ResponseResourceMetricList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ResponseResourceMetricList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResponseResourceMetric"
            }
        },
        "ResponseResourceMetric": {
            "type": "object",
            "properties": {
                "Metric": {
                    "$ref": "#/$defs/String"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Unit": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Description": {
            "type": "string"
        },
        "ListAvailableResourceMetricsRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                },
                "MetricTypes": {
                    "$ref": "#/$defs/MetricTypeList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "MetricTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SanitizedString"
            }
        },
        "ListPerformanceAnalysisReportsResponse": {
            "type": "object",
            "properties": {
                "AnalysisReports": {
                    "$ref": "#/$defs/AnalysisReportSummaryList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AnalysisReportSummaryList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AnalysisReportSummary"
            }
        },
        "AnalysisReportSummary": {
            "type": "object",
            "properties": {
                "AnalysisReportId": {
                    "$ref": "#/$defs/String"
                },
                "CreateTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "StartTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "EndTime": {
                    "$ref": "#/$defs/ISOTimestamp"
                },
                "Status": {
                    "$ref": "#/$defs/AnalysisStatus"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListPerformanceAnalysisReportsRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "Identifier": {
                    "$ref": "#/$defs/IdentifierString"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "ListTags": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                }
            }
        },
        "AmazonResourceName": {
            "type": "string"
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagList"
                }
            }
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ServiceType": {
                    "$ref": "#/$defs/ServiceType"
                },
                "ResourceARN": {
                    "$ref": "#/$defs/AmazonResourceName"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://pi-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://pi-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://pi.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://pi.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}