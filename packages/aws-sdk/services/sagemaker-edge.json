{
    "name": "sagemaker",
    "commands": [
        {
            "name": "GetDeployments",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetDeployments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDeploymentsResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDeploymentsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "GetDeviceRegistration",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/GetDeviceRegistration"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDeviceRegistrationResult"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDeviceRegistrationRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        },
        {
            "name": "SendHeartbeat",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/SendHeartbeat"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SendHeartbeatRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "type": {},
                        "members": {},
                        "traits": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "GetDeploymentsResult": {
            "type": "object",
            "properties": {
                "Deployments": {
                    "$ref": "#/$defs/EdgeDeployments"
                }
            }
        },
        "EdgeDeployments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EdgeDeployment"
            }
        },
        "EdgeDeployment": {
            "type": "object",
            "properties": {
                "DeploymentName": {
                    "$ref": "#/$defs/EntityName"
                },
                "Type": {
                    "$ref": "#/$defs/DeploymentType"
                },
                "FailureHandlingPolicy": {
                    "$ref": "#/$defs/FailureHandlingPolicy"
                },
                "Definitions": {
                    "$ref": "#/$defs/Definitions"
                }
            }
        },
        "EntityName": {
            "type": "string"
        },
        "DeploymentType": {
            "enum": [
                "Model"
            ]
        },
        "FailureHandlingPolicy": {
            "enum": [
                "RollbackOnFailure",
                "DoNothing"
            ]
        },
        "Definitions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Definition"
            }
        },
        "Definition": {
            "type": "object",
            "properties": {
                "ModelHandle": {
                    "$ref": "#/$defs/EntityName"
                },
                "S3Url": {
                    "$ref": "#/$defs/S3Uri"
                },
                "Checksum": {
                    "$ref": "#/$defs/Checksum"
                },
                "State": {
                    "$ref": "#/$defs/ModelState"
                }
            }
        },
        "S3Uri": {
            "type": "string"
        },
        "Checksum": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ChecksumType"
                },
                "Sum": {
                    "$ref": "#/$defs/ChecksumString"
                }
            }
        },
        "ChecksumType": {
            "enum": [
                "Sha1"
            ]
        },
        "ChecksumString": {
            "type": "string"
        },
        "ModelState": {
            "enum": [
                "Deploy",
                "Undeploy"
            ]
        },
        "GetDeploymentsRequest": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "DeviceFleetName": {
                    "$ref": "#/$defs/DeviceFleetName"
                }
            }
        },
        "DeviceName": {
            "type": "string"
        },
        "DeviceFleetName": {
            "type": "string"
        },
        "GetDeviceRegistrationResult": {
            "type": "object",
            "properties": {
                "DeviceRegistration": {
                    "$ref": "#/$defs/DeviceRegistration"
                },
                "CacheTTL": {
                    "$ref": "#/$defs/CacheTTLSeconds"
                }
            }
        },
        "DeviceRegistration": {
            "type": "string"
        },
        "CacheTTLSeconds": {
            "type": "string"
        },
        "GetDeviceRegistrationRequest": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "DeviceFleetName": {
                    "$ref": "#/$defs/DeviceFleetName"
                }
            }
        },
        "SendHeartbeatRequest": {
            "type": "object",
            "properties": {
                "AgentMetrics": {
                    "$ref": "#/$defs/EdgeMetrics"
                },
                "Models": {
                    "$ref": "#/$defs/Models"
                },
                "AgentVersion": {
                    "$ref": "#/$defs/Version"
                },
                "DeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "DeviceFleetName": {
                    "$ref": "#/$defs/DeviceFleetName"
                },
                "DeploymentResult": {
                    "$ref": "#/$defs/DeploymentResult"
                }
            }
        },
        "EdgeMetrics": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EdgeMetric"
            }
        },
        "EdgeMetric": {
            "type": "object",
            "properties": {
                "Dimension": {
                    "$ref": "#/$defs/Dimension"
                },
                "MetricName": {
                    "$ref": "#/$defs/Metric"
                },
                "Value": {
                    "$ref": "#/$defs/Value"
                },
                "Timestamp": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "Dimension": {
            "type": "string"
        },
        "Metric": {
            "type": "string"
        },
        "Value": {
            "type": "number",
            "format": "double"
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "Models": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Model"
            }
        },
        "Model": {
            "type": "object",
            "properties": {
                "ModelName": {
                    "$ref": "#/$defs/ModelName"
                },
                "ModelVersion": {
                    "$ref": "#/$defs/Version"
                },
                "LatestSampleTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "LatestInference": {
                    "$ref": "#/$defs/Timestamp"
                },
                "ModelMetrics": {
                    "$ref": "#/$defs/EdgeMetrics"
                }
            }
        },
        "ModelName": {
            "type": "string"
        },
        "Version": {
            "type": "string"
        },
        "DeploymentResult": {
            "type": "object",
            "properties": {
                "DeploymentName": {
                    "$ref": "#/$defs/EntityName"
                },
                "DeploymentStatus": {
                    "$ref": "#/$defs/EntityName"
                },
                "DeploymentStatusMessage": {
                    "$ref": "#/$defs/String"
                },
                "DeploymentStartTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DeploymentEndTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "DeploymentModels": {
                    "$ref": "#/$defs/DeploymentModels"
                }
            }
        },
        "String": {
            "type": "string"
        },
        "DeploymentModels": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeploymentModel"
            }
        },
        "DeploymentModel": {
            "type": "object",
            "properties": {
                "ModelHandle": {
                    "$ref": "#/$defs/EntityName"
                },
                "ModelName": {
                    "$ref": "#/$defs/ModelName"
                },
                "ModelVersion": {
                    "$ref": "#/$defs/Version"
                },
                "DesiredState": {
                    "$ref": "#/$defs/ModelState"
                },
                "State": {
                    "$ref": "#/$defs/ModelState"
                },
                "Status": {
                    "$ref": "#/$defs/DeploymentStatus"
                },
                "StatusReason": {
                    "$ref": "#/$defs/String"
                },
                "RollbackFailureReason": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "DeploymentStatus": {
            "enum": [
                "Success",
                "Fail"
            ]
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://edge.sagemaker-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://edge.sagemaker-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://edge.sagemaker.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://edge.sagemaker.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}