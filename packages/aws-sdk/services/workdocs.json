{
    "name": "workdocs",
    "commands": [
        {
            "name": "AbortDocumentVersionUpload",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "VersionId": "route.VersionId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/documents/{DocumentId}/versions/{VersionId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0.VersionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AbortDocumentVersionUploadRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "VersionId": {}
                    }
                }
            }
        },
        {
            "name": "ActivateUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "UserId": "route.UserId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/api/v1/users/{UserId}/activation"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ActivateUserResponse"
                    },
                    "inject": [
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ActivateUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "UserId": {},
                        "AuthenticationToken": {}
                    }
                }
            }
        },
        {
            "name": "AddResourcePermissions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/api/v1/resources/{ResourceId}/permissions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AddResourcePermissionsResponse"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AddResourcePermissionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "ResourceId": {},
                        "Principals": {},
                        "NotificationOptions": {}
                    }
                }
            }
        },
        {
            "name": "CreateComment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "VersionId": "route.VersionId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/api/v1/documents/{DocumentId}/versions/{VersionId}/comment"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCommentResponse"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0.VersionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCommentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "VersionId": {},
                        "ParentId": {},
                        "ThreadId": {},
                        "Text": {},
                        "Visibility": {},
                        "NotifyCollaborators": {}
                    }
                }
            }
        },
        {
            "name": "CreateCustomMetadata",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/api/v1/resources/{ResourceId}/customMetadata"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCustomMetadataResponse"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCustomMetadataRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "ResourceId": {},
                        "VersionId": {},
                        "CustomMetadata": {}
                    }
                }
            }
        },
        {
            "name": "CreateFolder",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/api/v1/folders"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateFolderResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateFolderRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "Name": {},
                        "ParentFolderId": {}
                    }
                }
            }
        },
        {
            "name": "CreateLabels",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/api/v1/resources/{ResourceId}/labels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateLabelsResponse"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateLabelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceId": {},
                        "Labels": {},
                        "AuthenticationToken": {}
                    }
                }
            }
        },
        {
            "name": "CreateNotificationSubscription",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OrganizationId": "route.OrganizationId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/api/v1/organizations/{OrganizationId}/subscriptions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNotificationSubscriptionResponse"
                    },
                    "inject": [
                        "param.0.OrganizationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNotificationSubscriptionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "OrganizationId": {},
                        "Endpoint": {},
                        "Protocol": {},
                        "SubscriptionType": {}
                    }
                }
            }
        },
        {
            "name": "CreateUser",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/api/v1/users"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "OrganizationId": {},
                        "Username": {},
                        "EmailAddress": {},
                        "GivenName": {},
                        "Surname": {},
                        "Password": {},
                        "TimeZoneId": {},
                        "StorageRule": {},
                        "AuthenticationToken": {}
                    }
                }
            }
        },
        {
            "name": "DeactivateUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "UserId": "route.UserId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/users/{UserId}/activation"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeactivateUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "UserId": {},
                        "AuthenticationToken": {}
                    }
                }
            }
        },
        {
            "name": "DeleteComment",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "VersionId": "route.VersionId",
                            "CommentId": "route.CommentId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0.VersionId",
                        "param.0.CommentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCommentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "VersionId": {},
                        "CommentId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteCustomMetadata",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/resources/{ResourceId}/customMetadata"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCustomMetadataResponse"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCustomMetadataRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "ResourceId": {},
                        "VersionId": {},
                        "Keys": {},
                        "DeleteAll": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDocument",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/documents/{DocumentId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDocumentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDocumentVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "VersionId": "route.VersionId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/documentVersions/{DocumentId}/versions/{VersionId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0.VersionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDocumentVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "VersionId": {},
                        "DeletePriorVersions": {}
                    }
                }
            }
        },
        {
            "name": "DeleteFolder",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FolderId": "route.FolderId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/folders/{FolderId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.FolderId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFolderRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "FolderId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteFolderContents",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FolderId": "route.FolderId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/folders/{FolderId}/contents"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.FolderId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFolderContentsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "FolderId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteLabels",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/resources/{ResourceId}/labels"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteLabelsResponse"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteLabelsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceId": {},
                        "AuthenticationToken": {},
                        "Labels": {},
                        "DeleteAll": {}
                    }
                }
            }
        },
        {
            "name": "DeleteNotificationSubscription",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OrganizationId": "route.OrganizationId",
                            "SubscriptionId": "route.SubscriptionId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.OrganizationId",
                        "param.0.SubscriptionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteNotificationSubscriptionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "SubscriptionId": {},
                        "OrganizationId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "UserId": "route.UserId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/users/{UserId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "UserId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeActivities",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/api/v1/activities"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeActivitiesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeActivitiesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "StartTime": {},
                        "EndTime": {},
                        "OrganizationId": {},
                        "ActivityTypes": {},
                        "ResourceId": {},
                        "UserId": {},
                        "IncludeIndirectActivities": {},
                        "Limit": {},
                        "Marker": {}
                    }
                }
            }
        },
        {
            "name": "DescribeComments",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "VersionId": "route.VersionId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v1/documents/{DocumentId}/versions/{VersionId}/comments"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeCommentsResponse"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0.VersionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeCommentsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "VersionId": {},
                        "Limit": {},
                        "Marker": {}
                    }
                }
            }
        },
        {
            "name": "DescribeDocumentVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v1/documents/{DocumentId}/versions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDocumentVersionsResponse"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDocumentVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "Marker": {},
                        "Limit": {},
                        "Include": {},
                        "Fields": {}
                    }
                }
            }
        },
        {
            "name": "DescribeFolderContents",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FolderId": "route.FolderId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v1/folders/{FolderId}/contents"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeFolderContentsResponse"
                    },
                    "inject": [
                        "param.0.FolderId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeFolderContentsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "FolderId": {},
                        "Sort": {},
                        "Order": {},
                        "Limit": {},
                        "Marker": {},
                        "Type": {},
                        "Include": {}
                    }
                }
            }
        },
        {
            "name": "DescribeGroups",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/api/v1/groups"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeGroupsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeGroupsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "SearchQuery": {},
                        "OrganizationId": {},
                        "Marker": {},
                        "Limit": {}
                    }
                }
            }
        },
        {
            "name": "DescribeNotificationSubscriptions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "OrganizationId": "route.OrganizationId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v1/organizations/{OrganizationId}/subscriptions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNotificationSubscriptionsResponse"
                    },
                    "inject": [
                        "param.0.OrganizationId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNotificationSubscriptionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "OrganizationId": {},
                        "Marker": {},
                        "Limit": {}
                    }
                }
            }
        },
        {
            "name": "DescribeResourcePermissions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v1/resources/{ResourceId}/permissions"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeResourcePermissionsResponse"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeResourcePermissionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "ResourceId": {},
                        "PrincipalId": {},
                        "Limit": {},
                        "Marker": {}
                    }
                }
            }
        },
        {
            "name": "DescribeRootFolders",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/api/v1/me/root"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeRootFoldersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeRootFoldersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "Limit": {},
                        "Marker": {}
                    }
                }
            }
        },
        {
            "name": "DescribeUsers",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/api/v1/users"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeUsersResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeUsersRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "OrganizationId": {},
                        "UserIds": {},
                        "Query": {},
                        "Include": {},
                        "Order": {},
                        "Sort": {},
                        "Marker": {},
                        "Limit": {},
                        "Fields": {}
                    }
                }
            }
        },
        {
            "name": "GetCurrentUser",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/api/v1/me"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCurrentUserResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCurrentUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {}
                    }
                }
            }
        },
        {
            "name": "GetDocument",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v1/documents/{DocumentId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDocumentResponse"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDocumentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "IncludeCustomMetadata": {}
                    }
                }
            }
        },
        {
            "name": "GetDocumentPath",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v1/documents/{DocumentId}/path"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDocumentPathResponse"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDocumentPathRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "Limit": {},
                        "Fields": {},
                        "Marker": {}
                    }
                }
            }
        },
        {
            "name": "GetDocumentVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "VersionId": "route.VersionId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v1/documents/{DocumentId}/versions/{VersionId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDocumentVersionResponse"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0.VersionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDocumentVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "VersionId": {},
                        "Fields": {},
                        "IncludeCustomMetadata": {}
                    }
                }
            }
        },
        {
            "name": "GetFolder",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FolderId": "route.FolderId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v1/folders/{FolderId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFolderResponse"
                    },
                    "inject": [
                        "param.0.FolderId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFolderRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "FolderId": {},
                        "IncludeCustomMetadata": {}
                    }
                }
            }
        },
        {
            "name": "GetFolderPath",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FolderId": "route.FolderId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/api/v1/folders/{FolderId}/path"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFolderPathResponse"
                    },
                    "inject": [
                        "param.0.FolderId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFolderPathRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "FolderId": {},
                        "Limit": {},
                        "Fields": {},
                        "Marker": {}
                    }
                }
            }
        },
        {
            "name": "GetResources",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/api/v1/resources"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetResourcesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetResourcesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "UserId": {},
                        "CollectionType": {},
                        "Limit": {},
                        "Marker": {}
                    }
                }
            }
        },
        {
            "name": "InitiateDocumentVersionUpload",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/api/v1/documents"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/InitiateDocumentVersionUploadResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/InitiateDocumentVersionUploadRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "Id": {},
                        "Name": {},
                        "ContentCreatedTimestamp": {},
                        "ContentModifiedTimestamp": {},
                        "ContentType": {},
                        "DocumentSizeInBytes": {},
                        "ParentFolderId": {}
                    }
                }
            }
        },
        {
            "name": "RemoveAllResourcePermissions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/resources/{ResourceId}/permissions"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveAllResourcePermissionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "ResourceId": {}
                    }
                }
            }
        },
        {
            "name": "RemoveResourcePermission",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceId": "route.ResourceId",
                            "PrincipalId": "route.PrincipalId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/api/v1/resources/{ResourceId}/permissions/{PrincipalId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.ResourceId",
                        "param.0.PrincipalId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveResourcePermissionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "ResourceId": {},
                        "PrincipalId": {},
                        "PrincipalType": {}
                    }
                }
            }
        },
        {
            "name": "RestoreDocumentVersions",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/api/v1/documentVersions/restore/{DocumentId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RestoreDocumentVersionsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {}
                    }
                }
            }
        },
        {
            "name": "SearchResources",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/api/v1/search"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SearchResourcesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SearchResourcesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "QueryText": {},
                        "QueryScopes": {},
                        "OrganizationId": {},
                        "AdditionalResponseFields": {},
                        "Filters": {},
                        "OrderBy": {},
                        "Limit": {},
                        "Marker": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDocument",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/api/v1/documents/{DocumentId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDocumentRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "Name": {},
                        "ParentFolderId": {},
                        "ResourceState": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDocumentVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DocumentId": "route.DocumentId",
                            "VersionId": "route.VersionId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/api/v1/documents/{DocumentId}/versions/{VersionId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.DocumentId",
                        "param.0.VersionId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDocumentVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "DocumentId": {},
                        "VersionId": {},
                        "VersionStatus": {}
                    }
                }
            }
        },
        {
            "name": "UpdateFolder",
            "config": {
                "http": {
                    "inject": [
                        {
                            "FolderId": "route.FolderId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/api/v1/folders/{FolderId}"
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0.FolderId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateFolderRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "FolderId": {},
                        "Name": {},
                        "ParentFolderId": {},
                        "ResourceState": {}
                    }
                }
            }
        },
        {
            "name": "UpdateUser",
            "config": {
                "http": {
                    "inject": [
                        {
                            "UserId": "route.UserId",
                            "...": "body"
                        }
                    ],
                    "method": "PATCH",
                    "route": "/api/v1/users/{UserId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateUserResponse"
                    },
                    "inject": [
                        "param.0.UserId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateUserRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "AuthenticationToken": {},
                        "UserId": {},
                        "GivenName": {},
                        "Surname": {},
                        "Type": {},
                        "StorageRule": {},
                        "TimeZoneId": {},
                        "Locale": {},
                        "GrantPoweruserPrivileges": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AbortDocumentVersionUploadRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                }
            }
        },
        "AuthenticationHeaderType": {
            "type": "string"
        },
        "ResourceIdType": {
            "type": "string"
        },
        "DocumentVersionIdType": {
            "type": "string"
        },
        "ActivateUserRequest": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/IdType"
                },
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                }
            }
        },
        "IdType": {
            "type": "string"
        },
        "ActivateUserResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IdType"
                },
                "Username": {
                    "$ref": "#/$defs/UsernameType"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddressType"
                },
                "GivenName": {
                    "$ref": "#/$defs/UserAttributeValueType"
                },
                "Surname": {
                    "$ref": "#/$defs/UserAttributeValueType"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/IdType"
                },
                "RootFolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "RecycleBinFolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "Status": {
                    "$ref": "#/$defs/UserStatusType"
                },
                "Type": {
                    "$ref": "#/$defs/UserType"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "ModifiedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "TimeZoneId": {
                    "$ref": "#/$defs/TimeZoneIdType"
                },
                "Locale": {
                    "$ref": "#/$defs/LocaleType"
                },
                "Storage": {
                    "$ref": "#/$defs/UserStorageMetadata"
                }
            }
        },
        "UsernameType": {
            "type": "string"
        },
        "EmailAddressType": {
            "type": "string"
        },
        "UserAttributeValueType": {
            "type": "string"
        },
        "UserStatusType": {
            "enum": [
                "ACTIVE",
                "INACTIVE",
                "PENDING"
            ]
        },
        "UserType": {
            "enum": [
                "USER",
                "ADMIN",
                "POWERUSER",
                "MINIMALUSER",
                "WORKSPACESUSER"
            ]
        },
        "TimestampType": {
            "type": "string",
            "format": "date-time"
        },
        "TimeZoneIdType": {
            "type": "string"
        },
        "LocaleType": {
            "enum": [
                "EN",
                "FR",
                "KO",
                "DE",
                "ES",
                "JA",
                "RU",
                "ZH_CN",
                "ZH_TW",
                "PT_BR",
                "DEFAULT"
            ]
        },
        "UserStorageMetadata": {
            "type": "object",
            "properties": {
                "StorageUtilizedInBytes": {
                    "$ref": "#/$defs/SizeType"
                },
                "StorageRule": {
                    "$ref": "#/$defs/StorageRuleType"
                }
            }
        },
        "SizeType": {
            "type": "integer",
            "format": "int64"
        },
        "StorageRuleType": {
            "type": "object",
            "properties": {
                "StorageAllocatedInBytes": {
                    "$ref": "#/$defs/PositiveSizeType"
                },
                "StorageType": {
                    "$ref": "#/$defs/StorageType"
                }
            }
        },
        "PositiveSizeType": {
            "type": "integer",
            "format": "int64"
        },
        "StorageType": {
            "enum": [
                "UNLIMITED",
                "QUOTA"
            ]
        },
        "AddResourcePermissionsRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "Principals": {
                    "$ref": "#/$defs/SharePrincipalList"
                },
                "NotificationOptions": {
                    "$ref": "#/$defs/NotificationOptions"
                }
            }
        },
        "SharePrincipalList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SharePrincipal"
            }
        },
        "SharePrincipal": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IdType"
                },
                "Type": {
                    "$ref": "#/$defs/PrincipalType"
                },
                "Role": {
                    "$ref": "#/$defs/RoleType"
                }
            }
        },
        "PrincipalType": {
            "enum": [
                "USER",
                "GROUP",
                "INVITE",
                "ANONYMOUS",
                "ORGANIZATION"
            ]
        },
        "RoleType": {
            "enum": [
                "VIEWER",
                "CONTRIBUTOR",
                "OWNER",
                "COOWNER"
            ]
        },
        "NotificationOptions": {
            "type": "object",
            "properties": {
                "SendEmail": {
                    "$ref": "#/$defs/BooleanType"
                },
                "EmailMessage": {
                    "$ref": "#/$defs/MessageType"
                }
            }
        },
        "BooleanType": {
            "type": "boolean"
        },
        "MessageType": {
            "type": "string"
        },
        "AddResourcePermissionsResponse": {
            "type": "object",
            "properties": {
                "ShareResults": {
                    "$ref": "#/$defs/ShareResultsList"
                }
            }
        },
        "ShareResultsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ShareResult"
            }
        },
        "ShareResult": {
            "type": "object",
            "properties": {
                "PrincipalId": {
                    "$ref": "#/$defs/IdType"
                },
                "InviteePrincipalId": {
                    "$ref": "#/$defs/IdType"
                },
                "Role": {
                    "$ref": "#/$defs/RoleType"
                },
                "Status": {
                    "$ref": "#/$defs/ShareStatusType"
                },
                "ShareId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/MessageType"
                }
            }
        },
        "ShareStatusType": {
            "enum": [
                "SUCCESS",
                "FAILURE"
            ]
        },
        "CreateCommentRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                },
                "ParentId": {
                    "$ref": "#/$defs/CommentIdType"
                },
                "ThreadId": {
                    "$ref": "#/$defs/CommentIdType"
                },
                "Text": {
                    "$ref": "#/$defs/CommentTextType"
                },
                "Visibility": {
                    "$ref": "#/$defs/CommentVisibilityType"
                },
                "NotifyCollaborators": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "CommentIdType": {
            "type": "string"
        },
        "CommentTextType": {
            "type": "string"
        },
        "CommentVisibilityType": {
            "enum": [
                "PUBLIC",
                "PRIVATE"
            ]
        },
        "CreateCommentResponse": {
            "type": "object",
            "properties": {
                "Comment": {
                    "$ref": "#/$defs/Comment"
                }
            }
        },
        "Comment": {
            "type": "object",
            "properties": {
                "CommentId": {
                    "$ref": "#/$defs/CommentIdType"
                },
                "ParentId": {
                    "$ref": "#/$defs/CommentIdType"
                },
                "ThreadId": {
                    "$ref": "#/$defs/CommentIdType"
                },
                "Text": {
                    "$ref": "#/$defs/CommentTextType"
                },
                "Contributor": {
                    "$ref": "#/$defs/User"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "Status": {
                    "$ref": "#/$defs/CommentStatusType"
                },
                "Visibility": {
                    "$ref": "#/$defs/CommentVisibilityType"
                },
                "RecipientId": {
                    "$ref": "#/$defs/IdType"
                }
            }
        },
        "CommentStatusType": {
            "enum": [
                "DRAFT",
                "PUBLISHED",
                "DELETED"
            ]
        },
        "CreateCustomMetadataRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                },
                "CustomMetadata": {
                    "$ref": "#/$defs/CustomMetadataMap"
                }
            }
        },
        "CustomMetadataMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/CustomMetadataValueType"
            }
        },
        "CustomMetadataValueType": {
            "type": "string"
        },
        "CreateCustomMetadataResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateFolderRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceNameType"
                },
                "ParentFolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                }
            }
        },
        "ResourceNameType": {
            "type": "string"
        },
        "CreateFolderResponse": {
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/$defs/FolderMetadata"
                }
            }
        },
        "FolderMetadata": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceNameType"
                },
                "CreatorId": {
                    "$ref": "#/$defs/IdType"
                },
                "ParentFolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "ModifiedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "ResourceState": {
                    "$ref": "#/$defs/ResourceStateType"
                },
                "Signature": {
                    "$ref": "#/$defs/HashType"
                },
                "Labels": {
                    "$ref": "#/$defs/SharedLabels"
                },
                "Size": {
                    "$ref": "#/$defs/SizeType"
                },
                "LatestVersionSize": {
                    "$ref": "#/$defs/SizeType"
                }
            }
        },
        "ResourceStateType": {
            "enum": [
                "ACTIVE",
                "RESTORING",
                "RECYCLING",
                "RECYCLED"
            ]
        },
        "HashType": {
            "type": "string"
        },
        "SharedLabels": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SharedLabel"
            }
        },
        "SharedLabel": {
            "type": "string"
        },
        "CreateLabelsRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "Labels": {
                    "$ref": "#/$defs/SharedLabels"
                },
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                }
            }
        },
        "CreateLabelsResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateNotificationSubscriptionRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/IdType"
                },
                "Endpoint": {
                    "$ref": "#/$defs/SubscriptionEndPointType"
                },
                "Protocol": {
                    "$ref": "#/$defs/SubscriptionProtocolType"
                },
                "SubscriptionType": {
                    "$ref": "#/$defs/SubscriptionType"
                }
            }
        },
        "SubscriptionEndPointType": {
            "type": "string"
        },
        "SubscriptionProtocolType": {
            "enum": [
                "HTTPS",
                "SQS"
            ]
        },
        "SubscriptionType": {
            "enum": [
                "ALL"
            ]
        },
        "CreateNotificationSubscriptionResponse": {
            "type": "object",
            "properties": {
                "Subscription": {
                    "$ref": "#/$defs/Subscription"
                }
            }
        },
        "Subscription": {
            "type": "object",
            "properties": {
                "SubscriptionId": {
                    "$ref": "#/$defs/IdType"
                },
                "EndPoint": {
                    "$ref": "#/$defs/SubscriptionEndPointType"
                },
                "Protocol": {
                    "$ref": "#/$defs/SubscriptionProtocolType"
                }
            }
        },
        "CreateUserRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/IdType"
                },
                "Username": {
                    "$ref": "#/$defs/UsernameType"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddressType"
                },
                "GivenName": {
                    "$ref": "#/$defs/UserAttributeValueType"
                },
                "Surname": {
                    "$ref": "#/$defs/UserAttributeValueType"
                },
                "Password": {
                    "$ref": "#/$defs/PasswordType"
                },
                "TimeZoneId": {
                    "$ref": "#/$defs/TimeZoneIdType"
                },
                "StorageRule": {
                    "$ref": "#/$defs/StorageRuleType"
                },
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                }
            }
        },
        "PasswordType": {
            "type": "string"
        },
        "CreateUserResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        },
        "DeactivateUserRequest": {
            "type": "object",
            "properties": {
                "UserId": {
                    "$ref": "#/$defs/IdType"
                },
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                }
            }
        },
        "DeleteCommentRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                },
                "CommentId": {
                    "$ref": "#/$defs/CommentIdType"
                }
            }
        },
        "DeleteCustomMetadataRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                },
                "Keys": {
                    "$ref": "#/$defs/CustomMetadataKeyList"
                },
                "DeleteAll": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "CustomMetadataKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CustomMetadataKeyType"
            }
        },
        "CustomMetadataKeyType": {
            "type": "string"
        },
        "DeleteCustomMetadataResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteDocumentRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                }
            }
        },
        "DeleteDocumentVersionRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                },
                "DeletePriorVersions": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "DeleteFolderRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "FolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                }
            }
        },
        "DeleteFolderContentsRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "FolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                }
            }
        },
        "DeleteLabelsRequest": {
            "type": "object",
            "properties": {
                "ResourceId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "Labels": {
                    "$ref": "#/$defs/SharedLabels"
                },
                "DeleteAll": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "DeleteLabelsResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteNotificationSubscriptionRequest": {
            "type": "object",
            "properties": {
                "SubscriptionId": {
                    "$ref": "#/$defs/IdType"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/IdType"
                }
            }
        },
        "DeleteUserRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "UserId": {
                    "$ref": "#/$defs/IdType"
                }
            }
        },
        "DescribeActivitiesRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "StartTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "EndTime": {
                    "$ref": "#/$defs/TimestampType"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/IdType"
                },
                "ActivityTypes": {
                    "$ref": "#/$defs/ActivityNamesFilterType"
                },
                "ResourceId": {
                    "$ref": "#/$defs/IdType"
                },
                "UserId": {
                    "$ref": "#/$defs/IdType"
                },
                "IncludeIndirectActivities": {
                    "$ref": "#/$defs/BooleanType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                },
                "Marker": {
                    "$ref": "#/$defs/SearchMarkerType"
                }
            }
        },
        "ActivityNamesFilterType": {
            "type": "string"
        },
        "LimitType": {
            "type": "integer",
            "format": "int32"
        },
        "SearchMarkerType": {
            "type": "string"
        },
        "DescribeActivitiesResponse": {
            "type": "object",
            "properties": {
                "UserActivities": {
                    "$ref": "#/$defs/UserActivities"
                },
                "Marker": {
                    "$ref": "#/$defs/SearchMarkerType"
                }
            }
        },
        "UserActivities": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Activity"
            }
        },
        "Activity": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ActivityType"
                },
                "TimeStamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "IsIndirectActivity": {
                    "$ref": "#/$defs/BooleanType"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/IdType"
                },
                "Initiator": {
                    "$ref": "#/$defs/UserMetadata"
                },
                "Participants": {
                    "$ref": "#/$defs/Participants"
                },
                "ResourceMetadata": {
                    "$ref": "#/$defs/ResourceMetadata"
                },
                "OriginalParent": {
                    "$ref": "#/$defs/ResourceMetadata"
                },
                "CommentMetadata": {
                    "$ref": "#/$defs/CommentMetadata"
                }
            }
        },
        "ActivityType": {
            "enum": [
                "DOCUMENT_CHECKED_IN",
                "DOCUMENT_CHECKED_OUT",
                "DOCUMENT_RENAMED",
                "DOCUMENT_VERSION_UPLOADED",
                "DOCUMENT_VERSION_DELETED",
                "DOCUMENT_VERSION_VIEWED",
                "DOCUMENT_VERSION_DOWNLOADED",
                "DOCUMENT_RECYCLED",
                "DOCUMENT_RESTORED",
                "DOCUMENT_REVERTED",
                "DOCUMENT_SHARED",
                "DOCUMENT_UNSHARED",
                "DOCUMENT_SHARE_PERMISSION_CHANGED",
                "DOCUMENT_SHAREABLE_LINK_CREATED",
                "DOCUMENT_SHAREABLE_LINK_REMOVED",
                "DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED",
                "DOCUMENT_MOVED",
                "DOCUMENT_COMMENT_ADDED",
                "DOCUMENT_COMMENT_DELETED",
                "DOCUMENT_ANNOTATION_ADDED",
                "DOCUMENT_ANNOTATION_DELETED",
                "FOLDER_CREATED",
                "FOLDER_DELETED",
                "FOLDER_RENAMED",
                "FOLDER_RECYCLED",
                "FOLDER_RESTORED",
                "FOLDER_SHARED",
                "FOLDER_UNSHARED",
                "FOLDER_SHARE_PERMISSION_CHANGED",
                "FOLDER_SHAREABLE_LINK_CREATED",
                "FOLDER_SHAREABLE_LINK_REMOVED",
                "FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED",
                "FOLDER_MOVED"
            ]
        },
        "UserMetadata": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IdType"
                },
                "Username": {
                    "$ref": "#/$defs/UsernameType"
                },
                "GivenName": {
                    "$ref": "#/$defs/UserAttributeValueType"
                },
                "Surname": {
                    "$ref": "#/$defs/UserAttributeValueType"
                },
                "EmailAddress": {
                    "$ref": "#/$defs/EmailAddressType"
                }
            }
        },
        "Participants": {
            "type": "object",
            "properties": {
                "Users": {
                    "$ref": "#/$defs/UserMetadataList"
                },
                "Groups": {
                    "$ref": "#/$defs/GroupMetadataList"
                }
            }
        },
        "UserMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/UserMetadata"
            }
        },
        "GroupMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/GroupMetadata"
            }
        },
        "GroupMetadata": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IdType"
                },
                "Name": {
                    "$ref": "#/$defs/GroupNameType"
                }
            }
        },
        "GroupNameType": {
            "type": "string"
        },
        "ResourceMetadata": {
            "type": "object",
            "properties": {
                "Type": {
                    "$ref": "#/$defs/ResourceType"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceNameType"
                },
                "OriginalName": {
                    "$ref": "#/$defs/ResourceNameType"
                },
                "Id": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                },
                "Owner": {
                    "$ref": "#/$defs/UserMetadata"
                },
                "ParentId": {
                    "$ref": "#/$defs/ResourceIdType"
                }
            }
        },
        "ResourceType": {
            "enum": [
                "FOLDER",
                "DOCUMENT"
            ]
        },
        "CommentMetadata": {
            "type": "object",
            "properties": {
                "CommentId": {
                    "$ref": "#/$defs/CommentIdType"
                },
                "Contributor": {
                    "$ref": "#/$defs/User"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "CommentStatus": {
                    "$ref": "#/$defs/CommentStatusType"
                },
                "RecipientId": {
                    "$ref": "#/$defs/IdType"
                },
                "ContributorId": {
                    "$ref": "#/$defs/IdType"
                }
            }
        },
        "DescribeCommentsRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                },
                "Marker": {
                    "$ref": "#/$defs/MarkerType"
                }
            }
        },
        "MarkerType": {
            "type": "string"
        },
        "DescribeCommentsResponse": {
            "type": "object",
            "properties": {
                "Comments": {
                    "$ref": "#/$defs/CommentList"
                },
                "Marker": {
                    "$ref": "#/$defs/MarkerType"
                }
            }
        },
        "CommentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Comment"
            }
        },
        "DescribeDocumentVersionsRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                },
                "Include": {
                    "$ref": "#/$defs/FieldNamesType"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldNamesType"
                }
            }
        },
        "PageMarkerType": {
            "type": "string"
        },
        "FieldNamesType": {
            "type": "string"
        },
        "DescribeDocumentVersionsResponse": {
            "type": "object",
            "properties": {
                "DocumentVersions": {
                    "$ref": "#/$defs/DocumentVersionMetadataList"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "DocumentVersionMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DocumentVersionMetadata"
            }
        },
        "DocumentVersionMetadata": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceNameType"
                },
                "ContentType": {
                    "$ref": "#/$defs/DocumentContentType"
                },
                "Size": {
                    "$ref": "#/$defs/SizeType"
                },
                "Signature": {
                    "$ref": "#/$defs/HashType"
                },
                "Status": {
                    "$ref": "#/$defs/DocumentStatusType"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "ModifiedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "ContentCreatedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "ContentModifiedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "CreatorId": {
                    "$ref": "#/$defs/IdType"
                },
                "Thumbnail": {
                    "$ref": "#/$defs/DocumentThumbnailUrlMap"
                },
                "Source": {
                    "$ref": "#/$defs/DocumentSourceUrlMap"
                }
            }
        },
        "DocumentContentType": {
            "type": "string"
        },
        "DocumentStatusType": {
            "enum": [
                "INITIALIZED",
                "ACTIVE"
            ]
        },
        "DocumentThumbnailUrlMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/UrlType"
            }
        },
        "UrlType": {
            "type": "string"
        },
        "DocumentSourceUrlMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/UrlType"
            }
        },
        "DescribeFolderContentsRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "FolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "Sort": {
                    "$ref": "#/$defs/ResourceSortType"
                },
                "Order": {
                    "$ref": "#/$defs/OrderType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                },
                "Type": {
                    "$ref": "#/$defs/FolderContentType"
                },
                "Include": {
                    "$ref": "#/$defs/FieldNamesType"
                }
            }
        },
        "ResourceSortType": {
            "enum": [
                "DATE",
                "NAME"
            ]
        },
        "OrderType": {
            "enum": [
                "ASCENDING",
                "DESCENDING"
            ]
        },
        "FolderContentType": {
            "enum": [
                "ALL",
                "DOCUMENT",
                "FOLDER"
            ]
        },
        "DescribeFolderContentsResponse": {
            "type": "object",
            "properties": {
                "Folders": {
                    "$ref": "#/$defs/FolderMetadataList"
                },
                "Documents": {
                    "$ref": "#/$defs/DocumentMetadataList"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "FolderMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FolderMetadata"
            }
        },
        "DocumentMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DocumentMetadata"
            }
        },
        "DocumentMetadata": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "CreatorId": {
                    "$ref": "#/$defs/IdType"
                },
                "ParentFolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "CreatedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "ModifiedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "LatestVersionMetadata": {
                    "$ref": "#/$defs/DocumentVersionMetadata"
                },
                "ResourceState": {
                    "$ref": "#/$defs/ResourceStateType"
                },
                "Labels": {
                    "$ref": "#/$defs/SharedLabels"
                }
            }
        },
        "DescribeGroupsRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "SearchQuery": {
                    "$ref": "#/$defs/SearchQueryType"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/IdType"
                },
                "Marker": {
                    "$ref": "#/$defs/MarkerType"
                },
                "Limit": {
                    "$ref": "#/$defs/PositiveIntegerType"
                }
            }
        },
        "SearchQueryType": {
            "type": "string"
        },
        "PositiveIntegerType": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeGroupsResponse": {
            "type": "object",
            "properties": {
                "Groups": {
                    "$ref": "#/$defs/GroupMetadataList"
                },
                "Marker": {
                    "$ref": "#/$defs/MarkerType"
                }
            }
        },
        "DescribeNotificationSubscriptionsRequest": {
            "type": "object",
            "properties": {
                "OrganizationId": {
                    "$ref": "#/$defs/IdType"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                }
            }
        },
        "DescribeNotificationSubscriptionsResponse": {
            "type": "object",
            "properties": {
                "Subscriptions": {
                    "$ref": "#/$defs/SubscriptionList"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "SubscriptionList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Subscription"
            }
        },
        "DescribeResourcePermissionsRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "PrincipalId": {
                    "$ref": "#/$defs/IdType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "DescribeResourcePermissionsResponse": {
            "type": "object",
            "properties": {
                "Principals": {
                    "$ref": "#/$defs/PrincipalList"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "PrincipalList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Principal"
            }
        },
        "Principal": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IdType"
                },
                "Type": {
                    "$ref": "#/$defs/PrincipalType"
                },
                "Roles": {
                    "$ref": "#/$defs/PermissionInfoList"
                }
            }
        },
        "PermissionInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PermissionInfo"
            }
        },
        "PermissionInfo": {
            "type": "object",
            "properties": {
                "Role": {
                    "$ref": "#/$defs/RoleType"
                },
                "Type": {
                    "$ref": "#/$defs/RolePermissionType"
                }
            }
        },
        "RolePermissionType": {
            "enum": [
                "DIRECT",
                "INHERITED"
            ]
        },
        "DescribeRootFoldersRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "DescribeRootFoldersResponse": {
            "type": "object",
            "properties": {
                "Folders": {
                    "$ref": "#/$defs/FolderMetadataList"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "DescribeUsersRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/IdType"
                },
                "UserIds": {
                    "$ref": "#/$defs/UserIdsType"
                },
                "Query": {
                    "$ref": "#/$defs/SearchQueryType"
                },
                "Include": {
                    "$ref": "#/$defs/UserFilterType"
                },
                "Order": {
                    "$ref": "#/$defs/OrderType"
                },
                "Sort": {
                    "$ref": "#/$defs/UserSortType"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldNamesType"
                }
            }
        },
        "UserIdsType": {
            "type": "string"
        },
        "UserFilterType": {
            "enum": [
                "ALL",
                "ACTIVE_PENDING"
            ]
        },
        "UserSortType": {
            "enum": [
                "USER_NAME",
                "FULL_NAME",
                "STORAGE_LIMIT",
                "USER_STATUS",
                "STORAGE_USED"
            ]
        },
        "DescribeUsersResponse": {
            "type": "object",
            "properties": {
                "Users": {
                    "$ref": "#/$defs/OrganizationUserList"
                },
                "TotalNumberOfUsers": {
                    "$ref": "#/$defs/SizeType"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "OrganizationUserList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/User"
            }
        },
        "GetCurrentUserRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                }
            }
        },
        "GetCurrentUserResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        },
        "GetDocumentRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "IncludeCustomMetadata": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "GetDocumentResponse": {
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/$defs/DocumentMetadata"
                },
                "CustomMetadata": {
                    "$ref": "#/$defs/CustomMetadataMap"
                }
            }
        },
        "GetDocumentPathRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/IdType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldNamesType"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "GetDocumentPathResponse": {
            "type": "object",
            "properties": {
                "Path": {
                    "$ref": "#/$defs/ResourcePath"
                }
            }
        },
        "ResourcePath": {
            "type": "object",
            "properties": {
                "Components": {
                    "$ref": "#/$defs/ResourcePathComponentList"
                }
            }
        },
        "ResourcePathComponentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResourcePathComponent"
            }
        },
        "ResourcePathComponent": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IdType"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceNameType"
                }
            }
        },
        "GetDocumentVersionRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldNamesType"
                },
                "IncludeCustomMetadata": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "GetDocumentVersionResponse": {
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/$defs/DocumentVersionMetadata"
                },
                "CustomMetadata": {
                    "$ref": "#/$defs/CustomMetadataMap"
                }
            }
        },
        "GetFolderRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "FolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "IncludeCustomMetadata": {
                    "$ref": "#/$defs/BooleanType"
                }
            }
        },
        "GetFolderResponse": {
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/$defs/FolderMetadata"
                },
                "CustomMetadata": {
                    "$ref": "#/$defs/CustomMetadataMap"
                }
            }
        },
        "GetFolderPathRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "FolderId": {
                    "$ref": "#/$defs/IdType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                },
                "Fields": {
                    "$ref": "#/$defs/FieldNamesType"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "GetFolderPathResponse": {
            "type": "object",
            "properties": {
                "Path": {
                    "$ref": "#/$defs/ResourcePath"
                }
            }
        },
        "GetResourcesRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "UserId": {
                    "$ref": "#/$defs/IdType"
                },
                "CollectionType": {
                    "$ref": "#/$defs/ResourceCollectionType"
                },
                "Limit": {
                    "$ref": "#/$defs/LimitType"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "ResourceCollectionType": {
            "enum": [
                "SHARED_WITH_ME"
            ]
        },
        "GetResourcesResponse": {
            "type": "object",
            "properties": {
                "Folders": {
                    "$ref": "#/$defs/FolderMetadataList"
                },
                "Documents": {
                    "$ref": "#/$defs/DocumentMetadataList"
                },
                "Marker": {
                    "$ref": "#/$defs/PageMarkerType"
                }
            }
        },
        "InitiateDocumentVersionUploadRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "Id": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceNameType"
                },
                "ContentCreatedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "ContentModifiedTimestamp": {
                    "$ref": "#/$defs/TimestampType"
                },
                "ContentType": {
                    "$ref": "#/$defs/DocumentContentType"
                },
                "DocumentSizeInBytes": {
                    "$ref": "#/$defs/SizeType"
                },
                "ParentFolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                }
            }
        },
        "InitiateDocumentVersionUploadResponse": {
            "type": "object",
            "properties": {
                "Metadata": {
                    "$ref": "#/$defs/DocumentMetadata"
                },
                "UploadMetadata": {
                    "$ref": "#/$defs/UploadMetadata"
                }
            }
        },
        "UploadMetadata": {
            "type": "object",
            "properties": {
                "UploadUrl": {
                    "$ref": "#/$defs/UrlType"
                },
                "SignedHeaders": {
                    "$ref": "#/$defs/SignedHeaderMap"
                }
            }
        },
        "SignedHeaderMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/HeaderValueType"
            }
        },
        "HeaderValueType": {
            "type": "string"
        },
        "RemoveAllResourcePermissionsRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceIdType"
                }
            }
        },
        "RemoveResourcePermissionRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "ResourceId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "PrincipalId": {
                    "$ref": "#/$defs/IdType"
                },
                "PrincipalType": {
                    "$ref": "#/$defs/PrincipalType"
                }
            }
        },
        "RestoreDocumentVersionsRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                }
            }
        },
        "SearchResourcesRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "QueryText": {
                    "$ref": "#/$defs/SearchQueryType"
                },
                "QueryScopes": {
                    "$ref": "#/$defs/SearchQueryScopeTypeList"
                },
                "OrganizationId": {
                    "$ref": "#/$defs/IdType"
                },
                "AdditionalResponseFields": {
                    "$ref": "#/$defs/AdditionalResponseFieldsList"
                },
                "Filters": {
                    "$ref": "#/$defs/Filters"
                },
                "OrderBy": {
                    "$ref": "#/$defs/SearchResultSortList"
                },
                "Limit": {
                    "$ref": "#/$defs/SearchResultsLimitType"
                },
                "Marker": {
                    "$ref": "#/$defs/NextMarkerType"
                }
            }
        },
        "SearchQueryScopeTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchQueryScopeType"
            }
        },
        "SearchQueryScopeType": {
            "enum": [
                "NAME",
                "CONTENT"
            ]
        },
        "AdditionalResponseFieldsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AdditionalResponseFieldType"
            }
        },
        "AdditionalResponseFieldType": {
            "enum": [
                "WEBURL"
            ]
        },
        "Filters": {
            "type": "object",
            "properties": {
                "TextLocales": {
                    "$ref": "#/$defs/TextLocaleTypeList"
                },
                "ContentCategories": {
                    "$ref": "#/$defs/SearchContentCategoryTypeList"
                },
                "ResourceTypes": {
                    "$ref": "#/$defs/SearchResourceTypeList"
                },
                "Labels": {
                    "$ref": "#/$defs/SearchLabelList"
                },
                "Principals": {
                    "$ref": "#/$defs/SearchPrincipalTypeList"
                },
                "AncestorIds": {
                    "$ref": "#/$defs/SearchAncestorIdList"
                },
                "SearchCollectionTypes": {
                    "$ref": "#/$defs/SearchCollectionTypeList"
                },
                "SizeRange": {
                    "$ref": "#/$defs/LongRangeType"
                },
                "CreatedRange": {
                    "$ref": "#/$defs/DateRangeType"
                },
                "ModifiedRange": {
                    "$ref": "#/$defs/DateRangeType"
                }
            }
        },
        "TextLocaleTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LanguageCodeType"
            }
        },
        "LanguageCodeType": {
            "enum": [
                "AR",
                "BG",
                "BN",
                "DA",
                "DE",
                "CS",
                "EL",
                "EN",
                "ES",
                "FA",
                "FI",
                "FR",
                "HI",
                "HU",
                "ID",
                "IT",
                "JA",
                "KO",
                "LT",
                "LV",
                "NL",
                "NO",
                "PT",
                "RO",
                "RU",
                "SV",
                "SW",
                "TH",
                "TR",
                "ZH",
                "DEFAULT"
            ]
        },
        "SearchContentCategoryTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContentCategoryType"
            }
        },
        "ContentCategoryType": {
            "enum": [
                "IMAGE",
                "DOCUMENT",
                "PDF",
                "SPREADSHEET",
                "PRESENTATION",
                "AUDIO",
                "VIDEO",
                "SOURCE_CODE",
                "OTHER"
            ]
        },
        "SearchResourceTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchResourceType"
            }
        },
        "SearchResourceType": {
            "enum": [
                "FOLDER",
                "DOCUMENT",
                "COMMENT",
                "DOCUMENT_VERSION"
            ]
        },
        "SearchLabelList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchLabel"
            }
        },
        "SearchLabel": {
            "type": "string"
        },
        "SearchPrincipalTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchPrincipalType"
            }
        },
        "SearchPrincipalType": {
            "type": "object",
            "properties": {
                "Id": {
                    "$ref": "#/$defs/IdType"
                },
                "Roles": {
                    "$ref": "#/$defs/SearchPrincipalRoleList"
                }
            }
        },
        "SearchPrincipalRoleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrincipalRoleType"
            }
        },
        "PrincipalRoleType": {
            "enum": [
                "VIEWER",
                "CONTRIBUTOR",
                "OWNER",
                "COOWNER"
            ]
        },
        "SearchAncestorIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchAncestorId"
            }
        },
        "SearchAncestorId": {
            "type": "string"
        },
        "SearchCollectionTypeList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchCollectionType"
            }
        },
        "SearchCollectionType": {
            "enum": [
                "OWNED",
                "SHARED_WITH_ME"
            ]
        },
        "LongRangeType": {
            "type": "object",
            "properties": {
                "StartValue": {
                    "$ref": "#/$defs/LongType"
                },
                "EndValue": {
                    "$ref": "#/$defs/LongType"
                }
            }
        },
        "LongType": {
            "type": "integer",
            "format": "int64"
        },
        "DateRangeType": {
            "type": "object",
            "properties": {
                "StartValue": {
                    "$ref": "#/$defs/TimestampType"
                },
                "EndValue": {
                    "$ref": "#/$defs/TimestampType"
                }
            }
        },
        "SearchResultSortList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SearchSortResult"
            }
        },
        "SearchSortResult": {
            "type": "object",
            "properties": {
                "Field": {
                    "$ref": "#/$defs/OrderByFieldType"
                },
                "Order": {
                    "$ref": "#/$defs/SortOrder"
                }
            }
        },
        "OrderByFieldType": {
            "enum": [
                "RELEVANCE",
                "NAME",
                "SIZE",
                "CREATED_TIMESTAMP",
                "MODIFIED_TIMESTAMP"
            ]
        },
        "SortOrder": {
            "enum": [
                "ASC",
                "DESC"
            ]
        },
        "SearchResultsLimitType": {
            "type": "integer",
            "format": "int32"
        },
        "NextMarkerType": {
            "type": "string"
        },
        "SearchResourcesResponse": {
            "type": "object",
            "properties": {
                "Items": {
                    "$ref": "#/$defs/ResponseItemsList"
                },
                "Marker": {
                    "$ref": "#/$defs/NextMarkerType"
                }
            }
        },
        "ResponseItemsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ResponseItem"
            }
        },
        "ResponseItem": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "$ref": "#/$defs/ResponseItemType"
                },
                "WebUrl": {
                    "$ref": "#/$defs/ResponseItemWebUrl"
                },
                "DocumentMetadata": {
                    "$ref": "#/$defs/DocumentMetadata"
                },
                "FolderMetadata": {
                    "$ref": "#/$defs/FolderMetadata"
                },
                "CommentMetadata": {
                    "$ref": "#/$defs/CommentMetadata"
                },
                "DocumentVersionMetadata": {
                    "$ref": "#/$defs/DocumentVersionMetadata"
                }
            }
        },
        "ResponseItemType": {
            "enum": [
                "DOCUMENT",
                "FOLDER",
                "COMMENT",
                "DOCUMENT_VERSION"
            ]
        },
        "ResponseItemWebUrl": {
            "type": "string"
        },
        "UpdateDocumentRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceNameType"
                },
                "ParentFolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "ResourceState": {
                    "$ref": "#/$defs/ResourceStateType"
                }
            }
        },
        "UpdateDocumentVersionRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "DocumentId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "VersionId": {
                    "$ref": "#/$defs/DocumentVersionIdType"
                },
                "VersionStatus": {
                    "$ref": "#/$defs/DocumentVersionStatus"
                }
            }
        },
        "DocumentVersionStatus": {
            "enum": [
                "ACTIVE"
            ]
        },
        "UpdateFolderRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "FolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "Name": {
                    "$ref": "#/$defs/ResourceNameType"
                },
                "ParentFolderId": {
                    "$ref": "#/$defs/ResourceIdType"
                },
                "ResourceState": {
                    "$ref": "#/$defs/ResourceStateType"
                }
            }
        },
        "UpdateUserRequest": {
            "type": "object",
            "properties": {
                "AuthenticationToken": {
                    "$ref": "#/$defs/AuthenticationHeaderType"
                },
                "UserId": {
                    "$ref": "#/$defs/IdType"
                },
                "GivenName": {
                    "$ref": "#/$defs/UserAttributeValueType"
                },
                "Surname": {
                    "$ref": "#/$defs/UserAttributeValueType"
                },
                "Type": {
                    "$ref": "#/$defs/UserType"
                },
                "StorageRule": {
                    "$ref": "#/$defs/StorageRuleType"
                },
                "TimeZoneId": {
                    "$ref": "#/$defs/TimeZoneIdType"
                },
                "Locale": {
                    "$ref": "#/$defs/LocaleType"
                },
                "GrantPoweruserPrivileges": {
                    "$ref": "#/$defs/BooleanEnumType"
                }
            }
        },
        "BooleanEnumType": {
            "enum": [
                "TRUE",
                "FALSE"
            ]
        },
        "UpdateUserResponse": {
            "type": "object",
            "properties": {
                "User": {
                    "$ref": "#/$defs/User"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://workdocs-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://workdocs-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://workdocs.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://workdocs.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}