{
    "commands": [
        {
            "name": "BatchPutPropertyValues",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/entity-properties"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchPutPropertyValuesResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/BatchPutPropertyValuesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "entries": {}
                    }
                }
            }
        },
        {
            "name": "CancelMetadataTransferJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "metadataTransferJobId": "route.metadataTransferJobId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/metadata-transfer-jobs/{metadataTransferJobId}/cancel"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CancelMetadataTransferJobResponse"
                    },
                    "inject": [
                        "params.0.metadataTransferJobId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CancelMetadataTransferJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "metadataTransferJobId": {}
                    }
                }
            }
        },
        {
            "name": "CreateComponentType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "componentTypeId": "route.componentTypeId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/component-types/{componentTypeId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateComponentTypeResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.componentTypeId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateComponentTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "isSingleton": {},
                        "componentTypeId": {},
                        "description": {},
                        "propertyDefinitions": {},
                        "extendsFrom": {},
                        "functions": {},
                        "tags": {},
                        "propertyGroups": {},
                        "componentTypeName": {},
                        "compositeComponentTypes": {}
                    }
                }
            }
        },
        {
            "name": "CreateEntity",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/entities"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateEntityResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateEntityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "entityId": {},
                        "entityName": {},
                        "description": {},
                        "components": {},
                        "compositeComponents": {},
                        "parentEntityId": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateMetadataTransferJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/metadata-transfer-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateMetadataTransferJobResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateMetadataTransferJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "metadataTransferJobId": {},
                        "description": {},
                        "sources": {},
                        "destination": {}
                    }
                }
            }
        },
        {
            "name": "CreateScene",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/scenes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSceneResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSceneRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "sceneId": {},
                        "contentLocation": {},
                        "description": {},
                        "capabilities": {},
                        "tags": {},
                        "sceneMetadata": {}
                    }
                }
            }
        },
        {
            "name": "CreateSyncJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "syncSource": "route.syncSource",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/sync-jobs/{syncSource}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateSyncJobResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.syncSource",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateSyncJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "syncSource": {},
                        "syncRole": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateWorkspace",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateWorkspaceResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/CreateWorkspaceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "description": {},
                        "s3Location": {},
                        "role": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteComponentType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "componentTypeId": "route.componentTypeId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/workspaces/{workspaceId}/component-types/{componentTypeId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteComponentTypeResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.componentTypeId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteComponentTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "componentTypeId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteEntity",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "entityId": "route.entityId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/workspaces/{workspaceId}/entities/{entityId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteEntityResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.entityId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteEntityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "entityId": {},
                        "isRecursive": {}
                    }
                }
            }
        },
        {
            "name": "DeleteScene",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "sceneId": "route.sceneId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/workspaces/{workspaceId}/scenes/{sceneId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSceneResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.sceneId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSceneRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "sceneId": {}
                    }
                }
            }
        },
        {
            "name": "DeleteSyncJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "syncSource": "route.syncSource",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/workspaces/{workspaceId}/sync-jobs/{syncSource}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteSyncJobResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.syncSource",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteSyncJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "syncSource": {}
                    }
                }
            }
        },
        {
            "name": "DeleteWorkspace",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/workspaces/{workspaceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteWorkspaceResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/DeleteWorkspaceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {}
                    }
                }
            }
        },
        {
            "name": "ExecuteQuery",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/queries/execution"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExecuteQueryResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ExecuteQueryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "queryStatement": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "GetComponentType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "componentTypeId": "route.componentTypeId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/workspaces/{workspaceId}/component-types/{componentTypeId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetComponentTypeResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.componentTypeId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetComponentTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "componentTypeId": {}
                    }
                }
            }
        },
        {
            "name": "GetEntity",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "entityId": "route.entityId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/workspaces/{workspaceId}/entities/{entityId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetEntityResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.entityId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetEntityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "entityId": {}
                    }
                }
            }
        },
        {
            "name": "GetMetadataTransferJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "metadataTransferJobId": "route.metadataTransferJobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/metadata-transfer-jobs/{metadataTransferJobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMetadataTransferJobResponse"
                    },
                    "inject": [
                        "params.0.metadataTransferJobId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetMetadataTransferJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "metadataTransferJobId": {}
                    }
                }
            }
        },
        {
            "name": "GetPricingPlan",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/pricingplan"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPricingPlanResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetPricingPlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {}
                }
            }
        },
        {
            "name": "GetPropertyValue",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/entity-properties/value"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPropertyValueResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetPropertyValueRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "componentName": {},
                        "componentPath": {},
                        "componentTypeId": {},
                        "entityId": {},
                        "selectedProperties": {},
                        "workspaceId": {},
                        "maxResults": {},
                        "nextToken": {},
                        "propertyGroupName": {},
                        "tabularConditions": {}
                    }
                }
            }
        },
        {
            "name": "GetPropertyValueHistory",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/entity-properties/history"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPropertyValueHistoryResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetPropertyValueHistoryRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "entityId": {},
                        "componentName": {},
                        "componentPath": {},
                        "componentTypeId": {},
                        "selectedProperties": {},
                        "propertyFilters": {},
                        "startDateTime": {},
                        "endDateTime": {},
                        "interpolation": {},
                        "nextToken": {},
                        "maxResults": {},
                        "orderByTime": {},
                        "startTime": {},
                        "endTime": {}
                    }
                }
            }
        },
        {
            "name": "GetScene",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "sceneId": "route.sceneId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/workspaces/{workspaceId}/scenes/{sceneId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSceneResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.sceneId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSceneRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "sceneId": {}
                    }
                }
            }
        },
        {
            "name": "GetSyncJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "syncSource": "route.syncSource",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/sync-jobs/{syncSource}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetSyncJobResponse"
                    },
                    "inject": [
                        "params.0.syncSource",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetSyncJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "syncSource": {},
                        "workspaceId": {}
                    }
                }
            }
        },
        {
            "name": "GetWorkspace",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/workspaces/{workspaceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetWorkspaceResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/GetWorkspaceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {}
                    }
                }
            }
        },
        {
            "name": "ListComponents",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "entityId": "route.entityId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/entities/{entityId}/components-list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListComponentsResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.entityId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListComponentsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "entityId": {},
                        "componentPath": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListComponentTypes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/component-types-list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListComponentTypesResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListComponentTypesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "filters": {},
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListEntities",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/entities-list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListEntitiesResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListEntitiesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "filters": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListMetadataTransferJobs",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/metadata-transfer-jobs-list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListMetadataTransferJobsResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListMetadataTransferJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "sourceType": {},
                        "destinationType": {},
                        "filters": {},
                        "nextToken": {},
                        "maxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListProperties",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/properties-list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPropertiesResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListPropertiesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "componentName": {},
                        "componentPath": {},
                        "entityId": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListScenes",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/scenes-list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListScenesResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListScenesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSyncJobs",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/sync-jobs-list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSyncJobsResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSyncJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListSyncResources",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "syncSource": "route.syncSource",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/workspaces/{workspaceId}/sync-jobs/{syncSource}/resources-list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListSyncResourcesResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.syncSource",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListSyncResourcesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "syncSource": {},
                        "filters": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/tags-list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceARN": {},
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListWorkspaces",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/workspaces-list"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListWorkspacesResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/ListWorkspacesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "maxResults": {},
                        "nextToken": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceARN": {},
                        "tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "DELETE",
                    "route": "/tags"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "resourceARN": {},
                        "tagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateComponentType",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "componentTypeId": "route.componentTypeId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/workspaces/{workspaceId}/component-types/{componentTypeId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateComponentTypeResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.componentTypeId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateComponentTypeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "isSingleton": {},
                        "componentTypeId": {},
                        "description": {},
                        "propertyDefinitions": {},
                        "extendsFrom": {},
                        "functions": {},
                        "propertyGroups": {},
                        "componentTypeName": {},
                        "compositeComponentTypes": {}
                    }
                }
            }
        },
        {
            "name": "UpdateEntity",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "entityId": "route.entityId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/workspaces/{workspaceId}/entities/{entityId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateEntityResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.entityId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateEntityRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "entityId": {},
                        "entityName": {},
                        "description": {},
                        "componentUpdates": {},
                        "compositeComponentUpdates": {},
                        "parentEntityUpdate": {}
                    }
                }
            }
        },
        {
            "name": "UpdatePricingPlan",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/pricingplan"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePricingPlanResponse"
                    },
                    "inject": [
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdatePricingPlanRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "pricingMode": {},
                        "bundleNames": {}
                    }
                }
            }
        },
        {
            "name": "UpdateScene",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "sceneId": "route.sceneId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/workspaces/{workspaceId}/scenes/{sceneId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateSceneResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0.sceneId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateSceneRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "sceneId": {},
                        "contentLocation": {},
                        "description": {},
                        "capabilities": {},
                        "sceneMetadata": {}
                    }
                }
            }
        },
        {
            "name": "UpdateWorkspace",
            "config": {
                "http": {
                    "inject": [
                        {
                            "workspaceId": "route.workspaceId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/workspaces/{workspaceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateWorkspaceResponse"
                    },
                    "inject": [
                        "params.0.workspaceId",
                        "params.0"
                    ],
                    "$defs": {
                        "params.0": {
                            "$ref": "#/$defs/UpdateWorkspaceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "workspaceId": {},
                        "description": {},
                        "role": {},
                        "s3Location": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "BatchPutPropertyValuesRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "entries": {
                    "$ref": "#/$defs/Entries"
                }
            }
        },
        "Id": {
            "type": "string"
        },
        "Entries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PropertyValueEntry"
            }
        },
        "PropertyValueEntry": {
            "type": "object",
            "properties": {
                "entityPropertyReference": {
                    "$ref": "#/$defs/EntityPropertyReference"
                },
                "propertyValues": {
                    "$ref": "#/$defs/PropertyValues"
                }
            }
        },
        "EntityPropertyReference": {
            "type": "object",
            "properties": {
                "componentName": {
                    "$ref": "#/$defs/Name"
                },
                "componentPath": {
                    "$ref": "#/$defs/ComponentPath"
                },
                "externalIdProperty": {
                    "$ref": "#/$defs/ExternalIdProperty"
                },
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "propertyName": {
                    "$ref": "#/$defs/Name"
                }
            }
        },
        "Name": {
            "type": "string"
        },
        "ComponentPath": {
            "type": "string"
        },
        "ExternalIdProperty": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "String": {
            "type": "string"
        },
        "EntityId": {
            "type": "string"
        },
        "PropertyValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PropertyValue"
            }
        },
        "PropertyValue": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "$ref": "#/$defs/Timestamp"
                },
                "value": {
                    "$ref": "#/$defs/DataValue"
                },
                "time": {
                    "$ref": "#/$defs/Time"
                }
            }
        },
        "Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "DataValue": {
            "type": "object",
            "properties": {
                "booleanValue": {
                    "$ref": "#/$defs/Boolean"
                },
                "doubleValue": {
                    "$ref": "#/$defs/Double"
                },
                "integerValue": {
                    "$ref": "#/$defs/Integer"
                },
                "longValue": {
                    "$ref": "#/$defs/Long"
                },
                "stringValue": {
                    "$ref": "#/$defs/String"
                },
                "listValue": {
                    "$ref": "#/$defs/DataValueList"
                },
                "mapValue": {
                    "$ref": "#/$defs/DataValueMap"
                },
                "relationshipValue": {
                    "$ref": "#/$defs/RelationshipValue"
                },
                "expression": {
                    "$ref": "#/$defs/Expression"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "Double": {
            "type": "number",
            "format": "double"
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "DataValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DataValue"
            }
        },
        "DataValueMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DataValue"
            }
        },
        "RelationshipValue": {
            "type": "object",
            "properties": {
                "targetEntityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "targetComponentName": {
                    "$ref": "#/$defs/Name"
                }
            }
        },
        "Expression": {
            "type": "string"
        },
        "Time": {
            "type": "string"
        },
        "BatchPutPropertyValuesResponse": {
            "type": "object",
            "properties": {
                "errorEntries": {
                    "$ref": "#/$defs/ErrorEntries"
                }
            }
        },
        "ErrorEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchPutPropertyErrorEntry"
            }
        },
        "BatchPutPropertyErrorEntry": {
            "type": "object",
            "properties": {
                "errors": {
                    "$ref": "#/$defs/Errors"
                }
            }
        },
        "Errors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchPutPropertyError"
            }
        },
        "BatchPutPropertyError": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "$ref": "#/$defs/String"
                },
                "errorMessage": {
                    "$ref": "#/$defs/String"
                },
                "entry": {
                    "$ref": "#/$defs/PropertyValueEntry"
                }
            }
        },
        "CancelMetadataTransferJobRequest": {
            "type": "object",
            "properties": {
                "metadataTransferJobId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "CancelMetadataTransferJobResponse": {
            "type": "object",
            "properties": {
                "metadataTransferJobId": {
                    "$ref": "#/$defs/Id"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/MetadataTransferJobStatus"
                },
                "progress": {
                    "$ref": "#/$defs/MetadataTransferJobProgress"
                }
            }
        },
        "TwinMakerArn": {
            "type": "string"
        },
        "MetadataTransferJobStatus": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/MetadataTransferJobState"
                },
                "error": {
                    "$ref": "#/$defs/ErrorDetails"
                },
                "queuedPosition": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "MetadataTransferJobState": {
            "type": "string"
        },
        "ErrorDetails": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorCode": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "MetadataTransferJobProgress": {
            "type": "object",
            "properties": {
                "totalCount": {
                    "$ref": "#/$defs/Integer"
                },
                "succeededCount": {
                    "$ref": "#/$defs/Integer"
                },
                "skippedCount": {
                    "$ref": "#/$defs/Integer"
                },
                "failedCount": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "CreateComponentTypeRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "isSingleton": {
                    "$ref": "#/$defs/Boolean"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "propertyDefinitions": {
                    "$ref": "#/$defs/PropertyDefinitionsRequest"
                },
                "extendsFrom": {
                    "$ref": "#/$defs/ExtendsFrom"
                },
                "functions": {
                    "$ref": "#/$defs/FunctionsRequest"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "propertyGroups": {
                    "$ref": "#/$defs/PropertyGroupsRequest"
                },
                "componentTypeName": {
                    "$ref": "#/$defs/ComponentTypeName"
                },
                "compositeComponentTypes": {
                    "$ref": "#/$defs/CompositeComponentTypesRequest"
                }
            }
        },
        "ComponentTypeId": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "PropertyDefinitionsRequest": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PropertyDefinitionRequest"
            }
        },
        "PropertyDefinitionRequest": {
            "type": "object",
            "properties": {
                "dataType": {
                    "$ref": "#/$defs/DataType"
                },
                "isRequiredInEntity": {
                    "$ref": "#/$defs/Boolean"
                },
                "isExternalId": {
                    "$ref": "#/$defs/Boolean"
                },
                "isStoredExternally": {
                    "$ref": "#/$defs/Boolean"
                },
                "isTimeSeries": {
                    "$ref": "#/$defs/Boolean"
                },
                "defaultValue": {
                    "$ref": "#/$defs/DataValue"
                },
                "configuration": {
                    "$ref": "#/$defs/Configuration"
                },
                "displayName": {
                    "$ref": "#/$defs/PropertyDisplayName"
                }
            }
        },
        "DataType": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/Type"
                },
                "nestedType": {
                    "$ref": "#/$defs/DataType"
                },
                "allowedValues": {
                    "$ref": "#/$defs/DataValueList"
                },
                "unitOfMeasure": {
                    "$ref": "#/$defs/String"
                },
                "relationship": {
                    "$ref": "#/$defs/Relationship"
                }
            }
        },
        "Type": {
            "type": "string"
        },
        "Relationship": {
            "type": "object",
            "properties": {
                "targetComponentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "relationshipType": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Configuration": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Value"
            }
        },
        "Value": {
            "type": "string"
        },
        "PropertyDisplayName": {
            "type": "string"
        },
        "ExtendsFrom": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ComponentTypeId"
            }
        },
        "FunctionsRequest": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/FunctionRequest"
            }
        },
        "FunctionRequest": {
            "type": "object",
            "properties": {
                "requiredProperties": {
                    "$ref": "#/$defs/RequiredProperties"
                },
                "scope": {
                    "$ref": "#/$defs/Scope"
                },
                "implementedBy": {
                    "$ref": "#/$defs/DataConnector"
                }
            }
        },
        "RequiredProperties": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Name"
            }
        },
        "Scope": {
            "type": "string"
        },
        "DataConnector": {
            "type": "object",
            "properties": {
                "lambda": {
                    "$ref": "#/$defs/LambdaFunction"
                },
                "isNative": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "LambdaFunction": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/LambdaArn"
                }
            }
        },
        "LambdaArn": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "PropertyGroupsRequest": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PropertyGroupRequest"
            }
        },
        "PropertyGroupRequest": {
            "type": "object",
            "properties": {
                "groupType": {
                    "$ref": "#/$defs/GroupType"
                },
                "propertyNames": {
                    "$ref": "#/$defs/PropertyNames"
                }
            }
        },
        "GroupType": {
            "type": "string"
        },
        "PropertyNames": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Name"
            }
        },
        "ComponentTypeName": {
            "type": "string"
        },
        "CompositeComponentTypesRequest": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/CompositeComponentTypeRequest"
            }
        },
        "CompositeComponentTypeRequest": {
            "type": "object",
            "properties": {
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                }
            }
        },
        "CreateComponentTypeResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "state": {
                    "$ref": "#/$defs/State"
                }
            }
        },
        "State": {
            "type": "string"
        },
        "CreateEntityRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "entityName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "components": {
                    "$ref": "#/$defs/ComponentsMapRequest"
                },
                "compositeComponents": {
                    "$ref": "#/$defs/CompositeComponentsMapRequest"
                },
                "parentEntityId": {
                    "$ref": "#/$defs/ParentEntityId"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "EntityName": {
            "type": "string"
        },
        "ComponentsMapRequest": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ComponentRequest"
            }
        },
        "ComponentRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "properties": {
                    "$ref": "#/$defs/PropertyRequests"
                },
                "propertyGroups": {
                    "$ref": "#/$defs/ComponentPropertyGroupRequests"
                }
            }
        },
        "PropertyRequests": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PropertyRequest"
            }
        },
        "PropertyRequest": {
            "type": "object",
            "properties": {
                "definition": {
                    "$ref": "#/$defs/PropertyDefinitionRequest"
                },
                "value": {
                    "$ref": "#/$defs/DataValue"
                },
                "updateType": {
                    "$ref": "#/$defs/PropertyUpdateType"
                }
            }
        },
        "PropertyUpdateType": {
            "type": "string"
        },
        "ComponentPropertyGroupRequests": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ComponentPropertyGroupRequest"
            }
        },
        "ComponentPropertyGroupRequest": {
            "type": "object",
            "properties": {
                "groupType": {
                    "$ref": "#/$defs/GroupType"
                },
                "propertyNames": {
                    "$ref": "#/$defs/PropertyNames"
                },
                "updateType": {
                    "$ref": "#/$defs/PropertyGroupUpdateType"
                }
            }
        },
        "PropertyGroupUpdateType": {
            "type": "string"
        },
        "CompositeComponentsMapRequest": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/CompositeComponentRequest"
            }
        },
        "CompositeComponentRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "properties": {
                    "$ref": "#/$defs/PropertyRequests"
                },
                "propertyGroups": {
                    "$ref": "#/$defs/ComponentPropertyGroupRequests"
                }
            }
        },
        "ParentEntityId": {
            "type": "string"
        },
        "CreateEntityResponse": {
            "type": "object",
            "properties": {
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "state": {
                    "$ref": "#/$defs/State"
                }
            }
        },
        "CreateMetadataTransferJobRequest": {
            "type": "object",
            "properties": {
                "metadataTransferJobId": {
                    "$ref": "#/$defs/Id"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "sources": {
                    "$ref": "#/$defs/SourceConfigurations"
                },
                "destination": {
                    "$ref": "#/$defs/DestinationConfiguration"
                }
            }
        },
        "SourceConfigurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SourceConfiguration"
            }
        },
        "SourceConfiguration": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/SourceType"
                },
                "s3Configuration": {
                    "$ref": "#/$defs/S3SourceConfiguration"
                },
                "iotSiteWiseConfiguration": {
                    "$ref": "#/$defs/IotSiteWiseSourceConfiguration"
                },
                "iotTwinMakerConfiguration": {
                    "$ref": "#/$defs/IotTwinMakerSourceConfiguration"
                }
            }
        },
        "SourceType": {
            "type": "string"
        },
        "S3SourceConfiguration": {
            "type": "object",
            "properties": {
                "location": {
                    "$ref": "#/$defs/S3SourceLocation"
                }
            }
        },
        "S3SourceLocation": {
            "type": "string"
        },
        "IotSiteWiseSourceConfiguration": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/IotSiteWiseSourceConfigurationFilters"
                }
            }
        },
        "IotSiteWiseSourceConfigurationFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IotSiteWiseSourceConfigurationFilter"
            }
        },
        "IotSiteWiseSourceConfigurationFilter": {
            "type": "object",
            "properties": {
                "filterByAssetModel": {
                    "$ref": "#/$defs/FilterByAssetModel"
                },
                "filterByAsset": {
                    "$ref": "#/$defs/FilterByAsset"
                }
            }
        },
        "FilterByAssetModel": {
            "type": "object",
            "properties": {
                "assetModelId": {
                    "$ref": "#/$defs/Uuid"
                },
                "assetModelExternalId": {
                    "$ref": "#/$defs/SiteWiseExternalId"
                },
                "includeOffspring": {
                    "$ref": "#/$defs/Boolean"
                },
                "includeAssets": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Uuid": {
            "type": "string"
        },
        "SiteWiseExternalId": {
            "type": "string"
        },
        "FilterByAsset": {
            "type": "object",
            "properties": {
                "assetId": {
                    "$ref": "#/$defs/Uuid"
                },
                "assetExternalId": {
                    "$ref": "#/$defs/SiteWiseExternalId"
                },
                "includeOffspring": {
                    "$ref": "#/$defs/Boolean"
                },
                "includeAssetModel": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "IotTwinMakerSourceConfiguration": {
            "type": "object",
            "properties": {
                "workspace": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "filters": {
                    "$ref": "#/$defs/IotTwinMakerSourceConfigurationFilters"
                }
            }
        },
        "IotTwinMakerSourceConfigurationFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IotTwinMakerSourceConfigurationFilter"
            }
        },
        "IotTwinMakerSourceConfigurationFilter": {
            "type": "object",
            "properties": {
                "filterByComponentType": {
                    "$ref": "#/$defs/FilterByComponentType"
                },
                "filterByEntity": {
                    "$ref": "#/$defs/FilterByEntity"
                }
            }
        },
        "FilterByComponentType": {
            "type": "object",
            "properties": {
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                }
            }
        },
        "FilterByEntity": {
            "type": "object",
            "properties": {
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "DestinationConfiguration": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/$defs/DestinationType"
                },
                "s3Configuration": {
                    "$ref": "#/$defs/S3DestinationConfiguration"
                },
                "iotTwinMakerConfiguration": {
                    "$ref": "#/$defs/IotTwinMakerDestinationConfiguration"
                }
            }
        },
        "DestinationType": {
            "type": "string"
        },
        "S3DestinationConfiguration": {
            "type": "object",
            "properties": {
                "location": {
                    "$ref": "#/$defs/S3DestinationLocation"
                }
            }
        },
        "S3DestinationLocation": {
            "type": "string"
        },
        "IotTwinMakerDestinationConfiguration": {
            "type": "object",
            "properties": {
                "workspace": {
                    "$ref": "#/$defs/TwinMakerArn"
                }
            }
        },
        "CreateMetadataTransferJobResponse": {
            "type": "object",
            "properties": {
                "metadataTransferJobId": {
                    "$ref": "#/$defs/Id"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/MetadataTransferJobStatus"
                }
            }
        },
        "CreateSceneRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "sceneId": {
                    "$ref": "#/$defs/Id"
                },
                "contentLocation": {
                    "$ref": "#/$defs/S3Url"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "capabilities": {
                    "$ref": "#/$defs/SceneCapabilities"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "sceneMetadata": {
                    "$ref": "#/$defs/SceneMetadataMap"
                }
            }
        },
        "S3Url": {
            "type": "string"
        },
        "SceneCapabilities": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SceneCapability"
            }
        },
        "SceneCapability": {
            "type": "string"
        },
        "SceneMetadataMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/SceneMetadataValue"
            }
        },
        "SceneMetadataValue": {
            "type": "string"
        },
        "CreateSceneResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "CreateSyncJobRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "syncSource": {
                    "$ref": "#/$defs/SyncSource"
                },
                "syncRole": {
                    "$ref": "#/$defs/RoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "SyncSource": {
            "type": "string"
        },
        "RoleArn": {
            "type": "string"
        },
        "CreateSyncJobResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "state": {
                    "$ref": "#/$defs/SyncJobState"
                }
            }
        },
        "SyncJobState": {
            "type": "string"
        },
        "CreateWorkspaceRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                },
                "role": {
                    "$ref": "#/$defs/RoleArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "S3Location": {
            "type": "string"
        },
        "CreateWorkspaceResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "DeleteComponentTypeRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                }
            }
        },
        "DeleteComponentTypeResponse": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/State"
                }
            }
        },
        "DeleteEntityRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "isRecursive": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeleteEntityResponse": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/State"
                }
            }
        },
        "DeleteSceneRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "sceneId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "DeleteSceneResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteSyncJobRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "syncSource": {
                    "$ref": "#/$defs/SyncSource"
                }
            }
        },
        "DeleteSyncJobResponse": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/SyncJobState"
                }
            }
        },
        "DeleteWorkspaceRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "DeleteWorkspaceResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/$defs/WorkspaceDeleteMessage"
                }
            }
        },
        "WorkspaceDeleteMessage": {
            "type": "string"
        },
        "ExecuteQueryRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "queryStatement": {
                    "$ref": "#/$defs/QueryStatement"
                },
                "maxResults": {
                    "$ref": "#/$defs/QueryServiceMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "QueryStatement": {
            "type": "string"
        },
        "QueryServiceMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "ExecuteQueryResponse": {
            "type": "object",
            "properties": {
                "columnDescriptions": {
                    "$ref": "#/$defs/ColumnDescriptions"
                },
                "rows": {
                    "$ref": "#/$defs/Rows"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ColumnDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ColumnDescription"
            }
        },
        "ColumnDescription": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ColumnName"
                },
                "type": {
                    "$ref": "#/$defs/ColumnType"
                }
            }
        },
        "ColumnName": {
            "type": "string"
        },
        "ColumnType": {
            "type": "string"
        },
        "Rows": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Row"
            }
        },
        "Row": {
            "type": "object",
            "properties": {
                "rowData": {
                    "$ref": "#/$defs/RowData"
                }
            }
        },
        "RowData": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/QueryResultValue"
            }
        },
        "QueryResultValue": {},
        "GetComponentTypeRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                }
            }
        },
        "GetComponentTypeResponse": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "isSingleton": {
                    "$ref": "#/$defs/Boolean"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "propertyDefinitions": {
                    "$ref": "#/$defs/PropertyDefinitionsResponse"
                },
                "extendsFrom": {
                    "$ref": "#/$defs/ExtendsFrom"
                },
                "functions": {
                    "$ref": "#/$defs/FunctionsResponse"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "isAbstract": {
                    "$ref": "#/$defs/Boolean"
                },
                "isSchemaInitialized": {
                    "$ref": "#/$defs/Boolean"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "propertyGroups": {
                    "$ref": "#/$defs/PropertyGroupsResponse"
                },
                "syncSource": {
                    "$ref": "#/$defs/SyncSource"
                },
                "componentTypeName": {
                    "$ref": "#/$defs/ComponentTypeName"
                },
                "compositeComponentTypes": {
                    "$ref": "#/$defs/CompositeComponentTypesResponse"
                }
            }
        },
        "PropertyDefinitionsResponse": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PropertyDefinitionResponse"
            }
        },
        "PropertyDefinitionResponse": {
            "type": "object",
            "properties": {
                "dataType": {
                    "$ref": "#/$defs/DataType"
                },
                "isTimeSeries": {
                    "$ref": "#/$defs/Boolean"
                },
                "isRequiredInEntity": {
                    "$ref": "#/$defs/Boolean"
                },
                "isExternalId": {
                    "$ref": "#/$defs/Boolean"
                },
                "isStoredExternally": {
                    "$ref": "#/$defs/Boolean"
                },
                "isImported": {
                    "$ref": "#/$defs/Boolean"
                },
                "isFinal": {
                    "$ref": "#/$defs/Boolean"
                },
                "isInherited": {
                    "$ref": "#/$defs/Boolean"
                },
                "defaultValue": {
                    "$ref": "#/$defs/DataValue"
                },
                "configuration": {
                    "$ref": "#/$defs/Configuration"
                },
                "displayName": {
                    "$ref": "#/$defs/PropertyDisplayName"
                }
            }
        },
        "FunctionsResponse": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/FunctionResponse"
            }
        },
        "FunctionResponse": {
            "type": "object",
            "properties": {
                "requiredProperties": {
                    "$ref": "#/$defs/RequiredProperties"
                },
                "scope": {
                    "$ref": "#/$defs/Scope"
                },
                "implementedBy": {
                    "$ref": "#/$defs/DataConnector"
                },
                "isInherited": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Status": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/State"
                },
                "error": {
                    "$ref": "#/$defs/ErrorDetails"
                }
            }
        },
        "PropertyGroupsResponse": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PropertyGroupResponse"
            }
        },
        "PropertyGroupResponse": {
            "type": "object",
            "properties": {
                "groupType": {
                    "$ref": "#/$defs/GroupType"
                },
                "propertyNames": {
                    "$ref": "#/$defs/PropertyNames"
                },
                "isInherited": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CompositeComponentTypesResponse": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/CompositeComponentTypeResponse"
            }
        },
        "CompositeComponentTypeResponse": {
            "type": "object",
            "properties": {
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "isInherited": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "GetEntityRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                }
            }
        },
        "GetEntityResponse": {
            "type": "object",
            "properties": {
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "entityName": {
                    "$ref": "#/$defs/EntityName"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "components": {
                    "$ref": "#/$defs/ComponentsMap"
                },
                "parentEntityId": {
                    "$ref": "#/$defs/ParentEntityId"
                },
                "hasChildEntities": {
                    "$ref": "#/$defs/Boolean"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "syncSource": {
                    "$ref": "#/$defs/SyncSource"
                },
                "areAllComponentsReturned": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ComponentsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ComponentResponse"
            }
        },
        "ComponentResponse": {
            "type": "object",
            "properties": {
                "componentName": {
                    "$ref": "#/$defs/Name"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "definedIn": {
                    "$ref": "#/$defs/String"
                },
                "properties": {
                    "$ref": "#/$defs/PropertyResponses"
                },
                "propertyGroups": {
                    "$ref": "#/$defs/ComponentPropertyGroupResponses"
                },
                "syncSource": {
                    "$ref": "#/$defs/SyncSource"
                },
                "areAllPropertiesReturned": {
                    "$ref": "#/$defs/Boolean"
                },
                "compositeComponents": {
                    "$ref": "#/$defs/CompositeComponentResponse"
                },
                "areAllCompositeComponentsReturned": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "PropertyResponses": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PropertyResponse"
            }
        },
        "PropertyResponse": {
            "type": "object",
            "properties": {
                "definition": {
                    "$ref": "#/$defs/PropertyDefinitionResponse"
                },
                "value": {
                    "$ref": "#/$defs/DataValue"
                },
                "areAllPropertyValuesReturned": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ComponentPropertyGroupResponses": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ComponentPropertyGroupResponse"
            }
        },
        "ComponentPropertyGroupResponse": {
            "type": "object",
            "properties": {
                "groupType": {
                    "$ref": "#/$defs/GroupType"
                },
                "propertyNames": {
                    "$ref": "#/$defs/PropertyNames"
                },
                "isInherited": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "CompositeComponentResponse": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ComponentSummary"
            }
        },
        "ComponentSummary": {
            "type": "object",
            "properties": {
                "componentName": {
                    "$ref": "#/$defs/Name"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "definedIn": {
                    "$ref": "#/$defs/String"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "propertyGroups": {
                    "$ref": "#/$defs/ComponentPropertyGroupResponses"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "syncSource": {
                    "$ref": "#/$defs/SyncSource"
                },
                "componentPath": {
                    "$ref": "#/$defs/ComponentPath"
                }
            }
        },
        "GetMetadataTransferJobRequest": {
            "type": "object",
            "properties": {
                "metadataTransferJobId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "GetMetadataTransferJobResponse": {
            "type": "object",
            "properties": {
                "metadataTransferJobId": {
                    "$ref": "#/$defs/Id"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "sources": {
                    "$ref": "#/$defs/SourceConfigurations"
                },
                "destination": {
                    "$ref": "#/$defs/DestinationConfiguration"
                },
                "metadataTransferJobRole": {
                    "$ref": "#/$defs/RoleArn"
                },
                "reportUrl": {
                    "$ref": "#/$defs/String"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/MetadataTransferJobStatus"
                },
                "progress": {
                    "$ref": "#/$defs/MetadataTransferJobProgress"
                }
            }
        },
        "GetPricingPlanRequest": {
            "type": "object",
            "properties": {}
        },
        "GetPricingPlanResponse": {
            "type": "object",
            "properties": {
                "currentPricingPlan": {
                    "$ref": "#/$defs/PricingPlan"
                },
                "pendingPricingPlan": {
                    "$ref": "#/$defs/PricingPlan"
                }
            }
        },
        "PricingPlan": {
            "type": "object",
            "properties": {
                "billableEntityCount": {
                    "$ref": "#/$defs/Long"
                },
                "bundleInformation": {
                    "$ref": "#/$defs/BundleInformation"
                },
                "effectiveDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "pricingMode": {
                    "$ref": "#/$defs/PricingMode"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateReason": {
                    "$ref": "#/$defs/UpdateReason"
                }
            }
        },
        "BundleInformation": {
            "type": "object",
            "properties": {
                "bundleNames": {
                    "$ref": "#/$defs/PricingBundles"
                },
                "pricingTier": {
                    "$ref": "#/$defs/PricingTier"
                }
            }
        },
        "PricingBundles": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BundleName"
            }
        },
        "BundleName": {
            "type": "string"
        },
        "PricingTier": {
            "type": "string"
        },
        "PricingMode": {
            "type": "string"
        },
        "UpdateReason": {
            "type": "string"
        },
        "GetPropertyValueRequest": {
            "type": "object",
            "properties": {
                "componentName": {
                    "$ref": "#/$defs/Name"
                },
                "componentPath": {
                    "$ref": "#/$defs/ComponentPath"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "selectedProperties": {
                    "$ref": "#/$defs/SelectedPropertyList"
                },
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "propertyGroupName": {
                    "$ref": "#/$defs/Name"
                },
                "tabularConditions": {
                    "$ref": "#/$defs/TabularConditions"
                }
            }
        },
        "SelectedPropertyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/String"
            }
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "TabularConditions": {
            "type": "object",
            "properties": {
                "orderBy": {
                    "$ref": "#/$defs/OrderByList"
                },
                "propertyFilters": {
                    "$ref": "#/$defs/PropertyFilters"
                }
            }
        },
        "OrderByList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrderBy"
            }
        },
        "OrderBy": {
            "type": "object",
            "properties": {
                "order": {
                    "$ref": "#/$defs/Order"
                },
                "propertyName": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "Order": {
            "type": "string"
        },
        "PropertyFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PropertyFilter"
            }
        },
        "PropertyFilter": {
            "type": "object",
            "properties": {
                "propertyName": {
                    "$ref": "#/$defs/String"
                },
                "operator": {
                    "$ref": "#/$defs/String"
                },
                "value": {
                    "$ref": "#/$defs/DataValue"
                }
            }
        },
        "GetPropertyValueResponse": {
            "type": "object",
            "properties": {
                "propertyValues": {
                    "$ref": "#/$defs/PropertyLatestValueMap"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "tabularPropertyValues": {
                    "$ref": "#/$defs/TabularPropertyValues"
                }
            }
        },
        "PropertyLatestValueMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/PropertyLatestValue"
            }
        },
        "PropertyLatestValue": {
            "type": "object",
            "properties": {
                "propertyReference": {
                    "$ref": "#/$defs/EntityPropertyReference"
                },
                "propertyValue": {
                    "$ref": "#/$defs/DataValue"
                }
            }
        },
        "TabularPropertyValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TabularPropertyValue"
            }
        },
        "TabularPropertyValue": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PropertyTableValue"
            }
        },
        "PropertyTableValue": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/DataValue"
            }
        },
        "GetPropertyValueHistoryRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "componentName": {
                    "$ref": "#/$defs/Name"
                },
                "componentPath": {
                    "$ref": "#/$defs/ComponentPath"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "selectedProperties": {
                    "$ref": "#/$defs/SelectedPropertyList"
                },
                "propertyFilters": {
                    "$ref": "#/$defs/PropertyFilters"
                },
                "startDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "endDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "interpolation": {
                    "$ref": "#/$defs/InterpolationParameters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "orderByTime": {
                    "$ref": "#/$defs/OrderByTime"
                },
                "startTime": {
                    "$ref": "#/$defs/Time"
                },
                "endTime": {
                    "$ref": "#/$defs/Time"
                }
            }
        },
        "InterpolationParameters": {
            "type": "object",
            "properties": {
                "interpolationType": {
                    "$ref": "#/$defs/InterpolationType"
                },
                "intervalInSeconds": {
                    "$ref": "#/$defs/IntervalInSeconds"
                }
            }
        },
        "InterpolationType": {
            "type": "string"
        },
        "IntervalInSeconds": {
            "type": "integer",
            "format": "int64"
        },
        "OrderByTime": {
            "type": "string"
        },
        "GetPropertyValueHistoryResponse": {
            "type": "object",
            "properties": {
                "propertyValues": {
                    "$ref": "#/$defs/PropertyValueList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PropertyValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PropertyValueHistory"
            }
        },
        "PropertyValueHistory": {
            "type": "object",
            "properties": {
                "entityPropertyReference": {
                    "$ref": "#/$defs/EntityPropertyReference"
                },
                "values": {
                    "$ref": "#/$defs/Values"
                }
            }
        },
        "Values": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PropertyValue"
            }
        },
        "GetSceneRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "sceneId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "GetSceneResponse": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "sceneId": {
                    "$ref": "#/$defs/Id"
                },
                "contentLocation": {
                    "$ref": "#/$defs/S3Url"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "capabilities": {
                    "$ref": "#/$defs/SceneCapabilities"
                },
                "sceneMetadata": {
                    "$ref": "#/$defs/SceneMetadataMap"
                },
                "generatedSceneMetadata": {
                    "$ref": "#/$defs/GeneratedSceneMetadataMap"
                },
                "error": {
                    "$ref": "#/$defs/SceneError"
                }
            }
        },
        "GeneratedSceneMetadataMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/SceneMetadataValue"
            }
        },
        "SceneError": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/$defs/SceneErrorCode"
                },
                "message": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "SceneErrorCode": {
            "type": "string"
        },
        "GetSyncJobRequest": {
            "type": "object",
            "properties": {
                "syncSource": {
                    "$ref": "#/$defs/SyncSource"
                },
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "GetSyncJobResponse": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "syncSource": {
                    "$ref": "#/$defs/SyncSource"
                },
                "syncRole": {
                    "$ref": "#/$defs/RoleArn"
                },
                "status": {
                    "$ref": "#/$defs/SyncJobStatus"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "SyncJobStatus": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/SyncJobState"
                },
                "error": {
                    "$ref": "#/$defs/ErrorDetails"
                }
            }
        },
        "GetWorkspaceRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/IdOrArn"
                }
            }
        },
        "IdOrArn": {
            "type": "string"
        },
        "GetWorkspaceResponse": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "linkedServices": {
                    "$ref": "#/$defs/LinkedServices"
                },
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                },
                "role": {
                    "$ref": "#/$defs/RoleArn"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "LinkedServices": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/LinkedService"
            }
        },
        "LinkedService": {
            "type": "string"
        },
        "ListComponentsRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "componentPath": {
                    "$ref": "#/$defs/ComponentPath"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListComponentsResponse": {
            "type": "object",
            "properties": {
                "componentSummaries": {
                    "$ref": "#/$defs/ComponentSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ComponentSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ComponentSummary"
            }
        },
        "ListComponentTypesRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "filters": {
                    "$ref": "#/$defs/ListComponentTypesFilters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListComponentTypesFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListComponentTypesFilter"
            }
        },
        "ListComponentTypesFilter": {
            "type": "object",
            "properties": {
                "extendsFrom": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "namespace": {
                    "$ref": "#/$defs/String"
                },
                "isAbstract": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ListComponentTypesResponse": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "componentTypeSummaries": {
                    "$ref": "#/$defs/ComponentTypeSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ComponentTypeSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ComponentTypeSummary"
            }
        },
        "ComponentTypeSummary": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "componentTypeName": {
                    "$ref": "#/$defs/ComponentTypeName"
                }
            }
        },
        "ListEntitiesRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "filters": {
                    "$ref": "#/$defs/ListEntitiesFilters"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListEntitiesFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListEntitiesFilter"
            }
        },
        "ListEntitiesFilter": {
            "type": "object",
            "properties": {
                "parentEntityId": {
                    "$ref": "#/$defs/ParentEntityId"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "externalId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "ListEntitiesResponse": {
            "type": "object",
            "properties": {
                "entitySummaries": {
                    "$ref": "#/$defs/EntitySummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "EntitySummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EntitySummary"
            }
        },
        "EntitySummary": {
            "type": "object",
            "properties": {
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "entityName": {
                    "$ref": "#/$defs/EntityName"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "parentEntityId": {
                    "$ref": "#/$defs/ParentEntityId"
                },
                "status": {
                    "$ref": "#/$defs/Status"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "hasChildEntities": {
                    "$ref": "#/$defs/Boolean"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListMetadataTransferJobsRequest": {
            "type": "object",
            "properties": {
                "sourceType": {
                    "$ref": "#/$defs/SourceType"
                },
                "destinationType": {
                    "$ref": "#/$defs/DestinationType"
                },
                "filters": {
                    "$ref": "#/$defs/ListMetadataTransferJobsFilters"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListMetadataTransferJobsFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ListMetadataTransferJobsFilter"
            }
        },
        "ListMetadataTransferJobsFilter": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "state": {
                    "$ref": "#/$defs/MetadataTransferJobState"
                }
            }
        },
        "ListMetadataTransferJobsResponse": {
            "type": "object",
            "properties": {
                "metadataTransferJobSummaries": {
                    "$ref": "#/$defs/MetadataTransferJobSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MetadataTransferJobSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MetadataTransferJobSummary"
            }
        },
        "MetadataTransferJobSummary": {
            "type": "object",
            "properties": {
                "metadataTransferJobId": {
                    "$ref": "#/$defs/Id"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "status": {
                    "$ref": "#/$defs/MetadataTransferJobStatus"
                },
                "progress": {
                    "$ref": "#/$defs/MetadataTransferJobProgress"
                }
            }
        },
        "ListPropertiesRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "componentName": {
                    "$ref": "#/$defs/Name"
                },
                "componentPath": {
                    "$ref": "#/$defs/ComponentPath"
                },
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListPropertiesResponse": {
            "type": "object",
            "properties": {
                "propertySummaries": {
                    "$ref": "#/$defs/PropertySummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PropertySummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PropertySummary"
            }
        },
        "PropertySummary": {
            "type": "object",
            "properties": {
                "definition": {
                    "$ref": "#/$defs/PropertyDefinitionResponse"
                },
                "propertyName": {
                    "$ref": "#/$defs/Name"
                },
                "value": {
                    "$ref": "#/$defs/DataValue"
                },
                "areAllPropertyValuesReturned": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ListScenesRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListScenesResponse": {
            "type": "object",
            "properties": {
                "sceneSummaries": {
                    "$ref": "#/$defs/SceneSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SceneSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SceneSummary"
            }
        },
        "SceneSummary": {
            "type": "object",
            "properties": {
                "sceneId": {
                    "$ref": "#/$defs/Id"
                },
                "contentLocation": {
                    "$ref": "#/$defs/S3Url"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "ListSyncJobsRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListSyncJobsResponse": {
            "type": "object",
            "properties": {
                "syncJobSummaries": {
                    "$ref": "#/$defs/SyncJobSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SyncJobSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SyncJobSummary"
            }
        },
        "SyncJobSummary": {
            "type": "object",
            "properties": {
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "syncSource": {
                    "$ref": "#/$defs/SyncSource"
                },
                "status": {
                    "$ref": "#/$defs/SyncJobStatus"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "ListSyncResourcesRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "syncSource": {
                    "$ref": "#/$defs/SyncSource"
                },
                "filters": {
                    "$ref": "#/$defs/SyncResourceFilters"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SyncResourceFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SyncResourceFilter"
            }
        },
        "SyncResourceFilter": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/SyncResourceState"
                },
                "resourceType": {
                    "$ref": "#/$defs/SyncResourceType"
                },
                "resourceId": {
                    "$ref": "#/$defs/Id"
                },
                "externalId": {
                    "$ref": "#/$defs/Id"
                }
            }
        },
        "SyncResourceState": {
            "type": "string"
        },
        "SyncResourceType": {
            "type": "string"
        },
        "ListSyncResourcesResponse": {
            "type": "object",
            "properties": {
                "syncResources": {
                    "$ref": "#/$defs/SyncResourceSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "SyncResourceSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SyncResourceSummary"
            }
        },
        "SyncResourceSummary": {
            "type": "object",
            "properties": {
                "resourceType": {
                    "$ref": "#/$defs/SyncResourceType"
                },
                "externalId": {
                    "$ref": "#/$defs/Id"
                },
                "resourceId": {
                    "$ref": "#/$defs/Id"
                },
                "status": {
                    "$ref": "#/$defs/SyncResourceStatus"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "SyncResourceStatus": {
            "type": "object",
            "properties": {
                "state": {
                    "$ref": "#/$defs/SyncResourceState"
                },
                "error": {
                    "$ref": "#/$defs/ErrorDetails"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "resourceARN": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListWorkspacesRequest": {
            "type": "object",
            "properties": {
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListWorkspacesResponse": {
            "type": "object",
            "properties": {
                "workspaceSummaries": {
                    "$ref": "#/$defs/WorkspaceSummaries"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "WorkspaceSummaries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/WorkspaceSummary"
            }
        },
        "WorkspaceSummary": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "linkedServices": {
                    "$ref": "#/$defs/LinkedServices"
                },
                "creationDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceARN": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "resourceARN": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateComponentTypeRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "isSingleton": {
                    "$ref": "#/$defs/Boolean"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "propertyDefinitions": {
                    "$ref": "#/$defs/PropertyDefinitionsRequest"
                },
                "extendsFrom": {
                    "$ref": "#/$defs/ExtendsFrom"
                },
                "functions": {
                    "$ref": "#/$defs/FunctionsRequest"
                },
                "propertyGroups": {
                    "$ref": "#/$defs/PropertyGroupsRequest"
                },
                "componentTypeName": {
                    "$ref": "#/$defs/ComponentTypeName"
                },
                "compositeComponentTypes": {
                    "$ref": "#/$defs/CompositeComponentTypesRequest"
                }
            }
        },
        "UpdateComponentTypeResponse": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "arn": {
                    "$ref": "#/$defs/TwinMakerArn"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "state": {
                    "$ref": "#/$defs/State"
                }
            }
        },
        "UpdateEntityRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "entityId": {
                    "$ref": "#/$defs/EntityId"
                },
                "entityName": {
                    "$ref": "#/$defs/EntityName"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "componentUpdates": {
                    "$ref": "#/$defs/ComponentUpdatesMapRequest"
                },
                "compositeComponentUpdates": {
                    "$ref": "#/$defs/CompositeComponentUpdatesMapRequest"
                },
                "parentEntityUpdate": {
                    "$ref": "#/$defs/ParentEntityUpdateRequest"
                }
            }
        },
        "ComponentUpdatesMapRequest": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/ComponentUpdateRequest"
            }
        },
        "ComponentUpdateRequest": {
            "type": "object",
            "properties": {
                "updateType": {
                    "$ref": "#/$defs/ComponentUpdateType"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "componentTypeId": {
                    "$ref": "#/$defs/ComponentTypeId"
                },
                "propertyUpdates": {
                    "$ref": "#/$defs/PropertyRequests"
                },
                "propertyGroupUpdates": {
                    "$ref": "#/$defs/ComponentPropertyGroupRequests"
                }
            }
        },
        "ComponentUpdateType": {
            "type": "string"
        },
        "CompositeComponentUpdatesMapRequest": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/CompositeComponentUpdateRequest"
            }
        },
        "CompositeComponentUpdateRequest": {
            "type": "object",
            "properties": {
                "updateType": {
                    "$ref": "#/$defs/ComponentUpdateType"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "propertyUpdates": {
                    "$ref": "#/$defs/PropertyRequests"
                },
                "propertyGroupUpdates": {
                    "$ref": "#/$defs/ComponentPropertyGroupRequests"
                }
            }
        },
        "ParentEntityUpdateRequest": {
            "type": "object",
            "properties": {
                "updateType": {
                    "$ref": "#/$defs/ParentEntityUpdateType"
                },
                "parentEntityId": {
                    "$ref": "#/$defs/ParentEntityId"
                }
            }
        },
        "ParentEntityUpdateType": {
            "type": "string"
        },
        "UpdateEntityResponse": {
            "type": "object",
            "properties": {
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                },
                "state": {
                    "$ref": "#/$defs/State"
                }
            }
        },
        "UpdatePricingPlanRequest": {
            "type": "object",
            "properties": {
                "pricingMode": {
                    "$ref": "#/$defs/PricingMode"
                },
                "bundleNames": {
                    "$ref": "#/$defs/PricingBundles"
                }
            }
        },
        "UpdatePricingPlanResponse": {
            "type": "object",
            "properties": {
                "currentPricingPlan": {
                    "$ref": "#/$defs/PricingPlan"
                },
                "pendingPricingPlan": {
                    "$ref": "#/$defs/PricingPlan"
                }
            }
        },
        "UpdateSceneRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "sceneId": {
                    "$ref": "#/$defs/Id"
                },
                "contentLocation": {
                    "$ref": "#/$defs/S3Url"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "capabilities": {
                    "$ref": "#/$defs/SceneCapabilities"
                },
                "sceneMetadata": {
                    "$ref": "#/$defs/SceneMetadataMap"
                }
            }
        },
        "UpdateSceneResponse": {
            "type": "object",
            "properties": {
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        },
        "UpdateWorkspaceRequest": {
            "type": "object",
            "properties": {
                "workspaceId": {
                    "$ref": "#/$defs/Id"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "role": {
                    "$ref": "#/$defs/RoleArn"
                },
                "s3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "UpdateWorkspaceResponse": {
            "type": "object",
            "properties": {
                "updateDateTime": {
                    "$ref": "#/$defs/Timestamp"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iottwinmaker-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iottwinmaker-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://iottwinmaker.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://iottwinmaker.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}
