{
    "name": "codecommit",
    "commands": [
        {
            "name": "AssociateApprovalRuleTemplateWithRepository",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.AssociateApprovalRuleTemplateWithRepository"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateApprovalRuleTemplateWithRepositoryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchAssociateApprovalRuleTemplateWithRepositories",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.BatchAssociateApprovalRuleTemplateWithRepositories"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchAssociateApprovalRuleTemplateWithRepositoriesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchAssociateApprovalRuleTemplateWithRepositoriesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchDescribeMergeConflicts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.BatchDescribeMergeConflicts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDescribeMergeConflictsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDescribeMergeConflictsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchDisassociateApprovalRuleTemplateFromRepositories",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.BatchDisassociateApprovalRuleTemplateFromRepositories"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDisassociateApprovalRuleTemplateFromRepositoriesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDisassociateApprovalRuleTemplateFromRepositoriesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetCommits",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.BatchGetCommits"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetCommitsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetCommitsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchGetRepositories",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.BatchGetRepositories"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchGetRepositoriesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchGetRepositoriesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateApprovalRuleTemplate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.CreateApprovalRuleTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateApprovalRuleTemplateOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateApprovalRuleTemplateInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateBranch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.CreateBranch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateBranchInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateCommit",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.CreateCommit"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateCommitOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateCommitInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePullRequest",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.CreatePullRequest"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePullRequestOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePullRequestInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreatePullRequestApprovalRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.CreatePullRequestApprovalRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePullRequestApprovalRuleOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePullRequestApprovalRuleInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateRepository",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.CreateRepository"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateRepositoryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateRepositoryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateUnreferencedMergeCommit",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.CreateUnreferencedMergeCommit"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateUnreferencedMergeCommitOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateUnreferencedMergeCommitInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteApprovalRuleTemplate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.DeleteApprovalRuleTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteApprovalRuleTemplateOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteApprovalRuleTemplateInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteBranch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.DeleteBranch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteBranchOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteBranchInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteCommentContent",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.DeleteCommentContent"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteCommentContentOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteCommentContentInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteFile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.DeleteFile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteFileOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteFileInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeletePullRequestApprovalRule",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.DeletePullRequestApprovalRule"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePullRequestApprovalRuleOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePullRequestApprovalRuleInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteRepository",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.DeleteRepository"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteRepositoryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteRepositoryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeMergeConflicts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.DescribeMergeConflicts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeMergeConflictsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeMergeConflictsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribePullRequestEvents",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.DescribePullRequestEvents"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePullRequestEventsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePullRequestEventsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateApprovalRuleTemplateFromRepository",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.DisassociateApprovalRuleTemplateFromRepository"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateApprovalRuleTemplateFromRepositoryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "EvaluatePullRequestApprovalRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.EvaluatePullRequestApprovalRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/EvaluatePullRequestApprovalRulesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/EvaluatePullRequestApprovalRulesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetApprovalRuleTemplate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetApprovalRuleTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetApprovalRuleTemplateOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetApprovalRuleTemplateInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBlob",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetBlob"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBlobOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBlobInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetBranch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetBranch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetBranchOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetBranchInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetComment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetComment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCommentOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCommentInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCommentReactions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetCommentReactions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCommentReactionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCommentReactionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCommentsForComparedCommit",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetCommentsForComparedCommit"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCommentsForComparedCommitOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCommentsForComparedCommitInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCommentsForPullRequest",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetCommentsForPullRequest"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCommentsForPullRequestOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCommentsForPullRequestInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetCommit",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetCommit"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetCommitOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetCommitInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDifferences",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetDifferences"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDifferencesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDifferencesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetFile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFileOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFileInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetFolder",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetFolder"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetFolderOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetFolderInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMergeCommit",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetMergeCommit"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMergeCommitOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMergeCommitInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMergeConflicts",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetMergeConflicts"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMergeConflictsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMergeConflictsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetMergeOptions",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetMergeOptions"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetMergeOptionsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetMergeOptionsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPullRequest",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetPullRequest"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPullRequestOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPullRequestInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPullRequestApprovalStates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetPullRequestApprovalStates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPullRequestApprovalStatesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPullRequestApprovalStatesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetPullRequestOverrideState",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetPullRequestOverrideState"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetPullRequestOverrideStateOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetPullRequestOverrideStateInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRepository",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetRepository"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRepositoryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRepositoryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "GetRepositoryTriggers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.GetRepositoryTriggers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetRepositoryTriggersOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetRepositoryTriggersInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListApprovalRuleTemplates",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.ListApprovalRuleTemplates"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApprovalRuleTemplatesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApprovalRuleTemplatesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListAssociatedApprovalRuleTemplatesForRepository",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.ListAssociatedApprovalRuleTemplatesForRepository"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListAssociatedApprovalRuleTemplatesForRepositoryOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListAssociatedApprovalRuleTemplatesForRepositoryInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListBranches",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.ListBranches"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListBranchesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListBranchesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListFileCommitHistory",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.ListFileCommitHistory"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListFileCommitHistoryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListFileCommitHistoryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListPullRequests",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.ListPullRequests"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPullRequestsOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPullRequestsInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRepositories",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.ListRepositories"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRepositoriesOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRepositoriesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListRepositoriesForApprovalRuleTemplate",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.ListRepositoriesForApprovalRuleTemplate"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListRepositoriesForApprovalRuleTemplateOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListRepositoriesForApprovalRuleTemplateInput"
                        }
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.ListTagsForResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "MergeBranchesByFastForward",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.MergeBranchesByFastForward"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MergeBranchesByFastForwardOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MergeBranchesByFastForwardInput"
                        }
                    }
                }
            }
        },
        {
            "name": "MergeBranchesBySquash",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.MergeBranchesBySquash"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MergeBranchesBySquashOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MergeBranchesBySquashInput"
                        }
                    }
                }
            }
        },
        {
            "name": "MergeBranchesByThreeWay",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.MergeBranchesByThreeWay"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MergeBranchesByThreeWayOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MergeBranchesByThreeWayInput"
                        }
                    }
                }
            }
        },
        {
            "name": "MergePullRequestByFastForward",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.MergePullRequestByFastForward"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MergePullRequestByFastForwardOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MergePullRequestByFastForwardInput"
                        }
                    }
                }
            }
        },
        {
            "name": "MergePullRequestBySquash",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.MergePullRequestBySquash"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MergePullRequestBySquashOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MergePullRequestBySquashInput"
                        }
                    }
                }
            }
        },
        {
            "name": "MergePullRequestByThreeWay",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.MergePullRequestByThreeWay"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/MergePullRequestByThreeWayOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/MergePullRequestByThreeWayInput"
                        }
                    }
                }
            }
        },
        {
            "name": "OverridePullRequestApprovalRules",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.OverridePullRequestApprovalRules"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/OverridePullRequestApprovalRulesInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PostCommentForComparedCommit",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.PostCommentForComparedCommit"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PostCommentForComparedCommitOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PostCommentForComparedCommitInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PostCommentForPullRequest",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.PostCommentForPullRequest"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PostCommentForPullRequestOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PostCommentForPullRequestInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PostCommentReply",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.PostCommentReply"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PostCommentReplyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PostCommentReplyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutCommentReaction",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.PutCommentReaction"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutCommentReactionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutFile",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.PutFile"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutFileOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutFileInput"
                        }
                    }
                }
            }
        },
        {
            "name": "PutRepositoryTriggers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.PutRepositoryTriggers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/PutRepositoryTriggersOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/PutRepositoryTriggersInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.TagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "TestRepositoryTriggers",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.TestRepositoryTriggers"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TestRepositoryTriggersOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TestRepositoryTriggersInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UntagResource"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateApprovalRuleTemplateContent",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdateApprovalRuleTemplateContent"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateApprovalRuleTemplateContentOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateApprovalRuleTemplateContentInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateApprovalRuleTemplateDescription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdateApprovalRuleTemplateDescription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateApprovalRuleTemplateDescriptionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateApprovalRuleTemplateDescriptionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateApprovalRuleTemplateName",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdateApprovalRuleTemplateName"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateApprovalRuleTemplateNameOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateApprovalRuleTemplateNameInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateComment",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdateComment"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateCommentOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateCommentInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateDefaultBranch",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdateDefaultBranch"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDefaultBranchInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePullRequestApprovalRuleContent",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdatePullRequestApprovalRuleContent"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePullRequestApprovalRuleContentOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePullRequestApprovalRuleContentInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePullRequestApprovalState",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdatePullRequestApprovalState"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePullRequestApprovalStateInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePullRequestDescription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdatePullRequestDescription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePullRequestDescriptionOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePullRequestDescriptionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePullRequestStatus",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdatePullRequestStatus"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePullRequestStatusOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePullRequestStatusInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdatePullRequestTitle",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdatePullRequestTitle"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdatePullRequestTitleOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdatePullRequestTitleInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRepositoryDescription",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdateRepositoryDescription"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRepositoryDescriptionInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRepositoryEncryptionKey",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdateRepositoryEncryptionKey"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateRepositoryEncryptionKeyOutput"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRepositoryEncryptionKeyInput"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateRepositoryName",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CodeCommit_20150413.UpdateRepositoryName"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "type": "object"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateRepositoryNameInput"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateApprovalRuleTemplateWithRepositoryInput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                }
            }
        },
        "ApprovalRuleTemplateName": {
            "type": "string"
        },
        "RepositoryName": {
            "type": "string"
        },
        "BatchAssociateApprovalRuleTemplateWithRepositoriesOutput": {
            "type": "object",
            "properties": {
                "associatedRepositoryNames": {
                    "$ref": "#/$defs/RepositoryNameList"
                },
                "errors": {
                    "$ref": "#/$defs/BatchAssociateApprovalRuleTemplateWithRepositoriesErrorsList"
                }
            }
        },
        "RepositoryNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositoryName"
            }
        },
        "BatchAssociateApprovalRuleTemplateWithRepositoriesErrorsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchAssociateApprovalRuleTemplateWithRepositoriesError"
            }
        },
        "BatchAssociateApprovalRuleTemplateWithRepositoriesError": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "errorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorCode": {
            "type": "string"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "BatchAssociateApprovalRuleTemplateWithRepositoriesInput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                },
                "repositoryNames": {
                    "$ref": "#/$defs/RepositoryNameList"
                }
            }
        },
        "BatchDescribeMergeConflictsOutput": {
            "type": "object",
            "properties": {
                "conflicts": {
                    "$ref": "#/$defs/Conflicts"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "errors": {
                    "$ref": "#/$defs/BatchDescribeMergeConflictsErrors"
                },
                "destinationCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "sourceCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "baseCommitId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "Conflicts": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Conflict"
            }
        },
        "Conflict": {
            "type": "object",
            "properties": {
                "conflictMetadata": {
                    "$ref": "#/$defs/ConflictMetadata"
                },
                "mergeHunks": {
                    "$ref": "#/$defs/MergeHunks"
                }
            }
        },
        "ConflictMetadata": {
            "type": "object",
            "properties": {
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "fileSizes": {
                    "$ref": "#/$defs/FileSizes"
                },
                "fileModes": {
                    "$ref": "#/$defs/FileModes"
                },
                "objectTypes": {
                    "$ref": "#/$defs/ObjectTypes"
                },
                "numberOfConflicts": {
                    "$ref": "#/$defs/NumberOfConflicts"
                },
                "isBinaryFile": {
                    "$ref": "#/$defs/IsBinaryFile"
                },
                "contentConflict": {
                    "$ref": "#/$defs/IsContentConflict"
                },
                "fileModeConflict": {
                    "$ref": "#/$defs/IsFileModeConflict"
                },
                "objectTypeConflict": {
                    "$ref": "#/$defs/IsObjectTypeConflict"
                },
                "mergeOperations": {
                    "$ref": "#/$defs/MergeOperations"
                }
            }
        },
        "Path": {
            "type": "string"
        },
        "FileSizes": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/FileSize"
                },
                "destination": {
                    "$ref": "#/$defs/FileSize"
                },
                "base": {
                    "$ref": "#/$defs/FileSize"
                }
            }
        },
        "FileSize": {
            "type": "integer",
            "format": "int64"
        },
        "FileModes": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                },
                "destination": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                },
                "base": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                }
            }
        },
        "FileModeTypeEnum": {
            "enum": [
                "EXECUTABLE",
                "NORMAL",
                "SYMLINK"
            ]
        },
        "ObjectTypes": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/ObjectTypeEnum"
                },
                "destination": {
                    "$ref": "#/$defs/ObjectTypeEnum"
                },
                "base": {
                    "$ref": "#/$defs/ObjectTypeEnum"
                }
            }
        },
        "ObjectTypeEnum": {
            "enum": [
                "FILE",
                "DIRECTORY",
                "GIT_LINK",
                "SYMBOLIC_LINK"
            ]
        },
        "NumberOfConflicts": {
            "type": "integer",
            "format": "int32"
        },
        "IsBinaryFile": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/CapitalBoolean"
                },
                "destination": {
                    "$ref": "#/$defs/CapitalBoolean"
                },
                "base": {
                    "$ref": "#/$defs/CapitalBoolean"
                }
            }
        },
        "CapitalBoolean": {
            "type": "boolean"
        },
        "IsContentConflict": {
            "type": "boolean"
        },
        "IsFileModeConflict": {
            "type": "boolean"
        },
        "IsObjectTypeConflict": {
            "type": "boolean"
        },
        "MergeOperations": {
            "type": "object",
            "properties": {
                "source": {
                    "$ref": "#/$defs/ChangeTypeEnum"
                },
                "destination": {
                    "$ref": "#/$defs/ChangeTypeEnum"
                }
            }
        },
        "ChangeTypeEnum": {
            "enum": [
                "ADDED",
                "MODIFIED",
                "DELETED"
            ]
        },
        "MergeHunks": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MergeHunk"
            }
        },
        "MergeHunk": {
            "type": "object",
            "properties": {
                "isConflict": {
                    "$ref": "#/$defs/IsHunkConflict"
                },
                "source": {
                    "$ref": "#/$defs/MergeHunkDetail"
                },
                "destination": {
                    "$ref": "#/$defs/MergeHunkDetail"
                },
                "base": {
                    "$ref": "#/$defs/MergeHunkDetail"
                }
            }
        },
        "IsHunkConflict": {
            "type": "boolean"
        },
        "MergeHunkDetail": {
            "type": "object",
            "properties": {
                "startLine": {
                    "$ref": "#/$defs/LineNumber"
                },
                "endLine": {
                    "$ref": "#/$defs/LineNumber"
                },
                "hunkContent": {
                    "$ref": "#/$defs/HunkContent"
                }
            }
        },
        "LineNumber": {
            "type": "integer",
            "format": "int32"
        },
        "HunkContent": {
            "type": "string"
        },
        "NextToken": {
            "type": "string"
        },
        "BatchDescribeMergeConflictsErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchDescribeMergeConflictsError"
            }
        },
        "BatchDescribeMergeConflictsError": {
            "type": "object",
            "properties": {
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "exceptionName": {
                    "$ref": "#/$defs/ExceptionName"
                },
                "message": {
                    "$ref": "#/$defs/Message"
                }
            }
        },
        "ExceptionName": {
            "type": "string"
        },
        "Message": {
            "type": "string"
        },
        "ObjectId": {
            "type": "string"
        },
        "BatchDescribeMergeConflictsInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "destinationCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "sourceCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "mergeOption": {
                    "$ref": "#/$defs/MergeOptionTypeEnum"
                },
                "maxMergeHunks": {
                    "$ref": "#/$defs/MaxResults"
                },
                "maxConflictFiles": {
                    "$ref": "#/$defs/MaxResults"
                },
                "filePaths": {
                    "$ref": "#/$defs/FilePaths"
                },
                "conflictDetailLevel": {
                    "$ref": "#/$defs/ConflictDetailLevelTypeEnum"
                },
                "conflictResolutionStrategy": {
                    "$ref": "#/$defs/ConflictResolutionStrategyTypeEnum"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "CommitName": {
            "type": "string"
        },
        "MergeOptionTypeEnum": {
            "enum": [
                "FAST_FORWARD_MERGE",
                "SQUASH_MERGE",
                "THREE_WAY_MERGE"
            ]
        },
        "MaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "FilePaths": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Path"
            }
        },
        "ConflictDetailLevelTypeEnum": {
            "enum": [
                "FILE_LEVEL",
                "LINE_LEVEL"
            ]
        },
        "ConflictResolutionStrategyTypeEnum": {
            "enum": [
                "NONE",
                "ACCEPT_SOURCE",
                "ACCEPT_DESTINATION",
                "AUTOMERGE"
            ]
        },
        "BatchDisassociateApprovalRuleTemplateFromRepositoriesOutput": {
            "type": "object",
            "properties": {
                "disassociatedRepositoryNames": {
                    "$ref": "#/$defs/RepositoryNameList"
                },
                "errors": {
                    "$ref": "#/$defs/BatchDisassociateApprovalRuleTemplateFromRepositoriesErrorsList"
                }
            }
        },
        "BatchDisassociateApprovalRuleTemplateFromRepositoriesErrorsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchDisassociateApprovalRuleTemplateFromRepositoriesError"
            }
        },
        "BatchDisassociateApprovalRuleTemplateFromRepositoriesError": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "errorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "BatchDisassociateApprovalRuleTemplateFromRepositoriesInput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                },
                "repositoryNames": {
                    "$ref": "#/$defs/RepositoryNameList"
                }
            }
        },
        "BatchGetCommitsOutput": {
            "type": "object",
            "properties": {
                "commits": {
                    "$ref": "#/$defs/CommitObjectsList"
                },
                "errors": {
                    "$ref": "#/$defs/BatchGetCommitsErrorsList"
                }
            }
        },
        "CommitObjectsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Commit"
            }
        },
        "Commit": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "treeId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "parents": {
                    "$ref": "#/$defs/ParentList"
                },
                "message": {
                    "$ref": "#/$defs/Message"
                },
                "author": {
                    "$ref": "#/$defs/UserInfo"
                },
                "committer": {
                    "$ref": "#/$defs/UserInfo"
                },
                "additionalData": {
                    "$ref": "#/$defs/AdditionalData"
                }
            }
        },
        "ParentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ObjectId"
            }
        },
        "UserInfo": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                },
                "date": {
                    "$ref": "#/$defs/Date"
                }
            }
        },
        "Name": {
            "type": "string"
        },
        "Email": {
            "type": "string"
        },
        "Date": {
            "type": "string"
        },
        "AdditionalData": {
            "type": "string"
        },
        "BatchGetCommitsErrorsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetCommitsError"
            }
        },
        "BatchGetCommitsError": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "errorCode": {
                    "$ref": "#/$defs/ErrorCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "BatchGetCommitsInput": {
            "type": "object",
            "properties": {
                "commitIds": {
                    "$ref": "#/$defs/CommitIdsInputList"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                }
            }
        },
        "CommitIdsInputList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ObjectId"
            }
        },
        "BatchGetRepositoriesOutput": {
            "type": "object",
            "properties": {
                "repositories": {
                    "$ref": "#/$defs/RepositoryMetadataList"
                },
                "repositoriesNotFound": {
                    "$ref": "#/$defs/RepositoryNotFoundList"
                },
                "errors": {
                    "$ref": "#/$defs/BatchGetRepositoriesErrorsList"
                }
            }
        },
        "RepositoryMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositoryMetadata"
            }
        },
        "RepositoryMetadata": {
            "type": "object",
            "properties": {
                "accountId": {
                    "$ref": "#/$defs/AccountId"
                },
                "repositoryId": {
                    "$ref": "#/$defs/RepositoryId"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "repositoryDescription": {
                    "$ref": "#/$defs/RepositoryDescription"
                },
                "defaultBranch": {
                    "$ref": "#/$defs/BranchName"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "cloneUrlHttp": {
                    "$ref": "#/$defs/CloneUrlHttp"
                },
                "cloneUrlSsh": {
                    "$ref": "#/$defs/CloneUrlSsh"
                },
                "Arn": {
                    "$ref": "#/$defs/Arn"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "AccountId": {
            "type": "string"
        },
        "RepositoryId": {
            "type": "string"
        },
        "RepositoryDescription": {
            "type": "string"
        },
        "BranchName": {
            "type": "string"
        },
        "LastModifiedDate": {
            "type": "string",
            "format": "date-time"
        },
        "CreationDate": {
            "type": "string",
            "format": "date-time"
        },
        "CloneUrlHttp": {
            "type": "string"
        },
        "CloneUrlSsh": {
            "type": "string"
        },
        "Arn": {
            "type": "string"
        },
        "KmsKeyId": {
            "type": "string"
        },
        "RepositoryNotFoundList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositoryName"
            }
        },
        "BatchGetRepositoriesErrorsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchGetRepositoriesError"
            }
        },
        "BatchGetRepositoriesError": {
            "type": "object",
            "properties": {
                "repositoryId": {
                    "$ref": "#/$defs/RepositoryId"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "errorCode": {
                    "$ref": "#/$defs/BatchGetRepositoriesErrorCodeEnum"
                },
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "BatchGetRepositoriesErrorCodeEnum": {
            "enum": [
                "ENCRYPTION_INTEGRITY_CHECKS_FAILED_EXCEPTION",
                "ENCRYPTION_KEY_ACCESS_DENIED_EXCEPTION",
                "ENCRYPTION_KEY_DISABLED_EXCEPTION",
                "ENCRYPTION_KEY_NOT_FOUND_EXCEPTION",
                "ENCRYPTION_KEY_UNAVAILABLE_EXCEPTION",
                "REPOSITORY_DOES_NOT_EXIST_EXCEPTION"
            ]
        },
        "BatchGetRepositoriesInput": {
            "type": "object",
            "properties": {
                "repositoryNames": {
                    "$ref": "#/$defs/RepositoryNameList"
                }
            }
        },
        "CreateApprovalRuleTemplateOutput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplate": {
                    "$ref": "#/$defs/ApprovalRuleTemplate"
                }
            }
        },
        "ApprovalRuleTemplate": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateId": {
                    "$ref": "#/$defs/ApprovalRuleTemplateId"
                },
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                },
                "approvalRuleTemplateDescription": {
                    "$ref": "#/$defs/ApprovalRuleTemplateDescription"
                },
                "approvalRuleTemplateContent": {
                    "$ref": "#/$defs/ApprovalRuleTemplateContent"
                },
                "ruleContentSha256": {
                    "$ref": "#/$defs/RuleContentSha256"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "lastModifiedUser": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "ApprovalRuleTemplateId": {
            "type": "string"
        },
        "ApprovalRuleTemplateDescription": {
            "type": "string"
        },
        "ApprovalRuleTemplateContent": {
            "type": "string"
        },
        "RuleContentSha256": {
            "type": "string"
        },
        "CreateApprovalRuleTemplateInput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                },
                "approvalRuleTemplateContent": {
                    "$ref": "#/$defs/ApprovalRuleTemplateContent"
                },
                "approvalRuleTemplateDescription": {
                    "$ref": "#/$defs/ApprovalRuleTemplateDescription"
                }
            }
        },
        "CreateBranchInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "commitId": {
                    "$ref": "#/$defs/CommitId"
                }
            }
        },
        "CommitId": {
            "type": "string"
        },
        "CreateCommitOutput": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "treeId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "filesAdded": {
                    "$ref": "#/$defs/FilesMetadata"
                },
                "filesUpdated": {
                    "$ref": "#/$defs/FilesMetadata"
                },
                "filesDeleted": {
                    "$ref": "#/$defs/FilesMetadata"
                }
            }
        },
        "FilesMetadata": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FileMetadata"
            }
        },
        "FileMetadata": {
            "type": "object",
            "properties": {
                "absolutePath": {
                    "$ref": "#/$defs/Path"
                },
                "blobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "fileMode": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                }
            }
        },
        "CreateCommitInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "parentCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "authorName": {
                    "$ref": "#/$defs/Name"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                },
                "commitMessage": {
                    "$ref": "#/$defs/Message"
                },
                "keepEmptyFolders": {
                    "$ref": "#/$defs/KeepEmptyFolders"
                },
                "putFiles": {
                    "$ref": "#/$defs/PutFileEntries"
                },
                "deleteFiles": {
                    "$ref": "#/$defs/DeleteFileEntries"
                },
                "setFileModes": {
                    "$ref": "#/$defs/SetFileModeEntries"
                }
            }
        },
        "KeepEmptyFolders": {
            "type": "boolean"
        },
        "PutFileEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PutFileEntry"
            }
        },
        "PutFileEntry": {
            "type": "object",
            "properties": {
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "fileMode": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                },
                "fileContent": {
                    "$ref": "#/$defs/FileContent"
                },
                "sourceFile": {
                    "$ref": "#/$defs/SourceFileSpecifier"
                }
            }
        },
        "FileContent": {
            "type": "string",
            "format": "binary"
        },
        "SourceFileSpecifier": {
            "type": "object",
            "properties": {
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "isMove": {
                    "$ref": "#/$defs/IsMove"
                }
            }
        },
        "IsMove": {
            "type": "boolean"
        },
        "DeleteFileEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeleteFileEntry"
            }
        },
        "DeleteFileEntry": {
            "type": "object",
            "properties": {
                "filePath": {
                    "$ref": "#/$defs/Path"
                }
            }
        },
        "SetFileModeEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SetFileModeEntry"
            }
        },
        "SetFileModeEntry": {
            "type": "object",
            "properties": {
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "fileMode": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                }
            }
        },
        "CreatePullRequestOutput": {
            "type": "object",
            "properties": {
                "pullRequest": {
                    "$ref": "#/$defs/PullRequest"
                }
            }
        },
        "PullRequest": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "title": {
                    "$ref": "#/$defs/Title"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "lastActivityDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "pullRequestStatus": {
                    "$ref": "#/$defs/PullRequestStatusEnum"
                },
                "authorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "pullRequestTargets": {
                    "$ref": "#/$defs/PullRequestTargetList"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                },
                "approvalRules": {
                    "$ref": "#/$defs/ApprovalRulesList"
                }
            }
        },
        "PullRequestId": {
            "type": "string"
        },
        "Title": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "PullRequestStatusEnum": {
            "enum": [
                "OPEN",
                "CLOSED"
            ]
        },
        "PullRequestTargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PullRequestTarget"
            }
        },
        "PullRequestTarget": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceReference": {
                    "$ref": "#/$defs/ReferenceName"
                },
                "destinationReference": {
                    "$ref": "#/$defs/ReferenceName"
                },
                "destinationCommit": {
                    "$ref": "#/$defs/CommitId"
                },
                "sourceCommit": {
                    "$ref": "#/$defs/CommitId"
                },
                "mergeBase": {
                    "$ref": "#/$defs/CommitId"
                },
                "mergeMetadata": {
                    "$ref": "#/$defs/MergeMetadata"
                }
            }
        },
        "ReferenceName": {
            "type": "string"
        },
        "MergeMetadata": {
            "type": "object",
            "properties": {
                "isMerged": {
                    "$ref": "#/$defs/IsMerged"
                },
                "mergedBy": {
                    "$ref": "#/$defs/Arn"
                },
                "mergeCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "mergeOption": {
                    "$ref": "#/$defs/MergeOptionTypeEnum"
                }
            }
        },
        "IsMerged": {
            "type": "boolean"
        },
        "ClientRequestToken": {
            "type": "string"
        },
        "RevisionId": {
            "type": "string"
        },
        "ApprovalRulesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApprovalRule"
            }
        },
        "ApprovalRule": {
            "type": "object",
            "properties": {
                "approvalRuleId": {
                    "$ref": "#/$defs/ApprovalRuleId"
                },
                "approvalRuleName": {
                    "$ref": "#/$defs/ApprovalRuleName"
                },
                "approvalRuleContent": {
                    "$ref": "#/$defs/ApprovalRuleContent"
                },
                "ruleContentSha256": {
                    "$ref": "#/$defs/RuleContentSha256"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "lastModifiedUser": {
                    "$ref": "#/$defs/Arn"
                },
                "originApprovalRuleTemplate": {
                    "$ref": "#/$defs/OriginApprovalRuleTemplate"
                }
            }
        },
        "ApprovalRuleId": {
            "type": "string"
        },
        "ApprovalRuleName": {
            "type": "string"
        },
        "ApprovalRuleContent": {
            "type": "string"
        },
        "OriginApprovalRuleTemplate": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateId": {
                    "$ref": "#/$defs/ApprovalRuleTemplateId"
                },
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                }
            }
        },
        "CreatePullRequestInput": {
            "type": "object",
            "properties": {
                "title": {
                    "$ref": "#/$defs/Title"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                },
                "targets": {
                    "$ref": "#/$defs/TargetList"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "TargetList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Target"
            }
        },
        "Target": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceReference": {
                    "$ref": "#/$defs/ReferenceName"
                },
                "destinationReference": {
                    "$ref": "#/$defs/ReferenceName"
                }
            }
        },
        "CreatePullRequestApprovalRuleOutput": {
            "type": "object",
            "properties": {
                "approvalRule": {
                    "$ref": "#/$defs/ApprovalRule"
                }
            }
        },
        "CreatePullRequestApprovalRuleInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "approvalRuleName": {
                    "$ref": "#/$defs/ApprovalRuleName"
                },
                "approvalRuleContent": {
                    "$ref": "#/$defs/ApprovalRuleContent"
                }
            }
        },
        "CreateRepositoryOutput": {
            "type": "object",
            "properties": {
                "repositoryMetadata": {
                    "$ref": "#/$defs/RepositoryMetadata"
                }
            }
        },
        "CreateRepositoryInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "repositoryDescription": {
                    "$ref": "#/$defs/RepositoryDescription"
                },
                "tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "TagsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "CreateUnreferencedMergeCommitOutput": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "treeId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "CreateUnreferencedMergeCommitInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "destinationCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "mergeOption": {
                    "$ref": "#/$defs/MergeOptionTypeEnum"
                },
                "conflictDetailLevel": {
                    "$ref": "#/$defs/ConflictDetailLevelTypeEnum"
                },
                "conflictResolutionStrategy": {
                    "$ref": "#/$defs/ConflictResolutionStrategyTypeEnum"
                },
                "authorName": {
                    "$ref": "#/$defs/Name"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                },
                "commitMessage": {
                    "$ref": "#/$defs/Message"
                },
                "keepEmptyFolders": {
                    "$ref": "#/$defs/KeepEmptyFolders"
                },
                "conflictResolution": {
                    "$ref": "#/$defs/ConflictResolution"
                }
            }
        },
        "ConflictResolution": {
            "type": "object",
            "properties": {
                "replaceContents": {
                    "$ref": "#/$defs/ReplaceContentEntries"
                },
                "deleteFiles": {
                    "$ref": "#/$defs/DeleteFileEntries"
                },
                "setFileModes": {
                    "$ref": "#/$defs/SetFileModeEntries"
                }
            }
        },
        "ReplaceContentEntries": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReplaceContentEntry"
            }
        },
        "ReplaceContentEntry": {
            "type": "object",
            "properties": {
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "replacementType": {
                    "$ref": "#/$defs/ReplacementTypeEnum"
                },
                "content": {
                    "$ref": "#/$defs/FileContent"
                },
                "fileMode": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                }
            }
        },
        "ReplacementTypeEnum": {
            "enum": [
                "KEEP_BASE",
                "KEEP_SOURCE",
                "KEEP_DESTINATION",
                "USE_NEW_CONTENT"
            ]
        },
        "DeleteApprovalRuleTemplateOutput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateId": {
                    "$ref": "#/$defs/ApprovalRuleTemplateId"
                }
            }
        },
        "DeleteApprovalRuleTemplateInput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                }
            }
        },
        "DeleteBranchOutput": {
            "type": "object",
            "properties": {
                "deletedBranch": {
                    "$ref": "#/$defs/BranchInfo"
                }
            }
        },
        "BranchInfo": {
            "type": "object",
            "properties": {
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "commitId": {
                    "$ref": "#/$defs/CommitId"
                }
            }
        },
        "DeleteBranchInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                }
            }
        },
        "DeleteCommentContentOutput": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/$defs/Comment"
                }
            }
        },
        "Comment": {
            "type": "object",
            "properties": {
                "commentId": {
                    "$ref": "#/$defs/CommentId"
                },
                "content": {
                    "$ref": "#/$defs/Content"
                },
                "inReplyTo": {
                    "$ref": "#/$defs/CommentId"
                },
                "creationDate": {
                    "$ref": "#/$defs/CreationDate"
                },
                "lastModifiedDate": {
                    "$ref": "#/$defs/LastModifiedDate"
                },
                "authorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "deleted": {
                    "$ref": "#/$defs/IsCommentDeleted"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "callerReactions": {
                    "$ref": "#/$defs/CallerReactions"
                },
                "reactionCounts": {
                    "$ref": "#/$defs/ReactionCountsMap"
                }
            }
        },
        "CommentId": {
            "type": "string"
        },
        "Content": {
            "type": "string"
        },
        "IsCommentDeleted": {
            "type": "boolean"
        },
        "CallerReactions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReactionValue"
            }
        },
        "ReactionValue": {
            "type": "string"
        },
        "ReactionCountsMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/Count"
            }
        },
        "Count": {
            "type": "integer",
            "format": "int32"
        },
        "DeleteCommentContentInput": {
            "type": "object",
            "properties": {
                "commentId": {
                    "$ref": "#/$defs/CommentId"
                }
            }
        },
        "DeleteFileOutput": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "blobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "treeId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "filePath": {
                    "$ref": "#/$defs/Path"
                }
            }
        },
        "DeleteFileInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "parentCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "keepEmptyFolders": {
                    "$ref": "#/$defs/KeepEmptyFolders"
                },
                "commitMessage": {
                    "$ref": "#/$defs/Message"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                }
            }
        },
        "DeletePullRequestApprovalRuleOutput": {
            "type": "object",
            "properties": {
                "approvalRuleId": {
                    "$ref": "#/$defs/ApprovalRuleId"
                }
            }
        },
        "DeletePullRequestApprovalRuleInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "approvalRuleName": {
                    "$ref": "#/$defs/ApprovalRuleName"
                }
            }
        },
        "DeleteRepositoryOutput": {
            "type": "object",
            "properties": {
                "repositoryId": {
                    "$ref": "#/$defs/RepositoryId"
                }
            }
        },
        "DeleteRepositoryInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                }
            }
        },
        "DescribeMergeConflictsOutput": {
            "type": "object",
            "properties": {
                "conflictMetadata": {
                    "$ref": "#/$defs/ConflictMetadata"
                },
                "mergeHunks": {
                    "$ref": "#/$defs/MergeHunks"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "destinationCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "sourceCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "baseCommitId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "DescribeMergeConflictsInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "destinationCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "sourceCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "mergeOption": {
                    "$ref": "#/$defs/MergeOptionTypeEnum"
                },
                "maxMergeHunks": {
                    "$ref": "#/$defs/MaxResults"
                },
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "conflictDetailLevel": {
                    "$ref": "#/$defs/ConflictDetailLevelTypeEnum"
                },
                "conflictResolutionStrategy": {
                    "$ref": "#/$defs/ConflictResolutionStrategyTypeEnum"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribePullRequestEventsOutput": {
            "type": "object",
            "properties": {
                "pullRequestEvents": {
                    "$ref": "#/$defs/PullRequestEventList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PullRequestEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PullRequestEvent"
            }
        },
        "PullRequestEvent": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "eventDate": {
                    "$ref": "#/$defs/EventDate"
                },
                "pullRequestEventType": {
                    "$ref": "#/$defs/PullRequestEventType"
                },
                "actorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "pullRequestCreatedEventMetadata": {
                    "$ref": "#/$defs/PullRequestCreatedEventMetadata"
                },
                "pullRequestStatusChangedEventMetadata": {
                    "$ref": "#/$defs/PullRequestStatusChangedEventMetadata"
                },
                "pullRequestSourceReferenceUpdatedEventMetadata": {
                    "$ref": "#/$defs/PullRequestSourceReferenceUpdatedEventMetadata"
                },
                "pullRequestMergedStateChangedEventMetadata": {
                    "$ref": "#/$defs/PullRequestMergedStateChangedEventMetadata"
                },
                "approvalRuleEventMetadata": {
                    "$ref": "#/$defs/ApprovalRuleEventMetadata"
                },
                "approvalStateChangedEventMetadata": {
                    "$ref": "#/$defs/ApprovalStateChangedEventMetadata"
                },
                "approvalRuleOverriddenEventMetadata": {
                    "$ref": "#/$defs/ApprovalRuleOverriddenEventMetadata"
                }
            }
        },
        "EventDate": {
            "type": "string",
            "format": "date-time"
        },
        "PullRequestEventType": {
            "enum": [
                "PULL_REQUEST_CREATED",
                "PULL_REQUEST_STATUS_CHANGED",
                "PULL_REQUEST_SOURCE_REFERENCE_UPDATED",
                "PULL_REQUEST_MERGE_STATE_CHANGED",
                "PULL_REQUEST_APPROVAL_RULE_CREATED",
                "PULL_REQUEST_APPROVAL_RULE_UPDATED",
                "PULL_REQUEST_APPROVAL_RULE_DELETED",
                "PULL_REQUEST_APPROVAL_RULE_OVERRIDDEN",
                "PULL_REQUEST_APPROVAL_STATE_CHANGED"
            ]
        },
        "PullRequestCreatedEventMetadata": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "destinationCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "mergeBase": {
                    "$ref": "#/$defs/CommitId"
                }
            }
        },
        "PullRequestStatusChangedEventMetadata": {
            "type": "object",
            "properties": {
                "pullRequestStatus": {
                    "$ref": "#/$defs/PullRequestStatusEnum"
                }
            }
        },
        "PullRequestSourceReferenceUpdatedEventMetadata": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "beforeCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "afterCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "mergeBase": {
                    "$ref": "#/$defs/CommitId"
                }
            }
        },
        "PullRequestMergedStateChangedEventMetadata": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "destinationReference": {
                    "$ref": "#/$defs/ReferenceName"
                },
                "mergeMetadata": {
                    "$ref": "#/$defs/MergeMetadata"
                }
            }
        },
        "ApprovalRuleEventMetadata": {
            "type": "object",
            "properties": {
                "approvalRuleName": {
                    "$ref": "#/$defs/ApprovalRuleName"
                },
                "approvalRuleId": {
                    "$ref": "#/$defs/ApprovalRuleId"
                },
                "approvalRuleContent": {
                    "$ref": "#/$defs/ApprovalRuleContent"
                }
            }
        },
        "ApprovalStateChangedEventMetadata": {
            "type": "object",
            "properties": {
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                },
                "approvalStatus": {
                    "$ref": "#/$defs/ApprovalState"
                }
            }
        },
        "ApprovalState": {
            "enum": [
                "APPROVE",
                "REVOKE"
            ]
        },
        "ApprovalRuleOverriddenEventMetadata": {
            "type": "object",
            "properties": {
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                },
                "overrideStatus": {
                    "$ref": "#/$defs/OverrideStatus"
                }
            }
        },
        "OverrideStatus": {
            "enum": [
                "OVERRIDE",
                "REVOKE"
            ]
        },
        "DescribePullRequestEventsInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "pullRequestEventType": {
                    "$ref": "#/$defs/PullRequestEventType"
                },
                "actorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "DisassociateApprovalRuleTemplateFromRepositoryInput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                }
            }
        },
        "EvaluatePullRequestApprovalRulesOutput": {
            "type": "object",
            "properties": {
                "evaluation": {
                    "$ref": "#/$defs/Evaluation"
                }
            }
        },
        "Evaluation": {
            "type": "object",
            "properties": {
                "approved": {
                    "$ref": "#/$defs/Approved"
                },
                "overridden": {
                    "$ref": "#/$defs/Overridden"
                },
                "approvalRulesSatisfied": {
                    "$ref": "#/$defs/ApprovalRulesSatisfiedList"
                },
                "approvalRulesNotSatisfied": {
                    "$ref": "#/$defs/ApprovalRulesNotSatisfiedList"
                }
            }
        },
        "Approved": {
            "type": "boolean"
        },
        "Overridden": {
            "type": "boolean"
        },
        "ApprovalRulesSatisfiedList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApprovalRuleName"
            }
        },
        "ApprovalRulesNotSatisfiedList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApprovalRuleName"
            }
        },
        "EvaluatePullRequestApprovalRulesInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                }
            }
        },
        "GetApprovalRuleTemplateOutput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplate": {
                    "$ref": "#/$defs/ApprovalRuleTemplate"
                }
            }
        },
        "GetApprovalRuleTemplateInput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                }
            }
        },
        "GetBlobOutput": {
            "type": "object",
            "properties": {
                "content": {
                    "$ref": "#/$defs/blob"
                }
            }
        },
        "blob": {
            "type": "string",
            "format": "binary"
        },
        "GetBlobInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "blobId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "GetBranchOutput": {
            "type": "object",
            "properties": {
                "branch": {
                    "$ref": "#/$defs/BranchInfo"
                }
            }
        },
        "GetBranchInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                }
            }
        },
        "GetCommentOutput": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/$defs/Comment"
                }
            }
        },
        "GetCommentInput": {
            "type": "object",
            "properties": {
                "commentId": {
                    "$ref": "#/$defs/CommentId"
                }
            }
        },
        "GetCommentReactionsOutput": {
            "type": "object",
            "properties": {
                "reactionsForComment": {
                    "$ref": "#/$defs/ReactionsForCommentList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ReactionsForCommentList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReactionForComment"
            }
        },
        "ReactionForComment": {
            "type": "object",
            "properties": {
                "reaction": {
                    "$ref": "#/$defs/ReactionValueFormats"
                },
                "reactionUsers": {
                    "$ref": "#/$defs/ReactionUsersList"
                },
                "reactionsFromDeletedUsersCount": {
                    "$ref": "#/$defs/Count"
                }
            }
        },
        "ReactionValueFormats": {
            "type": "object",
            "properties": {
                "emoji": {
                    "$ref": "#/$defs/ReactionEmoji"
                },
                "shortCode": {
                    "$ref": "#/$defs/ReactionShortCode"
                },
                "unicode": {
                    "$ref": "#/$defs/ReactionUnicode"
                }
            }
        },
        "ReactionEmoji": {
            "type": "string"
        },
        "ReactionShortCode": {
            "type": "string"
        },
        "ReactionUnicode": {
            "type": "string"
        },
        "ReactionUsersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Arn"
            }
        },
        "GetCommentReactionsInput": {
            "type": "object",
            "properties": {
                "commentId": {
                    "$ref": "#/$defs/CommentId"
                },
                "reactionUserArn": {
                    "$ref": "#/$defs/Arn"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "GetCommentsForComparedCommitOutput": {
            "type": "object",
            "properties": {
                "commentsForComparedCommitData": {
                    "$ref": "#/$defs/CommentsForComparedCommitData"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "CommentsForComparedCommitData": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CommentsForComparedCommit"
            }
        },
        "CommentsForComparedCommit": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "beforeCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "afterCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "beforeBlobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "afterBlobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "location": {
                    "$ref": "#/$defs/Location"
                },
                "comments": {
                    "$ref": "#/$defs/Comments"
                }
            }
        },
        "Location": {
            "type": "object",
            "properties": {
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "filePosition": {
                    "$ref": "#/$defs/Position"
                },
                "relativeFileVersion": {
                    "$ref": "#/$defs/RelativeFileVersionEnum"
                }
            }
        },
        "Position": {
            "type": "integer",
            "format": "int64"
        },
        "RelativeFileVersionEnum": {
            "enum": [
                "BEFORE",
                "AFTER"
            ]
        },
        "Comments": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Comment"
            }
        },
        "GetCommentsForComparedCommitInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "beforeCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "afterCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "GetCommentsForPullRequestOutput": {
            "type": "object",
            "properties": {
                "commentsForPullRequestData": {
                    "$ref": "#/$defs/CommentsForPullRequestData"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "CommentsForPullRequestData": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/CommentsForPullRequest"
            }
        },
        "CommentsForPullRequest": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "beforeCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "afterCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "beforeBlobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "afterBlobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "location": {
                    "$ref": "#/$defs/Location"
                },
                "comments": {
                    "$ref": "#/$defs/Comments"
                }
            }
        },
        "GetCommentsForPullRequestInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "beforeCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "afterCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "GetCommitOutput": {
            "type": "object",
            "properties": {
                "commit": {
                    "$ref": "#/$defs/Commit"
                }
            }
        },
        "GetCommitInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "GetDifferencesOutput": {
            "type": "object",
            "properties": {
                "differences": {
                    "$ref": "#/$defs/DifferenceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DifferenceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Difference"
            }
        },
        "Difference": {
            "type": "object",
            "properties": {
                "beforeBlob": {
                    "$ref": "#/$defs/BlobMetadata"
                },
                "afterBlob": {
                    "$ref": "#/$defs/BlobMetadata"
                },
                "changeType": {
                    "$ref": "#/$defs/ChangeTypeEnum"
                }
            }
        },
        "BlobMetadata": {
            "type": "object",
            "properties": {
                "blobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "path": {
                    "$ref": "#/$defs/Path"
                },
                "mode": {
                    "$ref": "#/$defs/Mode"
                }
            }
        },
        "Mode": {
            "type": "string"
        },
        "GetDifferencesInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "beforeCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "afterCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "beforePath": {
                    "$ref": "#/$defs/Path"
                },
                "afterPath": {
                    "$ref": "#/$defs/Path"
                },
                "MaxResults": {
                    "$ref": "#/$defs/Limit"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Limit": {
            "type": "integer",
            "format": "int32"
        },
        "GetFileOutput": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "blobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "fileMode": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                },
                "fileSize": {
                    "$ref": "#/$defs/ObjectSize"
                },
                "fileContent": {
                    "$ref": "#/$defs/FileContent"
                }
            }
        },
        "ObjectSize": {
            "type": "integer",
            "format": "int64"
        },
        "GetFileInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "commitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "filePath": {
                    "$ref": "#/$defs/Path"
                }
            }
        },
        "GetFolderOutput": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "folderPath": {
                    "$ref": "#/$defs/Path"
                },
                "treeId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "subFolders": {
                    "$ref": "#/$defs/FolderList"
                },
                "files": {
                    "$ref": "#/$defs/FileList"
                },
                "symbolicLinks": {
                    "$ref": "#/$defs/SymbolicLinkList"
                },
                "subModules": {
                    "$ref": "#/$defs/SubModuleList"
                }
            }
        },
        "FolderList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Folder"
            }
        },
        "Folder": {
            "type": "object",
            "properties": {
                "treeId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "absolutePath": {
                    "$ref": "#/$defs/Path"
                },
                "relativePath": {
                    "$ref": "#/$defs/Path"
                }
            }
        },
        "FileList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/File"
            }
        },
        "File": {
            "type": "object",
            "properties": {
                "blobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "absolutePath": {
                    "$ref": "#/$defs/Path"
                },
                "relativePath": {
                    "$ref": "#/$defs/Path"
                },
                "fileMode": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                }
            }
        },
        "SymbolicLinkList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SymbolicLink"
            }
        },
        "SymbolicLink": {
            "type": "object",
            "properties": {
                "blobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "absolutePath": {
                    "$ref": "#/$defs/Path"
                },
                "relativePath": {
                    "$ref": "#/$defs/Path"
                },
                "fileMode": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                }
            }
        },
        "SubModuleList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/SubModule"
            }
        },
        "SubModule": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "absolutePath": {
                    "$ref": "#/$defs/Path"
                },
                "relativePath": {
                    "$ref": "#/$defs/Path"
                }
            }
        },
        "GetFolderInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "commitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "folderPath": {
                    "$ref": "#/$defs/Path"
                }
            }
        },
        "GetMergeCommitOutput": {
            "type": "object",
            "properties": {
                "sourceCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "destinationCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "baseCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "mergedCommitId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "GetMergeCommitInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "destinationCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "conflictDetailLevel": {
                    "$ref": "#/$defs/ConflictDetailLevelTypeEnum"
                },
                "conflictResolutionStrategy": {
                    "$ref": "#/$defs/ConflictResolutionStrategyTypeEnum"
                }
            }
        },
        "GetMergeConflictsOutput": {
            "type": "object",
            "properties": {
                "mergeable": {
                    "$ref": "#/$defs/IsMergeable"
                },
                "destinationCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "sourceCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "baseCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "conflictMetadataList": {
                    "$ref": "#/$defs/ConflictMetadataList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "IsMergeable": {
            "type": "boolean"
        },
        "ConflictMetadataList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConflictMetadata"
            }
        },
        "GetMergeConflictsInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "destinationCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "sourceCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "mergeOption": {
                    "$ref": "#/$defs/MergeOptionTypeEnum"
                },
                "conflictDetailLevel": {
                    "$ref": "#/$defs/ConflictDetailLevelTypeEnum"
                },
                "maxConflictFiles": {
                    "$ref": "#/$defs/MaxResults"
                },
                "conflictResolutionStrategy": {
                    "$ref": "#/$defs/ConflictResolutionStrategyTypeEnum"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "GetMergeOptionsOutput": {
            "type": "object",
            "properties": {
                "mergeOptions": {
                    "$ref": "#/$defs/MergeOptions"
                },
                "sourceCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "destinationCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "baseCommitId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "MergeOptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/MergeOptionTypeEnum"
            }
        },
        "GetMergeOptionsInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "destinationCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "conflictDetailLevel": {
                    "$ref": "#/$defs/ConflictDetailLevelTypeEnum"
                },
                "conflictResolutionStrategy": {
                    "$ref": "#/$defs/ConflictResolutionStrategyTypeEnum"
                }
            }
        },
        "GetPullRequestOutput": {
            "type": "object",
            "properties": {
                "pullRequest": {
                    "$ref": "#/$defs/PullRequest"
                }
            }
        },
        "GetPullRequestInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                }
            }
        },
        "GetPullRequestApprovalStatesOutput": {
            "type": "object",
            "properties": {
                "approvals": {
                    "$ref": "#/$defs/ApprovalList"
                }
            }
        },
        "ApprovalList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Approval"
            }
        },
        "Approval": {
            "type": "object",
            "properties": {
                "userArn": {
                    "$ref": "#/$defs/Arn"
                },
                "approvalState": {
                    "$ref": "#/$defs/ApprovalState"
                }
            }
        },
        "GetPullRequestApprovalStatesInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                }
            }
        },
        "GetPullRequestOverrideStateOutput": {
            "type": "object",
            "properties": {
                "overridden": {
                    "$ref": "#/$defs/Overridden"
                },
                "overrider": {
                    "$ref": "#/$defs/Arn"
                }
            }
        },
        "GetPullRequestOverrideStateInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                }
            }
        },
        "GetRepositoryOutput": {
            "type": "object",
            "properties": {
                "repositoryMetadata": {
                    "$ref": "#/$defs/RepositoryMetadata"
                }
            }
        },
        "GetRepositoryInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                }
            }
        },
        "GetRepositoryTriggersOutput": {
            "type": "object",
            "properties": {
                "configurationId": {
                    "$ref": "#/$defs/RepositoryTriggersConfigurationId"
                },
                "triggers": {
                    "$ref": "#/$defs/RepositoryTriggersList"
                }
            }
        },
        "RepositoryTriggersConfigurationId": {
            "type": "string"
        },
        "RepositoryTriggersList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositoryTrigger"
            }
        },
        "RepositoryTrigger": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/RepositoryTriggerName"
                },
                "destinationArn": {
                    "$ref": "#/$defs/Arn"
                },
                "customData": {
                    "$ref": "#/$defs/RepositoryTriggerCustomData"
                },
                "branches": {
                    "$ref": "#/$defs/BranchNameList"
                },
                "events": {
                    "$ref": "#/$defs/RepositoryTriggerEventList"
                }
            }
        },
        "RepositoryTriggerName": {
            "type": "string"
        },
        "RepositoryTriggerCustomData": {
            "type": "string"
        },
        "BranchNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BranchName"
            }
        },
        "RepositoryTriggerEventList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositoryTriggerEventEnum"
            }
        },
        "RepositoryTriggerEventEnum": {
            "enum": [
                "ALL",
                "UPDATE_REFERENCE",
                "CREATE_REFERENCE",
                "DELETE_REFERENCE"
            ]
        },
        "GetRepositoryTriggersInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                }
            }
        },
        "ListApprovalRuleTemplatesOutput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateNames": {
                    "$ref": "#/$defs/ApprovalRuleTemplateNameList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ApprovalRuleTemplateNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApprovalRuleTemplateName"
            }
        },
        "ListApprovalRuleTemplatesInput": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListAssociatedApprovalRuleTemplatesForRepositoryOutput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateNames": {
                    "$ref": "#/$defs/ApprovalRuleTemplateNameList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListAssociatedApprovalRuleTemplatesForRepositoryInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListBranchesOutput": {
            "type": "object",
            "properties": {
                "branches": {
                    "$ref": "#/$defs/BranchNameList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListBranchesInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListFileCommitHistoryResponse": {
            "type": "object",
            "properties": {
                "revisionDag": {
                    "$ref": "#/$defs/RevisionDag"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RevisionDag": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FileVersion"
            }
        },
        "FileVersion": {
            "type": "object",
            "properties": {
                "commit": {
                    "$ref": "#/$defs/Commit"
                },
                "blobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "path": {
                    "$ref": "#/$defs/Path"
                },
                "revisionChildren": {
                    "$ref": "#/$defs/RevisionChildren"
                }
            }
        },
        "RevisionChildren": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RevisionId"
            }
        },
        "ListFileCommitHistoryRequest": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "commitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "maxResults": {
                    "$ref": "#/$defs/Limit"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListPullRequestsOutput": {
            "type": "object",
            "properties": {
                "pullRequestIds": {
                    "$ref": "#/$defs/PullRequestIdList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PullRequestIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PullRequestId"
            }
        },
        "ListPullRequestsInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "authorArn": {
                    "$ref": "#/$defs/Arn"
                },
                "pullRequestStatus": {
                    "$ref": "#/$defs/PullRequestStatusEnum"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListRepositoriesOutput": {
            "type": "object",
            "properties": {
                "repositories": {
                    "$ref": "#/$defs/RepositoryNameIdPairList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "RepositoryNameIdPairList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositoryNameIdPair"
            }
        },
        "RepositoryNameIdPair": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "repositoryId": {
                    "$ref": "#/$defs/RepositoryId"
                }
            }
        },
        "ListRepositoriesInput": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "sortBy": {
                    "$ref": "#/$defs/SortByEnum"
                },
                "order": {
                    "$ref": "#/$defs/OrderEnum"
                }
            }
        },
        "SortByEnum": {
            "enum": [
                "REPOSITORY_NAME",
                "MODIFIED_DATE"
            ]
        },
        "OrderEnum": {
            "enum": [
                "ASCENDING",
                "DESCENDING"
            ]
        },
        "ListRepositoriesForApprovalRuleTemplateOutput": {
            "type": "object",
            "properties": {
                "repositoryNames": {
                    "$ref": "#/$defs/RepositoryNameList"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListRepositoriesForApprovalRuleTemplateInput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "maxResults": {
                    "$ref": "#/$defs/MaxResults"
                }
            }
        },
        "ListTagsForResourceOutput": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/TagsMap"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListTagsForResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "MergeBranchesByFastForwardOutput": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "treeId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "MergeBranchesByFastForwardInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "destinationCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "targetBranch": {
                    "$ref": "#/$defs/BranchName"
                }
            }
        },
        "MergeBranchesBySquashOutput": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "treeId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "MergeBranchesBySquashInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "destinationCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "targetBranch": {
                    "$ref": "#/$defs/BranchName"
                },
                "conflictDetailLevel": {
                    "$ref": "#/$defs/ConflictDetailLevelTypeEnum"
                },
                "conflictResolutionStrategy": {
                    "$ref": "#/$defs/ConflictResolutionStrategyTypeEnum"
                },
                "authorName": {
                    "$ref": "#/$defs/Name"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                },
                "commitMessage": {
                    "$ref": "#/$defs/Message"
                },
                "keepEmptyFolders": {
                    "$ref": "#/$defs/KeepEmptyFolders"
                },
                "conflictResolution": {
                    "$ref": "#/$defs/ConflictResolution"
                }
            }
        },
        "MergeBranchesByThreeWayOutput": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "treeId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "MergeBranchesByThreeWayInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "destinationCommitSpecifier": {
                    "$ref": "#/$defs/CommitName"
                },
                "targetBranch": {
                    "$ref": "#/$defs/BranchName"
                },
                "conflictDetailLevel": {
                    "$ref": "#/$defs/ConflictDetailLevelTypeEnum"
                },
                "conflictResolutionStrategy": {
                    "$ref": "#/$defs/ConflictResolutionStrategyTypeEnum"
                },
                "authorName": {
                    "$ref": "#/$defs/Name"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                },
                "commitMessage": {
                    "$ref": "#/$defs/Message"
                },
                "keepEmptyFolders": {
                    "$ref": "#/$defs/KeepEmptyFolders"
                },
                "conflictResolution": {
                    "$ref": "#/$defs/ConflictResolution"
                }
            }
        },
        "MergePullRequestByFastForwardOutput": {
            "type": "object",
            "properties": {
                "pullRequest": {
                    "$ref": "#/$defs/PullRequest"
                }
            }
        },
        "MergePullRequestByFastForwardInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceCommitId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "MergePullRequestBySquashOutput": {
            "type": "object",
            "properties": {
                "pullRequest": {
                    "$ref": "#/$defs/PullRequest"
                }
            }
        },
        "MergePullRequestBySquashInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "conflictDetailLevel": {
                    "$ref": "#/$defs/ConflictDetailLevelTypeEnum"
                },
                "conflictResolutionStrategy": {
                    "$ref": "#/$defs/ConflictResolutionStrategyTypeEnum"
                },
                "commitMessage": {
                    "$ref": "#/$defs/Message"
                },
                "authorName": {
                    "$ref": "#/$defs/Name"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                },
                "keepEmptyFolders": {
                    "$ref": "#/$defs/KeepEmptyFolders"
                },
                "conflictResolution": {
                    "$ref": "#/$defs/ConflictResolution"
                }
            }
        },
        "MergePullRequestByThreeWayOutput": {
            "type": "object",
            "properties": {
                "pullRequest": {
                    "$ref": "#/$defs/PullRequest"
                }
            }
        },
        "MergePullRequestByThreeWayInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "sourceCommitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "conflictDetailLevel": {
                    "$ref": "#/$defs/ConflictDetailLevelTypeEnum"
                },
                "conflictResolutionStrategy": {
                    "$ref": "#/$defs/ConflictResolutionStrategyTypeEnum"
                },
                "commitMessage": {
                    "$ref": "#/$defs/Message"
                },
                "authorName": {
                    "$ref": "#/$defs/Name"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                },
                "keepEmptyFolders": {
                    "$ref": "#/$defs/KeepEmptyFolders"
                },
                "conflictResolution": {
                    "$ref": "#/$defs/ConflictResolution"
                }
            }
        },
        "OverridePullRequestApprovalRulesInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                },
                "overrideStatus": {
                    "$ref": "#/$defs/OverrideStatus"
                }
            }
        },
        "PostCommentForComparedCommitOutput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "beforeCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "afterCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "beforeBlobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "afterBlobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "location": {
                    "$ref": "#/$defs/Location"
                },
                "comment": {
                    "$ref": "#/$defs/Comment"
                }
            }
        },
        "PostCommentForComparedCommitInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "beforeCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "afterCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "location": {
                    "$ref": "#/$defs/Location"
                },
                "content": {
                    "$ref": "#/$defs/Content"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "PostCommentForPullRequestOutput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "beforeCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "afterCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "beforeBlobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "afterBlobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "location": {
                    "$ref": "#/$defs/Location"
                },
                "comment": {
                    "$ref": "#/$defs/Comment"
                }
            }
        },
        "PostCommentForPullRequestInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "beforeCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "afterCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "location": {
                    "$ref": "#/$defs/Location"
                },
                "content": {
                    "$ref": "#/$defs/Content"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                }
            }
        },
        "PostCommentReplyOutput": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/$defs/Comment"
                }
            }
        },
        "PostCommentReplyInput": {
            "type": "object",
            "properties": {
                "inReplyTo": {
                    "$ref": "#/$defs/CommentId"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "content": {
                    "$ref": "#/$defs/Content"
                }
            }
        },
        "PutCommentReactionInput": {
            "type": "object",
            "properties": {
                "commentId": {
                    "$ref": "#/$defs/CommentId"
                },
                "reactionValue": {
                    "$ref": "#/$defs/ReactionValue"
                }
            }
        },
        "PutFileOutput": {
            "type": "object",
            "properties": {
                "commitId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "blobId": {
                    "$ref": "#/$defs/ObjectId"
                },
                "treeId": {
                    "$ref": "#/$defs/ObjectId"
                }
            }
        },
        "PutFileInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "branchName": {
                    "$ref": "#/$defs/BranchName"
                },
                "fileContent": {
                    "$ref": "#/$defs/FileContent"
                },
                "filePath": {
                    "$ref": "#/$defs/Path"
                },
                "fileMode": {
                    "$ref": "#/$defs/FileModeTypeEnum"
                },
                "parentCommitId": {
                    "$ref": "#/$defs/CommitId"
                },
                "commitMessage": {
                    "$ref": "#/$defs/Message"
                },
                "name": {
                    "$ref": "#/$defs/Name"
                },
                "email": {
                    "$ref": "#/$defs/Email"
                }
            }
        },
        "PutRepositoryTriggersOutput": {
            "type": "object",
            "properties": {
                "configurationId": {
                    "$ref": "#/$defs/RepositoryTriggersConfigurationId"
                }
            }
        },
        "PutRepositoryTriggersInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "triggers": {
                    "$ref": "#/$defs/RepositoryTriggersList"
                }
            }
        },
        "TagResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tags": {
                    "$ref": "#/$defs/TagsMap"
                }
            }
        },
        "TestRepositoryTriggersOutput": {
            "type": "object",
            "properties": {
                "successfulExecutions": {
                    "$ref": "#/$defs/RepositoryTriggerNameList"
                },
                "failedExecutions": {
                    "$ref": "#/$defs/RepositoryTriggerExecutionFailureList"
                }
            }
        },
        "RepositoryTriggerNameList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositoryTriggerName"
            }
        },
        "RepositoryTriggerExecutionFailureList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/RepositoryTriggerExecutionFailure"
            }
        },
        "RepositoryTriggerExecutionFailure": {
            "type": "object",
            "properties": {
                "trigger": {
                    "$ref": "#/$defs/RepositoryTriggerName"
                },
                "failureMessage": {
                    "$ref": "#/$defs/RepositoryTriggerExecutionFailureMessage"
                }
            }
        },
        "RepositoryTriggerExecutionFailureMessage": {
            "type": "string"
        },
        "TestRepositoryTriggersInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "triggers": {
                    "$ref": "#/$defs/RepositoryTriggersList"
                }
            }
        },
        "UntagResourceInput": {
            "type": "object",
            "properties": {
                "resourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "tagKeys": {
                    "$ref": "#/$defs/TagKeysList"
                }
            }
        },
        "TagKeysList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UpdateApprovalRuleTemplateContentOutput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplate": {
                    "$ref": "#/$defs/ApprovalRuleTemplate"
                }
            }
        },
        "UpdateApprovalRuleTemplateContentInput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                },
                "newRuleContent": {
                    "$ref": "#/$defs/ApprovalRuleTemplateContent"
                },
                "existingRuleContentSha256": {
                    "$ref": "#/$defs/RuleContentSha256"
                }
            }
        },
        "UpdateApprovalRuleTemplateDescriptionOutput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplate": {
                    "$ref": "#/$defs/ApprovalRuleTemplate"
                }
            }
        },
        "UpdateApprovalRuleTemplateDescriptionInput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                },
                "approvalRuleTemplateDescription": {
                    "$ref": "#/$defs/ApprovalRuleTemplateDescription"
                }
            }
        },
        "UpdateApprovalRuleTemplateNameOutput": {
            "type": "object",
            "properties": {
                "approvalRuleTemplate": {
                    "$ref": "#/$defs/ApprovalRuleTemplate"
                }
            }
        },
        "UpdateApprovalRuleTemplateNameInput": {
            "type": "object",
            "properties": {
                "oldApprovalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                },
                "newApprovalRuleTemplateName": {
                    "$ref": "#/$defs/ApprovalRuleTemplateName"
                }
            }
        },
        "UpdateCommentOutput": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/$defs/Comment"
                }
            }
        },
        "UpdateCommentInput": {
            "type": "object",
            "properties": {
                "commentId": {
                    "$ref": "#/$defs/CommentId"
                },
                "content": {
                    "$ref": "#/$defs/Content"
                }
            }
        },
        "UpdateDefaultBranchInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "defaultBranchName": {
                    "$ref": "#/$defs/BranchName"
                }
            }
        },
        "UpdatePullRequestApprovalRuleContentOutput": {
            "type": "object",
            "properties": {
                "approvalRule": {
                    "$ref": "#/$defs/ApprovalRule"
                }
            }
        },
        "UpdatePullRequestApprovalRuleContentInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "approvalRuleName": {
                    "$ref": "#/$defs/ApprovalRuleName"
                },
                "existingRuleContentSha256": {
                    "$ref": "#/$defs/RuleContentSha256"
                },
                "newRuleContent": {
                    "$ref": "#/$defs/ApprovalRuleContent"
                }
            }
        },
        "UpdatePullRequestApprovalStateInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "revisionId": {
                    "$ref": "#/$defs/RevisionId"
                },
                "approvalState": {
                    "$ref": "#/$defs/ApprovalState"
                }
            }
        },
        "UpdatePullRequestDescriptionOutput": {
            "type": "object",
            "properties": {
                "pullRequest": {
                    "$ref": "#/$defs/PullRequest"
                }
            }
        },
        "UpdatePullRequestDescriptionInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "UpdatePullRequestStatusOutput": {
            "type": "object",
            "properties": {
                "pullRequest": {
                    "$ref": "#/$defs/PullRequest"
                }
            }
        },
        "UpdatePullRequestStatusInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "pullRequestStatus": {
                    "$ref": "#/$defs/PullRequestStatusEnum"
                }
            }
        },
        "UpdatePullRequestTitleOutput": {
            "type": "object",
            "properties": {
                "pullRequest": {
                    "$ref": "#/$defs/PullRequest"
                }
            }
        },
        "UpdatePullRequestTitleInput": {
            "type": "object",
            "properties": {
                "pullRequestId": {
                    "$ref": "#/$defs/PullRequestId"
                },
                "title": {
                    "$ref": "#/$defs/Title"
                }
            }
        },
        "UpdateRepositoryDescriptionInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "repositoryDescription": {
                    "$ref": "#/$defs/RepositoryDescription"
                }
            }
        },
        "UpdateRepositoryEncryptionKeyOutput": {
            "type": "object",
            "properties": {
                "repositoryId": {
                    "$ref": "#/$defs/RepositoryId"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                },
                "originalKmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "UpdateRepositoryEncryptionKeyInput": {
            "type": "object",
            "properties": {
                "repositoryName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "kmsKeyId": {
                    "$ref": "#/$defs/KmsKeyId"
                }
            }
        },
        "UpdateRepositoryNameInput": {
            "type": "object",
            "properties": {
                "oldName": {
                    "$ref": "#/$defs/RepositoryName"
                },
                "newName": {
                    "$ref": "#/$defs/RepositoryName"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://codecommit-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://codecommit-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://codecommit.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://codecommit.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}