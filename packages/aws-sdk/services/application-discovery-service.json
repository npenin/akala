{
    "name": "discovery",
    "commands": [
        {
            "name": "AssociateConfigurationItemsToApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "AssociateConfigurationItemsToApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/AssociateConfigurationItemsToApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/AssociateConfigurationItemsToApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchDeleteAgents",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchDeleteAgents"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeleteAgentsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeleteAgentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "BatchDeleteImportData",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "BatchDeleteImportData"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/BatchDeleteImportDataResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/BatchDeleteImportDataRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "CreateTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "CreateTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateTagsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteApplications",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteApplications"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteApplicationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteApplicationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DeleteTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DeleteTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteTagsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeAgents",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeAgents"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeAgentsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeAgentsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeBatchDeleteConfigurationTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeBatchDeleteConfigurationTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeBatchDeleteConfigurationTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeBatchDeleteConfigurationTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeContinuousExports",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeContinuousExports"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeContinuousExportsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeContinuousExportsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeExportConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeExportConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeExportConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeExportConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeExportTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeExportTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeExportTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeExportTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeImportTasks",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeImportTasks"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeImportTasksResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeImportTasksRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DescribeTags",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DescribeTags"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeTagsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeTagsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "DisassociateConfigurationItemsFromApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "DisassociateConfigurationItemsFromApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DisassociateConfigurationItemsFromApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DisassociateConfigurationItemsFromApplicationRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ExportConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ExportConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ExportConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        {
            "name": "GetDiscoverySummary",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "GetDiscoverySummary"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/GetDiscoverySummaryResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/GetDiscoverySummaryRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListConfigurations",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListConfigurations"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListConfigurationsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListConfigurationsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "ListServerNeighbors",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "ListServerNeighbors"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListServerNeighborsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListServerNeighborsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartBatchDeleteConfigurationTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartBatchDeleteConfigurationTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartBatchDeleteConfigurationTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartBatchDeleteConfigurationTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartContinuousExport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartContinuousExport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartContinuousExportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartContinuousExportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartDataCollectionByAgentIds",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartDataCollectionByAgentIds"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartDataCollectionByAgentIdsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartDataCollectionByAgentIdsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartExportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartExportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartExportTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartExportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StartImportTask",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StartImportTask"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StartImportTaskResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StartImportTaskRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopContinuousExport",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopContinuousExport"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopContinuousExportResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopContinuousExportRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "StopDataCollectionByAgentIds",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "StopDataCollectionByAgentIds"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/StopDataCollectionByAgentIdsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/StopDataCollectionByAgentIdsRequest"
                        }
                    }
                }
            }
        },
        {
            "name": "UpdateApplication",
            "config": {
                "http": {
                    "inject": [
                        "param.0"
                    ],
                    "method": "POST",
                    "route": "/",
                    "type": "json",
                    "headers": {
                        "X-Amz-Target": "UpdateApplication"
                    }
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateApplicationResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateApplicationRequest"
                        }
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "AssociateConfigurationItemsToApplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "AssociateConfigurationItemsToApplicationRequest": {
            "type": "object",
            "properties": {
                "applicationConfigurationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "configurationIds": {
                    "$ref": "#/$defs/ConfigurationIdList"
                }
            }
        },
        "ApplicationId": {
            "type": "string"
        },
        "ConfigurationIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfigurationId"
            }
        },
        "ConfigurationId": {
            "type": "string"
        },
        "BatchDeleteAgentsResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "$ref": "#/$defs/BatchDeleteAgentErrors"
                }
            }
        },
        "BatchDeleteAgentErrors": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchDeleteAgentError"
            }
        },
        "BatchDeleteAgentError": {
            "type": "object",
            "properties": {
                "agentId": {
                    "$ref": "#/$defs/AgentId"
                },
                "errorMessage": {
                    "$ref": "#/$defs/String"
                },
                "errorCode": {
                    "$ref": "#/$defs/DeleteAgentErrorCode"
                }
            }
        },
        "AgentId": {
            "type": "string"
        },
        "String": {
            "type": "string"
        },
        "DeleteAgentErrorCode": {
            "enum": [
                "NOT_FOUND",
                "INTERNAL_SERVER_ERROR",
                "AGENT_IN_USE"
            ]
        },
        "BatchDeleteAgentsRequest": {
            "type": "object",
            "properties": {
                "deleteAgents": {
                    "$ref": "#/$defs/DeleteAgents"
                }
            }
        },
        "DeleteAgents": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeleteAgent"
            }
        },
        "DeleteAgent": {
            "type": "object",
            "properties": {
                "agentId": {
                    "$ref": "#/$defs/AgentId"
                },
                "force": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "Boolean": {
            "type": "boolean"
        },
        "BatchDeleteImportDataResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "$ref": "#/$defs/BatchDeleteImportDataErrorList"
                }
            }
        },
        "BatchDeleteImportDataErrorList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/BatchDeleteImportDataError"
            }
        },
        "BatchDeleteImportDataError": {
            "type": "object",
            "properties": {
                "importTaskId": {
                    "$ref": "#/$defs/ImportTaskIdentifier"
                },
                "errorCode": {
                    "$ref": "#/$defs/BatchDeleteImportDataErrorCode"
                },
                "errorDescription": {
                    "$ref": "#/$defs/BatchDeleteImportDataErrorDescription"
                }
            }
        },
        "ImportTaskIdentifier": {
            "type": "string"
        },
        "BatchDeleteImportDataErrorCode": {
            "enum": [
                "NOT_FOUND",
                "INTERNAL_SERVER_ERROR",
                "OVER_LIMIT"
            ]
        },
        "BatchDeleteImportDataErrorDescription": {
            "type": "string"
        },
        "BatchDeleteImportDataRequest": {
            "type": "object",
            "properties": {
                "importTaskIds": {
                    "$ref": "#/$defs/ToDeleteIdentifierList"
                },
                "deleteHistory": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ToDeleteIdentifierList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportTaskIdentifier"
            }
        },
        "CreateApplicationResponse": {
            "type": "object",
            "properties": {
                "configurationId": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "CreateApplicationRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "description": {
                    "$ref": "#/$defs/ApplicationDescription"
                }
            }
        },
        "ApplicationName": {
            "type": "string"
        },
        "ApplicationDescription": {
            "type": "string"
        },
        "CreateTagsResponse": {
            "type": "object",
            "properties": {}
        },
        "CreateTagsRequest": {
            "type": "object",
            "properties": {
                "configurationIds": {
                    "$ref": "#/$defs/ConfigurationIdList"
                },
                "tags": {
                    "$ref": "#/$defs/TagSet"
                }
            }
        },
        "TagSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Tag"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                }
            }
        },
        "TagKey": {
            "type": "string"
        },
        "TagValue": {
            "type": "string"
        },
        "DeleteApplicationsResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteApplicationsRequest": {
            "type": "object",
            "properties": {
                "configurationIds": {
                    "$ref": "#/$defs/ApplicationIdsList"
                }
            }
        },
        "ApplicationIdsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationId"
            }
        },
        "DeleteTagsResponse": {
            "type": "object",
            "properties": {}
        },
        "DeleteTagsRequest": {
            "type": "object",
            "properties": {
                "configurationIds": {
                    "$ref": "#/$defs/ConfigurationIdList"
                },
                "tags": {
                    "$ref": "#/$defs/TagSet"
                }
            }
        },
        "DescribeAgentsResponse": {
            "type": "object",
            "properties": {
                "agentsInfo": {
                    "$ref": "#/$defs/AgentsInfo"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AgentsInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AgentInfo"
            }
        },
        "AgentInfo": {
            "type": "object",
            "properties": {
                "agentId": {
                    "$ref": "#/$defs/AgentId"
                },
                "hostName": {
                    "$ref": "#/$defs/String"
                },
                "agentNetworkInfoList": {
                    "$ref": "#/$defs/AgentNetworkInfoList"
                },
                "connectorId": {
                    "$ref": "#/$defs/String"
                },
                "version": {
                    "$ref": "#/$defs/String"
                },
                "health": {
                    "$ref": "#/$defs/AgentStatus"
                },
                "lastHealthPingTime": {
                    "$ref": "#/$defs/String"
                },
                "collectionStatus": {
                    "$ref": "#/$defs/String"
                },
                "agentType": {
                    "$ref": "#/$defs/String"
                },
                "registeredTime": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AgentNetworkInfoList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AgentNetworkInfo"
            }
        },
        "AgentNetworkInfo": {
            "type": "object",
            "properties": {
                "ipAddress": {
                    "$ref": "#/$defs/String"
                },
                "macAddress": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "AgentStatus": {
            "enum": [
                "HEALTHY",
                "UNHEALTHY",
                "RUNNING",
                "UNKNOWN",
                "BLACKLISTED",
                "SHUTDOWN"
            ]
        },
        "NextToken": {
            "type": "string"
        },
        "DescribeAgentsRequest": {
            "type": "object",
            "properties": {
                "agentIds": {
                    "$ref": "#/$defs/AgentIds"
                },
                "filters": {
                    "$ref": "#/$defs/Filters"
                },
                "maxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "AgentIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AgentId"
            }
        },
        "Filters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Filter"
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/String"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                },
                "condition": {
                    "$ref": "#/$defs/Condition"
                }
            }
        },
        "FilterValues": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FilterValue"
            }
        },
        "FilterValue": {
            "type": "string"
        },
        "Condition": {
            "type": "string"
        },
        "Integer": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeBatchDeleteConfigurationTaskResponse": {
            "type": "object",
            "properties": {
                "task": {
                    "$ref": "#/$defs/BatchDeleteConfigurationTask"
                }
            }
        },
        "BatchDeleteConfigurationTask": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/UUID"
                },
                "status": {
                    "$ref": "#/$defs/BatchDeleteConfigurationTaskStatus"
                },
                "startTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "endTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "configurationType": {
                    "$ref": "#/$defs/DeletionConfigurationItemType"
                },
                "requestedConfigurations": {
                    "$ref": "#/$defs/ConfigurationIdList"
                },
                "deletedConfigurations": {
                    "$ref": "#/$defs/ConfigurationIdList"
                },
                "failedConfigurations": {
                    "$ref": "#/$defs/FailedConfigurationList"
                },
                "deletionWarnings": {
                    "$ref": "#/$defs/DeletionWarningsList"
                }
            }
        },
        "UUID": {
            "type": "string"
        },
        "BatchDeleteConfigurationTaskStatus": {
            "enum": [
                "INITIALIZING",
                "VALIDATING",
                "DELETING",
                "COMPLETED",
                "FAILED"
            ]
        },
        "TimeStamp": {
            "type": "string",
            "format": "date-time"
        },
        "DeletionConfigurationItemType": {
            "enum": [
                "SERVER"
            ]
        },
        "FailedConfigurationList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/FailedConfiguration"
            }
        },
        "FailedConfiguration": {
            "type": "object",
            "properties": {
                "configurationId": {
                    "$ref": "#/$defs/ConfigurationId"
                },
                "errorStatusCode": {
                    "$ref": "#/$defs/ErrorStatusCode"
                },
                "errorMessage": {
                    "$ref": "#/$defs/ErrorMessage"
                }
            }
        },
        "ErrorStatusCode": {
            "type": "integer",
            "format": "int32"
        },
        "ErrorMessage": {
            "type": "string"
        },
        "DeletionWarningsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeletionWarning"
            }
        },
        "DeletionWarning": {
            "type": "object",
            "properties": {
                "configurationId": {
                    "$ref": "#/$defs/ConfigurationId"
                },
                "warningCode": {
                    "$ref": "#/$defs/WarningCode"
                },
                "warningText": {
                    "$ref": "#/$defs/WarningText"
                }
            }
        },
        "WarningCode": {
            "type": "integer",
            "format": "int32"
        },
        "WarningText": {
            "type": "string"
        },
        "DescribeBatchDeleteConfigurationTaskRequest": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "DescribeConfigurationsResponse": {
            "type": "object",
            "properties": {
                "configurations": {
                    "$ref": "#/$defs/DescribeConfigurationsAttributes"
                }
            }
        },
        "DescribeConfigurationsAttributes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DescribeConfigurationsAttribute"
            }
        },
        "DescribeConfigurationsAttribute": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeConfigurationsRequest": {
            "type": "object",
            "properties": {
                "configurationIds": {
                    "$ref": "#/$defs/ConfigurationIdList"
                }
            }
        },
        "DescribeContinuousExportsResponse": {
            "type": "object",
            "properties": {
                "descriptions": {
                    "$ref": "#/$defs/ContinuousExportDescriptions"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ContinuousExportDescriptions": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ContinuousExportDescription"
            }
        },
        "ContinuousExportDescription": {
            "type": "object",
            "properties": {
                "exportId": {
                    "$ref": "#/$defs/ConfigurationsExportId"
                },
                "status": {
                    "$ref": "#/$defs/ContinuousExportStatus"
                },
                "statusDetail": {
                    "$ref": "#/$defs/StringMax255"
                },
                "s3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "startTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "stopTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "dataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "schemaStorageConfig": {
                    "$ref": "#/$defs/SchemaStorageConfig"
                }
            }
        },
        "ConfigurationsExportId": {
            "type": "string"
        },
        "ContinuousExportStatus": {
            "enum": [
                "START_IN_PROGRESS",
                "START_FAILED",
                "ACTIVE",
                "ERROR",
                "STOP_IN_PROGRESS",
                "STOP_FAILED",
                "INACTIVE"
            ]
        },
        "StringMax255": {
            "type": "string"
        },
        "S3Bucket": {
            "type": "string"
        },
        "DataSource": {
            "enum": [
                "AGENT"
            ]
        },
        "SchemaStorageConfig": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "DescribeContinuousExportsRequest": {
            "type": "object",
            "properties": {
                "exportIds": {
                    "$ref": "#/$defs/ContinuousExportIds"
                },
                "maxResults": {
                    "$ref": "#/$defs/DescribeContinuousExportsMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ContinuousExportIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfigurationsExportId"
            }
        },
        "DescribeContinuousExportsMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeExportConfigurationsResponse": {
            "type": "object",
            "properties": {
                "exportsInfo": {
                    "$ref": "#/$defs/ExportsInfo"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ExportsInfo": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportInfo"
            }
        },
        "ExportInfo": {
            "type": "object",
            "properties": {
                "exportId": {
                    "$ref": "#/$defs/ConfigurationsExportId"
                },
                "exportStatus": {
                    "$ref": "#/$defs/ExportStatus"
                },
                "statusMessage": {
                    "$ref": "#/$defs/ExportStatusMessage"
                },
                "configurationsDownloadUrl": {
                    "$ref": "#/$defs/ConfigurationsDownloadUrl"
                },
                "exportRequestTime": {
                    "$ref": "#/$defs/ExportRequestTime"
                },
                "isTruncated": {
                    "$ref": "#/$defs/Boolean"
                },
                "requestedStartTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "requestedEndTime": {
                    "$ref": "#/$defs/TimeStamp"
                }
            }
        },
        "ExportStatus": {
            "enum": [
                "FAILED",
                "SUCCEEDED",
                "IN_PROGRESS"
            ]
        },
        "ExportStatusMessage": {
            "type": "string"
        },
        "ConfigurationsDownloadUrl": {
            "type": "string"
        },
        "ExportRequestTime": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeExportConfigurationsRequest": {
            "type": "object",
            "properties": {
                "exportIds": {
                    "$ref": "#/$defs/ExportIds"
                },
                "maxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ExportIds": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfigurationsExportId"
            }
        },
        "DescribeExportTasksResponse": {
            "type": "object",
            "properties": {
                "exportsInfo": {
                    "$ref": "#/$defs/ExportsInfo"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeExportTasksRequest": {
            "type": "object",
            "properties": {
                "exportIds": {
                    "$ref": "#/$defs/ExportIds"
                },
                "filters": {
                    "$ref": "#/$defs/ExportFilters"
                },
                "maxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ExportFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportFilter"
            }
        },
        "ExportFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/FilterName"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                },
                "condition": {
                    "$ref": "#/$defs/Condition"
                }
            }
        },
        "FilterName": {
            "type": "string"
        },
        "DescribeImportTasksResponse": {
            "type": "object",
            "properties": {
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "tasks": {
                    "$ref": "#/$defs/ImportTaskList"
                }
            }
        },
        "ImportTaskList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportTask"
            }
        },
        "ImportTask": {
            "type": "object",
            "properties": {
                "importTaskId": {
                    "$ref": "#/$defs/ImportTaskIdentifier"
                },
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "name": {
                    "$ref": "#/$defs/ImportTaskName"
                },
                "importUrl": {
                    "$ref": "#/$defs/ImportURL"
                },
                "status": {
                    "$ref": "#/$defs/ImportStatus"
                },
                "importRequestTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "importCompletionTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "importDeletedTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "serverImportSuccess": {
                    "$ref": "#/$defs/Integer"
                },
                "serverImportFailure": {
                    "$ref": "#/$defs/Integer"
                },
                "applicationImportSuccess": {
                    "$ref": "#/$defs/Integer"
                },
                "applicationImportFailure": {
                    "$ref": "#/$defs/Integer"
                },
                "errorsAndFailedEntriesZip": {
                    "$ref": "#/$defs/S3PresignedUrl"
                }
            }
        },
        "ClientRequestToken": {
            "type": "string"
        },
        "ImportTaskName": {
            "type": "string"
        },
        "ImportURL": {
            "type": "string"
        },
        "ImportStatus": {
            "enum": [
                "IMPORT_IN_PROGRESS",
                "IMPORT_COMPLETE",
                "IMPORT_COMPLETE_WITH_ERRORS",
                "IMPORT_FAILED",
                "IMPORT_FAILED_SERVER_LIMIT_EXCEEDED",
                "IMPORT_FAILED_RECORD_LIMIT_EXCEEDED",
                "DELETE_IN_PROGRESS",
                "DELETE_COMPLETE",
                "DELETE_FAILED",
                "DELETE_FAILED_LIMIT_EXCEEDED",
                "INTERNAL_ERROR"
            ]
        },
        "S3PresignedUrl": {
            "type": "string"
        },
        "DescribeImportTasksRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/DescribeImportTasksFilterList"
                },
                "maxResults": {
                    "$ref": "#/$defs/DescribeImportTasksMaxResults"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DescribeImportTasksFilterList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportTaskFilter"
            }
        },
        "ImportTaskFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/ImportTaskFilterName"
                },
                "values": {
                    "$ref": "#/$defs/ImportTaskFilterValueList"
                }
            }
        },
        "ImportTaskFilterName": {
            "enum": [
                "IMPORT_TASK_ID",
                "STATUS",
                "NAME"
            ]
        },
        "ImportTaskFilterValueList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ImportTaskFilterValue"
            }
        },
        "ImportTaskFilterValue": {
            "type": "string"
        },
        "DescribeImportTasksMaxResults": {
            "type": "integer",
            "format": "int32"
        },
        "DescribeTagsResponse": {
            "type": "object",
            "properties": {
                "tags": {
                    "$ref": "#/$defs/ConfigurationTagSet"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ConfigurationTagSet": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ConfigurationTag"
            }
        },
        "ConfigurationTag": {
            "type": "object",
            "properties": {
                "configurationType": {
                    "$ref": "#/$defs/ConfigurationItemType"
                },
                "configurationId": {
                    "$ref": "#/$defs/ConfigurationId"
                },
                "key": {
                    "$ref": "#/$defs/TagKey"
                },
                "value": {
                    "$ref": "#/$defs/TagValue"
                },
                "timeOfCreation": {
                    "$ref": "#/$defs/TimeStamp"
                }
            }
        },
        "ConfigurationItemType": {
            "enum": [
                "SERVER",
                "PROCESS",
                "CONNECTIONS",
                "APPLICATION"
            ]
        },
        "DescribeTagsRequest": {
            "type": "object",
            "properties": {
                "filters": {
                    "$ref": "#/$defs/TagFilters"
                },
                "maxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "TagFilters": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagFilter"
            }
        },
        "TagFilter": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/FilterName"
                },
                "values": {
                    "$ref": "#/$defs/FilterValues"
                }
            }
        },
        "DisassociateConfigurationItemsFromApplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "DisassociateConfigurationItemsFromApplicationRequest": {
            "type": "object",
            "properties": {
                "applicationConfigurationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "configurationIds": {
                    "$ref": "#/$defs/ConfigurationIdList"
                }
            }
        },
        "ExportConfigurationsResponse": {
            "type": "object",
            "properties": {
                "exportId": {
                    "$ref": "#/$defs/ConfigurationsExportId"
                }
            }
        },
        "GetDiscoverySummaryResponse": {
            "type": "object",
            "properties": {
                "servers": {
                    "$ref": "#/$defs/Long"
                },
                "applications": {
                    "$ref": "#/$defs/Long"
                },
                "serversMappedToApplications": {
                    "$ref": "#/$defs/Long"
                },
                "serversMappedtoTags": {
                    "$ref": "#/$defs/Long"
                },
                "agentSummary": {
                    "$ref": "#/$defs/CustomerAgentInfo"
                },
                "connectorSummary": {
                    "$ref": "#/$defs/CustomerConnectorInfo"
                },
                "meCollectorSummary": {
                    "$ref": "#/$defs/CustomerMeCollectorInfo"
                },
                "agentlessCollectorSummary": {
                    "$ref": "#/$defs/CustomerAgentlessCollectorInfo"
                }
            }
        },
        "Long": {
            "type": "integer",
            "format": "int64"
        },
        "CustomerAgentInfo": {
            "type": "object",
            "properties": {
                "activeAgents": {
                    "$ref": "#/$defs/Integer"
                },
                "healthyAgents": {
                    "$ref": "#/$defs/Integer"
                },
                "blackListedAgents": {
                    "$ref": "#/$defs/Integer"
                },
                "shutdownAgents": {
                    "$ref": "#/$defs/Integer"
                },
                "unhealthyAgents": {
                    "$ref": "#/$defs/Integer"
                },
                "totalAgents": {
                    "$ref": "#/$defs/Integer"
                },
                "unknownAgents": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "CustomerConnectorInfo": {
            "type": "object",
            "properties": {
                "activeConnectors": {
                    "$ref": "#/$defs/Integer"
                },
                "healthyConnectors": {
                    "$ref": "#/$defs/Integer"
                },
                "blackListedConnectors": {
                    "$ref": "#/$defs/Integer"
                },
                "shutdownConnectors": {
                    "$ref": "#/$defs/Integer"
                },
                "unhealthyConnectors": {
                    "$ref": "#/$defs/Integer"
                },
                "totalConnectors": {
                    "$ref": "#/$defs/Integer"
                },
                "unknownConnectors": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "CustomerMeCollectorInfo": {
            "type": "object",
            "properties": {
                "activeMeCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "healthyMeCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "denyListedMeCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "shutdownMeCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "unhealthyMeCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "totalMeCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "unknownMeCollectors": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "CustomerAgentlessCollectorInfo": {
            "type": "object",
            "properties": {
                "activeAgentlessCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "healthyAgentlessCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "denyListedAgentlessCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "shutdownAgentlessCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "unhealthyAgentlessCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "totalAgentlessCollectors": {
                    "$ref": "#/$defs/Integer"
                },
                "unknownAgentlessCollectors": {
                    "$ref": "#/$defs/Integer"
                }
            }
        },
        "GetDiscoverySummaryRequest": {
            "type": "object",
            "properties": {}
        },
        "ListConfigurationsResponse": {
            "type": "object",
            "properties": {
                "configurations": {
                    "$ref": "#/$defs/Configurations"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "Configurations": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Configuration"
            }
        },
        "Configuration": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/String"
            }
        },
        "ListConfigurationsRequest": {
            "type": "object",
            "properties": {
                "configurationType": {
                    "$ref": "#/$defs/ConfigurationItemType"
                },
                "filters": {
                    "$ref": "#/$defs/Filters"
                },
                "maxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "orderBy": {
                    "$ref": "#/$defs/OrderByList"
                }
            }
        },
        "OrderByList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/OrderByElement"
            }
        },
        "OrderByElement": {
            "type": "object",
            "properties": {
                "fieldName": {
                    "$ref": "#/$defs/OrderByElementFieldName"
                },
                "sortOrder": {
                    "$ref": "#/$defs/orderString"
                }
            }
        },
        "OrderByElementFieldName": {
            "type": "string"
        },
        "orderString": {
            "enum": [
                "ASC",
                "DESC"
            ]
        },
        "ListServerNeighborsResponse": {
            "type": "object",
            "properties": {
                "neighbors": {
                    "$ref": "#/$defs/NeighborDetailsList"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                },
                "knownDependencyCount": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "NeighborDetailsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NeighborConnectionDetail"
            }
        },
        "NeighborConnectionDetail": {
            "type": "object",
            "properties": {
                "sourceServerId": {
                    "$ref": "#/$defs/ConfigurationId"
                },
                "destinationServerId": {
                    "$ref": "#/$defs/ConfigurationId"
                },
                "destinationPort": {
                    "$ref": "#/$defs/BoxedInteger"
                },
                "transportProtocol": {
                    "$ref": "#/$defs/String"
                },
                "connectionsCount": {
                    "$ref": "#/$defs/Long"
                }
            }
        },
        "BoxedInteger": {
            "type": "integer",
            "format": "int32"
        },
        "ListServerNeighborsRequest": {
            "type": "object",
            "properties": {
                "configurationId": {
                    "$ref": "#/$defs/ConfigurationId"
                },
                "portInformationNeeded": {
                    "$ref": "#/$defs/Boolean"
                },
                "neighborConfigurationIds": {
                    "$ref": "#/$defs/ConfigurationIdList"
                },
                "maxResults": {
                    "$ref": "#/$defs/Integer"
                },
                "nextToken": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartBatchDeleteConfigurationTaskResponse": {
            "type": "object",
            "properties": {
                "taskId": {
                    "$ref": "#/$defs/UUID"
                }
            }
        },
        "StartBatchDeleteConfigurationTaskRequest": {
            "type": "object",
            "properties": {
                "configurationType": {
                    "$ref": "#/$defs/DeletionConfigurationItemType"
                },
                "configurationIds": {
                    "$ref": "#/$defs/ConfigurationIdList"
                }
            }
        },
        "StartContinuousExportResponse": {
            "type": "object",
            "properties": {
                "exportId": {
                    "$ref": "#/$defs/ConfigurationsExportId"
                },
                "s3Bucket": {
                    "$ref": "#/$defs/S3Bucket"
                },
                "startTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "dataSource": {
                    "$ref": "#/$defs/DataSource"
                },
                "schemaStorageConfig": {
                    "$ref": "#/$defs/SchemaStorageConfig"
                }
            }
        },
        "StartContinuousExportRequest": {
            "type": "object",
            "properties": {}
        },
        "StartDataCollectionByAgentIdsResponse": {
            "type": "object",
            "properties": {
                "agentsConfigurationStatus": {
                    "$ref": "#/$defs/AgentConfigurationStatusList"
                }
            }
        },
        "AgentConfigurationStatusList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AgentConfigurationStatus"
            }
        },
        "AgentConfigurationStatus": {
            "type": "object",
            "properties": {
                "agentId": {
                    "$ref": "#/$defs/String"
                },
                "operationSucceeded": {
                    "$ref": "#/$defs/Boolean"
                },
                "description": {
                    "$ref": "#/$defs/String"
                }
            }
        },
        "StartDataCollectionByAgentIdsRequest": {
            "type": "object",
            "properties": {
                "agentIds": {
                    "$ref": "#/$defs/AgentIds"
                }
            }
        },
        "StartExportTaskResponse": {
            "type": "object",
            "properties": {
                "exportId": {
                    "$ref": "#/$defs/ConfigurationsExportId"
                }
            }
        },
        "StartExportTaskRequest": {
            "type": "object",
            "properties": {
                "exportDataFormat": {
                    "$ref": "#/$defs/ExportDataFormats"
                },
                "filters": {
                    "$ref": "#/$defs/ExportFilters"
                },
                "startTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "endTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "preferences": {
                    "$ref": "#/$defs/ExportPreferences"
                }
            }
        },
        "ExportDataFormats": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ExportDataFormat"
            }
        },
        "ExportDataFormat": {
            "enum": [
                "CSV"
            ]
        },
        "ExportPreferences": {
            "type": "object",
            "properties": {
                "ec2RecommendationsPreferences": {
                    "$ref": "#/$defs/Ec2RecommendationsExportPreferences"
                }
            }
        },
        "Ec2RecommendationsExportPreferences": {
            "type": "object",
            "properties": {
                "enabled": {
                    "$ref": "#/$defs/ExportEnabled"
                },
                "cpuPerformanceMetricBasis": {
                    "$ref": "#/$defs/UsageMetricBasis"
                },
                "ramPerformanceMetricBasis": {
                    "$ref": "#/$defs/UsageMetricBasis"
                },
                "tenancy": {
                    "$ref": "#/$defs/Tenancy"
                },
                "excludedInstanceTypes": {
                    "$ref": "#/$defs/ExcludedInstanceTypes"
                },
                "preferredRegion": {
                    "$ref": "#/$defs/UserPreferredRegion"
                },
                "reservedInstanceOptions": {
                    "$ref": "#/$defs/ReservedInstanceOptions"
                }
            }
        },
        "ExportEnabled": {
            "type": "boolean"
        },
        "UsageMetricBasis": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/$defs/UsageMetricBasisName"
                },
                "percentageAdjust": {
                    "$ref": "#/$defs/UsageMetricPercentageAdjust"
                }
            }
        },
        "UsageMetricBasisName": {
            "type": "string"
        },
        "UsageMetricPercentageAdjust": {
            "type": "number",
            "format": "double"
        },
        "Tenancy": {
            "enum": [
                "DEDICATED",
                "SHARED"
            ]
        },
        "ExcludedInstanceTypes": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/EC2InstanceType"
            }
        },
        "EC2InstanceType": {
            "type": "string"
        },
        "UserPreferredRegion": {
            "type": "string"
        },
        "ReservedInstanceOptions": {
            "type": "object",
            "properties": {
                "purchasingOption": {
                    "$ref": "#/$defs/PurchasingOption"
                },
                "offeringClass": {
                    "$ref": "#/$defs/OfferingClass"
                },
                "termLength": {
                    "$ref": "#/$defs/TermLength"
                }
            }
        },
        "PurchasingOption": {
            "enum": [
                "ALL_UPFRONT",
                "PARTIAL_UPFRONT",
                "NO_UPFRONT"
            ]
        },
        "OfferingClass": {
            "enum": [
                "STANDARD",
                "CONVERTIBLE"
            ]
        },
        "TermLength": {
            "enum": [
                "ONE_YEAR",
                "THREE_YEAR"
            ]
        },
        "StartImportTaskResponse": {
            "type": "object",
            "properties": {
                "task": {
                    "$ref": "#/$defs/ImportTask"
                }
            }
        },
        "StartImportTaskRequest": {
            "type": "object",
            "properties": {
                "clientRequestToken": {
                    "$ref": "#/$defs/ClientRequestToken"
                },
                "name": {
                    "$ref": "#/$defs/ImportTaskName"
                },
                "importUrl": {
                    "$ref": "#/$defs/ImportURL"
                }
            }
        },
        "StopContinuousExportResponse": {
            "type": "object",
            "properties": {
                "startTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "stopTime": {
                    "$ref": "#/$defs/TimeStamp"
                }
            }
        },
        "StopContinuousExportRequest": {
            "type": "object",
            "properties": {
                "exportId": {
                    "$ref": "#/$defs/ConfigurationsExportId"
                }
            }
        },
        "StopDataCollectionByAgentIdsResponse": {
            "type": "object",
            "properties": {
                "agentsConfigurationStatus": {
                    "$ref": "#/$defs/AgentConfigurationStatusList"
                }
            }
        },
        "StopDataCollectionByAgentIdsRequest": {
            "type": "object",
            "properties": {
                "agentIds": {
                    "$ref": "#/$defs/AgentIds"
                }
            }
        },
        "UpdateApplicationResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateApplicationRequest": {
            "type": "object",
            "properties": {
                "configurationId": {
                    "$ref": "#/$defs/ApplicationId"
                },
                "name": {
                    "$ref": "#/$defs/ApplicationName"
                },
                "description": {
                    "$ref": "#/$defs/ApplicationDescription"
                }
            }
        }
    },
    "state": {
        "version": "1.0",
        "parameters": {
            "Region": {
                "builtIn": "AWS::Region",
                "required": false,
                "documentation": "The AWS region used to dispatch the request.",
                "type": "String"
            },
            "UseDualStack": {
                "builtIn": "AWS::UseDualStack",
                "required": true,
                "default": false,
                "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                "type": "Boolean"
            },
            "UseFIPS": {
                "builtIn": "AWS::UseFIPS",
                "required": true,
                "default": false,
                "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                "type": "Boolean"
            },
            "Endpoint": {
                "builtIn": "SDK::Endpoint",
                "required": false,
                "documentation": "Override the endpoint used to send this request",
                "type": "String"
            }
        },
        "rules": [
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Endpoint"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseFIPS"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [
                            {
                                "fn": "booleanEquals",
                                "argv": [
                                    {
                                        "ref": "UseDualStack"
                                    },
                                    true
                                ]
                            }
                        ],
                        "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                        "type": "error"
                    },
                    {
                        "conditions": [],
                        "endpoint": {
                            "url": {
                                "ref": "Endpoint"
                            },
                            "properties": {},
                            "headers": {}
                        },
                        "type": "endpoint"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [
                    {
                        "fn": "isSet",
                        "argv": [
                            {
                                "ref": "Region"
                            }
                        ]
                    }
                ],
                "rules": [
                    {
                        "conditions": [
                            {
                                "fn": "aws.partition",
                                "argv": [
                                    {
                                        "ref": "Region"
                                    }
                                ],
                                "assign": "PartitionResult"
                            }
                        ],
                        "rules": [
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    },
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://discovery-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseFIPS"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsFIPS"
                                                        ]
                                                    },
                                                    true
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://discovery-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "FIPS is enabled but this partition does not support FIPS",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [
                                    {
                                        "fn": "booleanEquals",
                                        "argv": [
                                            {
                                                "ref": "UseDualStack"
                                            },
                                            true
                                        ]
                                    }
                                ],
                                "rules": [
                                    {
                                        "conditions": [
                                            {
                                                "fn": "booleanEquals",
                                                "argv": [
                                                    true,
                                                    {
                                                        "fn": "getAttr",
                                                        "argv": [
                                                            {
                                                                "ref": "PartitionResult"
                                                            },
                                                            "supportsDualStack"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "rules": [
                                            {
                                                "conditions": [],
                                                "endpoint": {
                                                    "url": "https://discovery.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                    "properties": {},
                                                    "headers": {}
                                                },
                                                "type": "endpoint"
                                            }
                                        ],
                                        "type": "tree"
                                    },
                                    {
                                        "conditions": [],
                                        "error": "DualStack is enabled but this partition does not support DualStack",
                                        "type": "error"
                                    }
                                ],
                                "type": "tree"
                            },
                            {
                                "conditions": [],
                                "endpoint": {
                                    "url": "https://discovery.{Region}.{PartitionResult#dnsSuffix}",
                                    "properties": {},
                                    "headers": {}
                                },
                                "type": "endpoint"
                            }
                        ],
                        "type": "tree"
                    }
                ],
                "type": "tree"
            },
            {
                "conditions": [],
                "error": "Invalid Configuration: Missing Region",
                "type": "error"
            }
        ]
    }
}