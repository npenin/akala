{
    "name": "panorama",
    "commands": [
        {
            "name": "CreateApplicationInstance",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/application-instances"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateApplicationInstanceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateApplicationInstanceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Description": {},
                        "ManifestPayload": {},
                        "ManifestOverridesPayload": {},
                        "ApplicationInstanceIdToReplace": {},
                        "RuntimeRoleArn": {},
                        "DefaultRuntimeContextDevice": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreateJobForDevices",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateJobForDevicesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateJobForDevicesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DeviceIds": {},
                        "DeviceJobConfig": {},
                        "JobType": {}
                    }
                }
            }
        },
        {
            "name": "CreateNodeFromTemplateJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/packages/template-job"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreateNodeFromTemplateJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreateNodeFromTemplateJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "TemplateType": {},
                        "OutputPackageName": {},
                        "OutputPackageVersion": {},
                        "NodeName": {},
                        "NodeDescription": {},
                        "TemplateParameters": {},
                        "JobTags": {}
                    }
                }
            }
        },
        {
            "name": "CreatePackage",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/packages"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePackageResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePackageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PackageName": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "CreatePackageImportJob",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/packages/import-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/CreatePackageImportJobResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/CreatePackageImportJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "JobType": {},
                        "InputConfig": {},
                        "OutputConfig": {},
                        "ClientToken": {},
                        "JobTags": {}
                    }
                }
            }
        },
        {
            "name": "DeleteDevice",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DeviceId": "route.DeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/devices/{DeviceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeleteDeviceResponse"
                    },
                    "inject": [
                        "param.0.DeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeleteDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DeviceId": {}
                    }
                }
            }
        },
        {
            "name": "DeletePackage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PackageId": "route.PackageId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/packages/{PackageId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeletePackageResponse"
                    },
                    "inject": [
                        "param.0.PackageId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeletePackageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PackageId": {},
                        "ForceDelete": {}
                    }
                }
            }
        },
        {
            "name": "DeregisterPackageVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PackageId": "route.PackageId",
                            "PackageVersion": "route.PackageVersion",
                            "PatchVersion": "route.PatchVersion",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/packages/{PackageId}/versions/{PackageVersion}/patch/{PatchVersion}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DeregisterPackageVersionResponse"
                    },
                    "inject": [
                        "param.0.PackageId",
                        "param.0.PackageVersion",
                        "param.0.PatchVersion",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DeregisterPackageVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "OwnerAccount": {},
                        "PackageId": {},
                        "PackageVersion": {},
                        "PatchVersion": {},
                        "UpdatedLatestPatchVersion": {}
                    }
                }
            }
        },
        {
            "name": "DescribeApplicationInstance",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationInstanceId": "route.ApplicationInstanceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/application-instances/{ApplicationInstanceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeApplicationInstanceResponse"
                    },
                    "inject": [
                        "param.0.ApplicationInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeApplicationInstanceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationInstanceId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeApplicationInstanceDetails",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationInstanceId": "route.ApplicationInstanceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/application-instances/{ApplicationInstanceId}/details"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeApplicationInstanceDetailsResponse"
                    },
                    "inject": [
                        "param.0.ApplicationInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeApplicationInstanceDetailsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationInstanceId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeDevice",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DeviceId": "route.DeviceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/devices/{DeviceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDeviceResponse"
                    },
                    "inject": [
                        "param.0.DeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DeviceId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeDeviceJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "JobId": "route.JobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/jobs/{JobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeDeviceJobResponse"
                    },
                    "inject": [
                        "param.0.JobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeDeviceJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "JobId": {}
                    }
                }
            }
        },
        {
            "name": "DescribeNode",
            "config": {
                "http": {
                    "inject": [
                        {
                            "NodeId": "route.NodeId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/nodes/{NodeId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNodeResponse"
                    },
                    "inject": [
                        "param.0.NodeId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNodeRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NodeId": {},
                        "OwnerAccount": {}
                    }
                }
            }
        },
        {
            "name": "DescribeNodeFromTemplateJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "JobId": "route.JobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/packages/template-job/{JobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribeNodeFromTemplateJobResponse"
                    },
                    "inject": [
                        "param.0.JobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribeNodeFromTemplateJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "JobId": {}
                    }
                }
            }
        },
        {
            "name": "DescribePackage",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PackageId": "route.PackageId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/packages/metadata/{PackageId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePackageResponse"
                    },
                    "inject": [
                        "param.0.PackageId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePackageRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "PackageId": {}
                    }
                }
            }
        },
        {
            "name": "DescribePackageImportJob",
            "config": {
                "http": {
                    "inject": [
                        {
                            "JobId": "route.JobId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/packages/import-jobs/{JobId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePackageImportJobResponse"
                    },
                    "inject": [
                        "param.0.JobId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePackageImportJobRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "JobId": {}
                    }
                }
            }
        },
        {
            "name": "DescribePackageVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PackageId": "route.PackageId",
                            "PackageVersion": "route.PackageVersion",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/packages/metadata/{PackageId}/versions/{PackageVersion}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/DescribePackageVersionResponse"
                    },
                    "inject": [
                        "param.0.PackageId",
                        "param.0.PackageVersion",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/DescribePackageVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "OwnerAccount": {},
                        "PackageId": {},
                        "PackageVersion": {},
                        "PatchVersion": {}
                    }
                }
            }
        },
        {
            "name": "ListApplicationInstanceDependencies",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationInstanceId": "route.ApplicationInstanceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/application-instances/{ApplicationInstanceId}/package-dependencies"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationInstanceDependenciesResponse"
                    },
                    "inject": [
                        "param.0.ApplicationInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationInstanceDependenciesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationInstanceId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListApplicationInstanceNodeInstances",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationInstanceId": "route.ApplicationInstanceId",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/application-instances/{ApplicationInstanceId}/node-instances"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationInstanceNodeInstancesResponse"
                    },
                    "inject": [
                        "param.0.ApplicationInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationInstanceNodeInstancesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationInstanceId": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListApplicationInstances",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/application-instances"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListApplicationInstancesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListApplicationInstancesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DeviceId": {},
                        "StatusFilter": {},
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListDevices",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/devices"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDevicesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDevicesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {},
                        "SortBy": {},
                        "SortOrder": {},
                        "NameFilter": {},
                        "DeviceAggregatedStatusFilter": {}
                    }
                }
            }
        },
        {
            "name": "ListDevicesJobs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListDevicesJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListDevicesJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DeviceId": {},
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListNodeFromTemplateJobs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/packages/template-job"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNodeFromTemplateJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNodeFromTemplateJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListNodes",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/nodes"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListNodesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListNodesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Category": {},
                        "OwnerAccount": {},
                        "PackageName": {},
                        "PackageVersion": {},
                        "PatchVersion": {},
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListPackageImportJobs",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/packages/import-jobs"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPackageImportJobsResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPackageImportJobsRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "NextToken": {},
                        "MaxResults": {}
                    }
                }
            }
        },
        {
            "name": "ListPackages",
            "config": {
                "http": {
                    "inject": [
                        "query"
                    ],
                    "method": "GET",
                    "route": "/packages"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListPackagesResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListPackagesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "MaxResults": {},
                        "NextToken": {}
                    }
                }
            }
        },
        {
            "name": "ListTagsForResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "query"
                        }
                    ],
                    "method": "GET",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ListTagsForResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ListTagsForResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {}
                    }
                }
            }
        },
        {
            "name": "ProvisionDevice",
            "config": {
                "http": {
                    "inject": [
                        "body"
                    ],
                    "method": "POST",
                    "route": "/devices"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/ProvisionDeviceResponse"
                    },
                    "inject": [
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/ProvisionDeviceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "Name": {},
                        "Description": {},
                        "Tags": {},
                        "NetworkingConfiguration": {}
                    }
                }
            }
        },
        {
            "name": "RegisterPackageVersion",
            "config": {
                "http": {
                    "inject": [
                        {
                            "PackageId": "route.PackageId",
                            "PackageVersion": "route.PackageVersion",
                            "PatchVersion": "route.PatchVersion",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/packages/{PackageId}/versions/{PackageVersion}/patch/{PatchVersion}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RegisterPackageVersionResponse"
                    },
                    "inject": [
                        "param.0.PackageId",
                        "param.0.PackageVersion",
                        "param.0.PatchVersion",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RegisterPackageVersionRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "OwnerAccount": {},
                        "PackageId": {},
                        "PackageVersion": {},
                        "PatchVersion": {},
                        "MarkLatest": {}
                    }
                }
            }
        },
        {
            "name": "RemoveApplicationInstance",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationInstanceId": "route.ApplicationInstanceId",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/application-instances/{ApplicationInstanceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/RemoveApplicationInstanceResponse"
                    },
                    "inject": [
                        "param.0.ApplicationInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/RemoveApplicationInstanceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationInstanceId": {}
                    }
                }
            }
        },
        {
            "name": "SignalApplicationInstanceNodeInstances",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ApplicationInstanceId": "route.ApplicationInstanceId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/application-instances/{ApplicationInstanceId}/node-signals"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/SignalApplicationInstanceNodeInstancesResponse"
                    },
                    "inject": [
                        "param.0.ApplicationInstanceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/SignalApplicationInstanceNodeInstancesRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ApplicationInstanceId": {},
                        "NodeSignals": {}
                    }
                }
            }
        },
        {
            "name": "TagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "POST",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/TagResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/TagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "Tags": {}
                    }
                }
            }
        },
        {
            "name": "UntagResource",
            "config": {
                "http": {
                    "inject": [
                        {
                            "ResourceArn": "route.ResourceArn",
                            "...": "body"
                        }
                    ],
                    "method": "DELETE",
                    "route": "/tags/{ResourceArn}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UntagResourceResponse"
                    },
                    "inject": [
                        "param.0.ResourceArn",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UntagResourceRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "ResourceArn": {},
                        "TagKeys": {}
                    }
                }
            }
        },
        {
            "name": "UpdateDeviceMetadata",
            "config": {
                "http": {
                    "inject": [
                        {
                            "DeviceId": "route.DeviceId",
                            "...": "body"
                        }
                    ],
                    "method": "PUT",
                    "route": "/devices/{DeviceId}"
                },
                "schema": {
                    "resultSchema": {
                        "$ref": "#/$defs/UpdateDeviceMetadataResponse"
                    },
                    "inject": [
                        "param.0.DeviceId",
                        "param.0"
                    ],
                    "$defs": {
                        "param.0": {
                            "$ref": "#/$defs/UpdateDeviceMetadataRequest"
                        }
                    }
                },
                "cli": {
                    "inject": [
                        "options"
                    ],
                    "options": {
                        "DeviceId": {},
                        "Description": {}
                    }
                }
            }
        }
    ],
    "$defs": {
        "smithy.api#Unit": {
            "type": "object"
        },
        "smithy.api#String": {
            "type": "string"
        },
        "smithy.api#Timestamp": {
            "type": "string",
            "format": "date-time"
        },
        "smithy.api#Boolean": {
            "type": "boolean"
        },
        "smithy.api#PrimitiveBoolean": {
            "type": "boolean"
        },
        "smithy.api#Integer": {
            "type": "integer"
        },
        "smithy.api#PrimitiveInteger": {
            "type": "integer"
        },
        "smithy.api#Long": {
            "type": "integer"
        },
        "smithy.api#PrimitiveLong": {
            "type": "integer"
        },
        "smithy.api#Double": {
            "type": "number"
        },
        "smithy.api#PrimitiveDouble": {
            "type": "number"
        },
        "smithy.api#Float": {
            "type": "number"
        },
        "smithy.api#PrimitiveFloat": {
            "type": "number"
        },
        "smithy.api#Document": {},
        "smithy.api#Blob": {
            "type": "string",
            "format": "binary"
        },
        "CreateApplicationInstanceRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ApplicationInstanceName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "ManifestPayload": {
                    "$ref": "#/$defs/ManifestPayload"
                },
                "ManifestOverridesPayload": {
                    "$ref": "#/$defs/ManifestOverridesPayload"
                },
                "ApplicationInstanceIdToReplace": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                },
                "RuntimeRoleArn": {
                    "$ref": "#/$defs/RuntimeRoleArn"
                },
                "DefaultRuntimeContextDevice": {
                    "$ref": "#/$defs/DefaultRuntimeContextDevice"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ApplicationInstanceName": {
            "type": "string"
        },
        "Description": {
            "type": "string"
        },
        "ManifestPayload": {
            "type": "object",
            "properties": {
                "PayloadData": {
                    "$ref": "#/$defs/ManifestPayloadData"
                }
            }
        },
        "ManifestPayloadData": {
            "type": "string"
        },
        "ManifestOverridesPayload": {
            "type": "object",
            "properties": {
                "PayloadData": {
                    "$ref": "#/$defs/ManifestOverridesPayloadData"
                }
            }
        },
        "ManifestOverridesPayloadData": {
            "type": "string"
        },
        "ApplicationInstanceId": {
            "type": "string"
        },
        "RuntimeRoleArn": {
            "type": "string"
        },
        "DefaultRuntimeContextDevice": {
            "type": "string"
        },
        "TagMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TagValue"
            }
        },
        "TagValue": {
            "type": "string"
        },
        "CreateApplicationInstanceResponse": {
            "type": "object",
            "properties": {
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                }
            }
        },
        "CreateJobForDevicesRequest": {
            "type": "object",
            "properties": {
                "DeviceIds": {
                    "$ref": "#/$defs/DeviceIdList"
                },
                "DeviceJobConfig": {
                    "$ref": "#/$defs/DeviceJobConfig"
                },
                "JobType": {
                    "$ref": "#/$defs/JobType"
                }
            }
        },
        "DeviceIdList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceId"
            }
        },
        "DeviceId": {
            "type": "string"
        },
        "DeviceJobConfig": {
            "type": "object",
            "properties": {
                "OTAJobConfig": {
                    "$ref": "#/$defs/OTAJobConfig"
                }
            }
        },
        "OTAJobConfig": {
            "type": "object",
            "properties": {
                "ImageVersion": {
                    "$ref": "#/$defs/ImageVersion"
                },
                "AllowMajorVersionUpdate": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "ImageVersion": {
            "type": "string"
        },
        "Boolean": {
            "type": "boolean"
        },
        "JobType": {
            "type": "string"
        },
        "CreateJobForDevicesResponse": {
            "type": "object",
            "properties": {
                "Jobs": {
                    "$ref": "#/$defs/JobList"
                }
            }
        },
        "JobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Job"
            }
        },
        "Job": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                }
            }
        },
        "JobId": {
            "type": "string"
        },
        "CreateNodeFromTemplateJobRequest": {
            "type": "object",
            "properties": {
                "TemplateType": {
                    "$ref": "#/$defs/TemplateType"
                },
                "OutputPackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "OutputPackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "NodeName": {
                    "$ref": "#/$defs/NodeName"
                },
                "NodeDescription": {
                    "$ref": "#/$defs/Description"
                },
                "TemplateParameters": {
                    "$ref": "#/$defs/TemplateParametersMap"
                },
                "JobTags": {
                    "$ref": "#/$defs/JobTagsList"
                }
            }
        },
        "TemplateType": {
            "type": "string"
        },
        "NodePackageName": {
            "type": "string"
        },
        "NodePackageVersion": {
            "type": "string"
        },
        "NodeName": {
            "type": "string"
        },
        "TemplateParametersMap": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/$defs/TemplateValue"
            }
        },
        "TemplateValue": {
            "type": "string"
        },
        "JobTagsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/JobResourceTags"
            }
        },
        "JobResourceTags": {
            "type": "object",
            "properties": {
                "ResourceType": {
                    "$ref": "#/$defs/JobResourceType"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "JobResourceType": {
            "type": "string"
        },
        "CreateNodeFromTemplateJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "CreatePackageRequest": {
            "type": "object",
            "properties": {
                "PackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "CreatePackageResponse": {
            "type": "object",
            "properties": {
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "Arn": {
                    "$ref": "#/$defs/NodePackageArn"
                },
                "StorageLocation": {
                    "$ref": "#/$defs/StorageLocation"
                }
            }
        },
        "NodePackageId": {
            "type": "string"
        },
        "NodePackageArn": {
            "type": "string"
        },
        "StorageLocation": {
            "type": "object",
            "properties": {
                "Bucket": {
                    "$ref": "#/$defs/Bucket"
                },
                "RepoPrefixLocation": {
                    "$ref": "#/$defs/Object"
                },
                "GeneratedPrefixLocation": {
                    "$ref": "#/$defs/Object"
                },
                "BinaryPrefixLocation": {
                    "$ref": "#/$defs/Object"
                },
                "ManifestPrefixLocation": {
                    "$ref": "#/$defs/Object"
                }
            }
        },
        "Bucket": {
            "type": "string"
        },
        "Object": {
            "type": "string"
        },
        "CreatePackageImportJobRequest": {
            "type": "object",
            "properties": {
                "JobType": {
                    "$ref": "#/$defs/PackageImportJobType"
                },
                "InputConfig": {
                    "$ref": "#/$defs/PackageImportJobInputConfig"
                },
                "OutputConfig": {
                    "$ref": "#/$defs/PackageImportJobOutputConfig"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "JobTags": {
                    "$ref": "#/$defs/JobTagsList"
                }
            }
        },
        "PackageImportJobType": {
            "type": "string"
        },
        "PackageImportJobInputConfig": {
            "type": "object",
            "properties": {
                "PackageVersionInputConfig": {
                    "$ref": "#/$defs/PackageVersionInputConfig"
                }
            }
        },
        "PackageVersionInputConfig": {
            "type": "object",
            "properties": {
                "S3Location": {
                    "$ref": "#/$defs/S3Location"
                }
            }
        },
        "S3Location": {
            "type": "object",
            "properties": {
                "Region": {
                    "$ref": "#/$defs/Region"
                },
                "BucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "ObjectKey": {
                    "$ref": "#/$defs/ObjectKey"
                }
            }
        },
        "Region": {
            "type": "string"
        },
        "BucketName": {
            "type": "string"
        },
        "ObjectKey": {
            "type": "string"
        },
        "PackageImportJobOutputConfig": {
            "type": "object",
            "properties": {
                "PackageVersionOutputConfig": {
                    "$ref": "#/$defs/PackageVersionOutputConfig"
                }
            }
        },
        "PackageVersionOutputConfig": {
            "type": "object",
            "properties": {
                "PackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "MarkLatest": {
                    "$ref": "#/$defs/MarkLatestPatch"
                }
            }
        },
        "MarkLatestPatch": {
            "type": "boolean"
        },
        "ClientToken": {
            "type": "string"
        },
        "CreatePackageImportJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DeleteDeviceRequest": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                }
            }
        },
        "DeleteDeviceResponse": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                }
            }
        },
        "DeletePackageRequest": {
            "type": "object",
            "properties": {
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "ForceDelete": {
                    "$ref": "#/$defs/Boolean"
                }
            }
        },
        "DeletePackageResponse": {
            "type": "object",
            "properties": {}
        },
        "DeregisterPackageVersionRequest": {
            "type": "object",
            "properties": {
                "OwnerAccount": {
                    "$ref": "#/$defs/PackageOwnerAccount"
                },
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "PatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                },
                "UpdatedLatestPatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                }
            }
        },
        "PackageOwnerAccount": {
            "type": "string"
        },
        "NodePackagePatchVersion": {
            "type": "string"
        },
        "DeregisterPackageVersionResponse": {
            "type": "object",
            "properties": {}
        },
        "DescribeApplicationInstanceRequest": {
            "type": "object",
            "properties": {
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                }
            }
        },
        "DescribeApplicationInstanceResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ApplicationInstanceName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "DefaultRuntimeContextDevice": {
                    "$ref": "#/$defs/DefaultRuntimeContextDevice"
                },
                "DefaultRuntimeContextDeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "ApplicationInstanceIdToReplace": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                },
                "RuntimeRoleArn": {
                    "$ref": "#/$defs/RuntimeRoleArn"
                },
                "Status": {
                    "$ref": "#/$defs/ApplicationInstanceStatus"
                },
                "HealthStatus": {
                    "$ref": "#/$defs/ApplicationInstanceHealthStatus"
                },
                "StatusDescription": {
                    "$ref": "#/$defs/ApplicationInstanceStatusDescription"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                },
                "Arn": {
                    "$ref": "#/$defs/ApplicationInstanceArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "RuntimeContextStates": {
                    "$ref": "#/$defs/ReportedRuntimeContextStates"
                }
            }
        },
        "DeviceName": {
            "type": "string"
        },
        "ApplicationInstanceStatus": {
            "type": "string"
        },
        "ApplicationInstanceHealthStatus": {
            "type": "string"
        },
        "ApplicationInstanceStatusDescription": {
            "type": "string"
        },
        "TimeStamp": {
            "type": "string",
            "format": "date-time"
        },
        "ApplicationInstanceArn": {
            "type": "string"
        },
        "ReportedRuntimeContextStates": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ReportedRuntimeContextState"
            }
        },
        "ReportedRuntimeContextState": {
            "type": "object",
            "properties": {
                "DesiredState": {
                    "$ref": "#/$defs/DesiredState"
                },
                "RuntimeContextName": {
                    "$ref": "#/$defs/RuntimeContextName"
                },
                "DeviceReportedStatus": {
                    "$ref": "#/$defs/DeviceReportedStatus"
                },
                "DeviceReportedTime": {
                    "$ref": "#/$defs/TimeStamp"
                }
            }
        },
        "DesiredState": {
            "type": "string"
        },
        "RuntimeContextName": {
            "type": "string"
        },
        "DeviceReportedStatus": {
            "type": "string"
        },
        "DescribeApplicationInstanceDetailsRequest": {
            "type": "object",
            "properties": {
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                }
            }
        },
        "DescribeApplicationInstanceDetailsResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ApplicationInstanceName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "DefaultRuntimeContextDevice": {
                    "$ref": "#/$defs/DefaultRuntimeContextDevice"
                },
                "ManifestPayload": {
                    "$ref": "#/$defs/ManifestPayload"
                },
                "ManifestOverridesPayload": {
                    "$ref": "#/$defs/ManifestOverridesPayload"
                },
                "ApplicationInstanceIdToReplace": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                }
            }
        },
        "DescribeDeviceRequest": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                }
            }
        },
        "DescribeDeviceResponse": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "Name": {
                    "$ref": "#/$defs/DeviceName"
                },
                "Arn": {
                    "$ref": "#/$defs/DeviceArn"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Type": {
                    "$ref": "#/$defs/DeviceType"
                },
                "DeviceConnectionStatus": {
                    "$ref": "#/$defs/DeviceConnectionStatus"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTime"
                },
                "ProvisioningStatus": {
                    "$ref": "#/$defs/DeviceStatus"
                },
                "LatestSoftware": {
                    "$ref": "#/$defs/LatestSoftware"
                },
                "CurrentSoftware": {
                    "$ref": "#/$defs/CurrentSoftware"
                },
                "SerialNumber": {
                    "$ref": "#/$defs/DeviceSerialNumber"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "NetworkingConfiguration": {
                    "$ref": "#/$defs/NetworkPayload"
                },
                "CurrentNetworkingStatus": {
                    "$ref": "#/$defs/NetworkStatus"
                },
                "LeaseExpirationTime": {
                    "$ref": "#/$defs/LeaseExpirationTime"
                },
                "AlternateSoftwares": {
                    "$ref": "#/$defs/AlternateSoftwares"
                },
                "LatestAlternateSoftware": {
                    "$ref": "#/$defs/LatestAlternateSoftware"
                },
                "Brand": {
                    "$ref": "#/$defs/DeviceBrand"
                },
                "LatestDeviceJob": {
                    "$ref": "#/$defs/LatestDeviceJob"
                },
                "DeviceAggregatedStatus": {
                    "$ref": "#/$defs/DeviceAggregatedStatus"
                }
            }
        },
        "DeviceArn": {
            "type": "string"
        },
        "DeviceType": {
            "type": "string"
        },
        "DeviceConnectionStatus": {
            "type": "string"
        },
        "CreatedTime": {
            "type": "string",
            "format": "date-time"
        },
        "DeviceStatus": {
            "type": "string"
        },
        "LatestSoftware": {
            "type": "string"
        },
        "CurrentSoftware": {
            "type": "string"
        },
        "DeviceSerialNumber": {
            "type": "string"
        },
        "NetworkPayload": {
            "type": "object",
            "properties": {
                "Ethernet0": {
                    "$ref": "#/$defs/EthernetPayload"
                },
                "Ethernet1": {
                    "$ref": "#/$defs/EthernetPayload"
                },
                "Ntp": {
                    "$ref": "#/$defs/NtpPayload"
                }
            }
        },
        "EthernetPayload": {
            "type": "object",
            "properties": {
                "ConnectionType": {
                    "$ref": "#/$defs/ConnectionType"
                },
                "StaticIpConnectionInfo": {
                    "$ref": "#/$defs/StaticIpConnectionInfo"
                }
            }
        },
        "ConnectionType": {
            "type": "string"
        },
        "StaticIpConnectionInfo": {
            "type": "object",
            "properties": {
                "IpAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "Mask": {
                    "$ref": "#/$defs/Mask"
                },
                "Dns": {
                    "$ref": "#/$defs/DnsList"
                },
                "DefaultGateway": {
                    "$ref": "#/$defs/DefaultGateway"
                }
            }
        },
        "IpAddress": {
            "type": "string"
        },
        "Mask": {
            "type": "string"
        },
        "DnsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Dns"
            }
        },
        "Dns": {
            "type": "string"
        },
        "DefaultGateway": {
            "type": "string"
        },
        "NtpPayload": {
            "type": "object",
            "properties": {
                "NtpServers": {
                    "$ref": "#/$defs/NtpServerList"
                }
            }
        },
        "NtpServerList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/IpAddressOrServerName"
            }
        },
        "IpAddressOrServerName": {
            "type": "string"
        },
        "NetworkStatus": {
            "type": "object",
            "properties": {
                "Ethernet0Status": {
                    "$ref": "#/$defs/EthernetStatus"
                },
                "Ethernet1Status": {
                    "$ref": "#/$defs/EthernetStatus"
                },
                "NtpStatus": {
                    "$ref": "#/$defs/NtpStatus"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/LastUpdatedTime"
                }
            }
        },
        "EthernetStatus": {
            "type": "object",
            "properties": {
                "IpAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "ConnectionStatus": {
                    "$ref": "#/$defs/NetworkConnectionStatus"
                },
                "HwAddress": {
                    "$ref": "#/$defs/HwAddress"
                }
            }
        },
        "NetworkConnectionStatus": {
            "type": "string"
        },
        "HwAddress": {
            "type": "string"
        },
        "NtpStatus": {
            "type": "object",
            "properties": {
                "ConnectionStatus": {
                    "$ref": "#/$defs/NetworkConnectionStatus"
                },
                "IpAddress": {
                    "$ref": "#/$defs/IpAddress"
                },
                "NtpServerName": {
                    "$ref": "#/$defs/NtpServerName"
                }
            }
        },
        "NtpServerName": {
            "type": "string"
        },
        "LastUpdatedTime": {
            "type": "string",
            "format": "date-time"
        },
        "LeaseExpirationTime": {
            "type": "string",
            "format": "date-time"
        },
        "AlternateSoftwares": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/AlternateSoftwareMetadata"
            }
        },
        "AlternateSoftwareMetadata": {
            "type": "object",
            "properties": {
                "Version": {
                    "$ref": "#/$defs/Version"
                }
            }
        },
        "Version": {
            "type": "string"
        },
        "LatestAlternateSoftware": {
            "type": "string"
        },
        "DeviceBrand": {
            "type": "string"
        },
        "LatestDeviceJob": {
            "type": "object",
            "properties": {
                "ImageVersion": {
                    "$ref": "#/$defs/ImageVersion"
                },
                "Status": {
                    "$ref": "#/$defs/UpdateProgress"
                },
                "JobType": {
                    "$ref": "#/$defs/JobType"
                }
            }
        },
        "UpdateProgress": {
            "type": "string"
        },
        "DeviceAggregatedStatus": {
            "type": "string"
        },
        "DescribeDeviceJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DescribeDeviceJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "DeviceArn": {
                    "$ref": "#/$defs/DeviceArn"
                },
                "DeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "DeviceType": {
                    "$ref": "#/$defs/DeviceType"
                },
                "ImageVersion": {
                    "$ref": "#/$defs/ImageVersion"
                },
                "Status": {
                    "$ref": "#/$defs/UpdateProgress"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/UpdateCreatedTime"
                },
                "JobType": {
                    "$ref": "#/$defs/JobType"
                }
            }
        },
        "UpdateCreatedTime": {
            "type": "string",
            "format": "date-time"
        },
        "DescribeNodeRequest": {
            "type": "object",
            "properties": {
                "NodeId": {
                    "$ref": "#/$defs/NodeId"
                },
                "OwnerAccount": {
                    "$ref": "#/$defs/PackageOwnerAccount"
                }
            }
        },
        "NodeId": {
            "type": "string"
        },
        "DescribeNodeResponse": {
            "type": "object",
            "properties": {
                "NodeId": {
                    "$ref": "#/$defs/NodeId"
                },
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Category": {
                    "$ref": "#/$defs/NodeCategory"
                },
                "OwnerAccount": {
                    "$ref": "#/$defs/PackageOwnerAccount"
                },
                "PackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "PackageArn": {
                    "$ref": "#/$defs/NodePackageArn"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "PatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                },
                "NodeInterface": {
                    "$ref": "#/$defs/NodeInterface"
                },
                "AssetName": {
                    "$ref": "#/$defs/NodeAssetName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/TimeStamp"
                }
            }
        },
        "NodeCategory": {
            "type": "string"
        },
        "NodeInterface": {
            "type": "object",
            "properties": {
                "Inputs": {
                    "$ref": "#/$defs/InputPortList"
                },
                "Outputs": {
                    "$ref": "#/$defs/OutputPortList"
                }
            }
        },
        "InputPortList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeInputPort"
            }
        },
        "NodeInputPort": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/PortName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Type": {
                    "$ref": "#/$defs/PortType"
                },
                "DefaultValue": {
                    "$ref": "#/$defs/PortDefaultValue"
                },
                "MaxConnections": {
                    "$ref": "#/$defs/MaxConnections"
                }
            }
        },
        "PortName": {
            "type": "string"
        },
        "PortType": {
            "type": "string"
        },
        "PortDefaultValue": {
            "type": "string"
        },
        "MaxConnections": {
            "type": "integer",
            "format": "int32"
        },
        "OutputPortList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeOutputPort"
            }
        },
        "NodeOutputPort": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/PortName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Type": {
                    "$ref": "#/$defs/PortType"
                }
            }
        },
        "NodeAssetName": {
            "type": "string"
        },
        "DescribeNodeFromTemplateJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DescribeNodeFromTemplateJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "Status": {
                    "$ref": "#/$defs/NodeFromTemplateJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/NodeFromTemplateJobStatusMessage"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTime"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/LastUpdatedTime"
                },
                "OutputPackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "OutputPackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "NodeName": {
                    "$ref": "#/$defs/NodeName"
                },
                "NodeDescription": {
                    "$ref": "#/$defs/Description"
                },
                "TemplateType": {
                    "$ref": "#/$defs/TemplateType"
                },
                "TemplateParameters": {
                    "$ref": "#/$defs/TemplateParametersMap"
                },
                "JobTags": {
                    "$ref": "#/$defs/JobTagsList"
                }
            }
        },
        "NodeFromTemplateJobStatus": {
            "type": "string"
        },
        "NodeFromTemplateJobStatusMessage": {
            "type": "string"
        },
        "DescribePackageRequest": {
            "type": "object",
            "properties": {
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                }
            }
        },
        "DescribePackageResponse": {
            "type": "object",
            "properties": {
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "PackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "Arn": {
                    "$ref": "#/$defs/NodePackageArn"
                },
                "StorageLocation": {
                    "$ref": "#/$defs/StorageLocation"
                },
                "ReadAccessPrincipalArns": {
                    "$ref": "#/$defs/PrincipalArnsList"
                },
                "WriteAccessPrincipalArns": {
                    "$ref": "#/$defs/PrincipalArnsList"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "PrincipalArnsList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PrincipalArn"
            }
        },
        "PrincipalArn": {
            "type": "string"
        },
        "DescribePackageImportJobRequest": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                }
            }
        },
        "DescribePackageImportJobResponse": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "ClientToken": {
                    "$ref": "#/$defs/ClientToken"
                },
                "JobType": {
                    "$ref": "#/$defs/PackageImportJobType"
                },
                "InputConfig": {
                    "$ref": "#/$defs/PackageImportJobInputConfig"
                },
                "OutputConfig": {
                    "$ref": "#/$defs/PackageImportJobOutputConfig"
                },
                "Output": {
                    "$ref": "#/$defs/PackageImportJobOutput"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTime"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/LastUpdatedTime"
                },
                "Status": {
                    "$ref": "#/$defs/PackageImportJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/PackageImportJobStatusMessage"
                },
                "JobTags": {
                    "$ref": "#/$defs/JobTagsList"
                }
            }
        },
        "PackageImportJobOutput": {
            "type": "object",
            "properties": {
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "PatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                },
                "OutputS3Location": {
                    "$ref": "#/$defs/OutPutS3Location"
                }
            }
        },
        "OutPutS3Location": {
            "type": "object",
            "properties": {
                "BucketName": {
                    "$ref": "#/$defs/BucketName"
                },
                "ObjectKey": {
                    "$ref": "#/$defs/ObjectKey"
                }
            }
        },
        "PackageImportJobStatus": {
            "type": "string"
        },
        "PackageImportJobStatusMessage": {
            "type": "string"
        },
        "DescribePackageVersionRequest": {
            "type": "object",
            "properties": {
                "OwnerAccount": {
                    "$ref": "#/$defs/PackageOwnerAccount"
                },
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "PatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                }
            }
        },
        "DescribePackageVersionResponse": {
            "type": "object",
            "properties": {
                "OwnerAccount": {
                    "$ref": "#/$defs/PackageOwnerAccount"
                },
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "PackageArn": {
                    "$ref": "#/$defs/NodePackageArn"
                },
                "PackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "PatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                },
                "IsLatestPatch": {
                    "$ref": "#/$defs/Boolean"
                },
                "Status": {
                    "$ref": "#/$defs/PackageVersionStatus"
                },
                "StatusDescription": {
                    "$ref": "#/$defs/PackageVersionStatusDescription"
                },
                "RegisteredTime": {
                    "$ref": "#/$defs/TimeStamp"
                }
            }
        },
        "PackageVersionStatus": {
            "type": "string"
        },
        "PackageVersionStatusDescription": {
            "type": "string"
        },
        "ListApplicationInstanceDependenciesRequest": {
            "type": "object",
            "properties": {
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize25"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "MaxSize25": {
            "type": "integer",
            "format": "int32"
        },
        "NextToken": {
            "type": "string"
        },
        "ListApplicationInstanceDependenciesResponse": {
            "type": "object",
            "properties": {
                "PackageObjects": {
                    "$ref": "#/$defs/PackageObjects"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PackageObjects": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageObject"
            }
        },
        "PackageObject": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "PatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                }
            }
        },
        "ListApplicationInstanceNodeInstancesRequest": {
            "type": "object",
            "properties": {
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize25"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ListApplicationInstanceNodeInstancesResponse": {
            "type": "object",
            "properties": {
                "NodeInstances": {
                    "$ref": "#/$defs/NodeInstances"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "NodeInstances": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeInstance"
            }
        },
        "NodeInstance": {
            "type": "object",
            "properties": {
                "NodeInstanceId": {
                    "$ref": "#/$defs/NodeInstanceId"
                },
                "NodeId": {
                    "$ref": "#/$defs/NodeId"
                },
                "PackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "PackagePatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                },
                "NodeName": {
                    "$ref": "#/$defs/NodeName"
                },
                "CurrentStatus": {
                    "$ref": "#/$defs/NodeInstanceStatus"
                }
            }
        },
        "NodeInstanceId": {
            "type": "string"
        },
        "NodeInstanceStatus": {
            "type": "string"
        },
        "ListApplicationInstancesRequest": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "StatusFilter": {
                    "$ref": "#/$defs/StatusFilter"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize25"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "StatusFilter": {
            "type": "string"
        },
        "ListApplicationInstancesResponse": {
            "type": "object",
            "properties": {
                "ApplicationInstances": {
                    "$ref": "#/$defs/ApplicationInstances"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "ApplicationInstances": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/ApplicationInstance"
            }
        },
        "ApplicationInstance": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/ApplicationInstanceName"
                },
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                },
                "DefaultRuntimeContextDevice": {
                    "$ref": "#/$defs/DefaultRuntimeContextDevice"
                },
                "DefaultRuntimeContextDeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Status": {
                    "$ref": "#/$defs/ApplicationInstanceStatus"
                },
                "HealthStatus": {
                    "$ref": "#/$defs/ApplicationInstanceHealthStatus"
                },
                "StatusDescription": {
                    "$ref": "#/$defs/ApplicationInstanceStatusDescription"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "Arn": {
                    "$ref": "#/$defs/ApplicationInstanceArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "RuntimeContextStates": {
                    "$ref": "#/$defs/ReportedRuntimeContextStates"
                }
            }
        },
        "ListDevicesRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize25"
                },
                "SortBy": {
                    "$ref": "#/$defs/ListDevicesSortBy"
                },
                "SortOrder": {
                    "$ref": "#/$defs/SortOrder"
                },
                "NameFilter": {
                    "$ref": "#/$defs/NameFilter"
                },
                "DeviceAggregatedStatusFilter": {
                    "$ref": "#/$defs/DeviceAggregatedStatus"
                }
            }
        },
        "ListDevicesSortBy": {
            "type": "string"
        },
        "SortOrder": {
            "type": "string"
        },
        "NameFilter": {
            "type": "string"
        },
        "ListDevicesResponse": {
            "type": "object",
            "properties": {
                "Devices": {
                    "$ref": "#/$defs/DeviceList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DeviceList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Device"
            }
        },
        "Device": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "Name": {
                    "$ref": "#/$defs/DeviceName"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTime"
                },
                "ProvisioningStatus": {
                    "$ref": "#/$defs/DeviceStatus"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/LastUpdatedTime"
                },
                "LeaseExpirationTime": {
                    "$ref": "#/$defs/LeaseExpirationTime"
                },
                "Brand": {
                    "$ref": "#/$defs/DeviceBrand"
                },
                "CurrentSoftware": {
                    "$ref": "#/$defs/CurrentSoftware"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "Type": {
                    "$ref": "#/$defs/DeviceType"
                },
                "LatestDeviceJob": {
                    "$ref": "#/$defs/LatestDeviceJob"
                },
                "DeviceAggregatedStatus": {
                    "$ref": "#/$defs/DeviceAggregatedStatus"
                }
            }
        },
        "ListDevicesJobsRequest": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize25"
                }
            }
        },
        "ListDevicesJobsResponse": {
            "type": "object",
            "properties": {
                "DeviceJobs": {
                    "$ref": "#/$defs/DeviceJobList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "DeviceJobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/DeviceJob"
            }
        },
        "DeviceJob": {
            "type": "object",
            "properties": {
                "DeviceName": {
                    "$ref": "#/$defs/DeviceName"
                },
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTime"
                },
                "JobType": {
                    "$ref": "#/$defs/JobType"
                }
            }
        },
        "ListNodeFromTemplateJobsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize25"
                }
            }
        },
        "ListNodeFromTemplateJobsResponse": {
            "type": "object",
            "properties": {
                "NodeFromTemplateJobs": {
                    "$ref": "#/$defs/NodeFromTemplateJobList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "NodeFromTemplateJobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeFromTemplateJob"
            }
        },
        "NodeFromTemplateJob": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "TemplateType": {
                    "$ref": "#/$defs/TemplateType"
                },
                "Status": {
                    "$ref": "#/$defs/NodeFromTemplateJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/NodeFromTemplateJobStatusMessage"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTime"
                },
                "NodeName": {
                    "$ref": "#/$defs/NodeName"
                }
            }
        },
        "ListNodesRequest": {
            "type": "object",
            "properties": {
                "Category": {
                    "$ref": "#/$defs/NodeCategory"
                },
                "OwnerAccount": {
                    "$ref": "#/$defs/PackageOwnerAccount"
                },
                "PackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "PatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize25"
                }
            }
        },
        "Token": {
            "type": "string"
        },
        "ListNodesResponse": {
            "type": "object",
            "properties": {
                "Nodes": {
                    "$ref": "#/$defs/NodesList"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "NodesList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/Node"
            }
        },
        "Node": {
            "type": "object",
            "properties": {
                "NodeId": {
                    "$ref": "#/$defs/NodeId"
                },
                "Name": {
                    "$ref": "#/$defs/NodeName"
                },
                "Category": {
                    "$ref": "#/$defs/NodeCategory"
                },
                "OwnerAccount": {
                    "$ref": "#/$defs/PackageOwnerAccount"
                },
                "PackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "PackageArn": {
                    "$ref": "#/$defs/NodePackageArn"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "PatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/TimeStamp"
                }
            }
        },
        "ListPackageImportJobsRequest": {
            "type": "object",
            "properties": {
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                },
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize25"
                }
            }
        },
        "ListPackageImportJobsResponse": {
            "type": "object",
            "properties": {
                "PackageImportJobs": {
                    "$ref": "#/$defs/PackageImportJobList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PackageImportJobList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageImportJob"
            }
        },
        "PackageImportJob": {
            "type": "object",
            "properties": {
                "JobId": {
                    "$ref": "#/$defs/JobId"
                },
                "JobType": {
                    "$ref": "#/$defs/PackageImportJobType"
                },
                "Status": {
                    "$ref": "#/$defs/PackageImportJobStatus"
                },
                "StatusMessage": {
                    "$ref": "#/$defs/PackageImportJobStatusMessage"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/CreatedTime"
                },
                "LastUpdatedTime": {
                    "$ref": "#/$defs/LastUpdatedTime"
                }
            }
        },
        "ListPackagesRequest": {
            "type": "object",
            "properties": {
                "MaxResults": {
                    "$ref": "#/$defs/MaxSize25"
                },
                "NextToken": {
                    "$ref": "#/$defs/Token"
                }
            }
        },
        "ListPackagesResponse": {
            "type": "object",
            "properties": {
                "Packages": {
                    "$ref": "#/$defs/PackageList"
                },
                "NextToken": {
                    "$ref": "#/$defs/NextToken"
                }
            }
        },
        "PackageList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/PackageListItem"
            }
        },
        "PackageListItem": {
            "type": "object",
            "properties": {
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "PackageName": {
                    "$ref": "#/$defs/NodePackageName"
                },
                "Arn": {
                    "$ref": "#/$defs/NodePackageArn"
                },
                "CreatedTime": {
                    "$ref": "#/$defs/TimeStamp"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ListTagsForResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                }
            }
        },
        "ResourceArn": {
            "type": "string"
        },
        "ListTagsForResourceResponse": {
            "type": "object",
            "properties": {
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "ProvisionDeviceRequest": {
            "type": "object",
            "properties": {
                "Name": {
                    "$ref": "#/$defs/DeviceName"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                },
                "NetworkingConfiguration": {
                    "$ref": "#/$defs/NetworkPayload"
                }
            }
        },
        "ProvisionDeviceResponse": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "Arn": {
                    "$ref": "#/$defs/DeviceArn"
                },
                "Status": {
                    "$ref": "#/$defs/DeviceStatus"
                },
                "Certificates": {
                    "$ref": "#/$defs/Certificates"
                },
                "IotThingName": {
                    "$ref": "#/$defs/IotThingName"
                }
            }
        },
        "Certificates": {
            "type": "string",
            "format": "binary"
        },
        "IotThingName": {
            "type": "string"
        },
        "RegisterPackageVersionRequest": {
            "type": "object",
            "properties": {
                "OwnerAccount": {
                    "$ref": "#/$defs/PackageOwnerAccount"
                },
                "PackageId": {
                    "$ref": "#/$defs/NodePackageId"
                },
                "PackageVersion": {
                    "$ref": "#/$defs/NodePackageVersion"
                },
                "PatchVersion": {
                    "$ref": "#/$defs/NodePackagePatchVersion"
                },
                "MarkLatest": {
                    "$ref": "#/$defs/MarkLatestPatch"
                }
            }
        },
        "RegisterPackageVersionResponse": {
            "type": "object",
            "properties": {}
        },
        "RemoveApplicationInstanceRequest": {
            "type": "object",
            "properties": {
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                }
            }
        },
        "RemoveApplicationInstanceResponse": {
            "type": "object",
            "properties": {}
        },
        "SignalApplicationInstanceNodeInstancesRequest": {
            "type": "object",
            "properties": {
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                },
                "NodeSignals": {
                    "$ref": "#/$defs/NodeSignalList"
                }
            }
        },
        "NodeSignalList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/NodeSignal"
            }
        },
        "NodeSignal": {
            "type": "object",
            "properties": {
                "NodeInstanceId": {
                    "$ref": "#/$defs/NodeInstanceId"
                },
                "Signal": {
                    "$ref": "#/$defs/NodeSignalValue"
                }
            }
        },
        "NodeSignalValue": {
            "type": "string"
        },
        "SignalApplicationInstanceNodeInstancesResponse": {
            "type": "object",
            "properties": {
                "ApplicationInstanceId": {
                    "$ref": "#/$defs/ApplicationInstanceId"
                }
            }
        },
        "TagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "Tags": {
                    "$ref": "#/$defs/TagMap"
                }
            }
        },
        "TagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UntagResourceRequest": {
            "type": "object",
            "properties": {
                "ResourceArn": {
                    "$ref": "#/$defs/ResourceArn"
                },
                "TagKeys": {
                    "$ref": "#/$defs/TagKeyList"
                }
            }
        },
        "TagKeyList": {
            "type": "array",
            "items": {
                "$ref": "#/$defs/TagKey"
            }
        },
        "TagKey": {
            "type": "string"
        },
        "UntagResourceResponse": {
            "type": "object",
            "properties": {}
        },
        "UpdateDeviceMetadataRequest": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                },
                "Description": {
                    "$ref": "#/$defs/Description"
                }
            }
        },
        "UpdateDeviceMetadataResponse": {
            "type": "object",
            "properties": {
                "DeviceId": {
                    "$ref": "#/$defs/DeviceId"
                }
            }
        }
    },
    "aws": {
        "endpoint": {
            "version": "1.0",
            "parameters": {
                "Region": {
                    "builtIn": "AWS::Region",
                    "required": false,
                    "documentation": "The AWS region used to dispatch the request.",
                    "type": "String"
                },
                "UseDualStack": {
                    "builtIn": "AWS::UseDualStack",
                    "required": true,
                    "default": false,
                    "documentation": "When true, use the dual-stack endpoint. If the configured endpoint does not support dual-stack, dispatching the request MAY return an error.",
                    "type": "Boolean"
                },
                "UseFIPS": {
                    "builtIn": "AWS::UseFIPS",
                    "required": true,
                    "default": false,
                    "documentation": "When true, send this request to the FIPS-compliant regional endpoint. If the configured endpoint does not have a FIPS compliant endpoint, dispatching the request will return an error.",
                    "type": "Boolean"
                },
                "Endpoint": {
                    "builtIn": "SDK::Endpoint",
                    "required": false,
                    "documentation": "Override the endpoint used to send this request",
                    "type": "String"
                }
            },
            "rules": [
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Endpoint"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseFIPS"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: FIPS and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [
                                {
                                    "fn": "booleanEquals",
                                    "argv": [
                                        {
                                            "ref": "UseDualStack"
                                        },
                                        true
                                    ]
                                }
                            ],
                            "error": "Invalid Configuration: Dualstack and custom endpoint are not supported",
                            "type": "error"
                        },
                        {
                            "conditions": [],
                            "endpoint": {
                                "url": {
                                    "ref": "Endpoint"
                                },
                                "properties": {},
                                "headers": {}
                            },
                            "type": "endpoint"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [
                        {
                            "fn": "isSet",
                            "argv": [
                                {
                                    "ref": "Region"
                                }
                            ]
                        }
                    ],
                    "rules": [
                        {
                            "conditions": [
                                {
                                    "fn": "aws.partition",
                                    "argv": [
                                        {
                                            "ref": "Region"
                                        }
                                    ],
                                    "assign": "PartitionResult"
                                }
                            ],
                            "rules": [
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        },
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://panorama-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS and DualStack are enabled, but this partition does not support one or both",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseFIPS"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsFIPS"
                                                            ]
                                                        },
                                                        true
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://panorama-fips.{Region}.{PartitionResult#dnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "FIPS is enabled but this partition does not support FIPS",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [
                                        {
                                            "fn": "booleanEquals",
                                            "argv": [
                                                {
                                                    "ref": "UseDualStack"
                                                },
                                                true
                                            ]
                                        }
                                    ],
                                    "rules": [
                                        {
                                            "conditions": [
                                                {
                                                    "fn": "booleanEquals",
                                                    "argv": [
                                                        true,
                                                        {
                                                            "fn": "getAttr",
                                                            "argv": [
                                                                {
                                                                    "ref": "PartitionResult"
                                                                },
                                                                "supportsDualStack"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "rules": [
                                                {
                                                    "conditions": [],
                                                    "endpoint": {
                                                        "url": "https://panorama.{Region}.{PartitionResult#dualStackDnsSuffix}",
                                                        "properties": {},
                                                        "headers": {}
                                                    },
                                                    "type": "endpoint"
                                                }
                                            ],
                                            "type": "tree"
                                        },
                                        {
                                            "conditions": [],
                                            "error": "DualStack is enabled but this partition does not support DualStack",
                                            "type": "error"
                                        }
                                    ],
                                    "type": "tree"
                                },
                                {
                                    "conditions": [],
                                    "endpoint": {
                                        "url": "https://panorama.{Region}.{PartitionResult#dnsSuffix}",
                                        "properties": {},
                                        "headers": {}
                                    },
                                    "type": "endpoint"
                                }
                            ],
                            "type": "tree"
                        }
                    ],
                    "type": "tree"
                },
                {
                    "conditions": [],
                    "error": "Invalid Configuration: Missing Region",
                    "type": "error"
                }
            ]
        }
    }
}