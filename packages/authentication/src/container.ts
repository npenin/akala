//eslint-disable-next-line @typescript-eslint/ban-ts-comment
//@ts-ignore 6133
//eslint-disable-next-line @typescript-eslint/no-unused-vars
import type {Arguments, Argument0, Argument1, Argument2, Argument3, Argument4, Argument5, Argument6, Argument7, Argument8, Argument9, Argument10, Argument11, Argument12, Argument13, Argument14, Argument15, Argument16, Argument17 } from '@akala/core';
import {Metadata, type ICommandProcessor, Container, registerCommands} from "@akala/commands";
// eslint-disable-next-line @typescript-eslint/no-namespace
namespace commands
{
	export interface container 
	{
		dispatch (cmd:'$disconnect', ...args: [Argument0<typeof import('./server/commands/$disconnect.ts').default>]): ReturnType<typeof import('./server/commands/$disconnect.ts').default>
		dispatch (cmd:'$init', ...args: [Argument2<typeof import('./server/commands/$init.ts').default>, Argument3<typeof import('./server/commands/$init.ts').default>, Argument4<typeof import('./server/commands/$init.ts').default>]): ReturnType<typeof import('./server/commands/$init.ts').default>
		dispatch (cmd:'$request', ...args: [Argument0<typeof import('./server/commands/$request.ts').default>]): ReturnType<typeof import('./server/commands/$request.ts').default>
		dispatch (cmd:'add-token', ...args: [Argument0<typeof import('./server/commands/add-token.ts').default>, Argument1<typeof import('./server/commands/add-token.ts').default>, Argument2<typeof import('./server/commands/add-token.ts').default>, Argument3<typeof import('./server/commands/add-token.ts').default>]): ReturnType<typeof import('./server/commands/add-token.ts').default>
		dispatch (cmd:'client.add', ...args: [Argument0<typeof import('./server/commands/client/add.ts').default>, Argument1<typeof import('./server/commands/client/add.ts').default>, Argument2<typeof import('./server/commands/client/add.ts').default>, Argument3<typeof import('./server/commands/client/add.ts').default>, Argument4<typeof import('./server/commands/client/add.ts').default>]): ReturnType<typeof import('./server/commands/client/add.ts').default>
		dispatch (cmd:'client.delete', ...args: [Argument0<typeof import('./server/commands/client/delete.ts').default>]): ReturnType<typeof import('./server/commands/client/delete.ts').default>
		dispatch (cmd:'client.renew-secret', ...args: [Argument0<typeof import('./server/commands/client/renew-secret.ts').default>, Argument1<typeof import('./server/commands/client/renew-secret.ts').default>]): ReturnType<typeof import('./server/commands/client/renew-secret.ts').default>
		dispatch (cmd:'client.request-grant', ...args: [Argument0<typeof import('./server/commands/client/request-grant.ts').default>, Argument1<typeof import('./server/commands/client/request-grant.ts').default>, Argument2<typeof import('./server/commands/client/request-grant.ts').default>, Argument3<typeof import('./server/commands/client/request-grant.ts').default>, Argument4<typeof import('./server/commands/client/request-grant.ts').default>]): ReturnType<typeof import('./server/commands/client/request-grant.ts').default>
		dispatch (cmd:'client.update', ...args: [Argument0<typeof import('./server/commands/client/update.ts').default>, Argument1<typeof import('./server/commands/client/update.ts').default>]): ReturnType<typeof import('./server/commands/client/update.ts').default>
		dispatch (cmd:'extend-token', ...args: [Argument0<typeof import('./server/commands/extend-token.ts').default>, Argument1<typeof import('./server/commands/extend-token.ts').default>]): ReturnType<typeof import('./server/commands/extend-token.ts').default>
		dispatch (cmd:'getJWT', ...args: [Argument0<typeof import('./server/commands/getJWT.ts').default>, Argument1<typeof import('./server/commands/getJWT.ts').default>, Argument2<typeof import('./server/commands/getJWT.ts').default>, Argument3<typeof import('./server/commands/getJWT.ts').default>, Argument4<typeof import('./server/commands/getJWT.ts').default>]): ReturnType<typeof import('./server/commands/getJWT.ts').default>
		dispatch (cmd:'login', ...args: [Argument0<typeof import('./server/commands/login.ts').default>, Argument1<typeof import('./server/commands/login.ts').default>, Argument2<typeof import('./server/commands/login.ts').default>]): ReturnType<typeof import('./server/commands/login.ts').default>
		dispatch (cmd:'remove-token', ...args: [Argument0<typeof import('./server/commands/remove-token.ts').default>]): ReturnType<typeof import('./server/commands/remove-token.ts').default>
		dispatch (cmd:'session.add-session', ...args: [Argument0<typeof import('./server/commands/session/add-session.ts').default>, Argument1<typeof import('./server/commands/session/add-session.ts').default>, Argument2<typeof import('./server/commands/session/add-session.ts').default>, Argument3<typeof import('./server/commands/session/add-session.ts').default>, Argument4<typeof import('./server/commands/session/add-session.ts').default>]): ReturnType<typeof import('./server/commands/session/add-session.ts').default>
		dispatch (cmd:'session.extend-session', ...args: [Argument0<typeof import('./server/commands/session/extend-session.ts').default>, Argument1<typeof import('./server/commands/session/extend-session.ts').default>]): ReturnType<typeof import('./server/commands/session/extend-session.ts').default>
		dispatch (cmd:'session.remove-session', ...args: [Argument0<typeof import('./server/commands/session/remove-session.ts').default>]): ReturnType<typeof import('./server/commands/session/remove-session.ts').default>
		dispatch (cmd:'user.add-user', ...args: [Argument0<typeof import('./server/commands/user/add-user.ts').default>, Argument1<typeof import('./server/commands/user/add-user.ts').default>]): ReturnType<typeof import('./server/commands/user/add-user.ts').default>
		dispatch (cmd:'user.change-password', ...args: [Argument0<typeof import('./server/commands/user/change-password.ts').default>, Argument1<typeof import('./server/commands/user/change-password.ts').default>]): ReturnType<typeof import('./server/commands/user/change-password.ts').default>
		dispatch (cmd:'user.disable-user', ...args: [Argument0<typeof import('./server/commands/user/disable-user.ts').default>]): ReturnType<typeof import('./server/commands/user/disable-user.ts').default>
		dispatch (cmd:'user.enable-user', ...args: [Argument0<typeof import('./server/commands/user/enable-user.ts').default>]): ReturnType<typeof import('./server/commands/user/enable-user.ts').default>
		dispatch (cmd:'user.remove-user', ...args: [Argument0<typeof import('./server/commands/user/remove-user.ts').default>]): ReturnType<typeof import('./server/commands/user/remove-user.ts').default>
		dispatch (cmd:'user.request-reset-password', ...args: [Argument0<typeof import('./server/commands/user/request-reset-password.ts').default>]): ReturnType<typeof import('./server/commands/user/request-reset-password.ts').default>
		dispatch (cmd:'user.reset-password', ...args: [Argument0<typeof import('./server/commands/user/reset-password.ts').default>, Argument1<typeof import('./server/commands/user/reset-password.ts').default>, Argument2<typeof import('./server/commands/user/reset-password.ts').default>]): ReturnType<typeof import('./server/commands/user/reset-password.ts').default>
		dispatch (cmd:'whoami', ...args: []): ReturnType<typeof import('./server/commands/whoami.ts').default>
	}
	export interface proxy 
	{
		'$disconnect'(...args: [Argument0<typeof import('./server/commands/$disconnect.ts').default>]): ReturnType<typeof import('./server/commands/$disconnect.ts').default>
		'$init'(...args: [Argument2<typeof import('./server/commands/$init.ts').default>, Argument3<typeof import('./server/commands/$init.ts').default>, Argument4<typeof import('./server/commands/$init.ts').default>]): ReturnType<typeof import('./server/commands/$init.ts').default>
		'$request'(...args: [Argument0<typeof import('./server/commands/$request.ts').default>]): ReturnType<typeof import('./server/commands/$request.ts').default>
		'add-token'(...args: [Argument0<typeof import('./server/commands/add-token.ts').default>, Argument1<typeof import('./server/commands/add-token.ts').default>, Argument2<typeof import('./server/commands/add-token.ts').default>, Argument3<typeof import('./server/commands/add-token.ts').default>]): ReturnType<typeof import('./server/commands/add-token.ts').default>
		'client.add'(...args: [Argument0<typeof import('./server/commands/client/add.ts').default>, Argument1<typeof import('./server/commands/client/add.ts').default>, Argument2<typeof import('./server/commands/client/add.ts').default>, Argument3<typeof import('./server/commands/client/add.ts').default>, Argument4<typeof import('./server/commands/client/add.ts').default>]): ReturnType<typeof import('./server/commands/client/add.ts').default>
		'client.delete'(...args: [Argument0<typeof import('./server/commands/client/delete.ts').default>]): ReturnType<typeof import('./server/commands/client/delete.ts').default>
		'client.renew-secret'(...args: [Argument0<typeof import('./server/commands/client/renew-secret.ts').default>, Argument1<typeof import('./server/commands/client/renew-secret.ts').default>]): ReturnType<typeof import('./server/commands/client/renew-secret.ts').default>
		'client.request-grant'(...args: [Argument0<typeof import('./server/commands/client/request-grant.ts').default>, Argument1<typeof import('./server/commands/client/request-grant.ts').default>, Argument2<typeof import('./server/commands/client/request-grant.ts').default>, Argument3<typeof import('./server/commands/client/request-grant.ts').default>, Argument4<typeof import('./server/commands/client/request-grant.ts').default>]): ReturnType<typeof import('./server/commands/client/request-grant.ts').default>
		'client.update'(...args: [Argument0<typeof import('./server/commands/client/update.ts').default>, Argument1<typeof import('./server/commands/client/update.ts').default>]): ReturnType<typeof import('./server/commands/client/update.ts').default>
		'extend-token'(...args: [Argument0<typeof import('./server/commands/extend-token.ts').default>, Argument1<typeof import('./server/commands/extend-token.ts').default>]): ReturnType<typeof import('./server/commands/extend-token.ts').default>
		'getJWT'(...args: [Argument0<typeof import('./server/commands/getJWT.ts').default>, Argument1<typeof import('./server/commands/getJWT.ts').default>, Argument2<typeof import('./server/commands/getJWT.ts').default>, Argument3<typeof import('./server/commands/getJWT.ts').default>, Argument4<typeof import('./server/commands/getJWT.ts').default>]): ReturnType<typeof import('./server/commands/getJWT.ts').default>
		'login'(...args: [Argument0<typeof import('./server/commands/login.ts').default>, Argument1<typeof import('./server/commands/login.ts').default>, Argument2<typeof import('./server/commands/login.ts').default>]): ReturnType<typeof import('./server/commands/login.ts').default>
		'remove-token'(...args: [Argument0<typeof import('./server/commands/remove-token.ts').default>]): ReturnType<typeof import('./server/commands/remove-token.ts').default>
		'session.add-session'(...args: [Argument0<typeof import('./server/commands/session/add-session.ts').default>, Argument1<typeof import('./server/commands/session/add-session.ts').default>, Argument2<typeof import('./server/commands/session/add-session.ts').default>, Argument3<typeof import('./server/commands/session/add-session.ts').default>, Argument4<typeof import('./server/commands/session/add-session.ts').default>]): ReturnType<typeof import('./server/commands/session/add-session.ts').default>
		'session.extend-session'(...args: [Argument0<typeof import('./server/commands/session/extend-session.ts').default>, Argument1<typeof import('./server/commands/session/extend-session.ts').default>]): ReturnType<typeof import('./server/commands/session/extend-session.ts').default>
		'session.remove-session'(...args: [Argument0<typeof import('./server/commands/session/remove-session.ts').default>]): ReturnType<typeof import('./server/commands/session/remove-session.ts').default>
		'user.add-user'(...args: [Argument0<typeof import('./server/commands/user/add-user.ts').default>, Argument1<typeof import('./server/commands/user/add-user.ts').default>]): ReturnType<typeof import('./server/commands/user/add-user.ts').default>
		'user.change-password'(...args: [Argument0<typeof import('./server/commands/user/change-password.ts').default>, Argument1<typeof import('./server/commands/user/change-password.ts').default>]): ReturnType<typeof import('./server/commands/user/change-password.ts').default>
		'user.disable-user'(...args: [Argument0<typeof import('./server/commands/user/disable-user.ts').default>]): ReturnType<typeof import('./server/commands/user/disable-user.ts').default>
		'user.enable-user'(...args: [Argument0<typeof import('./server/commands/user/enable-user.ts').default>]): ReturnType<typeof import('./server/commands/user/enable-user.ts').default>
		'user.remove-user'(...args: [Argument0<typeof import('./server/commands/user/remove-user.ts').default>]): ReturnType<typeof import('./server/commands/user/remove-user.ts').default>
		'user.request-reset-password'(...args: [Argument0<typeof import('./server/commands/user/request-reset-password.ts').default>]): ReturnType<typeof import('./server/commands/user/request-reset-password.ts').default>
		'user.reset-password'(...args: [Argument0<typeof import('./server/commands/user/reset-password.ts').default>, Argument1<typeof import('./server/commands/user/reset-password.ts').default>, Argument2<typeof import('./server/commands/user/reset-password.ts').default>]): ReturnType<typeof import('./server/commands/user/reset-password.ts').default>
		'whoami'(...args: []): ReturnType<typeof import('./server/commands/whoami.ts').default>
	}
   export const meta={"name":"auth","commands":[{"name":"$disconnect","config":{"fs":{"path":"dist/esm/server/commands/$disconnect.js","source":"src/server/commands/$disconnect.ts","inject":["params.0"]},"jsonrpc":{"inject":["connectionId"]},"":{"inject":[]}}},{"name":"$init","config":{"fs":{"path":"dist/esm/server/commands/$init.js","source":"src/server/commands/$init.ts","inject":["ignore","$container","params.0","params.1","params.2"]},"":{"inject":["config","$container","params.0","params.1","params.2"]},"server":{"inject":["config","$container","config.auth.provider","config.auth.keyPath","config.auth.loginUrl","router"]},"cli":{"inject":["context.state","$container","options.provider","options.key","options.loginUrl","router"],"options":{"provider":{"needsValue":true},"providerOptions":{"needsValue":true},"key":{"needsValue":true},"loginUrl":{"needsValue":true}}}}},{"name":"$request","config":{"fs":{"path":"dist/esm/server/commands/$request.js","source":"src/server/commands/$request.ts","inject":["params.0"]},"":{"inject":["params.0"]}}},{"name":"add-token","config":{"fs":{"path":"dist/esm/server/commands/add-token.js","source":"src/server/commands/add-token.ts","inject":["params.0","params.1","params.2","params.3"]},"":{"inject":["params.0","params.1","params.2","params.3"]}}},{"name":"client.add","config":{"fs":{"path":"dist/esm/server/commands/client/add.js","source":"src/server/commands/client/add.ts","inject":["params.0","params.1","params.2","params.3","params.4"]},"":{"inject":["params.0","params.1","params.2","params.3","params.4"]}}},{"name":"client.delete","config":{"fs":{"path":"dist/esm/server/commands/client/delete.js","source":"src/server/commands/client/delete.ts","inject":["params.0"]},"":{"inject":["params.0"]}}},{"name":"client.renew-secret","config":{"fs":{"path":"dist/esm/server/commands/client/renew-secret.js","source":"src/server/commands/client/renew-secret.ts","inject":["params.0","params.1"]},"":{"inject":["params.0","params.1"]}}},{"name":"client.request-grant","config":{"fs":{"path":"dist/esm/server/commands/client/request-grant.js","source":"src/server/commands/client/request-grant.ts","inject":["params.0","params.1","params.2","params.3","params.4"]},"":{"inject":["params.0","params.1","params.2","params.3","params.4"]}}},{"name":"client.update","config":{"fs":{"path":"dist/esm/server/commands/client/update.js","source":"src/server/commands/client/update.ts","inject":["params.0","params.1"]},"":{"inject":["params.0","params.1"]}}},{"name":"extend-token","config":{"fs":{"path":"dist/esm/server/commands/extend-token.js","source":"src/server/commands/extend-token.ts","inject":["params.0","params.1"]},"":{"inject":["params.0","params.1"]}}},{"name":"getJWT","config":{"fs":{"path":"dist/esm/server/commands/getJWT.js","source":"src/server/commands/getJWT.ts","inject":["params.0","params.1","params.2","params.3","params.4"]},"":{"inject":["params.0","params.1","params.2","params.3","params.4"]}}},{"name":"login","config":{"fs":{"path":"dist/esm/server/commands/login.js","source":"src/server/commands/login.ts","inject":["params.0","params.1","params.2"]},"http":{"inject":["body.username","body.password","body.deviceId"],"route":"/login","method":"post"},"jsonrpc":{"inject":["params.0","params.1","params.2","connectionId"]},"":{"inject":["params.0","params.1","params.2"]},"html":{"inject":["form.username","form.password","form.deviceId"]}}},{"name":"remove-token","config":{"fs":{"path":"dist/esm/server/commands/remove-token.js","source":"src/server/commands/remove-token.ts","inject":["params.0"]},"":{"inject":["params.0"]}}},{"name":"session.add-session","config":{"fs":{"path":"dist/esm/server/commands/session/add-session.js","source":"src/server/commands/session/add-session.ts","inject":["params.0","params.1","params.2","params.3","params.4"]},"":{"inject":["params.0","params.1","params.2","params.3","params.4"]}}},{"name":"session.extend-session","config":{"fs":{"path":"dist/esm/server/commands/session/extend-session.js","source":"src/server/commands/session/extend-session.ts","inject":["params.0","params.1"]},"":{"inject":["params.0","params.1"]}}},{"name":"session.remove-session","config":{"fs":{"path":"dist/esm/server/commands/session/remove-session.js","source":"src/server/commands/session/remove-session.ts","inject":["params.0"]},"":{"inject":["params.0"]}}},{"name":"user.add-user","config":{"fs":{"inject":["params.0","params.1"],"path":"dist/esm/server/commands/user/add-user.js","source":"src/server/commands/user/add-user.ts"},"http":{"inject":["body.username","body.password"],"type":"json","auth":{},"route":"/signup","method":"post"},"":{"inject":["params.0","params.1"]},"html":{"inject":["form.username","form.password"]}}},{"name":"user.change-password","config":{"fs":{"path":"dist/esm/server/commands/user/change-password.js","source":"src/server/commands/user/change-password.ts","inject":["params.0","params.1"]},"":{"inject":["params.0","params.1"]},"http":{"bindings":{"user":{"source":"$state.store.User","where":{"name":"body.username"}}},"inject":["auth","body.password"],"type":"json","auth":{"required":true,"mode":"body","inject":["bindings.user","body.oldPassword"]},"route":"/update-password","method":"post"},"html":{"inject":["form.username","form.password","form.oldPassword"]}}},{"name":"user.disable-user","config":{"fs":{"path":"dist/esm/server/commands/user/disable-user.js","source":"src/server/commands/user/disable-user.ts","inject":["params.0"]},"":{"inject":["params.0"]}}},{"name":"user.enable-user","config":{"fs":{"path":"dist/esm/server/commands/user/enable-user.js","source":"src/server/commands/user/enable-user.ts","inject":["params.0"]},"":{"inject":["params.0"]}}},{"name":"user.remove-user","config":{"fs":{"path":"dist/esm/server/commands/user/remove-user.js","source":"src/server/commands/user/remove-user.ts","inject":["params.0"]},"":{"inject":["params.0"]}}},{"name":"user.request-reset-password","config":{"fs":{"path":"dist/esm/server/commands/user/request-reset-password.js","source":"src/server/commands/user/request-reset-password.ts","inject":["params.0"]},"":{"inject":["params.0"]}}},{"name":"user.reset-password","config":{"fs":{"path":"dist/esm/server/commands/user/reset-password.js","source":"src/server/commands/user/reset-password.ts","inject":["params.0","params.1","params.2"]},"":{"inject":["params.0","params.1","params.2"]}}},{"name":"whoami","config":{"fs":{"path":"dist/esm/server/commands/whoami.js","source":"src/server/commands/whoami.ts","inject":["ignore","ignore"]},"auth":{"":{"inject":["auth.sessionId","auth.sessionSignature"]},"required":true},"":{"inject":["_trigger","auth.sessionId"]},"jsonrpc":{"inject":["_trigger","connectionId"]}}}],"$schema":"https://raw.githubusercontent.com/npenin/akala/main/packages/commands/container-schema.json"} as Metadata.Container;

   export function connect(processor?:ICommandProcessor) {
            const container = new Container<void>("commands", void 0);
            registerCommands(meta.commands, processor, container);
            return container as container & Container<void>;
        }
}

export { commands as default };