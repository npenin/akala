@use 'text-input.scss';
@use 'checkbox.scss';
@use 'radiobutton.scss';
@use '../colors.scss';
@use '../buttons.scss';
@use '../layout.scss';

@mixin form($config, $colorScheme) {

    fieldset {
        margin-inline: 0;
        padding: var(--gutter);

        .form-control {
            @include layout.horizontal;

            input,
            select,
            textarea {
                flex-grow: 1;
            }
        }
    }

    input,
    select,
    textarea,
    fieldset {
        border-radius: var(--border-radius);
        --border-color: var(--grey);
        border-color: var(--border-color);
        background-color: var(--background-color);

        @if $colorScheme=='light' {
            --background-color: var(--light);
        }

        @else {
            --background-color: var(--dark);
        }
    }

    input,
    select,
    textarea {

        padding: var(--gutter);
        transition: all ease-in-out 0.1s;
        @content;

        &:hover:enabled,
        &.hovered:enabled {
            --border-color: var(--interact);
        }

        &::placeholder {
            color: var(--placeholder);
        }

        &:disabled {
            --background-color: var(--disabled-lighter);
            --border-color: var(--disabled-lighter);
            --color: var(--disabled-max-contrast);

            &::placeholder {
                color: var(--disabled);
            }
        }

        &:focus-visible {
            outline: none;
            --border-color: var(--interact);
        }

        color: var(--color);
        border: 1px solid var(--border-color);
    }

    @include checkbox.checkbox($config, $colorScheme);
    @include radiobutton.radio($colorScheme);

    input[type="reset"] {
        @include buttons.buttons(interact, $config, false, $colorScheme);
    }

    input[type="submit"] {
        @include buttons.buttons(interact, $config, true, $colorScheme);
    }
}

@mixin form-control-with-placeholder-label {
    .form-control {
        position: relative;

        >label {
            position: absolute;
            color: var(--grey-darker);
            top: calc(var(--gutter) / 2);
            left: calc(var(--gutter) / 2);
            transition: all 0.3s;
            background-color: var(--background-color);
            padding: 0 calc(var(--gutter) / 2);

            &:has(+input:focus-visible),
            &:has(+input:not(:placeholder-shown)) {
                top: calc(var(--gutter) * -1 + 0.3em);
                font-size: smaller;
                color: var(--body-color);
            }
        }
    }
}