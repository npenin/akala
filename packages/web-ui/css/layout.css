.d-flex {
    display: flex;
    gap: var(--gutter-y) var(--gutter-x);
}

body,
section:has(>h1, >h2, >h3, >h4, >h5, >h6) {
    composes: vertical;
    justify-content: flex-start;
}

.horizontal {
    composes: d-flex;
    flex-direction: row;
}

.vertical {
    composes: d-flex;
    flex-direction: column;
}

/* @mixin media-maxWidth($name, $config, $mediaName: screen) {
    @media #{$mediaName} and (max-width: map.get($config, breakpoints, $name)) {
        @content;
    }
} */

/* 
 @mixin media-minWidth($name, $config, $mediaName: screen) {
     @media #{$mediaName} and (min-width: map.get($config, breakpoints, $name)) {
         @content;
     }
 } */
/* 

@mixin fixedMaxWidth($size) {
    body {
        display: flex;
        flex-direction: column;
        align-items: stretch;
        --max-body-width:#{$size};

        >* {
            margin: 0 auto;
            width: 100%;
            max-width: var(--max-body-width);
            @content;

            &.full-body-width,
            &:has(.full-body-width) {
                max-width: unset;
            }
        }
    }

    @media screen and (max-width:calc($size + var(--gutter))) {
        body {
            margin: var(--gutter);
        }
    }
} */

header,
footer {
    composes: horizontal;
    align-items: center;
}

body>footer {
    margin-top: auto;
}