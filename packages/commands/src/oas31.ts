export type info={ "title":string, "summary"?:string, "description"?:string, "termsOfService"?:string, "contact"?:contact, "license"?:license, "version":string, undefined };
export type contact={ "name"?:string, "url"?:string, "email"?:string, undefined };
export type license={ "name":string, "identifier"?:string, "url"?:string, undefined };
export type server={ "url":string, "description"?:string, "variables"?:serverVariable, undefined };
export type serverVariable={ "enum"?:[...(string)[]], "default":string, "description"?:string, undefined };
export type paths={ [key:string]:pathItem };
export type pathItem={ "summary"?:string, "description"?:string, "servers"?:[...(server)[]], "parameters"?:[...(parameterOrReference)[]], "get"?:operation, "put"?:operation, "post"?:operation, "delete"?:operation, "options"?:operation, "head"?:operation, "patch"?:operation, "trace"?:operation, undefined };
export type parameterOrReference=unknown;
export type operation={ "tags"?:[...(string)[]], "summary"?:string, "description"?:string, "externalDocs"?:externalDocumentation, "operationId"?:string, "parameters"?:[...(parameterOrReference)[]], "requestBody"?:requestBodyOrReference, "responses"?:responses, "callbacks"?:callbacksOrReference, "deprecated"?:boolean, "security"?:[...(securityRequirement)[]], "servers"?:[...(server)[]], undefined };
export type externalDocumentation={ "description"?:string, "url":string, undefined };
export type requestBodyOrReference=unknown;
export type responses={ "default"?:responseOrReference, [key:string]:responseOrReference };
export type responseOrReference=unknown;
export type callbacksOrReference=unknown;
export type securityRequirement=[...(string)[]];
export type pathItemOrReference=unknown;
export type components={ "schemas"?:unknown, "responses"?:responseOrReference, "parameters"?:parameterOrReference, "examples"?:exampleOrReference, "requestBodies"?:requestBodyOrReference, "headers"?:headerOrReference, "securitySchemes"?:securitySchemeOrReference, "links"?:linkOrReference, "callbacks"?:callbacksOrReference, "pathItems"?:pathItemOrReference, [key:string]:unknown };
export type exampleOrReference=unknown;
export type headerOrReference=unknown;
export type securitySchemeOrReference=unknown;
export type linkOrReference=unknown;
export type tag={ "name":string, "description"?:string, "externalDocs"?:externalDocumentation, undefined };
export type OpenApi31={ "openapi":string, "info":info, "jsonSchemaDialect"?:string, "servers"?:[...(server)[]], "paths"?:paths, "webhooks"?:pathItemOrReference, "components"?:components, "security"?:[...(securityRequirement)[]], "tags"?:[...(tag)[]], "externalDocs"?:externalDocumentation, undefined }